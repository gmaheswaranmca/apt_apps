-- MySQL Administrator dump 1.4
--
-- ------------------------------------------------------
-- Server version	5.7.44


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


--
-- Create schema aptjob
--

CREATE DATABASE IF NOT EXISTS aptjob;
USE aptjob;

--
-- Definition of table `apt_job_base`
--

DROP TABLE IF EXISTS `apt_job_base`;
CREATE TABLE `apt_job_base` (
  `job_dbid` bigint(20) NOT NULL AUTO_INCREMENT,
  `schedule_dbid` bigint(20) DEFAULT NULL,
  `job_id` varchar(50) NOT NULL DEFAULT '',
  `version_no` int(11) DEFAULT NULL,
  `job_type` int(11) DEFAULT NULL,
  `job_src_text` varchar(1000) DEFAULT NULL,
  `job_py_text` varchar(1000) DEFAULT NULL,
  `job_date` datetime DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `test_link_name` varchar(100) DEFAULT NULL,
  `is_job_done` tinyint(1) DEFAULT '0',
  `job_done_date` datetime DEFAULT NULL,
  `job_cost` double DEFAULT '0',
  PRIMARY KEY (`job_dbid`),
  UNIQUE KEY `job_id` (`job_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_job_base`
--

/*!40000 ALTER TABLE `apt_job_base` DISABLE KEYS */;
INSERT INTO `apt_job_base` (`job_dbid`,`schedule_dbid`,`job_id`,`version_no`,`job_type`,`job_src_text`,`job_py_text`,`job_date`,`added_date`,`test_link_name`,`is_job_done`,`job_done_date`,`job_cost`) VALUES 
 (1,1,'A210820FrA-01',2,2,'First Job-2','First Job-2','2021-08-20 00:00:00','2021-08-20 15:35:47','apple',0,NULL,150),
 (2,1,'A210820FrA-02',1,1,'two','two','2021-08-20 00:00:00','2021-08-20 18:22:18','apple',0,NULL,125);
/*!40000 ALTER TABLE `apt_job_base` ENABLE KEYS */;


--
-- Definition of table `apt_job_base_version`
--

DROP TABLE IF EXISTS `apt_job_base_version`;
CREATE TABLE `apt_job_base_version` (
  `job_dbid` bigint(20) NOT NULL DEFAULT '0',
  `schedule_dbid` bigint(20) DEFAULT NULL,
  `job_id` varchar(50) DEFAULT NULL,
  `version_no` int(11) NOT NULL DEFAULT '0',
  `job_type` int(11) DEFAULT NULL,
  `job_src_text` varchar(1000) DEFAULT NULL,
  `job_py_text` varchar(1000) DEFAULT NULL,
  `job_date` datetime DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `test_link_name` varchar(100) DEFAULT NULL,
  `is_job_done` tinyint(1) DEFAULT NULL,
  `job_done_date` datetime DEFAULT NULL,
  `job_cost` double DEFAULT '0',
  PRIMARY KEY (`job_dbid`,`version_no`),
  UNIQUE KEY `job_id` (`job_id`,`version_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_job_base_version`
--

/*!40000 ALTER TABLE `apt_job_base_version` DISABLE KEYS */;
INSERT INTO `apt_job_base_version` (`job_dbid`,`schedule_dbid`,`job_id`,`version_no`,`job_type`,`job_src_text`,`job_py_text`,`job_date`,`added_date`,`test_link_name`,`is_job_done`,`job_done_date`,`job_cost`) VALUES 
 (1,1,'A210820FrA-01',1,1,'First Job-1','First Job-1','2021-08-20 00:00:00','2021-08-20 15:35:02','apple',0,NULL,125),
 (1,1,'A210820FrA-01',2,2,'First Job-2','First Job-2','2021-08-20 00:00:00','2021-08-20 15:35:47','apple',0,NULL,150),
 (2,1,'A210820FrA-02',1,1,'two','two','2021-08-20 00:00:00','2021-08-20 18:22:18','apple',0,NULL,125);
/*!40000 ALTER TABLE `apt_job_base_version` ENABLE KEYS */;


--
-- Definition of table `apt_job_config`
--

DROP TABLE IF EXISTS `apt_job_config`;
CREATE TABLE `apt_job_config` (
  `config_dbid` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `job_master_path` varchar(1000) NOT NULL,
  `live_status` varchar(8000) NOT NULL DEFAULT 'NA',
  PRIMARY KEY (`config_dbid`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_job_config`
--

/*!40000 ALTER TABLE `apt_job_config` DISABLE KEYS */;
INSERT INTO `apt_job_config` (`config_dbid`,`job_master_path`,`live_status`) VALUES 
 (1,'/var/www/html/jobfile/apt_job_master.json','{\"server\":\"local\",\"apps\":[{\"linkCodeName\":\"one\",\"linkName\":\"Diamond\",\"appName\":\"Green\",\"localServer\":\"Apps(Local 1)\",\"liveServer\":\"Apps(Live 1)\",\"liveStatus\":{\"testStatus\":2,\"testAttendance\":64,\"testLiveCount\":6,\"statusTime\":\"2024-07-14T18:46:23.550Z\",\"activityStatus\":\"ON\",\"activityTime\":\"2024-07-14T03:33:35.349Z\",\"activityTimeLine\":[{\"sno\":1,\"activity\":\"PUSHTEST\",\"time\":\"2024-07-14T03:33:25.253Z\"},{\"sno\":2,\"activity\":\"ON\",\"time\":\"2024-07-14T03:33:35.349Z\"},{\"sno\":3,\"activity\":\"OFF\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":4,\"activity\":\"FINISH\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":5,\"activity\":\"DOWNLOADABLE\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":6,\"activity\":\"DOWNLOAD\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":7,\"activity\":\"SENDMAIL\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":8,\"activity\":\"PULLRESULT\",\"time\":\"2024-07-12T15:08:21.263Z\"}]}},{\"linkCodeName\":\"two\",\"linkName\":\"Galaxy\",\"appName\":\"Everest\",\"localServer\":\"Apps(Local 1)\",\"liveServer\":\"Apps(Live 1)\",\"liveStatus\":{\"testStatus\":3,\"testAttendance\":121,\"testLiveCount\":6,\"statusTime\":\"2024-07-14T18:44:38.380Z\",\"activityStatus\":\"PULLRESULT\",\"activityTime\":\"2024-07-14T18:22:56.195Z\",\"activityTimeLine\":[{\"sno\":1,\"activity\":\"PUSHTEST\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":2,\"activity\":\"ON\",\"time\":\"2024-07-12T16:48:15.540Z\"},{\"sno\":3,\"activity\":\"OFF\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":4,\"activity\":\"FINISH\",\"time\":\"2024-07-14T02:28:13.919Z\"},{\"sno\":5,\"activity\":\"DOWNLOADABLE\",\"time\":\"2024-07-14T02:28:19.850Z\"},{\"sno\":6,\"activity\":\"DOWNLOAD\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":7,\"activity\":\"SENDMAIL\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":8,\"activity\":\"PULLRESULT\",\"time\":\"2024-07-14T18:22:56.195Z\"}]}},{\"linkCodeName\":\"three\",\"linkName\":\"Moon\",\"appName\":\"Princess\",\"localServer\":\"Apps(Local 1)\",\"liveServer\":\"Apps(Live 1)\",\"liveStatus\":{\"testStatus\":2,\"testAttendance\":0,\"testLiveCount\":0,\"statusTime\":\"2024-07-14T18:46:21.454Z\",\"activityStatus\":\"ON\",\"activityTime\":\"2024-07-14T18:33:17.885Z\",\"activityTimeLine\":[{\"sno\":1,\"activity\":\"PUSHTEST\",\"time\":\"2024-07-14T18:33:06.409Z\"},{\"sno\":2,\"activity\":\"ON\",\"time\":\"2024-07-14T18:33:17.885Z\"},{\"sno\":3,\"activity\":\"OFF\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":4,\"activity\":\"FINISH\",\"time\":\"2024-07-12T15:09:03.258Z\"},{\"sno\":5,\"activity\":\"DOWNLOADABLE\",\"time\":\"2024-07-14T17:19:16.129Z\"},{\"sno\":6,\"activity\":\"DOWNLOAD\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":7,\"activity\":\"SENDMAIL\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":8,\"activity\":\"PULLRESULT\",\"time\":\"2024-07-12T15:08:21.263Z\"}]}},{\"linkCodeName\":\"four\",\"linkName\":\"Hurricane\",\"appName\":\"Himalaya\",\"localServer\":\"Apps(Local 1)\",\"liveServer\":\"Apps(Live 1)\",\"liveStatus\":{\"testStatus\":2,\"testAttendance\":0,\"testLiveCount\":0,\"statusTime\":\"2024-07-14T18:46:17.295Z\",\"activityStatus\":\"ON\",\"activityTime\":\"2024-07-14T18:41:02.638Z\",\"activityTimeLine\":[{\"sno\":1,\"activity\":\"PUSHTEST\",\"time\":\"2024-07-14T18:40:45.407Z\"},{\"sno\":2,\"activity\":\"ON\",\"time\":\"2024-07-14T18:41:02.638Z\"},{\"sno\":3,\"activity\":\"OFF\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":4,\"activity\":\"FINISH\",\"time\":\"2024-07-14T02:34:18.257Z\"},{\"sno\":5,\"activity\":\"DOWNLOADABLE\",\"time\":\"2024-07-14T02:34:23.384Z\"},{\"sno\":6,\"activity\":\"DOWNLOAD\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":7,\"activity\":\"SENDMAIL\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":8,\"activity\":\"PULLRESULT\",\"time\":\"2024-07-12T15:08:21.263Z\"}]}},{\"linkCodeName\":\"five\",\"linkName\":\"Kite\",\"appName\":\"Harappa\",\"localServer\":\"Apps(Local 1)\",\"liveServer\":\"Apps(Live 1)\",\"liveStatus\":{\"testStatus\":3,\"testAttendance\":114,\"testLiveCount\":13,\"statusTime\":\"2024-07-12T15:09:19.131Z\",\"activityStatus\":\"NA\",\"activityTime\":\"2024-07-12T15:08:21.263Z\",\"activityTimeLine\":[{\"sno\":1,\"activity\":\"PUSHTEST\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":2,\"activity\":\"ON\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":3,\"activity\":\"OFF\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":4,\"activity\":\"FINISH\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":5,\"activity\":\"DOWNLOADABLE\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":6,\"activity\":\"DOWNLOAD\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":7,\"activity\":\"SENDMAIL\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":8,\"activity\":\"PULLRESULT\",\"time\":\"2024-07-12T15:08:21.263Z\"}]}},{\"linkCodeName\":\"six\",\"linkName\":\"Fortune\",\"appName\":\"Poompuhar\",\"localServer\":\"Apps(Local 1)\",\"liveServer\":\"Apps(Live 1)\",\"liveStatus\":{\"testStatus\":2,\"testAttendance\":0,\"testLiveCount\":0,\"statusTime\":\"2024-07-14T18:28:38.467Z\",\"activityStatus\":\"ON\",\"activityTime\":\"2024-07-14T18:28:38.469Z\",\"activityTimeLine\":[{\"sno\":1,\"activity\":\"PUSHTEST\",\"time\":\"2024-07-14T18:27:53.366Z\"},{\"sno\":2,\"activity\":\"ON\",\"time\":\"2024-07-14T18:28:38.469Z\"},{\"sno\":3,\"activity\":\"OFF\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":4,\"activity\":\"FINISH\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":5,\"activity\":\"DOWNLOADABLE\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":6,\"activity\":\"DOWNLOAD\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":7,\"activity\":\"SENDMAIL\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":8,\"activity\":\"PULLRESULT\",\"time\":\"2024-07-12T15:08:21.263Z\"}]}},{\"linkCodeName\":\"seven\",\"linkName\":\"Jack\",\"appName\":\"Chozha\",\"localServer\":\"Apps(Local 1)\",\"liveServer\":\"Apps(Live 1)\",\"liveStatus\":{\"testStatus\":3,\"testAttendance\":172,\"testLiveCount\":7,\"statusTime\":\"2024-07-14T17:20:44.471Z\",\"activityStatus\":\"DOWNLOADABLE\",\"activityTime\":\"2024-07-14T17:24:56.666Z\",\"activityTimeLine\":[{\"sno\":1,\"activity\":\"PUSHTEST\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":2,\"activity\":\"ON\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":3,\"activity\":\"OFF\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":4,\"activity\":\"FINISH\",\"time\":\"2024-07-14T02:41:11.713Z\"},{\"sno\":5,\"activity\":\"DOWNLOADABLE\",\"time\":\"2024-07-14T17:24:56.666Z\"},{\"sno\":6,\"activity\":\"DOWNLOAD\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":7,\"activity\":\"SENDMAIL\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":8,\"activity\":\"PULLRESULT\",\"time\":\"2024-07-12T15:08:21.263Z\"}]}},{\"linkCodeName\":\"eight\",\"linkName\":\"Indigo\",\"appName\":\"Pallava\",\"localServer\":\"Apps(Local 1)\",\"liveServer\":\"Apps(Live 1)\",\"liveStatus\":{\"testStatus\":3,\"testAttendance\":114,\"testLiveCount\":3,\"statusTime\":\"2024-07-14T18:46:45.884Z\",\"activityStatus\":\"PULLRESULT\",\"activityTime\":\"2024-07-14T18:24:16.954Z\",\"activityTimeLine\":[{\"sno\":1,\"activity\":\"PUSHTEST\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":2,\"activity\":\"ON\",\"time\":\"2024-07-12T16:53:15.106Z\"},{\"sno\":3,\"activity\":\"OFF\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":4,\"activity\":\"FINISH\",\"time\":\"2024-07-14T02:34:53.186Z\"},{\"sno\":5,\"activity\":\"DOWNLOADABLE\",\"time\":\"2024-07-14T02:34:58.544Z\"},{\"sno\":6,\"activity\":\"DOWNLOAD\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":7,\"activity\":\"SENDMAIL\",\"time\":\"2024-07-12T15:08:21.263Z\"},{\"sno\":8,\"activity\":\"PULLRESULT\",\"time\":\"2024-07-14T18:24:16.954Z\"}]}}]}');
/*!40000 ALTER TABLE `apt_job_config` ENABLE KEYS */;


--
-- Definition of table `apt_job_schedule`
--

DROP TABLE IF EXISTS `apt_job_schedule`;
CREATE TABLE `apt_job_schedule` (
  `schedule_dbid` bigint(20) NOT NULL AUTO_INCREMENT,
  `schedule_id` varchar(50) NOT NULL DEFAULT '',
  `version_no` int(11) DEFAULT NULL,
  `job_from_date` datetime DEFAULT NULL,
  `job_to_date` datetime DEFAULT NULL,
  `added_date` varchar(100) DEFAULT NULL,
  `is_closed` tinyint(1) DEFAULT '0',
  `test_link_name` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`schedule_dbid`),
  UNIQUE KEY `schedule_id` (`schedule_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_job_schedule`
--

/*!40000 ALTER TABLE `apt_job_schedule` DISABLE KEYS */;
INSERT INTO `apt_job_schedule` (`schedule_dbid`,`schedule_id`,`version_no`,`job_from_date`,`job_to_date`,`added_date`,`is_closed`,`test_link_name`) VALUES 
 (1,'A21Aug',2,'2021-08-18 00:00:00','2021-09-17 00:00:00','2021-08-19 10:55:01',0,'apple'),
 (2,'B21Aug',1,'2021-08-02 00:00:00','2021-08-31 00:00:00','2021-08-19 16:21:50',0,'bag'),
 (3,'C21Aug',1,'2021-08-19 00:00:00','2021-08-30 00:00:00','2021-08-19 16:22:17',0,'camel'),
 (4,'Q21Aug',1,'2021-08-21 00:00:00','2021-08-31 00:00:00','2021-08-19 16:41:18',0,'quick');
/*!40000 ALTER TABLE `apt_job_schedule` ENABLE KEYS */;


--
-- Definition of table `apt_job_schedule_version`
--

DROP TABLE IF EXISTS `apt_job_schedule_version`;
CREATE TABLE `apt_job_schedule_version` (
  `schedule_dbid` bigint(20) NOT NULL DEFAULT '0',
  `schedule_id` varchar(50) DEFAULT NULL,
  `version_no` int(11) NOT NULL DEFAULT '0',
  `job_from_date` datetime DEFAULT NULL,
  `job_to_date` datetime DEFAULT NULL,
  `added_date` varchar(100) DEFAULT NULL,
  `is_closed` tinyint(1) DEFAULT NULL,
  `test_link_name` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`schedule_dbid`,`version_no`),
  UNIQUE KEY `schedule_id` (`schedule_id`,`version_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_job_schedule_version`
--

/*!40000 ALTER TABLE `apt_job_schedule_version` DISABLE KEYS */;
INSERT INTO `apt_job_schedule_version` (`schedule_dbid`,`schedule_id`,`version_no`,`job_from_date`,`job_to_date`,`added_date`,`is_closed`,`test_link_name`) VALUES 
 (1,'A21Aug',1,'2021-08-18 00:00:00','2021-09-20 00:00:00','2021-08-19 10:48:41',0,'apple'),
 (1,'A21Aug',2,'2021-08-18 00:00:00','2021-09-17 00:00:00','2021-08-19 10:55:01',0,'apple'),
 (2,'B21Aug',1,'2021-08-02 00:00:00','2021-08-31 00:00:00','2021-08-19 16:21:50',0,'bag'),
 (3,'C21Aug',1,'2021-08-19 00:00:00','2021-08-30 00:00:00','2021-08-19 16:22:17',0,'camel'),
 (4,'Q21Aug',1,'2021-08-21 00:00:00','2021-08-31 00:00:00','2021-08-19 16:41:18',0,'quick');
/*!40000 ALTER TABLE `apt_job_schedule_version` ENABLE KEYS */;

--
-- Create schema aptonlineone
--

CREATE DATABASE IF NOT EXISTS aptonlineone;
USE aptonlineone;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,2);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=151 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'17 (11/17)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (2,1,'3 ((1/2))%',NULL,0,0,'',0,0,NULL,1,0,''),
 (3,1,'4 (3/7)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (4,1,'10 (4/5)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (5,1,'10%',NULL,0,0,'',0,0,NULL,1,0,''),
 (6,2,'Rs 46',NULL,0,0,'',0,0,NULL,1,0,''),
 (7,2,'Rs 42',NULL,0,0,'',0,0,NULL,1,0,''),
 (8,2,'Rs 50',NULL,0,0,'',0,0,NULL,1,0,''),
 (9,2,'Rs 46.40',NULL,1,0,'',0,0,NULL,1,0,''),
 (10,2,'Rs 40.40',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'33 (1/3)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (12,3,'35 (1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (13,3,'33 (1/2)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (14,3,'33%',NULL,0,0,'',0,0,NULL,1,0,''),
 (15,3,'30 (1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'Rs 17.5',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,4,'Rs 18',NULL,0,0,'',0,0,NULL,1,0,''),
 (18,4,'Rs 14.40',NULL,1,0,'',0,0,NULL,1,0,''),
 (19,4,'Rs 20',NULL,0,0,'',0,0,NULL,1,0,''),
 (20,4,'Rs 15',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,5,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,5,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (23,5,'27%',NULL,0,0,'',0,0,NULL,1,0,''),
 (24,5,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (25,5,'25%',NULL,1,0,'',0,0,NULL,1,0,''),
 (26,6,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,6,'25%',NULL,1,0,'',0,0,NULL,1,0,''),
 (28,6,'27%',NULL,0,0,'',0,0,NULL,1,0,''),
 (29,6,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (30,6,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (31,7,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,7,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,7,'27%',NULL,0,0,'',0,0,NULL,1,0,''),
 (34,7,'20%',NULL,1,0,'',0,0,NULL,1,0,''),
 (35,7,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (36,8,'27%',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,8,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (38,8,'21%',NULL,1,0,'',0,0,NULL,1,0,''),
 (39,8,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (40,8,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,9,'Rs 27.50',NULL,1,0,'',0,0,NULL,1,0,''),
 (42,9,'Rs 25.50',NULL,0,0,'',0,0,NULL,1,0,''),
 (43,9,'Rs 20',NULL,0,0,'',0,0,NULL,1,0,''),
 (44,9,'Rs 25',NULL,0,0,'',0,0,NULL,1,0,''),
 (45,9,'Rs 37.50',NULL,0,0,'',0,0,NULL,1,0,''),
 (46,10,'11(1/7)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (47,10,'10(1/9)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (48,10,'11(2/9)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (49,10,'11(1/8)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (50,10,'11(1/9)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (51,11,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (52,11,'24',NULL,0,0,'',0,0,NULL,1,0,''),
 (53,11,'18',NULL,1,0,'',0,0,NULL,1,0,''),
 (54,11,'30',NULL,0,0,'',0,0,NULL,1,0,''),
 (55,11,'27',NULL,0,0,'',0,0,NULL,1,0,''),
 (56,12,'37.5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (57,12,'17.5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (58,12,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (59,12,'25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (60,12,'15.5%',NULL,1,0,'',0,0,NULL,1,0,''),
 (61,13,'100%',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,13,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (63,13,'120%',NULL,1,0,'',0,0,NULL,1,0,''),
 (64,13,'170%',NULL,0,0,'',0,0,NULL,1,0,''),
 (65,13,'150%',NULL,0,0,'',0,0,NULL,1,0,''),
 (66,14,'Rs 750',NULL,0,0,'',0,0,NULL,1,0,''),
 (67,14,'Rs 1000',NULL,1,0,'',0,0,NULL,1,0,''),
 (68,14,'Rs 875',NULL,0,0,'',0,0,NULL,1,0,''),
 (69,14,'Rs 1250',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,14,'Rs1500',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,15,'3% loss',NULL,0,0,'',0,0,NULL,1,0,''),
 (72,15,'2% loss',NULL,0,0,'',0,0,NULL,1,0,''),
 (73,15,'1% profit',NULL,0,0,'',0,0,NULL,1,0,''),
 (74,15,'1% loss',NULL,1,0,'',0,0,NULL,1,0,''),
 (75,15,'2% profit',NULL,0,0,'',0,0,NULL,1,0,''),
 (76,16,'0.5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (77,16,'0.65%',NULL,0,0,'',0,0,NULL,1,0,''),
 (78,16,'0.25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (79,16,'0.60%',NULL,0,0,'',0,0,NULL,1,0,''),
 (80,16,'0.625%',NULL,1,0,'',0,0,NULL,1,0,''),
 (81,17,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (82,17,'15%',NULL,1,0,'',0,0,NULL,1,0,''),
 (83,17,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (84,17,'25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (85,17,'17%',NULL,0,0,'',0,0,NULL,1,0,''),
 (86,18,'5% loss',NULL,0,0,'',0,0,NULL,1,0,''),
 (87,18,'5% profit',NULL,0,0,'',0,0,NULL,1,0,''),
 (88,18,'10% loss',NULL,0,0,'',0,0,NULL,1,0,''),
 (89,18,'10% profit',NULL,1,0,'',0,0,NULL,1,0,''),
 (90,18,'Neither loss nor profit',NULL,0,0,'',0,0,NULL,1,0,''),
 (91,19,'Rs 35000',NULL,0,0,'',0,0,NULL,1,0,''),
 (92,19,'Rs 17500',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,19,'Rs 15000',NULL,1,0,'',0,0,NULL,1,0,''),
 (94,19,'Rs 10000',NULL,0,0,'',0,0,NULL,1,0,''),
 (95,19,'Rs 25000',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,20,'Rs 400',NULL,1,0,'',0,0,NULL,1,0,''),
 (97,20,'Rs 450',NULL,0,0,'',0,0,NULL,1,0,''),
 (98,20,'Rs 500',NULL,0,0,'',0,0,NULL,1,0,''),
 (99,20,'Rs 200',NULL,0,0,'',0,0,NULL,1,0,''),
 (100,20,'Rs 800',NULL,0,0,'',0,0,NULL,1,0,''),
 (101,21,'Rs 65',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,21,'Rs 62.50',NULL,0,0,'',0,0,NULL,1,0,''),
 (103,21,'Rs 67. 20',NULL,1,0,'',0,0,NULL,1,0,''),
 (104,21,'Rs 60',NULL,0,0,'',0,0,NULL,1,0,''),
 (105,21,'Rs 65.75',NULL,0,0,'',0,0,NULL,1,0,''),
 (106,22,'Rs 150',NULL,1,0,'',0,0,NULL,1,0,''),
 (107,22,'Rs 250',NULL,0,0,'',0,0,NULL,1,0,''),
 (108,22,'Rs 100',NULL,0,0,'',0,0,NULL,1,0,''),
 (109,22,'Rs 175',NULL,0,0,'',0,0,NULL,1,0,''),
 (110,22,'Rs 200',NULL,0,0,'',0,0,NULL,1,0,''),
 (111,23,'Rs 490',NULL,0,0,'',0,0,NULL,1,0,''),
 (112,23,'Rs 400',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,23,'Rs 375',NULL,0,0,'',0,0,NULL,1,0,''),
 (114,23,'Rs 500',NULL,0,0,'',0,0,NULL,1,0,''),
 (115,23,'Rs 390',NULL,1,0,'',0,0,NULL,1,0,''),
 (116,24,'Rs 680',NULL,1,0,'',0,0,NULL,1,0,''),
 (117,24,'Rs 620',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,24,'Rs 475',NULL,0,0,'',0,0,NULL,1,0,''),
 (119,24,'Rs 600',NULL,0,0,'',0,0,NULL,1,0,''),
 (120,24,'Rs 880',NULL,0,0,'',0,0,NULL,1,0,''),
 (121,25,'Rs 45',NULL,0,0,'',0,0,NULL,1,0,''),
 (122,25,'Rs 100',NULL,0,0,'',0,0,NULL,1,0,''),
 (123,25,'Rs 60',NULL,1,0,'',0,0,NULL,1,0,''),
 (124,25,'Rs 65',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,25,'Rs 80',NULL,0,0,'',0,0,NULL,1,0,''),
 (126,26,'60%',NULL,0,0,'',0,0,NULL,1,0,''),
 (127,26,'25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (128,26,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (129,26,'52%',NULL,1,0,'',0,0,NULL,1,0,''),
 (130,26,'70%',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,27,'Rs 45',NULL,0,0,'',0,0,NULL,1,0,''),
 (132,27,'Rs 50',NULL,0,0,'',0,0,NULL,1,0,''),
 (133,27,'Rs 55',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,27,'Rs 60',NULL,1,0,'',0,0,NULL,1,0,''),
 (135,27,'Rs 65',NULL,0,0,'',0,0,NULL,1,0,''),
 (136,28,'Rs 2 (Loss)',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,28,'Rs 3 (Profit)',NULL,1,0,'',0,0,NULL,1,0,''),
 (138,28,'Rs 4 (Loss)',NULL,0,0,'',0,0,NULL,1,0,''),
 (139,28,'Rs 5 (Profit)',NULL,0,0,'',0,0,NULL,1,0,''),
 (140,28,'Rs 1 (Loss)',NULL,0,0,'',0,0,NULL,1,0,''),
 (141,29,'150%',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,29,'200%',NULL,0,0,'',0,0,NULL,1,0,''),
 (143,29,'300%',NULL,1,0,'',0,0,NULL,1,0,''),
 (144,29,'350%',NULL,0,0,'',0,0,NULL,1,0,''),
 (145,29,'400%',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,30,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,30,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (148,30,'5',NULL,1,0,'',0,0,NULL,1,0,''),
 (149,30,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,30,'7',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
INSERT INTO `apt_tp_rule` (`tp_id`,`rule`) VALUES 
 (1,''),
 (2,''),
 (3,''),
 (4,''),
 (5,''),
 (6,''),
 (7,''),
 (8,''),
 (9,''),
 (10,''),
 (11,''),
 (12,''),
 (13,''),
 (14,''),
 (15,''),
 (16,''),
 (17,''),
 (18,''),
 (19,''),
 (20,'');
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=311 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,2,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,2,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,2,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,2,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,2,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,2,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,2,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,2,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,2,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,2,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,2,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,2,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,2,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,2,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,2,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,2,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,2,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,2,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,2,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,2,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,2,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,2,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,2,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,2,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,2,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,2,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,2,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,2,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,2,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,2,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,2,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,2,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,2,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,2,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,2,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,2,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,2,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,2,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,2,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,2,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,2,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,2,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,2,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,2,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,2,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,2,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,2,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,2,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,2,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,2,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,2,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,2,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,2,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,2,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,2,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,2,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,2,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,2,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,2,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,2,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,2,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,2,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,2,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,2,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,2,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,2,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,2,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,2,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,2,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,2,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,2,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,2,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,2,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,2,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,2,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,2,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,2,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,2,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,2,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,2,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,2,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,2,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,2,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,2,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,2,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,2,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,2,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,2,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,2,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,2,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,2,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,2,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,2,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,2,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,2,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,2,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,2,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,2,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,2,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,2,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,2,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,2,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,2,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,2,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,2,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,2,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,2,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,2,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,2,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,2,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,2,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,2,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,2,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,2,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,2,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,2,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,2,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,2,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,2,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,2,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,2,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,2,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,2,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,2,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,2,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,2,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,2,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,2,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,2,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,2,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,2,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,2,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,2,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,2,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,2,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,2,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,2,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,2,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,2,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,2,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,2,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,2,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,2,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,2,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,2,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,2,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,2,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,2,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,2,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,2,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,2,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,2,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,2,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,2,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,2,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,2,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,2,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,2,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,2,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,2,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-07-14 03:31:44',60,1,'30.00',1,0),
 (2,1,1,1,'2024-07-14 03:31:45',60,1,'30.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #003');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-07-14 03:31:43'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-07-14 03:31:43'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-07-14 03:31:43'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-07-14 03:31:44'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-07-14 03:31:44'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-07-14 03:31:44'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-07-14 03:31:44'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-07-14 03:31:44'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-07-14 03:31:44'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-07-14 03:31:44'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-07-14 03:31:44'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-07-14 03:31:44'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-07-14 03:31:44'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-07-14 03:31:44'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-07-14 03:31:44'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-07-14 03:31:44'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-07-14 03:31:44'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-07-14 03:31:44'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-07-14 03:31:44'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-07-14 03:31:44'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-07-14 03:31:44'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-07-14 03:31:44'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-07-14 03:31:44'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-07-14 03:31:44'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-07-14 03:31:44'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-07-14 03:31:44'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-07-14 03:31:44'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-07-14 03:31:44'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-07-14 03:31:44'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-07-14 03:31:44');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If by selling an article for Rs 100 a man gains Rs 15, then his gain percent is _______%?</div>\n',1,1,1,'1','2024-07-14 03:31:43',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">When a commodity is sold for Rs 34.80, there is a loss of 25%. What is the C.P of the commodity? </div>\n',1,2,1,'1','2024-07-14 03:31:43',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the selling price of an article is (4/3) times its cost-price. The profit percent is ______%?                </div>\n',1,3,1,'1','2024-07-14 03:31:43',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">There would be a 10% loss if a toy is sold at Rs 10.80 per piece. At what price should it be sold to earn a profit of 20%?</div>\n',1,4,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A man sells 320 mangoes at the C.P of 400 mangoes. His gain percent is _______%?</div>\n',1,5,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the C.P of 12 tables is equal to the S.P of 16 tables, the loss or gain percent is ____%?</div>\n',1,6,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A fruit seller purchases oranges at the rate of 3 for Rs 5 & sells them at the rate of 2 for Rs 4. His profit in the transaction is ______%?</div>\n',1,7,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If I purchases 11 books for Rs 10 and sold all the books at the rate of 10 books for Rs 11, the profit percentage is ______%?</div>\n',1,8,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Ajay bought 15 kgs of dhal at rate of Rs14.50 per kg & 10 kgs at the rate of Rs 13 per kg. He mixed the two & sold the mixture at the rate of Rs15 per kg. What was his total gain in the transaction?</div>\n',1,9,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A dealer professing to sell his goods at C.P. uses a 900 gms weight for a kilogram. His gain percent is ______%?</div>\n',1,10,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">By selling 45 lemons for Rs 40, a man loses 20%. How many should he sell for Rs 24 to gain 20% in the transaction?</div>\n',1,11,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Vikas bought paper sheets for Rs 7,200 & spent Rs 200 on transport. Paying Rs 600, he had 330 boxes made, which he sold at Rs 28 each. His profit percentage is _____?</div>\n',1,12,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A man gains 10 % by selling a certain article for a certain price. If he sells it at double the price, the profit made is ______?</div>\n',1,13,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&rdquo;A&rdquo; sells a bicycle to &ldquo;B&rdquo; at a profit of 20% & &ldquo;B&rdquo; sells it to C at a profit of 25%. If &ldquo;C&rdquo; pays Rs 1500, what did &ldquo;A&rdquo; pay for it?</div>\n',1,14,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A dealer sold two of his cattle for Rs 500 each, on one of them he lost 10% & on the other he gained 10%. His gain or loss percent in the entire transaction is ______?</div>\n',1,15,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A person earns 15% on investment but loses 10% in another. If the ratio of the two investments be 3: 5, what is the gain or loss on the two investments taken together?              </div>\n',1,16,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A dealer sold 3/4th of his articles at a gain of 20% and the remaining at C.P. The gain earned by him in the whole transaction is ______?</div>\n',1,17,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	A man purchased sugar worth Rs 400. He sold (&frac34;) of that at a loss of 10% and the remainder at a gain of 10%. In the whole, he gets ______?</div>',1,18,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Two-third of a consignment was sold at a profit of 5% & the remainder at a loss of 2%. If the total profit was Rs 400, the value of the consignment was ______?</div>\n',1,19,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A machine is sold at a profit of 10%. Had it been sold for Rs 80/- less, there would have been a loss of 10% .The C.P of the machine is ________ ?</div>\n',1,20,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If an article is sold at 5% gain instead of 5% loss, the seller gets Rs 6.72 more. The C.P of the article is ________?</div>\n',1,21,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">An article when sold at a gain of 5% yields Rs 15 more than, when sold at a loss of 15 %.What is the C.P?</div>\n',1,22,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Profit after selling a commodity for Rs 425 is the same as the loss after selling it for Rs 355. What is the cost of the commodity?</div>\n',1,23,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">An article when sold for Rs 840 earns a profit which is double the amount of loss, when the same article is sold for Rs 600. What is the C.P of the article?</div>\n',1,24,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The profit made, when an article is sold for Rs 78 is twice much as when it is sold for Rs 69. What is the C.P of the article?</div>\n',1,25,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A single discount equivalent to a discount series of 40% & 20% is ________?</div>\n',1,26,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">On selling 17 balls at Rs 720, there is a loss equal to the cost price of 5 balls. The cost price of a ball is____?</div>\n',1,27,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If a cost price of a pencil box is Rs 67 and selling price is Rs 70. Is there a profit or loss & by how much?</div>\n',1,28,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the cost price is 25% of selling price. Then, what is the profit percent?</div>\n',1,29,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A vendor bought bananas at 6 for a rupee. How many for a rupee must he sell to gain 20%?</div>\n',1,30,1,'1','2024-07-14 03:31:44',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #003','Assessment Test #003','2024-07-14 03:31:43',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL DEFAULT '',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=312 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (1,'admin','baf71c021073a99609d073b6c7d2162a','admin','admin','2011-10-27 12:02:06',1,'admin'),
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','2024-07-14 03:31:41',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','2024-07-14 03:31:41',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','2024-07-14 03:31:41',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','2024-07-14 03:31:41',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','2024-07-14 03:31:41',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','2024-07-14 03:31:41',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','2024-07-14 03:31:41',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','2024-07-14 03:31:41',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','2024-07-14 03:31:41',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','2024-07-14 03:31:41',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','2024-07-14 03:31:41',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','2024-07-14 03:31:41',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','2024-07-14 03:31:41',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','2024-07-14 03:31:41',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','2024-07-14 03:31:41',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','2024-07-14 03:31:41',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','2024-07-14 03:31:41',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','2024-07-14 03:31:41',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','2024-07-14 03:31:41',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','2024-07-14 03:31:41',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','2024-07-14 03:31:41',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','2024-07-14 03:31:41',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','2024-07-14 03:31:41',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','2024-07-14 03:31:41',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','2024-07-14 03:31:41',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','2024-07-14 03:31:41',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','2024-07-14 03:31:41',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','2024-07-14 03:31:41',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','2024-07-14 03:31:41',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','2024-07-14 03:31:41',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','2024-07-14 03:31:41',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','2024-07-14 03:31:41',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','2024-07-14 03:31:41',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','2024-07-14 03:31:41',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','2024-07-14 03:31:41',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','2024-07-14 03:31:41',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','2024-07-14 03:31:41',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','2024-07-14 03:31:41',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','2024-07-14 03:31:41',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','2024-07-14 03:31:41',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','2024-07-14 03:31:41',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','2024-07-14 03:31:41',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','2024-07-14 03:31:41',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','2024-07-14 03:31:41',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','2024-07-14 03:31:41',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','2024-07-14 03:31:41',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','2024-07-14 03:31:41',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','2024-07-14 03:31:41',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','2024-07-14 03:31:41',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','2024-07-14 03:31:41',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','2024-07-14 03:31:41',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','2024-07-14 03:31:41',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','2024-07-14 03:31:41',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','2024-07-14 03:31:42',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','2024-07-14 03:31:42',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','2024-07-14 03:31:42',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','2024-07-14 03:31:42',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','2024-07-14 03:31:42',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','2024-07-14 03:31:42',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','2024-07-14 03:31:42',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','2024-07-14 03:31:42',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','2024-07-14 03:31:42',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','2024-07-14 03:31:42',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','2024-07-14 03:31:42',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','2024-07-14 03:31:42',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','2024-07-14 03:31:42',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','2024-07-14 03:31:42',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','2024-07-14 03:31:42',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','2024-07-14 03:31:42',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','2024-07-14 03:31:42',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','2024-07-14 03:31:42',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','2024-07-14 03:31:42',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','2024-07-14 03:31:42',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','2024-07-14 03:31:42',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','2024-07-14 03:31:42',NULL,NULL),
 (77,'TN301','df527bb9bfc11f9493570670fe1df8ae','TN301','','2024-07-14 03:31:42',NULL,NULL),
 (78,'TN302','447fde9d8fdaf541a10226f0623ece4d','TN302','','2024-07-14 03:31:42',NULL,NULL),
 (79,'TN303','5cb01c24c7e8f5dbe219a6bbb0294aa8','TN303','','2024-07-14 03:31:42',NULL,NULL),
 (80,'TN304','4857ea2a08b7bfc780e37b7375e42ef3','TN304','','2024-07-14 03:31:42',NULL,NULL),
 (81,'TN305','0a2681b8e8478797e661eafca5bf6d8a','TN305','','2024-07-14 03:31:42',NULL,NULL),
 (82,'TN306','c53f02d597e1a5fbed43450c72f831ec','TN306','','2024-07-14 03:31:42',NULL,NULL),
 (83,'TN307','476eb9339b5e4f401611574db07a7da8','TN307','','2024-07-14 03:31:42',NULL,NULL),
 (84,'TN308','39aea09dd9606fc5173d39a4143d042a','TN308','','2024-07-14 03:31:42',NULL,NULL),
 (85,'TN309','1e9c78bfe2b34dac630f5c59dd32205c','TN309','','2024-07-14 03:31:42',NULL,NULL),
 (86,'TN310','a57a2aa3f2f33260d1546c4f00bbbb64','TN310','','2024-07-14 03:31:42',NULL,NULL),
 (87,'TN311','443b6e936dacd1c9c096dfa07ff740f8','TN311','','2024-07-14 03:31:42',NULL,NULL),
 (88,'TN312','712275b5f057b633ee03b8ab3cfff6e9','TN312','','2024-07-14 03:31:42',NULL,NULL),
 (89,'TN313','c12135e3364f3e58dbd9fa75c518b235','TN313','','2024-07-14 03:31:42',NULL,NULL),
 (90,'TN314','37b60a97c8234811c9c748c2c094d2a6','TN314','','2024-07-14 03:31:42',NULL,NULL),
 (91,'TN315','6bdc45524d2f495e0f33cdc94ca17b2d','TN315','','2024-07-14 03:31:42',NULL,NULL),
 (92,'TN316','065da6038612e7a0e1c8141380f59bb9','TN316','','2024-07-14 03:31:42',NULL,NULL),
 (93,'TN317','40ad61be9cf788846b8d85272a6de746','TN317','','2024-07-14 03:31:42',NULL,NULL),
 (94,'TN318','56b29353dfba0a98e2fd02babb6a9704','TN318','','2024-07-14 03:31:42',NULL,NULL),
 (95,'TN319','90d160399f63faffcc7e68fc0a59f809','TN319','','2024-07-14 03:31:42',NULL,NULL),
 (96,'TN320','b148c4d1e6a3cdf2c5fabba99024c250','TN320','','2024-07-14 03:31:42',NULL,NULL),
 (97,'TN321','1fbb38b32cdfa24f29f99d373b3a85ae','TN321','','2024-07-14 03:31:42',NULL,NULL),
 (98,'TN322','0d0f68e6fd6d0a36256f685cff73d9cf','TN322','','2024-07-14 03:31:42',NULL,NULL),
 (99,'TN323','e5691358ea955b2eb74ea4ed2027aa16','TN323','','2024-07-14 03:31:42',NULL,NULL),
 (100,'TN324','9158710a144d2feebef2a1b548a85cbb','TN324','','2024-07-14 03:31:42',NULL,NULL),
 (101,'TN325','cde8dc05d04ec439dae96aa7d6281984','TN325','','2024-07-14 03:31:42',NULL,NULL),
 (102,'TN326','7dc96c92be65c6e3083a25965c485d4f','TN326','','2024-07-14 03:31:42',NULL,NULL),
 (103,'TN327','077bbbcb1883aff9594e599d060bb506','TN327','','2024-07-14 03:31:42',NULL,NULL),
 (104,'TN328','847dc3b767429a2b065a86abec7fac34','TN328','','2024-07-14 03:31:42',NULL,NULL),
 (105,'TN329','87be1b970f5b8bb8fe3105cc05fee33e','TN329','','2024-07-14 03:31:42',NULL,NULL),
 (106,'TN330','9ce6f6a3681622849ff275763619aa33','TN330','','2024-07-14 03:31:42',NULL,NULL),
 (107,'TN331','110a3cff80589a4dcd830db5e34e96b6','TN331','','2024-07-14 03:31:42',NULL,NULL),
 (108,'TN332','a2b478575fe401781e05701b3f81f1d5','TN332','','2024-07-14 03:31:42',NULL,NULL),
 (109,'TN333','a3c6280122558afa55ff645c36b8f9df','TN333','','2024-07-14 03:31:42',NULL,NULL),
 (110,'TN334','3bf0ffa6133b36f28b1b839a77241a2a','TN334','','2024-07-14 03:31:42',NULL,NULL),
 (111,'TN335','d86a587bb7d3e12caf24f60bd682b192','TN335','','2024-07-14 03:31:42',NULL,NULL),
 (112,'TN336','953ac7b1ab779238038f208b15fe0dbb','TN336','','2024-07-14 03:31:42',NULL,NULL),
 (113,'TN337','005bdd3d0f7d937097b22b6eb49ccb9c','TN337','','2024-07-14 03:31:42',NULL,NULL),
 (114,'TN338','53791d11077f7c29459cf6814e2ea5d5','TN338','','2024-07-14 03:31:42',NULL,NULL),
 (115,'TN339','b595b35c0b6b4f3c06ea4714c33af274','TN339','','2024-07-14 03:31:42',NULL,NULL),
 (116,'TN340','e9c1ecdb5b5dde94e934cf3b2922003b','TN340','','2024-07-14 03:31:42',NULL,NULL),
 (117,'TN341','9842ee8f717ebafbe79fe739a3d29c8a','TN341','','2024-07-14 03:31:42',NULL,NULL),
 (118,'TN342','2079c0d4665ee1f84625e37671c98088','TN342','','2024-07-14 03:31:42',NULL,NULL),
 (119,'TN343','cd23d73af6f82543174edb208aec4f53','TN343','','2024-07-14 03:31:42',NULL,NULL),
 (120,'TN344','62ce0cba0d69b729cfa344dcef5e5c7e','TN344','','2024-07-14 03:31:42',NULL,NULL),
 (121,'TN345','769225cb208d589cbe4261ce34903c38','TN345','','2024-07-14 03:31:42',NULL,NULL),
 (122,'TN346','f6d5ca981d4930b4de25e163a6b72790','TN346','','2024-07-14 03:31:42',NULL,NULL),
 (123,'TN347','c295fb20d9e81b94a7f5e616854d50ac','TN347','','2024-07-14 03:31:42',NULL,NULL),
 (124,'TN348','57a1bcf46dd38ec68d6316a2bbd14955','TN348','','2024-07-14 03:31:42',NULL,NULL),
 (125,'TN349','dfa814b2e85c2d4fb7fd5258d679b85f','TN349','','2024-07-14 03:31:42',NULL,NULL),
 (126,'TN350','77c5792c5104aaa0ac747d6e1ccdbb17','TN350','','2024-07-14 03:31:42',NULL,NULL),
 (127,'TN351','1f28ef36a80bb8cc99a6a979187d9a86','TN351','','2024-07-14 03:31:42',NULL,NULL),
 (128,'TN352','e7aec9b0d30069842ffb476b752b5963','TN352','','2024-07-14 03:31:42',NULL,NULL),
 (129,'TN353','efca7312a86c5fda62cf48dcbb2ea82d','TN353','','2024-07-14 03:31:42',NULL,NULL),
 (130,'TN354','20a19670b11632c8afeec9dcfd653aec','TN354','','2024-07-14 03:31:42',NULL,NULL),
 (131,'TN355','eb50369c1bb6afe73067b7892efb37b8','TN355','','2024-07-14 03:31:42',NULL,NULL),
 (132,'TN356','bced547e6867dafc1879a7d20b5eff93','TN356','','2024-07-14 03:31:42',NULL,NULL),
 (133,'TN357','ecc1dc183f65b4753257e112e41df49e','TN357','','2024-07-14 03:31:42',NULL,NULL),
 (134,'TN358','87675040ce3bdac85c40937d6ed2b03a','TN358','','2024-07-14 03:31:42',NULL,NULL),
 (135,'TN359','6c5a0cd5cd407ad2be13817be30c866d','TN359','','2024-07-14 03:31:42',NULL,NULL),
 (136,'TN360','cd2bcbcec8276ed38e6dcffe8a9891b3','TN360','','2024-07-14 03:31:42',NULL,NULL),
 (137,'TN361','34824c7c983510b22c009e94232fdfec','TN361','','2024-07-14 03:31:42',NULL,NULL),
 (138,'TN362','dac129b8c2ab458aaa2cae97a81d43ef','TN362','','2024-07-14 03:31:42',NULL,NULL),
 (139,'TN363','7073e89142281385efd78b4d184f5066','TN363','','2024-07-14 03:31:42',NULL,NULL),
 (140,'TN364','2c3d828db57bb9913591161ef7135c54','TN364','','2024-07-14 03:31:42',NULL,NULL),
 (141,'TN365','ef1ac17a780f95925f474b8bd673e9f3','TN365','','2024-07-14 03:31:42',NULL,NULL),
 (142,'TN366','81fd6516a4051c3f6522c6b67e8bec6e','TN366','','2024-07-14 03:31:42',NULL,NULL),
 (143,'TN367','6fc8ffc1a64234cfe11503eb5faa9737','TN367','','2024-07-14 03:31:42',NULL,NULL),
 (144,'TN368','a670ebf3aa018dcec1fa91f66e3219d7','TN368','','2024-07-14 03:31:42',NULL,NULL),
 (145,'TN369','a803e7380888a92786eef5b30cb683c1','TN369','','2024-07-14 03:31:42',NULL,NULL),
 (146,'TN370','5cdce5726bd96b09a0503e1d88b051cf','TN370','','2024-07-14 03:31:42',NULL,NULL),
 (147,'TN371','ccc6c2292f16ae01462eb33f97660254','TN371','','2024-07-14 03:31:42',NULL,NULL),
 (148,'TN372','9109fb5e59f5d74931fcbe025f986f47','TN372','','2024-07-14 03:31:42',NULL,NULL),
 (149,'TN373','4a66e00ec1f65457e634cf2c58f017d3','TN373','','2024-07-14 03:31:42',NULL,NULL),
 (150,'TN374','4c0ef80211a82e3d2051964ceb5bbbfd','TN374','','2024-07-14 03:31:42',NULL,NULL),
 (151,'TN375','5f17665216d272d83e79b22ae7fad063','TN375','','2024-07-14 03:31:42',NULL,NULL),
 (152,'TN376','21d2b2d6f8f7ac5b0e18cd4c0a76592a','TN376','','2024-07-14 03:31:42',NULL,NULL),
 (153,'TN377','55394a65840a0eaadb41209031211605','TN377','','2024-07-14 03:31:42',NULL,NULL),
 (154,'TN378','72e58cfa34fad76c66fb7eb8c52a0446','TN378','','2024-07-14 03:31:42',NULL,NULL),
 (155,'TN379','34ad8f2233de543f8f203bbd94ff971e','TN379','','2024-07-14 03:31:42',NULL,NULL),
 (156,'TN380','e032848fdb1e54b1ab65400442cb7f26','TN380','','2024-07-14 03:31:42',NULL,NULL),
 (157,'TN381','688aa4d628743b0102c074f0d1f0b81f','TN381','','2024-07-14 03:31:42',NULL,NULL),
 (158,'TN382','22a43dccffb893bf25acae633113c6d0','TN382','','2024-07-14 03:31:42',NULL,NULL),
 (159,'TN383','6f17b2320bfd89ca9c014c411002f155','TN383','','2024-07-14 03:31:42',NULL,NULL),
 (160,'TN384','87980484dd587c595444f1d70b90e0ad','TN384','','2024-07-14 03:31:42',NULL,NULL),
 (161,'TN385','7d83a5c40cf3c2536ed3eb5d28799bf1','TN385','','2024-07-14 03:31:42',NULL,NULL),
 (162,'TN386','393b7512784ba69757c2397bbc13b3d9','TN386','','2024-07-14 03:31:42',NULL,NULL),
 (163,'TN387','fffb020a4f1e8df49726949f68fbbcf6','TN387','','2024-07-14 03:31:42',NULL,NULL),
 (164,'TN388','87afacd2fc9a50707572324141f36b8d','TN388','','2024-07-14 03:31:42',NULL,NULL),
 (165,'TN389','36a0289c790fc8a1b82f8c0db4a6d4b9','TN389','','2024-07-14 03:31:42',NULL,NULL),
 (166,'TN390','fb3bc2f0c1906f7ecf0ba0453fafaa90','TN390','','2024-07-14 03:31:42',NULL,NULL),
 (167,'TN391','9d5d6ebd9b622b47e07b1664dbbe340f','TN391','','2024-07-14 03:31:42',NULL,NULL),
 (168,'TN392','98a2d34cbe236019e35d81aaadcae457','TN392','','2024-07-14 03:31:42',NULL,NULL),
 (169,'TN393','48f9aeaf6d83183094d13a22d307fc5d','TN393','','2024-07-14 03:31:42',NULL,NULL),
 (170,'TN394','a201ae9c7ec96a71b5b8798d5bad87df','TN394','','2024-07-14 03:31:42',NULL,NULL),
 (171,'TN395','5e39aceda8af8544e5cdcefc69ee3a95','TN395','','2024-07-14 03:31:42',NULL,NULL),
 (172,'TN396','645725eba422d55cdd10c712f8f40feb','TN396','','2024-07-14 03:31:42',NULL,NULL),
 (173,'TN397','031d7ae64fb30c22ce5588ec590661f8','TN397','','2024-07-14 03:31:42',NULL,NULL),
 (174,'TN398','73f304e7ee9e574c936f3fb8e0dd3c36','TN398','','2024-07-14 03:31:42',NULL,NULL),
 (175,'TN399','5192a2e02bd14db84071f95fe50cced3','TN399','','2024-07-14 03:31:42',NULL,NULL),
 (176,'TN400','f1ee272a8b09fe36c191696d59fd80d1','TN400','','2024-07-14 03:31:42',NULL,NULL),
 (177,'A1','c1a6b81b85ea22e4c12c08564f0b0cf8','Abinaya M','','2024-07-14 03:31:42',NULL,NULL),
 (178,'A2','e842b22f5c0f256a3e2172f993f1367d','ABINAYA S','','2024-07-14 03:31:42',NULL,NULL),
 (179,'A3','79966c56b6ecb7520c67a698a4297d2d','ABIRAMI S','','2024-07-14 03:31:42',NULL,NULL),
 (180,'A4','24be37a56d3ab0e28269980d404d54c1','Abirami.S','','2024-07-14 03:31:42',NULL,NULL),
 (181,'A5','bec9e6ad4fc38bf6b65765313554017c','Achal Raju Taksande','','2024-07-14 03:31:42',NULL,NULL),
 (182,'A6','ce04ddd5be99cad4e5b33ea08805a0f7','Adesh Kumar','','2024-07-14 03:31:42',NULL,NULL),
 (183,'A7','5b76c112fafc0d0b841ab1db2b21ada1','Akshata Laxman Pawar','','2024-07-14 03:31:42',NULL,NULL),
 (184,'A8','9de283ea7131217c94b997bdba06045a','AKSHATA NARASIMHA MADIVAL','','2024-07-14 03:31:42',NULL,NULL),
 (185,'A9','37f17fbd92ed5fa32a09980b48641302','Akshika Dhankhar','','2024-07-14 03:31:42',NULL,NULL),
 (186,'A10','72db9634a6dd9b465d84f1de8773c842','ALAGAMMAI KUMARAPPAN','','2024-07-14 03:31:42',NULL,NULL),
 (187,'A11','e6ac08bca790f15e1f336b8fb75b18a8','Amutha Priya k','','2024-07-14 03:31:42',NULL,NULL),
 (188,'A12','70666a5c566dc5f236ad5b63ba944637','Ananya Singh','','2024-07-14 03:31:42',NULL,NULL),
 (189,'A13','7f0483a3da2b003a0ddddacc2a55e82f','Ankita kumari','','2024-07-14 03:31:42',NULL,NULL),
 (190,'A14','5a11ff66fb3a6c0f494c023be0a3a681','Anu S','','2024-07-14 03:31:42',NULL,NULL),
 (191,'A15','e23fb49de4c52f06ec5f7ef77625873a','Anumulapuri SHIVA Sathyanarayana','','2024-07-14 03:31:42',NULL,NULL),
 (192,'A16','7d4405eac657049f40c8bb20d8e037c0','Archanaa S','','2024-07-14 03:31:42',NULL,NULL),
 (193,'A17','83e62995c83aecc0a867ad41fc126b1f','Arpita Agarwal','','2024-07-14 03:31:42',NULL,NULL),
 (194,'A18','7047b43a30b9a32b4fc84a1dcf4b8af0','ARYA Gajendra Kumar','','2024-07-14 03:31:42',NULL,NULL),
 (195,'A19','ad3e21181ba1664d6727955aed0eac41','Astha Jha','','2024-07-14 03:31:42',NULL,NULL),
 (196,'A20','b6ae368200e07e6e7e0b66544535fda7','Aswin annamalai s','','2024-07-14 03:31:42',NULL,NULL),
 (197,'A21','a5c8c0b60f132d8a243cbb97ab04bf92','B S Sandeep','','2024-07-14 03:31:42',NULL,NULL),
 (198,'A22','e067c51b08c112b265700c2213a37d10','BANAVATH SHASHI REKHA','','2024-07-14 03:31:42',NULL,NULL),
 (199,'A23','705f47504b72ac8e4807f3c723a1a920','Bhand Swamini Balasaheb','','2024-07-14 03:31:42',NULL,NULL),
 (200,'A24','5abdfb714268a604a4af065a08004094','Bhawana gupta','','2024-07-14 03:31:42',NULL,NULL),
 (201,'A25','b0c4bc877c297087a5a03384c4e68d26','Chanda Jha','','2024-07-14 03:31:43',NULL,NULL),
 (202,'A26','0b40a089e3b717cde882bcc6a4906c67','Deeksha Dhakad','','2024-07-14 03:31:43',NULL,NULL),
 (203,'A27','29f97c79cb913145ca7c7b259f68eda9','Devi Pithani','','2024-07-14 03:31:43',NULL,NULL),
 (204,'A28','7440e1ac3c12fa15619293821f9324c1','Devika Gautam','','2024-07-14 03:31:43',NULL,NULL),
 (205,'A29','5d98eedfb107ccad3d6eb317e254aa79','Dhanush D','','2024-07-14 03:31:43',NULL,NULL),
 (206,'A30','19aa8a3ff0a3063a146c7887fdffa63e','Dhanwate Vaishnavi Ashok','','2024-07-14 03:31:43',NULL,NULL),
 (207,'A31','dbbb6504c7b348a4ce804a344d5e2d9a','DIVYA J','','2024-07-14 03:31:43',NULL,NULL),
 (208,'A32','e6625e7b9e082baa325ab51b835c414a','Divyaprakash','','2024-07-14 03:31:43',NULL,NULL),
 (209,'A33','f80e50a0c2823cc0c9a4bac0184c080f','Eswantharao R','','2024-07-14 03:31:43',NULL,NULL),
 (210,'A34','b19511a8da23cf4471668a1fc6449433','GATTU KUSUMA KUMARI','','2024-07-14 03:31:43',NULL,NULL),
 (211,'A35','0cb1310ad9f31f2cbf2f96ec2632922d','GAYATHRI A','','2024-07-14 03:31:43',NULL,NULL),
 (212,'A36','12a9d80182af21900d6fa915a44de851','Gayathri S','','2024-07-14 03:31:43',NULL,NULL),
 (213,'A37','409e12dd33850b7d5dcfcfbd81fbc3da','Gayatri Narendra Giradkar','','2024-07-14 03:31:43',NULL,NULL),
 (214,'A38','2def26f4810ace1b2a9acdd33efa7638','Geetanjali kanwar','','2024-07-14 03:31:43',NULL,NULL),
 (215,'A39','103e11bd5b0345fd2d67c595e67db4a4','Gokul S','','2024-07-14 03:31:43',NULL,NULL),
 (216,'A40','bd628d7071ceef57c4d8a8f85c3b7eb1','Gopika R','','2024-07-14 03:31:43',NULL,NULL),
 (217,'A41','78266f0a529cc53bc146bba6fb1d149d','Gurjeetkaur Harjeetsingh Sandhu','','2024-07-14 03:31:43',NULL,NULL),
 (218,'A42','5a6d00b621e5fa2ef261ee76e82c676a','Harsh kuamr','','2024-07-14 03:31:43',NULL,NULL),
 (219,'A43','e91f24c107c2edca38fadcd0007cb2bc','Harshika Singh','','2024-07-14 03:31:43',NULL,NULL),
 (220,'A44','9d5d101541c07fedf2c61ea2e300295e','Ishita Agrawal','','2024-07-14 03:31:43',NULL,NULL),
 (221,'A45','c28b624439ddf2bc98a2fa19b00b6475','Kalieeswaran S','','2024-07-14 03:31:43',NULL,NULL),
 (222,'A46','9b78f29b816caf8cd7d397d74709306c','Kalyani Pathak','','2024-07-14 03:31:43',NULL,NULL),
 (223,'A47','f7fff6ff549ab4850d1ae60ca09b447d','Kamalini K','','2024-07-14 03:31:43',NULL,NULL),
 (224,'A48','740acb1e4db2d1e9c20415e87afbb994','Kanak sharma','','2024-07-14 03:31:43',NULL,NULL),
 (225,'A49','6d700370bbb7119bc54cfd413dddaa32','Kandagatla Punith Chandra','','2024-07-14 03:31:43',NULL,NULL),
 (226,'A50','1bb39ac338a92f29eea69a788c240b64','Kardile Mohini Vishnu','','2024-07-14 03:31:43',NULL,NULL),
 (227,'A51','d08087c847bde34d13038d9dd5a401b4','KAVIPRIYA S','','2024-07-14 03:31:43',NULL,NULL),
 (228,'A52','bdc64108ad281e078c880409348655cc','Kaviyasri K','','2024-07-14 03:31:43',NULL,NULL),
 (229,'A53','d647ab31b00fccf5e252a2c9a854173c','Kavya Y T','','2024-07-14 03:31:43',NULL,NULL),
 (230,'A54','5782a2d75487a0c7b9723475141c1a06','Khushboo','','2024-07-14 03:31:43',NULL,NULL),
 (231,'A55','c5dd1a017a89fa02235cbd9e009442cf','Khushi','','2024-07-14 03:31:43',NULL,NULL),
 (232,'A56','bbdda8f17a7b93265d63398a457caf54','Khushi Rawat','','2024-07-14 03:31:43',NULL,NULL),
 (233,'A57','dce37a016c121bff5ea77a1157de96ba','Kochutharayil Oshin Teresa Shaji','','2024-07-14 03:31:43',NULL,NULL),
 (234,'A58','39b74c9cd7ba434c7886f7d98a353360','Komal pandit Malage','','2024-07-14 03:31:43',NULL,NULL),
 (235,'A59','cf0376fb958267b57f200efe86062e73','Lekha S','','2024-07-14 03:31:43',NULL,NULL),
 (236,'A60','d9b9f1407c561b40b39430807a1dcf0b','Likhitha B R','','2024-07-14 03:31:43',NULL,NULL),
 (237,'A61','1607213b8eae75f257b7d293ce8d93de','M Pavithra','','2024-07-14 03:31:43',NULL,NULL),
 (238,'A62','391c73ddd5a32c483298976a27a69fb1','Madhubala','','2024-07-14 03:31:43',NULL,NULL),
 (239,'A63','723ef815a3c2e35a6fa34029dc5c2b41','Mahagayathri M','','2024-07-14 03:31:43',NULL,NULL),
 (240,'A64','ed1d366c389275dc1d39f7bb74562a7b','Mahalakshmi P','','2024-07-14 03:31:43',NULL,NULL),
 (241,'A65','2568262d2348ca20417890e0e36de4dc','Mandeep Kaur','','2024-07-14 03:31:43',NULL,NULL),
 (242,'A66','08be08c012670c5819f6127caa11a567','Mate Sakshi Amol','','2024-07-14 03:31:43',NULL,NULL),
 (243,'A67','47e33e4e797b900f7ab1d281c665a189','Meghasyam Sayimpu','','2024-07-14 03:31:43',NULL,NULL),
 (244,'A68','0c738cd3fee9220d99b1ae606843977f','MENAGA P','','2024-07-14 03:31:43',NULL,NULL),
 (245,'A69','85e42962ffbcf2b42206eb1cea93f8b8','Mohammed Yassir I','','2024-07-14 03:31:43',NULL,NULL),
 (246,'A70','01b281c68d81b113913d859b03e143da','Monalika Singh','','2024-07-14 03:31:43',NULL,NULL),
 (247,'A71','a17d70b81d69a30eae645184bc2d7629','Monika','','2024-07-14 03:31:43',NULL,NULL),
 (248,'A72','37c9021410da57043c20dc0dfebd1b28','Monisiprabha S','','2024-07-14 03:31:43',NULL,NULL),
 (249,'A73','1e4bf22804e60525bfab8d9bb80747ec','Mupparaju Harshini','','2024-07-14 03:31:43',NULL,NULL),
 (250,'A74','43602a6708e9bf9bd4f9045c996458ea','Muskan Khan','','2024-07-14 03:31:43',NULL,NULL),
 (251,'A75','4e1dbe23b80ab6b9f0bd6c929894b707','NAGA ARUN KUMAR T','','2024-07-14 03:31:43',NULL,NULL),
 (252,'A76','de52e6667b9c110c19850193a4d48520','Nagalakshmi','','2024-07-14 03:31:43',NULL,NULL),
 (253,'A77','daa87de533d09da2ee71115b21ca2e66','Nathisha M','','2024-07-14 03:31:43',NULL,NULL),
 (254,'A78','65b953942b2148875d6414cd39089d89','Nisha Rani','','2024-07-14 03:31:43',NULL,NULL),
 (255,'A79','6c030dce5b45812d6db1598418b89312','Nithis raj','','2024-07-14 03:31:43',NULL,NULL),
 (256,'A80','e0ca3f1906cca9a48962a72ecf5935c9','Nitu Kumari','','2024-07-14 03:31:43',NULL,NULL),
 (257,'A81','57ef000a0bae576fb4538533cc102a13','Peraka akshara','','2024-07-14 03:31:43',NULL,NULL),
 (258,'A82','d35484c1a3e5bfede2bf4677a61c4b78','Pinku Verma','','2024-07-14 03:31:43',NULL,NULL),
 (259,'A83','9499ee69d741b64bfc57bcd0507b2b0b','Pooja Rautela','','2024-07-14 03:31:43',NULL,NULL),
 (260,'A84','513dca561a61f3583014216eee2ffa6c','Prajyolita Maharana','','2024-07-14 03:31:43',NULL,NULL),
 (261,'A85','8d242e0eb95527eea95d67c5eb6e238d','Pramod shankrappa Shigli','','2024-07-14 03:31:43',NULL,NULL),
 (262,'A86','421c51a4a12e3eb71ce0cee09425c226','Priya Sanjay Mansuke','','2024-07-14 03:31:43',NULL,NULL),
 (263,'A87','9da95218ec929d98855582c10a99fec0','Priyadharshini V','','2024-07-14 03:31:43',NULL,NULL),
 (264,'A88','3ed82301e10fba27797c551aba20b2eb','Rachapally Sony','','2024-07-14 03:31:43',NULL,NULL),
 (265,'A89','c2a5ff7d1482563a5a88e6c0e9c2356a','Ramalakshmi M','','2024-07-14 03:31:43',NULL,NULL),
 (266,'A90','43c617d8460e2e92b035540084e49974','Ranjana S','','2024-07-14 03:31:43',NULL,NULL),
 (267,'A91','c4133073134ac7fbf4f1d8c2aca5df32','Ranjita Ambali','','2024-07-14 03:31:43',NULL,NULL),
 (268,'A92','050b88b8bd808a9a7f6a2e5de7946190','Rupali meena','','2024-07-14 03:31:43',NULL,NULL),
 (269,'A93','22da1eec1967f3bc187a61b345e93789','Saranya S','','2024-07-14 03:31:43',NULL,NULL),
 (270,'A94','9a1cb2c90d5cf029a9177e22ae402f30','Sarathkumar P','','2024-07-14 03:31:43',NULL,NULL),
 (271,'A95','433638cfbd8e5396b3ba80cf1a479d81','Sayali Zoting','','2024-07-14 03:31:43',NULL,NULL),
 (272,'A96','b65ab0386e654528823d01055f762cf4','Seema ahirwar','','2024-07-14 03:31:43',NULL,NULL),
 (273,'A97','86b7801dea906e18e5aee669d4199510','Sejal Shivaji Wavhal','','2024-07-14 03:31:43',NULL,NULL),
 (274,'A98','a10530b3a8a9ab9a87890ac57ffd917a','Seshadri.S','','2024-07-14 03:31:43',NULL,NULL),
 (275,'A99','053db4eedfb605b8118de08f27d6069f','Shakira Banu S','','2024-07-14 03:31:43',NULL,NULL),
 (276,'A100','48f7f0809c880f0722c83e58cfc2768c','SHANMUGALAKSHMI I','','2024-07-14 03:31:43',NULL,NULL),
 (277,'A101','f1f8d831e1fc3be67f369f8b913164b5','Shiva','','2024-07-14 03:31:43',NULL,NULL),
 (278,'A102','5a4380a2dd5fb7e9575a5bd6d3f45188','Shreya Rana','','2024-07-14 03:31:43',NULL,NULL),
 (279,'A103','c0c60a2d9d9c2fcfb0104aac33030db6','Shweta','','2024-07-14 03:31:43',NULL,NULL),
 (280,'A104','f9b5aaa458ad59639f05ea74abf134a2','Shweta Ankush Gund','','2024-07-14 03:31:43',NULL,NULL),
 (281,'A105','2706f21a167674714d6d5686e281b0cd','Shweta kadolkar','','2024-07-14 03:31:43',NULL,NULL),
 (282,'A106','c986ecc5fb63d9f5776d8c329c5edced','Siddhant Kharwar','','2024-07-14 03:31:43',NULL,NULL),
 (283,'A107','e921d351dfb99dc9b7fb3d96778e252a','Siri Boddula','','2024-07-14 03:31:43',NULL,NULL),
 (284,'A108','adb9add0059b3b1081f03fe4a0becba9','Sneha B Charki','','2024-07-14 03:31:43',NULL,NULL),
 (285,'A109','52321b17ac3096a3ee94d50421166cb8','Snehal Patil','','2024-07-14 03:31:43',NULL,NULL),
 (286,'A110','90c3a859f06f23a6de4530c8a25f2776','SOLAISELVI B','','2024-07-14 03:31:43',NULL,NULL),
 (287,'A111','317e2c3434fbb8a5daa5326363badfb6','Sonali','','2024-07-14 03:31:43',NULL,NULL),
 (288,'A112','b85a0ac89c96083884a79b60039cde87','Soumya Ranjan Mohapatra','','2024-07-14 03:31:43',NULL,NULL),
 (289,'A113','050a9ed02a298cefda3d25a4d9f29e37','Sowmyasree D','','2024-07-14 03:31:43',NULL,NULL),
 (290,'A114','8c083e1e6ff5a8e906b67c09b62cb7bc','Srishti Gupta','','2024-07-14 03:31:43',NULL,NULL),
 (291,'A115','b66ab6e685a807599d42a98089f4738f','Subhadarshini patra','','2024-07-14 03:31:43',NULL,NULL),
 (292,'A116','4e967e734f93342bee682e5dbcbcdaf0','Sushmitha S','','2024-07-14 03:31:43',NULL,NULL),
 (293,'A117','6a9601f01bd7c5e6a935b3899e5cbfc4','Swarnima Soni','','2024-07-14 03:31:43',NULL,NULL),
 (294,'A118','861ac56f8b2e092385185953cb89eea0','Swati','','2024-07-14 03:31:43',NULL,NULL),
 (295,'A119','2996f300b1277f5540e3e37cf1678a4a','Swetha S','','2024-07-14 03:31:43',NULL,NULL),
 (296,'A120','8b939bbc6f82dcfcb7cd7565a625f166','TANIYA PAUL','','2024-07-14 03:31:43',NULL,NULL),
 (297,'A121','c8263b6e216cd35ef00d35082c600977','Tarunkumar B T','','2024-07-14 03:31:43',NULL,NULL),
 (298,'A122','62cb17f4ca7cd91ca5a45fe8a133f931','Tasmea Yousuff R','','2024-07-14 03:31:43',NULL,NULL),
 (299,'A123','de2505b7478aee5f3ba3c684f4b5be09','Thadikamalla Rakesh','','2024-07-14 03:31:43',NULL,NULL),
 (300,'A124','6362d49c2265ba716e45a42d06ad8438','Tuba Ansari','','2024-07-14 03:31:43',NULL,NULL),
 (301,'A125','2c91129b2c0c66720803191148f8b7fc','Uma.V','','2024-07-14 03:31:43',NULL,NULL),
 (302,'A126','4706c1642854b598a63163d98461b9ea','V.Sundaram','','2024-07-14 03:31:43',NULL,NULL),
 (303,'A127','15257f35e29ad93ceb098a991a390840','Vaishnavi Dubey','','2024-07-14 03:31:43',NULL,NULL),
 (304,'A128','a4799603706667648ae00d93ddf5bfb4','Vaishnavi Sunil Kshirsagar','','2024-07-14 03:31:43',NULL,NULL),
 (305,'A129','1fd158ff279c516d773bae78d1733ac5','VAISHNAVI.P','','2024-07-14 03:31:43',NULL,NULL),
 (306,'A130','43ab25b2a9d7533350ddd0361a83ba3b','Varsha .V','','2024-07-14 03:31:43',NULL,NULL),
 (307,'A131','ce2e7296ce073ef3e58db06cedbc711b','Varshana AJ','','2024-07-14 03:31:43',NULL,NULL),
 (308,'A132','ce410073f7cb769f7b6393bc50f96778','Vijayalakshmi S','','2024-07-14 03:31:43',NULL,NULL),
 (309,'A133','1fb3cd9f970f5baf0b1850c610474a6d','Vishnu Jain','','2024-07-14 03:31:43',NULL,NULL),
 (310,'A134','01a7cada64e66d1743d245eb519056db','Vyomika','','2024-07-14 03:31:43',NULL,NULL),
 (311,'A135','97aade741d74dbdb5842ae574b7045e2','Yuvaraj T','','2024-07-14 03:31:43',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;

--
-- Create schema aptonlinetwo
--

CREATE DATABASE IF NOT EXISTS aptonlinetwo;
USE aptonlinetwo;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,2);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=401 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'Throwable',NULL,1,0,'',0,0,NULL,1,0,''),
 (2,1,'Exception',NULL,0,0,'',0,0,NULL,1,0,''),
 (3,1,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (4,1,'Throw',NULL,0,0,'',0,0,NULL,1,0,''),
 (5,1,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (6,2,'try',NULL,0,0,'',0,0,NULL,1,0,''),
 (7,2,'catch',NULL,1,0,'',0,0,NULL,1,0,''),
 (8,2,'throw',NULL,0,0,'',0,0,NULL,1,0,''),
 (9,2,'finaly',NULL,0,0,'',0,0,NULL,1,0,''),
 (10,2,'throws',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'java.util',NULL,0,0,'',0,0,NULL,1,0,''),
 (12,3,'java.io',NULL,0,0,'',0,0,NULL,1,0,''),
 (13,3,'java.lang',NULL,1,0,'',0,0,NULL,1,0,''),
 (14,3,'java.net',NULL,0,0,'',0,0,NULL,1,0,''),
 (15,3,'java.file',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'try',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,4,'catch',NULL,0,0,'',0,0,NULL,1,0,''),
 (18,4,'throw',NULL,1,0,'',0,0,NULL,1,0,''),
 (19,4,'throws',NULL,0,0,'',0,0,NULL,1,0,''),
 (20,4,'final',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,5,'NumberFormat Exception',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,5,'Arithmetic Exception',NULL,1,0,'',0,0,NULL,1,0,''),
 (23,5,'DividebyZero Excepton',NULL,0,0,'',0,0,NULL,1,0,''),
 (24,5,'NullPointer Exception',NULL,0,0,'',0,0,NULL,1,0,''),
 (25,5,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (26,6,'try',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,6,'catch',NULL,0,0,'',0,0,NULL,1,0,''),
 (28,6,'throw',NULL,0,0,'',0,0,NULL,1,0,''),
 (29,6,'throws',NULL,0,0,'',0,0,NULL,1,0,''),
 (30,6,'finaly',NULL,1,0,'',0,0,NULL,1,0,''),
 (31,7,'try',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,7,'catch',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,7,'throw',NULL,0,0,'',0,0,NULL,1,0,''),
 (34,7,'throws',NULL,1,0,'',0,0,NULL,1,0,''),
 (35,7,'finaly',NULL,0,0,'',0,0,NULL,1,0,''),
 (36,8,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,8,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (38,8,'C only',NULL,1,0,'',0,0,NULL,1,0,''),
 (39,8,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (40,8,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,9,'inCatchBlock',NULL,0,0,'',0,0,NULL,1,0,''),
 (42,9,'inCatchBlock inFinallyBlock',NULL,0,0,'',0,0,NULL,1,0,''),
 (43,9,'inFinallyBlock',NULL,1,0,'',0,0,NULL,1,0,''),
 (44,9,'Compile Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (45,9,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (46,10,'1 and 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (47,10,'2 and 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (48,10,'2 and 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (49,10,'3 and 4',NULL,1,0,'',0,0,NULL,1,0,''),
 (50,10,'1 and 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (51,11,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (52,11,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (53,11,'C only',NULL,1,0,'',0,0,NULL,1,0,''),
 (54,11,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (55,11,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (56,12,'There is a NullPointerException. Everything went fine.',NULL,1,0,'',0,0,NULL,1,0,''),
 (57,12,'There is a NullPointerException.',NULL,0,0,'',0,0,NULL,1,0,''),
 (58,12,'There is a NullPointerException. There is an Exception.',NULL,0,0,'',0,0,NULL,1,0,''),
 (59,12,'This code will not compile, because in Java there are no pointers.',NULL,0,0,'',0,0,NULL,1,0,''),
 (60,12,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (61,13,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,13,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (63,13,'2  3',NULL,0,0,'',0,0,NULL,1,0,''),
 (64,13,'1 3',NULL,1,0,'',0,0,NULL,1,0,''),
 (65,13,'1  2  3',NULL,0,0,'',0,0,NULL,1,0,''),
 (66,14,'IllegalState Exception',NULL,0,0,'',0,0,NULL,1,0,''),
 (67,14,'NumberFormat Exception',NULL,1,0,'',0,0,NULL,1,0,''),
 (68,14,'ClassCast Exception',NULL,0,0,'',0,0,NULL,1,0,''),
 (69,14,'ArrayIndexOutOf BoundsException',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,14,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,15,'A and D',NULL,0,0,'',0,0,NULL,1,0,''),
 (72,15,'A and B',NULL,1,0,'',0,0,NULL,1,0,''),
 (73,15,'A and C',NULL,0,0,'',0,0,NULL,1,0,''),
 (74,15,'B and C',NULL,0,0,'',0,0,NULL,1,0,''),
 (75,15,'B and D',NULL,0,0,'',0,0,NULL,1,0,''),
 (76,16,'3',NULL,1,0,'',0,0,NULL,1,0,''),
 (77,16,'3.5',NULL,0,0,'',0,0,NULL,1,0,''),
 (78,16,'Error occurred',NULL,0,0,'',0,0,NULL,1,0,''),
 (79,16,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (80,16,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (81,17,'one',NULL,0,0,'',0,0,NULL,1,0,''),
 (82,17,'exception',NULL,0,0,'',0,0,NULL,1,0,''),
 (83,17,'nullpointer exception',NULL,0,0,'',0,0,NULL,1,0,''),
 (84,17,'Compile error',NULL,1,0,'',0,0,NULL,1,0,''),
 (85,17,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (86,18,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (87,18,'B only',NULL,1,0,'',0,0,NULL,1,0,''),
 (88,18,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (89,18,'D only',NULL,0,0,'',0,0,NULL,1,0,''),
 (90,18,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (91,19,'Hi',NULL,0,0,'',0,0,NULL,1,0,''),
 (92,19,'Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,19,'HiHello',NULL,1,0,'',0,0,NULL,1,0,''),
 (94,19,'HelloHi',NULL,0,0,'',0,0,NULL,1,0,''),
 (95,19,'Compile Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,20,'Exception',NULL,0,0,'',0,0,NULL,1,0,''),
 (97,20,'Exception Finally',NULL,0,0,'',0,0,NULL,1,0,''),
 (98,20,'Compile with error',NULL,0,0,'',0,0,NULL,1,0,''),
 (99,20,'Finally',NULL,1,0,'',0,0,NULL,1,0,''),
 (100,20,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (101,21,'stop( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,21,'sleep( )',NULL,1,0,'',0,0,NULL,1,0,''),
 (103,21,'join( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (104,21,'call( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (105,21,'roll( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (106,22,'run( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (107,22,'Alive( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (108,22,'isAlive( )',NULL,1,0,'',0,0,NULL,1,0,''),
 (109,22,'checkRun( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (110,22,'start( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (111,23,'set( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (112,23,'make( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,23,'setPriority( )',NULL,1,0,'',0,0,NULL,1,0,''),
 (114,23,'makePriority( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (115,23,'priority( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (116,24,'yield( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (117,24,'notify( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,24,'wait( )',NULL,1,0,'',0,0,NULL,1,0,''),
 (119,24,'Thread.killThread( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (120,24,'stop( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (121,25,'true',NULL,0,0,'',0,0,NULL,1,0,''),
 (122,25,'false',NULL,0,0,'',0,0,NULL,1,0,''),
 (123,25,'Main thread interrupted',NULL,1,0,'',0,0,NULL,1,0,''),
 (124,25,'no thread created',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,25,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (126,26,'true',NULL,0,0,'',0,0,NULL,1,0,''),
 (127,26,'false',NULL,1,0,'',0,0,NULL,1,0,''),
 (128,26,'Main thread interrupted',NULL,0,0,'',0,0,NULL,1,0,''),
 (129,26,'no output',NULL,0,0,'',0,0,NULL,1,0,''),
 (130,26,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,27,'Thread(Runnable a, String str)',NULL,1,0,'',0,0,NULL,1,0,''),
 (132,27,'Thread(int priority)',NULL,0,0,'',0,0,NULL,1,0,''),
 (133,27,'Thread(Runnable a, int priority)',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,27,'Thread(Runnable a, ThreadGroup t)',NULL,0,0,'',0,0,NULL,1,0,''),
 (135,27,'Thread(Runnable a)',NULL,0,0,'',0,0,NULL,1,0,''),
 (136,28,'Thread t = new Thread(this,\"My Thread\");',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,28,'t = new Thread(this,\"My Thread\");',NULL,1,0,'',0,0,NULL,1,0,''),
 (138,28,'t = Thread(this, \"My Thread\");',NULL,0,0,'',0,0,NULL,1,0,''),
 (139,28,'Thread(this)',NULL,0,0,'',0,0,NULL,1,0,''),
 (140,28,'t = new Thread(this);',NULL,0,0,'',0,0,NULL,1,0,''),
 (141,29,'t1.equals;',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,29,'t1.equals(t2)',NULL,1,0,'',0,0,NULL,1,0,''),
 (143,29,'equals(t2)',NULL,0,0,'',0,0,NULL,1,0,''),
 (144,29,'t1==t2',NULL,0,0,'',0,0,NULL,1,0,''),
 (145,29,'t1 = t2',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,30,'getPriority(5)',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,30,'getPriority( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (148,30,'t.getPriority()',NULL,1,0,'',0,0,NULL,1,0,''),
 (149,30,'Priority()',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,30,'setPriority()',NULL,0,0,'',0,0,NULL,1,0,''),
 (151,31,'get( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (152,31,'ThreadPriority( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (153,31,'getPriority( )',NULL,1,0,'',0,0,NULL,1,0,''),
 (154,31,'getThreadPriority()',NULL,0,0,'',0,0,NULL,1,0,''),
 (155,31,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (156,32,'It\'s a process in which two different processes run simultaneously',NULL,0,0,'',0,0,NULL,1,0,''),
 (157,32,'It\'s a process in which two or more parts of same process run simultaneously',NULL,1,0,'',0,0,NULL,1,0,''),
 (158,32,'It\'s a process in which many different process are able to access same information',NULL,0,0,'',0,0,NULL,1,0,''),
 (159,32,'It\'s a process in which a single process can access information from many sources',NULL,0,0,'',0,0,NULL,1,0,''),
 (160,32,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (161,33,'Anyone will be executed first lexographically',NULL,0,0,'',0,0,NULL,1,0,''),
 (162,33,'Both of them will be executed simultaneously',NULL,0,0,'',0,0,NULL,1,0,''),
 (163,33,'It is dependent on the operating system',NULL,1,0,'',0,0,NULL,1,0,''),
 (164,33,'None of them will be executed',NULL,0,0,'',0,0,NULL,1,0,''),
 (165,33,'All  are parallel',NULL,0,0,'',0,0,NULL,1,0,''),
 (166,34,'By multithreading CPU idle time is minimized, and we can take maximum use of it',NULL,0,0,'',0,0,NULL,1,0,''),
 (167,34,'By multitasking CPU idle time is minimized, and we can take maximum use of it',NULL,0,0,'',0,0,NULL,1,0,''),
 (168,34,'Two thread in Java can have the same priority',NULL,0,0,'',0,0,NULL,1,0,''),
 (169,34,'A thread can exist only in two states, running and blocked',NULL,1,0,'',0,0,NULL,1,0,''),
 (170,34,'All are correct',NULL,0,0,'',0,0,NULL,1,0,''),
 (171,35,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (172,35,'5',NULL,1,0,'',0,0,NULL,1,0,''),
 (173,35,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (174,35,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (175,35,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (176,36,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (177,36,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (178,36,'true',NULL,1,0,'',0,0,NULL,1,0,''),
 (179,36,'false',NULL,0,0,'',0,0,NULL,1,0,''),
 (180,36,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (181,37,'100     200     300',NULL,0,0,'',0,0,NULL,1,0,''),
 (182,37,'5     10     15',NULL,0,0,'',0,0,NULL,1,0,''),
 (183,37,'5     100    10     200    15     300',NULL,1,0,'',0,0,NULL,1,0,''),
 (184,37,'5 100 10 200 15 300',NULL,0,0,'',0,0,NULL,1,0,''),
 (185,37,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (186,38,'System.out.println (\"Thread \" + Thread.currentThread()+ \" is running\");',NULL,0,0,'',0,0,NULL,1,0,''),
 (187,38,'System.out.println (\"Thread \" + getId( ) + \" is running\");',NULL,0,0,'',0,0,NULL,1,0,''),
 (188,38,'System.out.println (\"Thread \" + Thread + \" is running\");',NULL,0,0,'',0,0,NULL,1,0,''),
 (189,38,'System.out.println (\"Thread \" + Thread.currentThread().getId( ) + \" is running\");',NULL,1,0,'',0,0,NULL,1,0,''),
 (190,38,'System.out.print (\"Thread \" + Thread.currentThread().getId( ) + \" is running\");',NULL,0,0,'',0,0,NULL,1,0,''),
 (191,39,'cnt.isAlive()',NULL,1,0,'',0,0,NULL,1,0,''),
 (192,39,'isAlive()',NULL,0,0,'',0,0,NULL,1,0,''),
 (193,39,'cnt',NULL,0,0,'',0,0,NULL,1,0,''),
 (194,39,'cnt.hasAlive()',NULL,0,0,'',0,0,NULL,1,0,''),
 (195,39,'cnt.hasNext()',NULL,0,0,'',0,0,NULL,1,0,''),
 (196,40,'Daemon( )',NULL,0,0,'',0,0,NULL,1,0,''),
 (197,40,'isDaemon( )',NULL,1,0,'',0,0,NULL,1,0,''),
 (198,40,'hasDaemon()',NULL,0,0,'',0,0,NULL,1,0,''),
 (199,40,'nxtDaemon()',NULL,0,0,'',0,0,NULL,1,0,''),
 (200,40,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (201,41,'paint()',NULL,1,0,'',0,0,NULL,1,0,''),
 (202,41,'repaint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (203,41,'init()',NULL,0,0,'',0,0,NULL,1,0,''),
 (204,41,'Applet()',NULL,0,0,'',0,0,NULL,1,0,''),
 (205,41,'draw()',NULL,0,0,'',0,0,NULL,1,0,''),
 (206,42,'20',NULL,1,0,'',0,0,NULL,1,0,''),
 (207,42,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (208,42,'40',NULL,0,0,'',0,0,NULL,1,0,''),
 (209,42,'100',NULL,0,0,'',0,0,NULL,1,0,''),
 (210,42,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (211,43,'display()',NULL,0,0,'',0,0,NULL,1,0,''),
 (212,43,'displayapplet()',NULL,0,0,'',0,0,NULL,1,0,''),
 (213,43,'print()',NULL,1,0,'',0,0,NULL,1,0,''),
 (214,43,'printapplet()',NULL,0,0,'',0,0,NULL,1,0,''),
 (215,43,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (216,44,'trancient',NULL,0,0,'',0,0,NULL,1,0,''),
 (217,44,'global',NULL,0,0,'',0,0,NULL,1,0,''),
 (218,44,'public',NULL,0,0,'',0,0,NULL,1,0,''),
 (219,44,'volatile',NULL,1,0,'',0,0,NULL,1,0,''),
 (220,44,'destroy',NULL,0,0,'',0,0,NULL,1,0,''),
 (221,45,'display()',NULL,0,0,'',0,0,NULL,1,0,''),
 (222,45,'print()',NULL,1,0,'',0,0,NULL,1,0,''),
 (223,45,'drawstring()',NULL,0,0,'',0,0,NULL,1,0,''),
 (224,45,'transient()',NULL,0,0,'',0,0,NULL,1,0,''),
 (225,45,'paint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (226,46,'A Simple Applet 20 20',NULL,0,0,'',0,0,NULL,1,0,''),
 (227,46,'A Simple Applet 20',NULL,0,0,'',0,0,NULL,1,0,''),
 (228,46,'A Simple Applet',NULL,1,0,'',0,0,NULL,1,0,''),
 (229,46,'Compile Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (230,46,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (231,47,'display()',NULL,0,0,'',0,0,NULL,1,0,''),
 (232,47,'print()',NULL,0,0,'',0,0,NULL,1,0,''),
 (233,47,'drawstring()',NULL,1,0,'',0,0,NULL,1,0,''),
 (234,47,'transient()',NULL,0,0,'',0,0,NULL,1,0,''),
 (235,47,'paint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (236,48,'init()',NULL,1,0,'',0,0,NULL,1,0,''),
 (237,48,'start()',NULL,0,0,'',0,0,NULL,1,0,''),
 (238,48,'stop()',NULL,0,0,'',0,0,NULL,1,0,''),
 (239,48,'kill()',NULL,0,0,'',0,0,NULL,1,0,''),
 (240,48,'destroy()',NULL,0,0,'',0,0,NULL,1,0,''),
 (241,49,'viewer()',NULL,0,0,'',0,0,NULL,1,0,''),
 (242,49,'appletviewer()',NULL,1,0,'',0,0,NULL,1,0,''),
 (243,49,'appletrunner()',NULL,0,0,'',0,0,NULL,1,0,''),
 (244,49,'browserviewer()',NULL,0,0,'',0,0,NULL,1,0,''),
 (245,49,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (246,50,'awt',NULL,0,0,'',0,0,NULL,1,0,''),
 (247,50,'object',NULL,0,0,'',0,0,NULL,1,0,''),
 (248,50,'container',NULL,1,0,'',0,0,NULL,1,0,''),
 (249,50,'Applet',NULL,0,0,'',0,0,NULL,1,0,''),
 (250,50,'component',NULL,0,0,'',0,0,NULL,1,0,''),
 (251,51,'paint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (252,51,'init()',NULL,1,0,'',0,0,NULL,1,0,''),
 (253,51,'start()',NULL,0,0,'',0,0,NULL,1,0,''),
 (254,51,'stop()',NULL,0,0,'',0,0,NULL,1,0,''),
 (255,51,'destroy()',NULL,0,0,'',0,0,NULL,1,0,''),
 (256,52,'1-i, 2-ii, 3-iii, 4-iv, 5-v',NULL,0,0,'',0,0,NULL,1,0,''),
 (257,52,'1-ii, 2-iii, 3-iv, 4-v, 5-i',NULL,0,0,'',0,0,NULL,1,0,''),
 (258,52,'1-iv, 2-i, 3-ii, 4-iii, 5-v',NULL,1,0,'',0,0,NULL,1,0,''),
 (259,52,'1-iii, 2-iv, 3-v, 4-i, 5-ii',NULL,0,0,'',0,0,NULL,1,0,''),
 (260,52,'1-iii, 2-v, 3-iv, 4-i, 5-ii',NULL,0,0,'',0,0,NULL,1,0,''),
 (261,53,'display',NULL,0,0,'',0,0,NULL,1,0,''),
 (262,53,'drawstring',NULL,0,0,'',0,0,NULL,1,0,''),
 (263,53,'awt',NULL,0,0,'',0,0,NULL,1,0,''),
 (264,53,'applet',NULL,0,0,'',0,0,NULL,1,0,''),
 (265,53,'graphics',NULL,1,0,'',0,0,NULL,1,0,''),
 (266,54,'paint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (267,54,'init()',NULL,0,0,'',0,0,NULL,1,0,''),
 (268,54,'start()',NULL,1,0,'',0,0,NULL,1,0,''),
 (269,54,'stop()',NULL,0,0,'',0,0,NULL,1,0,''),
 (270,54,'destroy()',NULL,0,0,'',0,0,NULL,1,0,''),
 (271,55,'i, ii and iii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (272,55,'ii, iii and iv only',NULL,0,0,'',0,0,NULL,1,0,''),
 (273,55,'i, iii and iv only',NULL,0,0,'',0,0,NULL,1,0,''),
 (274,55,'All i, ii, iii and iv',NULL,1,0,'',0,0,NULL,1,0,''),
 (275,55,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (276,56,'update()',NULL,0,0,'',0,0,NULL,1,0,''),
 (277,56,'start()',NULL,0,0,'',0,0,NULL,1,0,''),
 (278,56,'paint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (279,56,'repaint()',NULL,1,0,'',0,0,NULL,1,0,''),
 (280,56,'stop()',NULL,0,0,'',0,0,NULL,1,0,''),
 (281,57,'paint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (282,57,'drawstring()',NULL,1,0,'',0,0,NULL,1,0,''),
 (283,57,'repaint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (284,57,'start()',NULL,0,0,'',0,0,NULL,1,0,''),
 (285,57,'init()',NULL,0,0,'',0,0,NULL,1,0,''),
 (286,58,'paint()',NULL,1,0,'',0,0,NULL,1,0,''),
 (287,58,'repaint()',NULL,0,0,'',0,0,NULL,1,0,''),
 (288,58,'start()',NULL,0,0,'',0,0,NULL,1,0,''),
 (289,58,'drawstring()',NULL,0,0,'',0,0,NULL,1,0,''),
 (290,58,'destroy()',NULL,0,0,'',0,0,NULL,1,0,''),
 (291,59,'i, ii and iii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (292,59,'ii, iii and iv only',NULL,0,0,'',0,0,NULL,1,0,''),
 (293,59,'i, ii and iv only',NULL,1,0,'',0,0,NULL,1,0,''),
 (294,59,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (295,59,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (296,60,'< EDIT>',NULL,0,0,'',0,0,NULL,1,0,''),
 (297,60,'< APPLET>',NULL,0,0,'',0,0,NULL,1,0,''),
 (298,60,'< PARAM>',NULL,1,0,'',0,0,NULL,1,0,''),
 (299,60,'< CHANGE>',NULL,0,0,'',0,0,NULL,1,0,''),
 (300,60,'< REPLACE>',NULL,0,0,'',0,0,NULL,1,0,''),
 (301,61,'.java',NULL,0,0,'',0,0,NULL,1,0,''),
 (302,61,'.class',NULL,1,0,'',0,0,NULL,1,0,''),
 (303,61,'.exe',NULL,0,0,'',0,0,NULL,1,0,''),
 (304,61,'.javac',NULL,0,0,'',0,0,NULL,1,0,''),
 (305,61,'.byte',NULL,0,0,'',0,0,NULL,1,0,''),
 (306,62,'25-05-1995',NULL,0,0,'',0,0,NULL,1,0,''),
 (307,62,'26-05-1995',NULL,0,0,'',0,0,NULL,1,0,''),
 (308,62,'27-05-1995',NULL,1,0,'',0,0,NULL,1,0,''),
 (309,62,'28-05-1995',NULL,0,0,'',0,0,NULL,1,0,''),
 (310,62,'29-05-1995',NULL,0,0,'',0,0,NULL,1,0,''),
 (311,63,'int',NULL,0,0,'',0,0,NULL,1,0,''),
 (312,63,'long',NULL,0,0,'',0,0,NULL,1,0,''),
 (313,63,'short',NULL,0,0,'',0,0,NULL,1,0,''),
 (314,63,'short int',NULL,0,0,'',0,0,NULL,1,0,''),
 (315,63,'byte',NULL,1,0,'',0,0,NULL,1,0,''),
 (316,64,'variables',NULL,0,0,'',0,0,NULL,1,0,''),
 (317,64,'Identifiers',NULL,1,0,'',0,0,NULL,1,0,''),
 (318,64,'Data modifiers',NULL,0,0,'',0,0,NULL,1,0,''),
 (319,64,'Access Modifier',NULL,0,0,'',0,0,NULL,1,0,''),
 (320,64,'static',NULL,0,0,'',0,0,NULL,1,0,''),
 (321,65,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (322,65,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (323,65,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (324,65,'All the above',NULL,1,0,'',0,0,NULL,1,0,''),
 (325,65,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (326,66,'-128 to 128',NULL,0,0,'',0,0,NULL,1,0,''),
 (327,66,'-128 to 127',NULL,1,0,'',0,0,NULL,1,0,''),
 (328,66,'-127 to 128',NULL,0,0,'',0,0,NULL,1,0,''),
 (329,66,'-127 to 127',NULL,0,0,'',0,0,NULL,1,0,''),
 (330,66,'0 to 255',NULL,0,0,'',0,0,NULL,1,0,''),
 (331,67,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (332,67,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (333,67,'Garbage',NULL,0,0,'',0,0,NULL,1,0,''),
 (334,67,'Compile Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (335,67,'Runtime error',NULL,0,0,'',0,0,NULL,1,0,''),
 (336,68,'byte',NULL,0,0,'',0,0,NULL,1,0,''),
 (337,68,'Boolean',NULL,0,0,'',0,0,NULL,1,0,''),
 (338,68,'int',NULL,0,0,'',0,0,NULL,1,0,''),
 (339,68,'long',NULL,1,0,'',0,0,NULL,1,0,''),
 (340,68,'long int',NULL,0,0,'',0,0,NULL,1,0,''),
 (341,69,'Bytecode is executed by JVM',NULL,1,0,'',0,0,NULL,1,0,''),
 (342,69,'The applet makes the Java code secure and portable',NULL,0,0,'',0,0,NULL,1,0,''),
 (343,69,'Use of exception handling',NULL,0,0,'',0,0,NULL,1,0,''),
 (344,69,'Dynamic binding between objects',NULL,0,0,'',0,0,NULL,1,0,''),
 (345,69,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (346,70,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (347,70,'Compile Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (348,70,'Infinity',NULL,1,0,'',0,0,NULL,1,0,''),
 (349,70,'Runtime error',NULL,0,0,'',0,0,NULL,1,0,''),
 (350,70,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (351,71,'int',NULL,0,0,'',0,0,NULL,1,0,''),
 (352,71,'float',NULL,0,0,'',0,0,NULL,1,0,''),
 (353,71,'long',NULL,0,0,'',0,0,NULL,1,0,''),
 (354,71,'double',NULL,1,0,'',0,0,NULL,1,0,''),
 (355,71,'long int',NULL,0,0,'',0,0,NULL,1,0,''),
 (356,72,'serialization',NULL,0,0,'',0,0,NULL,1,0,''),
 (357,72,'variable shadowing',NULL,1,0,'',0,0,NULL,1,0,''),
 (358,72,'abstraction',NULL,0,0,'',0,0,NULL,1,0,''),
 (359,72,'multi threading',NULL,0,0,'',0,0,NULL,1,0,''),
 (360,72,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (361,73,'0x99fffa',NULL,0,0,'',0,0,NULL,1,0,''),
 (362,73,'0x99fffL',NULL,1,0,'',0,0,NULL,1,0,''),
 (363,73,'ABCDEFG',NULL,0,0,'',0,0,NULL,1,0,''),
 (364,73,'99671246',NULL,0,0,'',0,0,NULL,1,0,''),
 (365,73,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (366,74,'file',NULL,0,0,'',0,0,NULL,1,0,''),
 (367,74,'class',NULL,0,0,'',0,0,NULL,1,0,''),
 (368,74,'interface',NULL,0,0,'',0,0,NULL,1,0,''),
 (369,74,'main',NULL,0,0,'',0,0,NULL,1,0,''),
 (370,74,'both b and c',NULL,1,0,'',0,0,NULL,1,0,''),
 (371,75,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (372,75,'B only',NULL,1,0,'',0,0,NULL,1,0,''),
 (373,75,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (374,75,'A and B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (375,75,'A and C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (376,76,'A and B only',NULL,1,0,'',0,0,NULL,1,0,''),
 (377,76,'B and C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (378,76,'A and C ony',NULL,0,0,'',0,0,NULL,1,0,''),
 (379,76,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (380,76,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (381,77,'struct',NULL,0,0,'',0,0,NULL,1,0,''),
 (382,77,'final',NULL,0,0,'',0,0,NULL,1,0,''),
 (383,77,'default',NULL,0,0,'',0,0,NULL,1,0,''),
 (384,77,'static',NULL,1,0,'',0,0,NULL,1,0,''),
 (385,77,'throw',NULL,0,0,'',0,0,NULL,1,0,''),
 (386,78,'a-z, A-Z',NULL,0,0,'',0,0,NULL,1,0,''),
 (387,78,'$, _',NULL,0,0,'',0,0,NULL,1,0,''),
 (388,78,'0 - 9',NULL,0,0,'',0,0,NULL,1,0,''),
 (389,78,'both a and b',NULL,1,0,'',0,0,NULL,1,0,''),
 (390,78,'both a and c',NULL,0,0,'',0,0,NULL,1,0,''),
 (391,79,'int',NULL,0,0,'',0,0,NULL,1,0,''),
 (392,79,'float',NULL,0,0,'',0,0,NULL,1,0,''),
 (393,79,'long',NULL,0,0,'',0,0,NULL,1,0,''),
 (394,79,'Boolean',NULL,0,0,'',0,0,NULL,1,0,''),
 (395,79,'None of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (396,80,'super',NULL,0,0,'',0,0,NULL,1,0,''),
 (397,80,'this',NULL,0,0,'',0,0,NULL,1,0,''),
 (398,80,'goto',NULL,1,0,'',0,0,NULL,1,0,''),
 (399,80,'new',NULL,0,0,'',0,0,NULL,1,0,''),
 (400,80,'final',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1189 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,3,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,3,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,3,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,3,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,3,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,3,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,3,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,3,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,3,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,3,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,3,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,3,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,3,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,3,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,3,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,3,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,3,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,3,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,3,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,3,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,3,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,3,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,3,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,3,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,3,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,3,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,3,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,3,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,3,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,3,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,3,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,3,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,3,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,3,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,3,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,3,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,3,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,3,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,3,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,3,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,3,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,3,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,3,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,3,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,3,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,3,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,3,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,3,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,3,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,3,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,3,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,3,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,3,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,3,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,3,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,3,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,3,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,3,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,3,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,3,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,3,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,3,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,3,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,3,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,3,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,3,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,3,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,3,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,3,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,3,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,3,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,3,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,3,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,3,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,3,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,4,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,4,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,4,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,4,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,4,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,4,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,4,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,4,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,4,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,4,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,4,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,4,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,4,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,4,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,4,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,4,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,4,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,4,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,4,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,4,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,4,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,4,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,4,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,4,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,4,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,4,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,4,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,4,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,4,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,4,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,4,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,4,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,4,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,4,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,4,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,4,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,4,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,4,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,4,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,4,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,4,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,4,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,4,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,4,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,4,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,4,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,4,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,4,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,4,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,4,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,4,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,4,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,4,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,4,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,4,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,4,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,4,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,4,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,4,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,4,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,4,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,4,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,4,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,4,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,4,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,4,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,4,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,4,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,4,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,4,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,4,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,4,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,4,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,4,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,4,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,5,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,5,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,5,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,5,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,5,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,5,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,5,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,5,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,5,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,5,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (311,5,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (312,5,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (313,5,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (314,5,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (315,5,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (316,5,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (317,5,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (318,5,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (319,5,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (320,5,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (321,5,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (322,5,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (323,5,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (324,5,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (325,5,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (326,5,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (327,5,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (328,5,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (329,5,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (330,5,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (331,5,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (332,5,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (333,5,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (334,5,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (335,5,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (336,5,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (337,5,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (338,5,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (339,5,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (340,5,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (341,5,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (342,5,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (343,5,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (344,5,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (345,5,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (346,5,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (347,5,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (348,5,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (349,5,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (350,5,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (351,5,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (352,5,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (353,5,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (354,5,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (355,5,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (356,5,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (357,5,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (358,5,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (359,5,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (360,5,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (361,5,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (362,5,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (363,5,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (364,5,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (365,5,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (366,5,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (367,5,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (368,5,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (369,5,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (370,5,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (371,5,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (372,5,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (373,5,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (374,5,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (375,5,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (376,5,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (377,5,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (378,5,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (379,5,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (380,5,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (381,5,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (382,5,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (383,5,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (384,5,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (385,5,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (386,5,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (387,5,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (388,5,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (389,5,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (390,5,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (391,5,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (392,5,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (393,5,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (394,5,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (395,5,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (396,5,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (397,5,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (398,5,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (399,5,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (400,5,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (401,5,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (402,5,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (403,5,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (404,5,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (405,5,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (406,5,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (407,5,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (408,5,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (409,5,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (410,5,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (411,5,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (412,5,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (413,5,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (414,5,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (415,5,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (416,5,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (417,5,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (418,5,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (419,5,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (420,5,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (421,5,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (422,5,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (423,5,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (424,5,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (425,5,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (426,5,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (427,5,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (428,5,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (429,5,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (430,5,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (431,5,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (432,5,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (433,5,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (434,5,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (435,5,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (436,5,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (437,5,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (438,5,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (439,5,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (440,5,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (441,5,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (442,5,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (443,5,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (444,5,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (445,5,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (446,5,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (447,5,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (448,5,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (449,5,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (450,5,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (451,5,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (452,5,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (453,5,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (454,5,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (455,5,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (456,5,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (457,5,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (458,5,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (459,5,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (460,5,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (461,5,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (462,5,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (463,5,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (464,5,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (465,5,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (466,5,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (467,5,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (468,5,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (469,5,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (470,5,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (471,5,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (472,5,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (473,5,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (474,5,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (475,5,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (476,5,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (477,5,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (478,5,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (479,5,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (480,5,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (481,5,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (482,5,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (483,5,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (484,5,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (485,5,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (486,5,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (487,5,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (488,5,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (489,5,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (490,5,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (491,5,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (492,5,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (493,5,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (494,5,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (495,5,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (496,5,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (497,5,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (498,5,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (499,5,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (500,5,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (501,5,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (502,5,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (503,5,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (504,5,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (505,5,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (506,5,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (507,5,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (508,5,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (509,5,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (510,5,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (511,5,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (512,5,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (513,5,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (514,5,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (515,5,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (516,5,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (517,5,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (518,5,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (519,5,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (520,5,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (521,5,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (522,5,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (523,6,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (524,6,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (525,6,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (526,6,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (527,6,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (528,6,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (529,6,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (530,6,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (531,6,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (532,6,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (533,6,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (534,6,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (535,6,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (536,6,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (537,6,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (538,6,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (539,6,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (540,6,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (541,6,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (542,6,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (543,6,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (544,6,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (545,6,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (546,6,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (547,6,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (548,6,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (549,6,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (550,6,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (551,6,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (552,6,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (553,6,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (554,6,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (555,6,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (556,6,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (557,6,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (558,6,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (559,6,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (560,6,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (561,6,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (562,6,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (563,6,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (564,6,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (565,6,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (566,6,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (567,6,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (568,6,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (569,6,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (570,6,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (571,6,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (572,6,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (573,6,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (574,6,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (575,6,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (576,6,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (577,6,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (578,6,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (579,6,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (580,6,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (581,6,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (582,6,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (583,6,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (584,6,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (585,6,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (586,6,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (587,6,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (588,6,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (589,6,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (590,6,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (591,6,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (592,6,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (593,6,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (594,6,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (595,6,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (596,6,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (597,6,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (598,6,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (599,6,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (600,6,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (601,6,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (602,6,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (603,6,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (604,6,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (605,6,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (606,6,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (607,6,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (608,6,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (609,6,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (610,6,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (611,6,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (612,6,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (613,6,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (614,6,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (615,6,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (616,6,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (617,6,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (618,6,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (619,6,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (620,6,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (621,6,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (622,6,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (623,6,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (624,6,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (625,6,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (626,6,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (627,6,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (628,6,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (629,6,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (630,6,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (631,6,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (632,6,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (633,6,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (634,6,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (635,6,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (636,6,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (637,6,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (638,6,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (639,6,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (640,6,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (641,6,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (642,6,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (643,6,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (644,6,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (645,6,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (646,6,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (647,6,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (648,6,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (649,6,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (650,6,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (651,6,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (652,6,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (653,6,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (654,6,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (655,6,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (656,6,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (657,6,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (658,6,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (659,6,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (660,6,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (661,6,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (662,6,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (663,6,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (664,6,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (665,6,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (666,6,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (667,6,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (668,6,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (669,6,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (670,6,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (671,6,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (672,6,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (673,6,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (674,6,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (675,6,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (676,6,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (677,6,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (678,6,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (679,6,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (680,6,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (681,6,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (682,6,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (683,6,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (684,6,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (685,6,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (686,6,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (687,6,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (688,6,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (689,6,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (690,6,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (691,6,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (692,6,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (693,6,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (694,6,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (695,6,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (696,6,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (697,6,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (698,6,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (699,6,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (700,6,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (701,6,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (702,6,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (703,6,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (704,6,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (705,6,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (706,6,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (707,6,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (708,6,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (709,6,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (710,6,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (711,6,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (712,6,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (713,6,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (714,6,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (715,6,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (716,6,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (717,6,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (718,6,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (719,6,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (720,6,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (721,6,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (722,6,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (723,6,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (724,6,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (725,6,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (726,6,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (727,6,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (728,6,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (729,6,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (730,6,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (731,6,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (732,6,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (733,6,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (734,6,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (735,6,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (736,6,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (737,6,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (738,6,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (739,6,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (740,6,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (741,6,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (742,6,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (743,6,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (744,6,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (745,7,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (746,7,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (747,7,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (748,7,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (749,7,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (750,7,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (751,7,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (752,7,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (753,7,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (754,7,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (755,7,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (756,7,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (757,7,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (758,7,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (759,7,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (760,7,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (761,7,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (762,7,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (763,7,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (764,7,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (765,7,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (766,7,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (767,7,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (768,7,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (769,7,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (770,7,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (771,7,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (772,7,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (773,7,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (774,7,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (775,7,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (776,7,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (777,7,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (778,7,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (779,7,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (780,7,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (781,7,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (782,7,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (783,7,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (784,7,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (785,7,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (786,7,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (787,7,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (788,7,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (789,7,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (790,7,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (791,7,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (792,7,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (793,7,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (794,7,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (795,7,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (796,7,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (797,7,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (798,7,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (799,7,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (800,7,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (801,7,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (802,7,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (803,7,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (804,7,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (805,7,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (806,7,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (807,7,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (808,7,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (809,7,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (810,7,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (811,7,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (812,7,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (813,7,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (814,7,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (815,7,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (816,7,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (817,7,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (818,7,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (819,7,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (820,7,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (821,7,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (822,7,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (823,7,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (824,7,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (825,7,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (826,7,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (827,7,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (828,7,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (829,7,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (830,7,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (831,7,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (832,7,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (833,7,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (834,7,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (835,7,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (836,7,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (837,7,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (838,7,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (839,7,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (840,7,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (841,7,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (842,7,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (843,7,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (844,7,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (845,7,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (846,7,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (847,7,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (848,7,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (849,7,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (850,7,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (851,7,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (852,7,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (853,7,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (854,7,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (855,7,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (856,7,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (857,7,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (858,7,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (859,7,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (860,7,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (861,7,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (862,7,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (863,7,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (864,7,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (865,7,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (866,7,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (867,7,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (868,7,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (869,7,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (870,7,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (871,7,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (872,7,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (873,7,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (874,7,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (875,7,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (876,7,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (877,7,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (878,7,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (879,7,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (880,7,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (881,7,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (882,7,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (883,7,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (884,7,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (885,7,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (886,7,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (887,7,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (888,7,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (889,7,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (890,7,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (891,7,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (892,7,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (893,7,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (894,7,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (895,7,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (896,7,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (897,7,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (898,7,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (899,7,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (900,7,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (901,7,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (902,7,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (903,7,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (904,7,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (905,7,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (906,7,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (907,7,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (908,7,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (909,7,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (910,7,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (911,7,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (912,7,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (913,7,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (914,7,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (915,7,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (916,7,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (917,7,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (918,7,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (919,7,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (920,7,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (921,7,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (922,7,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (923,7,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (924,7,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (925,7,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (926,7,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (927,7,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (928,7,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (929,7,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (930,7,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (931,7,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (932,7,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (933,7,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (934,7,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (935,7,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (936,7,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (937,7,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (938,7,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (939,7,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (940,7,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (941,7,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (942,7,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (943,7,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (944,7,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (945,7,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (946,7,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (947,7,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (948,7,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (949,7,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (950,7,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (951,7,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (952,7,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (953,7,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (954,7,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (955,7,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (956,7,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (957,7,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (958,7,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (959,7,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (960,7,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (961,7,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (962,7,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (963,7,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (964,7,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (965,7,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (966,7,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (967,8,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (968,8,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (969,8,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (970,8,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (971,8,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (972,8,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (973,8,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (974,8,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (975,8,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (976,8,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (977,8,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (978,8,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (979,8,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (980,8,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (981,8,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (982,8,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (983,8,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (984,8,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (985,8,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (986,8,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (987,8,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (988,8,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (989,8,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (990,8,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (991,8,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (992,8,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (993,8,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (994,8,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (995,8,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (996,8,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (997,8,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (998,8,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (999,8,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1000,8,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1001,8,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1002,8,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1003,8,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1004,8,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1005,8,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1006,8,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1007,8,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1008,8,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1009,8,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1010,8,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1011,8,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1012,8,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1013,8,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1014,8,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1015,8,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1016,8,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1017,8,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1018,8,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1019,8,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1020,8,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1021,8,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1022,8,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1023,8,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1024,8,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1025,8,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1026,8,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1027,8,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1028,8,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1029,8,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1030,8,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1031,8,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1032,8,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1033,8,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1034,8,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1035,8,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1036,8,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1037,8,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1038,8,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1039,8,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1040,8,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1041,8,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1042,8,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1043,8,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1044,8,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1045,8,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1046,8,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1047,8,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1048,8,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1049,8,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1050,8,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1051,8,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1052,8,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1053,8,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1054,8,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1055,8,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1056,8,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1057,8,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1058,8,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1059,8,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1060,8,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1061,8,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1062,8,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1063,8,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1064,8,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1065,8,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1066,8,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1067,8,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1068,8,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1069,8,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1070,8,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1071,8,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1072,8,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1073,8,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1074,8,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1075,8,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1076,8,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1077,8,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1078,8,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1079,8,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1080,8,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1081,8,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1082,8,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1083,8,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1084,8,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1085,8,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1086,8,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1087,8,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1088,8,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1089,8,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1090,8,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1091,8,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1092,8,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1093,8,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1094,8,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1095,8,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1096,8,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1097,8,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1098,8,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1099,8,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1100,8,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1101,8,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1102,8,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1103,8,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1104,8,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1105,8,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1106,8,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1107,8,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1108,8,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1109,8,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1110,8,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1111,8,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1112,8,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1113,8,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1114,8,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1115,8,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1116,8,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1117,8,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1118,8,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1119,8,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1120,8,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1121,8,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1122,8,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1123,8,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1124,8,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1125,8,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1126,8,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1127,8,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1128,8,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1129,8,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1130,8,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1131,8,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1132,8,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1133,8,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1134,8,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1135,8,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1136,8,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1137,8,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1138,8,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1139,8,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1140,8,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1141,8,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1142,8,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1143,8,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1144,8,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1145,8,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1146,8,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1147,8,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1148,8,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1149,8,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1150,8,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1151,8,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1152,8,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1153,8,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1154,8,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1155,8,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1156,8,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1157,8,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1158,8,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1159,8,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1160,8,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1161,8,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1162,8,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1163,8,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1164,8,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1165,8,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1166,8,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1167,8,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1168,8,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1169,8,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1170,8,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1171,8,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1172,8,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1173,8,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1174,8,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1175,8,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1176,8,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1177,8,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1178,8,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1179,8,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1180,8,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1181,8,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1182,8,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1183,8,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1184,8,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1185,8,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1186,8,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1187,8,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1188,8,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-07-14 18:34:39',60,1,'20.00',1,0),
 (2,2,2,1,'2024-07-14 18:34:39',60,1,'20.00',1,0),
 (3,3,3,1,'2024-07-14 18:34:40',60,1,'20.00',1,0),
 (4,4,4,1,'2024-07-14 18:34:40',60,1,'20.00',1,0),
 (5,1,1,1,'2024-07-14 18:34:41',60,1,'20.00',1,0),
 (6,2,2,1,'2024-07-14 18:34:42',60,1,'20.00',1,0),
 (7,3,3,1,'2024-07-14 18:34:43',60,1,'20.00',1,0),
 (8,4,4,1,'2024-07-14 18:34:44',60,1,'20.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #012'),
 (2,'Assessment Test #013'),
 (3,'Assessment Test #014'),
 (4,'Assessment Test #015');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-07-14 18:34:36'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-07-14 18:34:36'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-07-14 18:34:36'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-07-14 18:34:36'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-07-14 18:34:36'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-07-14 18:34:36'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-07-14 18:34:36'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-07-14 18:34:36'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-07-14 18:34:36'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-07-14 18:34:36'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-07-14 18:34:36'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-07-14 18:34:36'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-07-14 18:34:36'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-07-14 18:34:36'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-07-14 18:34:36'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-07-14 18:34:36'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-07-14 18:34:36'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-07-14 18:34:36'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-07-14 18:34:36'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-07-14 18:34:36'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-07-14 18:34:37'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-07-14 18:34:37'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-07-14 18:34:37'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-07-14 18:34:37'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-07-14 18:34:37'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-07-14 18:34:37'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-07-14 18:34:37'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-07-14 18:34:37'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-07-14 18:34:37'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-07-14 18:34:37'),
 (31,'',0,'0',NULL,NULL,31,0,NULL,'2024-07-14 18:34:37'),
 (32,'',0,'0',NULL,NULL,32,0,NULL,'2024-07-14 18:34:37'),
 (33,'',0,'0',NULL,NULL,33,0,NULL,'2024-07-14 18:34:37'),
 (34,'',0,'0',NULL,NULL,34,0,NULL,'2024-07-14 18:34:37'),
 (35,'',0,'0',NULL,NULL,35,0,NULL,'2024-07-14 18:34:37'),
 (36,'',0,'0',NULL,NULL,36,0,NULL,'2024-07-14 18:34:37'),
 (37,'',0,'0',NULL,NULL,37,0,NULL,'2024-07-14 18:34:37'),
 (38,'',0,'0',NULL,NULL,38,0,NULL,'2024-07-14 18:34:37'),
 (39,'',0,'0',NULL,NULL,39,0,NULL,'2024-07-14 18:34:37'),
 (40,'',0,'0',NULL,NULL,40,0,NULL,'2024-07-14 18:34:37'),
 (41,'',0,'0',NULL,NULL,41,0,NULL,'2024-07-14 18:34:37'),
 (42,'',0,'0',NULL,NULL,42,0,NULL,'2024-07-14 18:34:37'),
 (43,'',0,'0',NULL,NULL,43,0,NULL,'2024-07-14 18:34:37'),
 (44,'',0,'0',NULL,NULL,44,0,NULL,'2024-07-14 18:34:37'),
 (45,'',0,'0',NULL,NULL,45,0,NULL,'2024-07-14 18:34:37'),
 (46,'',0,'0',NULL,NULL,46,0,NULL,'2024-07-14 18:34:38'),
 (47,'',0,'0',NULL,NULL,47,0,NULL,'2024-07-14 18:34:38'),
 (48,'',0,'0',NULL,NULL,48,0,NULL,'2024-07-14 18:34:38'),
 (49,'',0,'0',NULL,NULL,49,0,NULL,'2024-07-14 18:34:38'),
 (50,'',0,'0',NULL,NULL,50,0,NULL,'2024-07-14 18:34:38'),
 (51,'',0,'0',NULL,NULL,51,0,NULL,'2024-07-14 18:34:38'),
 (52,'',0,'0',NULL,NULL,52,0,NULL,'2024-07-14 18:34:38'),
 (53,'',0,'0',NULL,NULL,53,0,NULL,'2024-07-14 18:34:38'),
 (54,'',0,'0',NULL,NULL,54,0,NULL,'2024-07-14 18:34:38'),
 (55,'',0,'0',NULL,NULL,55,0,NULL,'2024-07-14 18:34:38'),
 (56,'',0,'0',NULL,NULL,56,0,NULL,'2024-07-14 18:34:38'),
 (57,'',0,'0',NULL,NULL,57,0,NULL,'2024-07-14 18:34:38'),
 (58,'',0,'0',NULL,NULL,58,0,NULL,'2024-07-14 18:34:38'),
 (59,'',0,'0',NULL,NULL,59,0,NULL,'2024-07-14 18:34:38'),
 (60,'',0,'0',NULL,NULL,60,0,NULL,'2024-07-14 18:34:38'),
 (61,'',0,'0',NULL,NULL,61,0,NULL,'2024-07-14 18:34:38'),
 (62,'',0,'0',NULL,NULL,62,0,NULL,'2024-07-14 18:34:38'),
 (63,'',0,'0',NULL,NULL,63,0,NULL,'2024-07-14 18:34:38'),
 (64,'',0,'0',NULL,NULL,64,0,NULL,'2024-07-14 18:34:38'),
 (65,'',0,'0',NULL,NULL,65,0,NULL,'2024-07-14 18:34:38'),
 (66,'',0,'0',NULL,NULL,66,0,NULL,'2024-07-14 18:34:38'),
 (67,'',0,'0',NULL,NULL,67,0,NULL,'2024-07-14 18:34:38'),
 (68,'',0,'0',NULL,NULL,68,0,NULL,'2024-07-14 18:34:38'),
 (69,'',0,'0',NULL,NULL,69,0,NULL,'2024-07-14 18:34:38'),
 (70,'',0,'0',NULL,NULL,70,0,NULL,'2024-07-14 18:34:38'),
 (71,'',0,'0',NULL,NULL,71,0,NULL,'2024-07-14 18:34:38'),
 (72,'',0,'0',NULL,NULL,72,0,NULL,'2024-07-14 18:34:38'),
 (73,'',0,'0',NULL,NULL,73,0,NULL,'2024-07-14 18:34:38'),
 (74,'',0,'0',NULL,NULL,74,0,NULL,'2024-07-14 18:34:38'),
 (75,'',0,'0',NULL,NULL,75,0,NULL,'2024-07-14 18:34:38'),
 (76,'',0,'0',NULL,NULL,76,0,NULL,'2024-07-14 18:34:38'),
 (77,'',0,'0',NULL,NULL,77,0,NULL,'2024-07-14 18:34:38'),
 (78,'',0,'0',NULL,NULL,78,0,NULL,'2024-07-14 18:34:38'),
 (79,'',0,'0',NULL,NULL,79,0,NULL,'2024-07-14 18:34:38'),
 (80,'',0,'0',NULL,NULL,80,0,NULL,'2024-07-14 18:34:38');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The class at the top of exception class hierarchy is _________.</div>\n',1,1,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Exception generated in try block is caught in ________ block.</div>\n',1,2,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In which of the following package Exception class exist?</div>\n',1,3,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which keyword is used to explicitly throw an exception?</div>\n',1,4,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which exception is thrown when divide by zero statement executes?</div>\n',1,5,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following blocks execute compulsorily whether exception is caught or not.</div>\n',1,6,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which keyword is used to specify the exception thrown by method?</div>\n',1,7,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"font-weight:bold;\">What happen in case of multiple catch blocks?</div>\n<div style=\"font-weight:bold;\">A. Either super or subclass can be caught first.</div>\n<div style=\"font-weight:bold;\">B. The superclass exception must be caught first.</div>\n<div style=\"font-weight:bold;\">C. The superclass exception cannot caught first.</div>\n',1,8,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"font-weight:bold;\">What is the output of the following program code?</div>\n<div style=\"font-weight:bold;\">public class Test{</div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">try{</div>\n<div style=\"font-weight:bold;\">int i;</div>\n<div style=\"font-weight:bold;\">return;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">catch(Exception e){</div>\n<div style=\"font-weight:bold;\">System.out.print(\"inCatchBlock\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">finally{</div>\n<div style=\"font-weight:bold;\">System.out.println(\"inFinallyBlock\");</div>\n<div style=\"font-weight:bold;\">}        }     }</div>\n',1,9,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"font-weight:bold;\">Given the following piece of code:</div>\n<div style=\"font-weight:bold;\">class SalaryCalculationException extends Exception{}</div>\n<div style=\"font-weight:bold;\">class Person{</div>\n<div style=\"font-weight:bold;\">public void calculateSalary() throws SalaryCalculationException{</div>\n<div style=\"font-weight:bold;\">//...</div>\n<div style=\"font-weight:bold;\">throw new SalaryCalculationException();</div>\n<div style=\"font-weight:bold;\">//...</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">class Company{</div>\n<div style=\"font-weight:bold;\">public void paySalaries(){</div>\n<div style=\"font-weight:bold;\">new Person().calculateSalary();</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">Which of the following statements is correct?</div>\n<div style=\"font-weight:bold;\">1. This code will compile without any problems.</div>\n<div style=\"font-weight:bold;\">2. This code will compile if in method paySalaries() we return a boolean in stead of void.</div>\n<div style=\"font-weight:bold;\">3. This code will compile if we add a try-catch block in paySalaries().</div>\n<div style=\"font-weight:bold;\">4. This code will compile if we add throws SalaryCalculationException in the signature of method paySalaries().</div>\n',1,10,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div style=\"font-weight:bold;\">Which exception is thrown when an array element is accessed beyond the array size?</div>\n<div style=\"font-weight:bold;\">A. ArrayElementOutOfBounds</div>\n<div style=\"font-weight:bold;\">B. ArrayIndexOutOfBoundsException </div>\n<div style=\"font-weight:bold;\">C. ArrayIndexOutOfBounds</div>\n',1,11,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div style=\"font-weight:bold;\">What will be the output of the following piece of code?</div>\n<div style=\"font-weight:bold;\">class Person{</div>\n<div style=\"font-weight:bold;\">public void talk() {}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">public class Test{</div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">Person p = null;</div>\n<div style=\"font-weight:bold;\">try{</div>\n<div style=\"font-weight:bold;\">p.talk();</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">catch(NullPointerException e){</div>\n<div style=\"font-weight:bold;\">System.out.print(\"There is a NullPointerException. \");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">catch(Exception e){</div>\n<div style=\"font-weight:bold;\">System.out.print(\"There is an Exception. \");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">System.out.print(\"Everything went fine. \");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,12,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div style=\"font-weight:bold;\">What will be the result if NullPointerException occurs at line 2?</div>\n<div style=\"font-weight:bold;\">1.  try{</div>\n<div style=\"font-weight:bold;\">2.       //some code goes here</div>\n<div style=\"font-weight:bold;\">3.  }</div>\n<div style=\"font-weight:bold;\">4.  catch(NullPointerException ne){</div>\n<div style=\"font-weight:bold;\">5.       System.out.print(\"1 \");</div>\n<div style=\"font-weight:bold;\">6.  }</div>\n<div style=\"font-weight:bold;\">7.  catch(RuntimeException re){</div>\n<div style=\"font-weight:bold;\">8.       System.out.print(\"2 \");</div>\n<div style=\"font-weight:bold;\">9.  }</div>\n<div style=\"font-weight:bold;\">10. finally{</div>\n<div style=\"font-weight:bold;\">11.      System.out.print(\"3\");</div>\n<div style=\"font-weight:bold;\">12. }</div>\n',1,13,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div style=\"font-weight:bold;\">public class Test{</div>\n<div style=\"font-weight:bold;\">      public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">            try{</div>\n<div style=\"font-weight:bold;\">                  int a = Integer.parseInt(\"four\");</div>\n<div style=\"font-weight:bold;\">            }</div>\n<div style=\"font-weight:bold;\">      }</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">Which exception could be handled by the catch block for above?</div>\n',1,14,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div style=\"font-weight:bold;\">Which of the below statement is/are true about Error?</div>\n<div style=\"font-weight:bold;\">A. An Error is a subclass of Throwable.</div>\n<div style=\"font-weight:bold;\">B. An Error is a subclass of Exception.</div>\n<div style=\"font-weight:bold;\">C. Error indicates serious problems that a reasonable application should not try to catch.</div>\n<div style=\"font-weight:bold;\">D. An Error is a subclass of IOException.</div>\n',1,15,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div style=\"font-weight:bold;\">Determine output of the following program code?</div>\n<div style=\"font-weight:bold;\">public class Test{</div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">int i;</div>\n<div style=\"font-weight:bold;\">try{</div>\n<div style=\"font-weight:bold;\">i = calculate();</div>\n<div style=\"font-weight:bold;\">System.out.println(i);</div>\n<div style=\"font-weight:bold;\">}catch(Exception e){</div>\n<div style=\"font-weight:bold;\">System.out.println(\"Error occured\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">static int calculate(){</div>\n<div style=\"font-weight:bold;\">return (7/2);</div>\n<div style=\"font-weight:bold;\">}  }</div>\n',1,16,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div style=\"font-weight:bold;\">Predict the output:</div>\n<div style=\"font-weight:bold;\">public class Test{     </div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">try{</div>\n<div style=\"font-weight:bold;\">String arr[] = new String[10];</div>\n<div style=\"font-weight:bold;\">arr = null;</div>\n<div style=\"font-weight:bold;\">arr[0] = \"one\";</div>\n<div style=\"font-weight:bold;\">System.out.print(arr[0]);</div>\n<div style=\"font-weight:bold;\">}catch(Exception ex){</div>\n<div style=\"font-weight:bold;\">System.out.print(\"exception\");</div>\n<div style=\"font-weight:bold;\">}catch(NullPointerException nex){</div>\n<div style=\"font-weight:bold;\">System.out.print(\"null pointer exception\");</div>\n<div style=\"font-weight:bold;\">}   }  }</div>\n',1,17,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div style=\"font-weight:bold;\">Given the code. What is the result when this program is executed?</div>\n<div style=\"font-weight:bold;\">public class Test{</div>\n<div style=\"font-weight:bold;\">static int x[];</div>\n<div style=\"font-weight:bold;\">static{</div>\n<div style=\"font-weight:bold;\">x[0] = 1;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">}}</div>\n<div style=\"font-weight:bold;\">A. ArrayIndexOutOfBoundsException is thrown</div>\n<div style=\"font-weight:bold;\">B. ExceptionInInitializerError is thrown</div>\n<div style=\"font-weight:bold;\">C. IllegalStateException is thrown</div>\n<div style=\"font-weight:bold;\">D. StackOverflowException is thrown</div>\n',1,18,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div style=\"font-weight:bold;\">What will be the output?</div>\n<div style=\"font-weight:bold;\">class MyClass{</div>\n<div style=\"font-weight:bold;\">public String test(){</div>\n<div style=\"font-weight:bold;\">try{</div>\n<div style=\"font-weight:bold;\">System.out.print(\"Hi\");</div>\n<div style=\"font-weight:bold;\">return \"\";</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">finally{</div>\n<div style=\"font-weight:bold;\">System.out.print(\"Hello\");</div>\n<div style=\"font-weight:bold;\">}      }</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">public class Test{</div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">MyClass m =  new MyClass();</div>\n<div style=\"font-weight:bold;\">m.test();</div>\n<div style=\"font-weight:bold;\">}   }</div>\n',1,19,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div style=\"font-weight:bold;\">What will be the result of executing the following code?</div>\n<div style=\"font-weight:bold;\">public class Test{</div>\n<div style=\"font-weight:bold;\">public void divide(int a, int b){</div>\n<div style=\"font-weight:bold;\">try{</div>\n<div style=\"font-weight:bold;\">int c = a / b;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">catch(Exception e){</div>\n<div style=\"font-weight:bold;\">System.out.print(\"Exception \");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">finally{</div>\n<div style=\"font-weight:bold;\">System.out.println(\"Finally\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">Test t = new Test();</div>\n<div style=\"font-weight:bold;\">t.divide(0,3);</div>\n<div style=\"font-weight:bold;\">}   }</div>\n',1,20,1,'1','2024-07-14 18:34:36',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of this method can be used to make the main thread to be executed last among all the threads?</div>\n',1,1,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of this method is used to find out that a thread is still running or not?</div>\n',1,2,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the method is used to explicitly set the priority of a thread?</div>\n',1,3,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following will ensure the thread will be in running state?</div>\n',1,4,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the following Java program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	class newthread extends Thread {</div>\r\n<div style=\"font-weight:bold;\">\r\n	Thread t;</div>\r\n<div style=\"font-weight:bold;\">\r\n	String name;</div>\r\n<div style=\"font-weight:bold;\">\r\n	newthread(String threadname) {</div>\r\n<div style=\"font-weight:bold;\">\r\n	name = threadname;</div>\r\n<div style=\"font-weight:bold;\">\r\n	t = new Thread(this,name);</div>\r\n<div style=\"font-weight:bold;\">\r\n	t.start(); }</div>\r\n<div style=\"font-weight:bold;\">\r\n	public void run( ) { }</div>\r\n<div style=\"font-weight:bold;\">\r\n	&nbsp;}</div>\r\n<div style=\"font-weight:bold;\">\r\n	class multithreaded_programing {</div>\r\n<div style=\"font-weight:bold;\">\r\n	public static void main(String args[]) {</div>\r\n<div style=\"font-weight:bold;\">\r\n	newthread obj1 = new newthread(&quot;one&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	newthread obj2 = new newthread(&quot;two&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	try{ obj1.t.wait();</div>\r\n<div style=\"font-weight:bold;\">\r\n	System.out.print(obj1.t.isAlive()); }</div>\r\n<div style=\"font-weight:bold;\">\r\n	catch(Exception e)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{ System.out.print(&quot;Main thread interrupted&quot;); }</div>\r\n<div style=\"font-weight:bold;\">\r\n	} }</div>',1,5,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the following Java program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	class newthread extends Thread {</div>\r\n<div style=\"font-weight:bold;\">\r\n	Thread t; String name;</div>\r\n<div style=\"font-weight:bold;\">\r\n	newthread(String threadname) {</div>\r\n<div style=\"font-weight:bold;\">\r\n	name = threadname;</div>\r\n<div style=\"font-weight:bold;\">\r\n	t = new Thread(this,name);</div>\r\n<div style=\"font-weight:bold;\">\r\n	t.start(); }</div>\r\n<div style=\"font-weight:bold;\">\r\n	public void run() { }</div>\r\n<div style=\"font-weight:bold;\">\r\n	&nbsp;}</div>\r\n<div style=\"font-weight:bold;\">\r\n	class multithreaded_programing {</div>\r\n<div style=\"font-weight:bold;\">\r\n	public static void main(String args[]) {</div>\r\n<div style=\"font-weight:bold;\">\r\n	newthread obj1 = new newthread(&quot;one&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	newthread obj2 = new newthread(&quot;two&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	System.out.print(obj1.t.equals(obj2.t)); }</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,6,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is a correct constructor for thread?</div>\n',1,7,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div style=\"font-weight:bold;\">To find the error and correct it.</div>\n<div style=\"font-weight:bold;\">class newthread implements Runnable  {</div>\n<div style=\"font-weight:bold;\">	Thread t;</div>\n<div style=\"font-weight:bold;\">	newthread( )  {</div>\n<div style=\"font-weight:bold;\">	    t = new Thread(this,\"My Thread\");</div>\n<div style=\"font-weight:bold;\">	t.start();  }</div>\n<div style=\"font-weight:bold;\">	public void run() {</div>\n<div style=\"font-weight:bold;\">	System.out.println(t.getName());  }</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">    class multithreaded_programing   {</div>\n<div style=\"font-weight:bold;\">        public static void main(String args[])    {</div>\n<div style=\"font-weight:bold;\">            new newthread();  }</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">Output: My Thread</div>\n',1,8,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div style=\"font-weight:bold;\">To debug the code:</div>\n<div style=\"font-weight:bold;\">class newthread implements Runnable  {</div>\n<div style=\"font-weight:bold;\">	Thread t;</div>\n<div style=\"font-weight:bold;\">	newthread( )  {</div>\n<div style=\"font-weight:bold;\">	    t1 = new Thread(this,\"Thread_1\");</div>\n<div style=\"font-weight:bold;\">	    t2 = new Thread(this,\"Thread_2\");</div>\n<div style=\"font-weight:bold;\">	    t1.start( );</div>\n<div style=\"font-weight:bold;\">	    t2.start( ); }</div>\n<div style=\"font-weight:bold;\">	public void run( )    {</div>\n<div style=\"font-weight:bold;\">	    t2.setPriority(Thread.MAX_PRIORITY);	</div>\n<div style=\"font-weight:bold;\">	System.out.print(t1.t2);  }    </div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">    class multithreaded_programing {</div>\n<div style=\"font-weight:bold;\">        public static void main(String args[])</div>\n<div style=\"font-weight:bold;\">        {   new newthread( );   }</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">Output:falsefalse</div>\n',1,9,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div style=\"font-weight:bold;\">To find the correct function.</div>\n<div style=\"font-weight:bold;\">class multithreaded_programing  {</div>\n<div style=\"font-weight:bold;\">        public static void main(String args[])   {</div>\n<div style=\"font-weight:bold;\">            Thread t = Thread.currentThread();</div>\n<div style=\"font-weight:bold;\">System.out.println(t);  }</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">Output: 5</div>\n',1,10,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (31,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these method of Thread class is used to find out the priority given to a thread?</div>\n',1,11,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (32,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is multithreaded programming?</div>\n',1,12,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (33,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What will happen if two thread of the same priority are called to be processed simultaneously?</div>\n',1,13,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (34,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these statements is incorrect?</div>\n',1,14,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (35,'<div style=\"font-weight:bold;\">What is the priority of the thread in the following Java Program?</div>\n<div style=\"font-weight:bold;\">class multithreaded_programing  {</div>\n<div style=\"font-weight:bold;\">public static void main(String args[])    {</div>\n<div style=\"font-weight:bold;\">Thread t = Thread.currentThread();</div>\n<div style=\"font-weight:bold;\">System.out.println(t);     }  }</div>\n',1,15,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (36,'<div style=\"font-weight:bold;\">What will be the output of the following Java code?</div>\n<div style=\"font-weight:bold;\">class newthread extends Thread   {</div>\n<div style=\"font-weight:bold;\">Thread t;</div>\n<div style=\"font-weight:bold;\">newthread()   {</div>\n<div style=\"font-weight:bold;\">t = new Thread(this,\"New Thread\");</div>\n<div style=\"font-weight:bold;\">t.start();   }</div>\n<div style=\"font-weight:bold;\">public void run()   {  System.out.println(t.isAlive()); }</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">class multithreaded_programing    {</div>\n<div style=\"font-weight:bold;\">public static void main(String args[])     {</div>\n<div style=\"font-weight:bold;\">new newthread();   }</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,16,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (37,'<div style=\"font-weight:bold;\">What will be the output of the following Java code?</div>\n<div style=\"font-weight:bold;\">class Table{  </div>\n<div style=\"font-weight:bold;\">void printTable(int n){</div>\n<div style=\"font-weight:bold;\">for(int i=1;i<4;i++){  </div>\n<div style=\"font-weight:bold;\">System.out.println(n*i);  </div>\n<div style=\"font-weight:bold;\">Thread.sleep(400); }  </div>\n<div style=\"font-weight:bold;\">}  </div>\n<div style=\"font-weight:bold;\">}  </div>\n<div style=\"font-weight:bold;\">class MyThread1 extends Thread{  </div>\n<div style=\"font-weight:bold;\">Table t;  </div>\n<div style=\"font-weight:bold;\">MyThread1(Table t){   this.t=t;  }  </div>\n<div style=\"font-weight:bold;\">public void run(){  t.printTable(5);  }  </div>\n<div style=\"font-weight:bold;\">}  </div>\n<div style=\"font-weight:bold;\">class MyThread2 extends Thread{  </div>\n<div style=\"font-weight:bold;\">Table t;  </div>\n<div style=\"font-weight:bold;\">MyThread2(Table t){   this.t=t;    }  </div>\n<div style=\"font-weight:bold;\">public void run(){  t.printTable(100);  }  </div>\n<div style=\"font-weight:bold;\">}  </div>\n<div style=\"font-weight:bold;\">class TestSynchronization1{  </div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){  </div>\n<div style=\"font-weight:bold;\">Table obj = new Table();</div>\n<div style=\"font-weight:bold;\">MyThread1 t1=new MyThread1(obj);  </div>\n<div style=\"font-weight:bold;\">MyThread2 t2=new MyThread2(obj);  </div>\n<div style=\"font-weight:bold;\">t1.start();  </div>\n<div style=\"font-weight:bold;\">t2.start();  }  </div>\n<div style=\"font-weight:bold;\">} </div>\n',1,17,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (38,'<div style=\"font-weight:bold;\">class MultithreadingDemo extends Thread { </div>\n<div style=\"font-weight:bold;\">public void run()   { </div>\n<div style=\"font-weight:bold;\">System.out.println (\"Thread \" + Thread.currentThread().getId( ) + \" is running\");   } } </div>\n<div style=\"font-weight:bold;\">public class Multithread { </div>\n<div style=\"font-weight:bold;\">public static void main(String[] args)   { </div>\n<div style=\"font-weight:bold;\">int n = 5; </div>\n<div style=\"font-weight:bold;\">for (int i=0; i<n; i++)  { </div>\n<div style=\"font-weight:bold;\">MultithreadingDemo object = new MultithreadingDemo(); </div>\n<div style=\"font-weight:bold;\">object.start();  } </div>\n<div style=\"font-weight:bold;\">} } </div>\n<div style=\"font-weight:bold;\">Output :</div>\n<div style=\"font-weight:bold;\">Thread 5 is running</div>\n<div style=\"font-weight:bold;\">Thread 6 is running</div>\n<div style=\"font-weight:bold;\">Thread 7 is running</div>\n<div style=\"font-weight:bold;\">Thread 8 is running</div>\n<div style=\"font-weight:bold;\">Thread 9 is running</div>\n',1,18,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (39,'<div style=\"font-weight:bold;\">class Count extends Thread {</div>\n<div style=\"font-weight:bold;\">Count()  {</div>\n<div style=\"font-weight:bold;\">super(\"my extending thread\");</div>\n<div style=\"font-weight:bold;\">System.out.println(\"my thread created\" + this);</div>\n<div style=\"font-weight:bold;\">start();   }</div>\n<div style=\"font-weight:bold;\">public void run()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for (int i=0 ;i<5;i++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">System.out.println(\"Printing the count \" + i);</div>\n<div style=\"font-weight:bold;\">Thread.sleep(1000);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">System.out.println(\"My thread run is over\" );</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">class ExtendingExample  {</div>\n<div style=\"font-weight:bold;\">public static void main(String args[])  {</div>\n<div style=\"font-weight:bold;\">Count cnt = new Count();</div>\n<div style=\"font-weight:bold;\">while(?)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">System.out.println(\"Main thread will be alive till the child thread is live\");</div>\n<div style=\"font-weight:bold;\">Thread.sleep(1500);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">System.out.println(\"Main thread\'s run is over\" );</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">Output:</div>\n<div style=\"font-weight:bold;\">my thread createdThread[my runnable thread,5,main]</div>\n<div style=\"font-weight:bold;\">Main thread will be alive till the child thread is live</div>\n<div style=\"font-weight:bold;\">Printing the count 0</div>\n<div style=\"font-weight:bold;\">Printing the count 1</div>\n<div style=\"font-weight:bold;\">Main thread will be alive till the child thread is live</div>\n<div style=\"font-weight:bold;\">Printing the count 2</div>\n<div style=\"font-weight:bold;\">Main thread will be alive till the child thread is live</div>\n<div style=\"font-weight:bold;\">Printing the count 3</div>\n<div style=\"font-weight:bold;\">Printing the count 4</div>\n<div style=\"font-weight:bold;\">mythread run is over</div>\n<div style=\"font-weight:bold;\">Main thread run is over</div>\n',1,19,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (40,'<div style=\"font-weight:bold;\">To find the missing part of the code and fill it.</div>\n<div style=\"font-weight:bold;\">public class TestDaemonThread1 extends Thread{  </div>\n<div style=\"font-weight:bold;\">public void run(){  </div>\n<div style=\"font-weight:bold;\">if(Thread.currentThread().?){//checking for daemon thread  </div>\n<div style=\"font-weight:bold;\">System.out.println(\"daemon thread work\");    }  </div>\n<div style=\"font-weight:bold;\">else{    System.out.println(\"user thread work\");   }  </div>\n<div style=\"font-weight:bold;\">}  </div>\n<div style=\"font-weight:bold;\">public static void main(String[] args){  </div>\n<div style=\"font-weight:bold;\">TestDaemonThread1 t1=new TestDaemonThread1();</div>\n<div style=\"font-weight:bold;\">TestDaemonThread1 t2=new TestDaemonThread1();  </div>\n<div style=\"font-weight:bold;\">TestDaemonThread1 t3=new TestDaemonThread1();  </div>\n<div style=\"font-weight:bold;\">t1.setDaemon(true);</div>\n<div style=\"font-weight:bold;\">t1.start();  t2.start();    t3.start();   }  </div>\n<div style=\"font-weight:bold;\">}  </div>\n',1,20,2,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (41,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">When the ___________method of the Applet class is called, it displays the result of the Applet code on the screen.</div>\n',1,1,3,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (42,'<div style=\"font-weight:bold;\">What is the length of the application box made by this program?</div>\n<div style=\"font-weight:bold;\">import java.awt.*;</div>\n<div style=\"font-weight:bold;\">import java.applet.*;</div>\n<div style=\"font-weight:bold;\">public class myapplet extends Applet {</div>\n<div style=\"font-weight:bold;\">public void paint(Graphics g) {</div>\n<div style=\"font-weight:bold;\">g.drawString(\"A Simple Applet\", 20, 20);    </div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,2,3,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (43,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these functions is called to display the output of an applet?</div>\n',1,3,3,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (44,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these modifiers can be used for a variable so that it can be accessed from any thread or parts of a program?</div>\n',1,4,3,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (45,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these methods is a part of Abstract Window Toolkit (AWT) ?</div>\n',1,5,3,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (46,'<div style=\"font-weight:bold;\">What is the Message is displayed in the applet made by this program?</div>\n<div style=\"font-weight:bold;\">import java.awt.*;</div>\n<div style=\"font-weight:bold;\">import java.applet.*;</div>\n<div style=\"font-weight:bold;\">public class myapplet extends Applet {</div>\n<div style=\"font-weight:bold;\">public void paint(Graphics g) {</div>\n<div style=\"font-weight:bold;\">g.drawString(\"A Simple Applet\", 20, 20);    </div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,6,3,'1','2024-07-14 18:34:37',0,NULL,NULL,'','',NULL,NULL),
 (47,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these methods can be used to output a sting in an applet?</div>\n',1,7,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (48,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">________ method is called only once during the run time of</div>\n',1,8,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (49,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Before we try to write applets, we must make sure that Java is installed properly and also ensure that either the java is installed properly and also ensure that either the java _______ or a java-enabled browser is available.</div>\n',1,9,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (50,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Applet class is a subclass of the panel class, which is again a subclass of the ………………….. class.</div>\n',1,10,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (51,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The___________method called the first time an applet is loaded into the memory of a computer.</div>\n',1,11,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (52,'<div style=\"font-weight:bold;\">3. Arrange the steps involved in developing and testing the applet in correct order.</div>\n<div style=\"font-weight:bold;\">i) creating an executable applet (.classfile)</div>\n<div style=\"font-weight:bold;\">ii) preparing <APPLET> tag</div>\n<div style=\"font-weight:bold;\">iii) creating HTML file</div>\n<div style=\"font-weight:bold;\">iv) building an applet code (.java file)</div>\n<div style=\"font-weight:bold;\">v)  testing the applet code</div>\n',1,12,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (53,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The __________ class is an abstract class that represents the display area of the applet.</div>\n',1,13,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (54,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The _________ method is called every time the applet receives focus as a result of scrolling in the active window.</div>\n',1,14,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (55,'<div style=\"font-weight:bold;\">The graphics class provides methods to draw a number of graphical figure including</div>\n<div style=\"font-weight:bold;\">i) Text        ii) Lines        iii) Images         iv) Ellipse</div>\n',1,15,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (56,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The________ method is defined by the AWT which causes the AWT runtime system to execute a call to your applet&rsquo;s update( ) method.</div>\n',1,16,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (57,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In java applet, we can display numerical values by first converting them into string and then using the _____ method.</div>\n',1,17,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (58,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The _________ method is automatically called the first time the applet is displayed on the screen and every time the applet receives focus.</div>\n',1,18,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (59,'<div style=\"font-weight:bold;\">Text field can be created by which of the following methods.</div>\n<div style=\"font-weight:bold;\">i) TextField( )                          ii) TextFieldString( )</div>\n<div style=\"font-weight:bold;\">iii) TextField(int)                    iv) TextField(string, int)</div>\n',1,19,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (60,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	We can change the text to be displayed by an applet by supplying new text to be displayed by an applet by supplying new text to the applet through a __________ tag.</div>',1,20,3,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (61,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">When a java class is compiled, ____________ file is created.</div>\n',1,1,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (62,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Java was publicly released in _______________ .</div>\n',1,2,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (63,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is smallest integer data type ?</div>\n',1,3,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (64,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">All Java components require names. Names used for classes, variables, and methods are called?</div>\n',1,4,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (65,'<div style=\"font-weight:bold;\">What is true in Java?</div>\n<div style=\"font-weight:bold;\">A. For all class names the first letter should be in Upper Case.</div>\n<div style=\"font-weight:bold;\">B. All method names should start with a Lower Case letter.</div>\n<div style=\"font-weight:bold;\">C. Name of the program file should exactly match the class</div>\n',1,5,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (66,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Range of Byte Data Type is ____________?</div>\n',1,6,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (67,'<div style=\"font-weight:bold;\">What will be the output of the program?</div>\n<div style=\"font-weight:bold;\">class Main {  </div>\n<div style=\"font-weight:bold;\">public static void main(String args[]) {    </div>\n<div style=\"font-weight:bold;\">int t; </div>\n<div style=\"font-weight:bold;\">System.out.println(t);</div>\n<div style=\"font-weight:bold;\">} }</div>\n',1,7,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (68,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following data type(s) can store 64 bit Value.</div>\n',1,8,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (69,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following option leads to the portability and security of Java?</div>\n',1,9,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (70,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What does the expression float a = 35 / 0 return?</div>\n',1,10,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (71,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which data type value is returned by all transcendental math functions?</div>\n',1,11,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (72,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In which process, a local variable has the same name as one of the instance variables?</div>\n',1,12,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (73,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these is long data type literal?</div>\n',1,13,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (74,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">All methods and variables in Java language are kept inside a?</div>\n',1,14,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (75,'<div style=\"font-weight:bold;\">String args[] in main method are used for?</div>\n<div style=\"font-weight:bold;\">public static void main(String args[])</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">//</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">A) Passing arguments at compile time</div>\n<div style=\"font-weight:bold;\">B) Passing arguments at run time</div>\n<div style=\"font-weight:bold;\">C) Counting number of words</div>\n',1,15,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (76,'<div style=\"font-weight:bold;\">What is the need to mention \"static\" before main method?</div>\n<div style=\"font-weight:bold;\">A) To call main method without creating an object of class</div>\n<div style=\"font-weight:bold;\">B) To make main method as class method common to all instances</div>\n<div style=\"font-weight:bold;\">C) To call main method with the help of objects</div>\n',1,16,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (77,'<div style=\"font-weight:bold;\">class S</div>\n<div style=\"font-weight:bold;\">{  </div>\n<div style=\"font-weight:bold;\">public _____ void main(String args[]){  </div>\n<div style=\"font-weight:bold;\">System.out.println(\"Hello Java\");  </div>\n<div style=\"font-weight:bold;\">}   }  </div>\n',1,17,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (78,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	A valid Identifier or name in Java language can start with which character?</div>',1,18,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (79,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the default return type of a method in Java language?</div>\n',1,19,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL),
 (80,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is not a keyword in java?</div>\n',1,20,4,'1','2024-07-14 18:34:38',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #012','Assessment Test #012','2024-07-14 18:34:36',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (2,2,'Assessment Test #013','Assessment Test #013','2024-07-14 18:34:37',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (3,3,'Assessment Test #014','Assessment Test #014','2024-07-14 18:34:37',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (4,4,'Assessment Test #015','Assessment Test #015','2024-07-14 18:34:38',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL DEFAULT '',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=299 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','2024-07-14 18:34:34',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','2024-07-14 18:34:34',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','2024-07-14 18:34:34',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','2024-07-14 18:34:34',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','2024-07-14 18:34:34',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','2024-07-14 18:34:34',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','2024-07-14 18:34:34',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','2024-07-14 18:34:34',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','2024-07-14 18:34:34',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','2024-07-14 18:34:34',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','2024-07-14 18:34:34',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','2024-07-14 18:34:34',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','2024-07-14 18:34:34',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','2024-07-14 18:34:34',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','2024-07-14 18:34:34',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','2024-07-14 18:34:34',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','2024-07-14 18:34:34',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','2024-07-14 18:34:34',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','2024-07-14 18:34:34',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','2024-07-14 18:34:34',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','2024-07-14 18:34:34',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','2024-07-14 18:34:34',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','2024-07-14 18:34:34',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','2024-07-14 18:34:34',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','2024-07-14 18:34:34',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','2024-07-14 18:34:34',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','2024-07-14 18:34:34',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','2024-07-14 18:34:34',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','2024-07-14 18:34:34',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','2024-07-14 18:34:34',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','2024-07-14 18:34:34',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','2024-07-14 18:34:34',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','2024-07-14 18:34:34',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','2024-07-14 18:34:34',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','2024-07-14 18:34:34',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','2024-07-14 18:34:34',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','2024-07-14 18:34:34',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','2024-07-14 18:34:34',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','2024-07-14 18:34:34',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','2024-07-14 18:34:34',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','2024-07-14 18:34:34',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','2024-07-14 18:34:34',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','2024-07-14 18:34:34',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','2024-07-14 18:34:34',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','2024-07-14 18:34:34',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','2024-07-14 18:34:34',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','2024-07-14 18:34:34',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','2024-07-14 18:34:34',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','2024-07-14 18:34:34',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','2024-07-14 18:34:34',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','2024-07-14 18:34:34',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','2024-07-14 18:34:34',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','2024-07-14 18:34:34',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','2024-07-14 18:34:34',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','2024-07-14 18:34:34',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','2024-07-14 18:34:34',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','2024-07-14 18:34:34',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','2024-07-14 18:34:34',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','2024-07-14 18:34:34',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','2024-07-14 18:34:34',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','2024-07-14 18:34:34',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','2024-07-14 18:34:34',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','2024-07-14 18:34:34',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','2024-07-14 18:34:34',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','2024-07-14 18:34:34',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','2024-07-14 18:34:34',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','2024-07-14 18:34:34',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','2024-07-14 18:34:34',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','2024-07-14 18:34:34',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','2024-07-14 18:34:34',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','2024-07-14 18:34:34',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','2024-07-14 18:34:34',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','2024-07-14 18:34:34',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','2024-07-14 18:34:34',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','2024-07-14 18:34:34',NULL,NULL),
 (77,'TN301','4cfbfaf43b987aae36ffac1c899fe50c','TN301','','2024-07-14 18:34:34',NULL,NULL),
 (78,'TN302','7772813f0502103495d3988fdac554b8','TN302','','2024-07-14 18:34:34',NULL,NULL),
 (79,'TN303','7d0e642df9cac8ea1900803f965838d3','TN303','','2024-07-14 18:34:34',NULL,NULL),
 (80,'TN304','afa72943f53e1c9aeb700c69a7de708c','TN304','','2024-07-14 18:34:34',NULL,NULL),
 (81,'TN305','b3604050eee6a7eafce74d208ef537a9','TN305','','2024-07-14 18:34:34',NULL,NULL),
 (82,'TN306','35bc67b08948944ef73bb043c1f76218','TN306','','2024-07-14 18:34:34',NULL,NULL),
 (83,'TN307','4258d86276485ef5d3f15acbfc44a15e','TN307','','2024-07-14 18:34:34',NULL,NULL),
 (84,'TN308','f8271b15f9ffeabe4301a9b481f1ab84','TN308','','2024-07-14 18:34:34',NULL,NULL),
 (85,'TN309','bf1fbc8a761ea5f4de6b739ccdcb6bd3','TN309','','2024-07-14 18:34:34',NULL,NULL),
 (86,'TN310','cf5383e75dc3958da762c8cb866d1acb','TN310','','2024-07-14 18:34:34',NULL,NULL),
 (87,'TN311','8fa39edd842fd90a436a752f583961e6','TN311','','2024-07-14 18:34:34',NULL,NULL),
 (88,'TN312','4dc19b4cc4981a5357133e042cdbc2b6','TN312','','2024-07-14 18:34:34',NULL,NULL),
 (89,'TN313','997cb29933ba918114f09271a01b792f','TN313','','2024-07-14 18:34:34',NULL,NULL),
 (90,'TN314','956c153ce08ebd7e42be5a34d96ce5c4','TN314','','2024-07-14 18:34:34',NULL,NULL),
 (91,'TN315','8600d0b445e67bd5ff1796933b42b0a4','TN315','','2024-07-14 18:34:34',NULL,NULL),
 (92,'TN316','9c7dd8beee902fa3bd1ed396a487d3e2','TN316','','2024-07-14 18:34:34',NULL,NULL),
 (93,'TN317','be94c0bf22b58b447c1505652379f296','TN317','','2024-07-14 18:34:34',NULL,NULL),
 (94,'TN318','81a641f699fb5fc4f182e816f5e2c41d','TN318','','2024-07-14 18:34:34',NULL,NULL),
 (95,'TN319','1a5ec457fee23be27777ce06bdd2a616','TN319','','2024-07-14 18:34:34',NULL,NULL),
 (96,'TN320','2cac9b37c3ef79e054dd8e1c4d039586','TN320','','2024-07-14 18:34:34',NULL,NULL),
 (97,'TN321','2c3d828db57bb9913591161ef7135c54','TN321','','2024-07-14 18:34:34',NULL,NULL),
 (98,'TN322','ada095acdf8c031cd99f8955bc0960ed','TN322','','2024-07-14 18:34:34',NULL,NULL),
 (99,'TN323','76ad401399c11870f44b37b97ee3ed2c','TN323','','2024-07-14 18:34:34',NULL,NULL),
 (100,'TN324','818855d66d858bd86752b59a91ceb663','TN324','','2024-07-14 18:34:34',NULL,NULL),
 (101,'TN325','e4cb79f0b6f1ab7b3d4c619eedbc1ee9','TN325','','2024-07-14 18:34:34',NULL,NULL),
 (102,'TN326','084d4a1799804d42f257e136c96a7345','TN326','','2024-07-14 18:34:34',NULL,NULL),
 (103,'TN327','fc8ce280ddd609efd6ee76f6567f544b','TN327','','2024-07-14 18:34:34',NULL,NULL),
 (104,'TN328','c882de08325b76a9cde3519264e60c1b','TN328','','2024-07-14 18:34:34',NULL,NULL),
 (105,'TN329','42751aa71351eed8056a42169b39ed48','TN329','','2024-07-14 18:34:34',NULL,NULL),
 (106,'TN330','3c5d9f3c87661b7120cd4bf594152c38','TN330','','2024-07-14 18:34:34',NULL,NULL),
 (107,'TN331','0249d7d44ee4469adf7c63bd10a263d2','TN331','','2024-07-14 18:34:34',NULL,NULL),
 (108,'TN332','278e92cfdda37ec283be90f40bee2094','TN332','','2024-07-14 18:34:34',NULL,NULL),
 (109,'TN333','59e81b682d96d2f06c53861e2e214b9d','TN333','','2024-07-14 18:34:34',NULL,NULL),
 (110,'TN334','fcc7ecb31f80fdf33f2ab5b2630f9344','TN334','','2024-07-14 18:34:34',NULL,NULL),
 (111,'TN335','4bdfa147352d1b4ce7980dec32bea6ae','TN335','','2024-07-14 18:34:34',NULL,NULL),
 (112,'TN336','35140305795583ae99f3d2bdec6edfde','TN336','','2024-07-14 18:34:34',NULL,NULL),
 (113,'TN337','c61355d6f69c17efde40bcd913628d00','TN337','','2024-07-14 18:34:34',NULL,NULL),
 (114,'TN338','bf9d37c62f03aaa18e799100de590440','TN338','','2024-07-14 18:34:34',NULL,NULL),
 (115,'TN339','8fe8ba0f57b579009df24062a3553972','TN339','','2024-07-14 18:34:34',NULL,NULL),
 (116,'TN340','66570ed1a402c90d6623aebb5124b50d','TN340','','2024-07-14 18:34:34',NULL,NULL),
 (117,'TN341','08b4520e60e67231825848ac3f2b7ced','TN341','','2024-07-14 18:34:34',NULL,NULL),
 (118,'TN342','e8e767e97165d2a9d22e4da74de8e4fc','TN342','','2024-07-14 18:34:34',NULL,NULL),
 (119,'TN343','9e99890acaf1c1540590c22fdfa1f9f6','TN343','','2024-07-14 18:34:34',NULL,NULL),
 (120,'TN344','7a1ed18a5057d97d42571d88696e0bac','TN344','','2024-07-14 18:34:34',NULL,NULL),
 (121,'TN345','c08e20ff403594dd10844f6c696c4632','TN345','','2024-07-14 18:34:34',NULL,NULL),
 (122,'TN346','c1cd756bd23e1ed80f15a02e797782e3','TN346','','2024-07-14 18:34:34',NULL,NULL),
 (123,'TN347','f279e37d6bca234a7c772aae190f09a4','TN347','','2024-07-14 18:34:35',NULL,NULL),
 (124,'TN348','40cd52be3188cabd9a089b1b7a8c437d','TN348','','2024-07-14 18:34:35',NULL,NULL),
 (125,'TN349','bac88e060cb6b9f28e91b313ba95db30','TN349','','2024-07-14 18:34:35',NULL,NULL),
 (126,'TN350','a1da8b0ef878d97f47695b55f10f2a67','TN350','','2024-07-14 18:34:35',NULL,NULL),
 (127,'TN351','c800e8d21eda0050a74091799d66c85a','TN351','','2024-07-14 18:34:35',NULL,NULL),
 (128,'TN352','c62d0cc7bfe0ff36a4732df6bd3a1cfe','TN352','','2024-07-14 18:34:35',NULL,NULL),
 (129,'TN353','cb86d441356e6ff91582261bf0c546fa','TN353','','2024-07-14 18:34:35',NULL,NULL),
 (130,'TN354','b5a6d69e2adeda87f71470c9487d5650','TN354','','2024-07-14 18:34:35',NULL,NULL),
 (131,'TN355','60ad3ff4dbe1bcd8a57f1c2d8f15f839','TN355','','2024-07-14 18:34:35',NULL,NULL),
 (132,'TN356','7df1c4e66045dc6943b6600b9a535e31','TN356','','2024-07-14 18:34:35',NULL,NULL),
 (133,'TN357','4ec54d496752ae13c69d40d3ef1e5a36','TN357','','2024-07-14 18:34:35',NULL,NULL),
 (134,'TN358','b0b662f54ae443183f415870774bf428','TN358','','2024-07-14 18:34:35',NULL,NULL),
 (135,'TN359','6bdf24901e416d3f12237f4c81e7cdb1','TN359','','2024-07-14 18:34:35',NULL,NULL),
 (136,'TN360','b67d88cd6eb8bb0648a48fceb58c5a2e','TN360','','2024-07-14 18:34:35',NULL,NULL),
 (137,'TN361','5261a9ce26032c312d6a626a4681eded','TN361','','2024-07-14 18:34:35',NULL,NULL),
 (138,'TN362','e50b7e1c46b6a14b1a9d5267042dad7f','TN362','','2024-07-14 18:34:35',NULL,NULL),
 (139,'TN363','2b8a950705e8e179edbd64a797ca4ac2','TN363','','2024-07-14 18:34:35',NULL,NULL),
 (140,'TN364','4a6fe8adf94e7cf620939a78e221d8b7','TN364','','2024-07-14 18:34:35',NULL,NULL),
 (141,'TN365','c134848e272d9dc68c1bf5f13fcb4596','TN365','','2024-07-14 18:34:35',NULL,NULL),
 (142,'TN366','9c54bd5292bb9d815c96bae8f995ec42','TN366','','2024-07-14 18:34:35',NULL,NULL),
 (143,'TN367','d71ef8393753c9f2cb0260c190cdd52c','TN367','','2024-07-14 18:34:35',NULL,NULL),
 (144,'TN368','85b0128d0f8e61f3a4836da27b487853','TN368','','2024-07-14 18:34:35',NULL,NULL),
 (145,'TN369','317c1966a3f034f330fa2f304b7b3e94','TN369','','2024-07-14 18:34:35',NULL,NULL),
 (146,'TN370','d877c3334e3e91e3a1959e8ed9336162','TN370','','2024-07-14 18:34:35',NULL,NULL),
 (147,'TN371','6217ce902b7adcd882731c81883406bc','TN371','','2024-07-14 18:34:35',NULL,NULL),
 (148,'TN372','c51e991fb09e24cddde7f7beda48f1d4','TN372','','2024-07-14 18:34:35',NULL,NULL),
 (149,'TN373','0d647fefd4cd5d3460ea3902074c92d3','TN373','','2024-07-14 18:34:35',NULL,NULL),
 (150,'TN374','8be2562f2a2c728510407f85a3aa4b72','TN374','','2024-07-14 18:34:35',NULL,NULL),
 (151,'TN375','c4ffbad375486f3c1c5b2444723ba81a','TN375','','2024-07-14 18:34:35',NULL,NULL),
 (152,'TN376','6e0235e0352ea6de99c0dfcc00fe51cc','TN376','','2024-07-14 18:34:35',NULL,NULL),
 (153,'TN377','68d671c673c3641a21a71d85736251db','TN377','','2024-07-14 18:34:35',NULL,NULL),
 (154,'TN378','1dfa265f703b312a36c6a187b21f7b53','TN378','','2024-07-14 18:34:35',NULL,NULL),
 (155,'TN379','1c866de9d3930e56d6fd5d611256d430','TN379','','2024-07-14 18:34:35',NULL,NULL),
 (156,'TN380','0c0db8f1ef86832d8bfef083db75bd64','TN380','','2024-07-14 18:34:35',NULL,NULL),
 (157,'TN381','b075da27060b6532cd04d409ef29c773','TN381','','2024-07-14 18:34:35',NULL,NULL),
 (158,'TN382','d51ae8148e568a7e972fafe0f70f01ae','TN382','','2024-07-14 18:34:35',NULL,NULL),
 (159,'TN383','083fa00c0fa1a36086196b7ab2dfe3e4','TN383','','2024-07-14 18:34:35',NULL,NULL),
 (160,'TN384','494d648e674afa0d9dc8b9481ed4a779','TN384','','2024-07-14 18:34:35',NULL,NULL),
 (161,'TN385','2a76542350c4409ff7cf99b71555842e','TN385','','2024-07-14 18:34:35',NULL,NULL),
 (162,'TN386','a8b326695c0c5671b19cebf3d58f53ce','TN386','','2024-07-14 18:34:35',NULL,NULL),
 (163,'TN387','64b2e2dcd30b0ce18cae1115de533376','TN387','','2024-07-14 18:34:35',NULL,NULL),
 (164,'TN388','0f37e86e6e9cfd210e1c75ae402541fa','TN388','','2024-07-14 18:34:35',NULL,NULL),
 (165,'TN389','d8af531c445ce843734accdd4e6aa6cb','TN389','','2024-07-14 18:34:35',NULL,NULL),
 (166,'TN390','cb21a4263f1b0bd3fbe1b0b9631a2568','TN390','','2024-07-14 18:34:35',NULL,NULL),
 (167,'TN391','7b35661e9eb7572aed0aaf2827d2b937','TN391','','2024-07-14 18:34:35',NULL,NULL),
 (168,'TN392','69095eff3cb060b8a2a545f3013ea08e','TN392','','2024-07-14 18:34:35',NULL,NULL),
 (169,'TN393','cc8063c742180e15740ddb7cd8dbef4c','TN393','','2024-07-14 18:34:35',NULL,NULL),
 (170,'TN394','f5dc1336c68795e7463372ce3e29dddd','TN394','','2024-07-14 18:34:35',NULL,NULL),
 (171,'TN395','b3f635deddf661c3d370aef549ab844c','TN395','','2024-07-14 18:34:35',NULL,NULL),
 (172,'TN396','85a093d2896912b740d2e290d6e99ae0','TN396','','2024-07-14 18:34:35',NULL,NULL),
 (173,'TN397','706e47e0a805ea906c4934a026b05b01','TN397','','2024-07-14 18:34:35',NULL,NULL),
 (174,'TN398','9789ea2281434774fd1cf8dfbcd5254e','TN398','','2024-07-14 18:34:35',NULL,NULL),
 (175,'TN399','e9909dc0046b1f1a6195c3cd4785a0c2','TN399','','2024-07-14 18:34:35',NULL,NULL),
 (176,'TN400','140e28300c12470c7890cea82e4223d8','TN400','','2024-07-14 18:34:35',NULL,NULL),
 (177,'A1','a4440582ecf3b651945ce19df05e2c8e','ARVETI SATISH BABU','','2024-07-14 18:34:35',NULL,NULL),
 (178,'A2','b389ce2c26e88de4a71093a1b2cc8907','AVULA VISHNU VARDHAN REDDY','','2024-07-14 18:34:35',NULL,NULL),
 (179,'A3','a1371b87bc6fa82e2324f8a73d5c8c61','BUDILI JASWANTH REDDY','','2024-07-14 18:34:35',NULL,NULL),
 (180,'A4','5b214843a7056a8e143ffad7193fd999','DHACHINAMOORTHI M','','2024-07-14 18:34:35',NULL,NULL),
 (181,'A5','d2f68acb5bad51f6993d45f5b3cdd92d','DHARANEESH M B','','2024-07-14 18:34:35',NULL,NULL),
 (182,'A6','2a268c7cde1ed28d59dd744325d41485','LINDA LANCE','','2024-07-14 18:34:35',NULL,NULL),
 (183,'A7','35b634a914d7ca0893bf8a7f3580bf66','MALLELA BHARATH','','2024-07-14 18:34:35',NULL,NULL),
 (184,'A8','2d5980e13aaeba51e14c0709c88c5ece','MARAM SIVA BALAJI','','2024-07-14 18:34:35',NULL,NULL),
 (185,'A9','acfdb437a21fd52e558ce651decaab8e','MOHAMED AQEEL','','2024-07-14 18:34:35',NULL,NULL),
 (186,'A10','246a21a6698f56065577c60db8c2c436','NAVEEN R','','2024-07-14 18:34:35',NULL,NULL),
 (187,'A11','0d53a379688407436ea33cfda2416c13','PAMIDAKULA VENKATA SAI','','2024-07-14 18:34:35',NULL,NULL),
 (188,'A12','7e64b81246e23d640a636c64d1bfd2c5','SANJAY V','','2024-07-14 18:34:35',NULL,NULL),
 (189,'A13','dd0fdbffd8c97ebdc46871afa8b81cdf','SELVAKUMAR E','','2024-07-14 18:34:35',NULL,NULL),
 (190,'A14','34a5980d1cd1805e2c0f531b3d197bc7','SRUTHIKASUBHIKSHA C','','2024-07-14 18:34:35',NULL,NULL),
 (191,'A15','471874392196b1cc2a29ba832bdbd9c5','SUSHMI D','','2024-07-14 18:34:35',NULL,NULL),
 (192,'A16','67c31c71a587a2783f16b42d32e211e0','THARUN ATITHYA B','','2024-07-14 18:34:35',NULL,NULL),
 (193,'A17','fbe1cde09be5b3420ae7977a381712a4','YERASI VENUGOPAL REDDY Y','','2024-07-14 18:34:35',NULL,NULL),
 (194,'A18','ff95bd08abca2218cf35b42649e6465e','ABHAY KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (195,'A19','6e3f355f803d16ee5f1463ecdc659f1e','ADARSH KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (196,'A20','d4fb4ca023c775f92ac6b681be5d38f6','AHAMMED S','','2024-07-14 18:34:35',NULL,NULL),
 (197,'A21','c05baafd804a12fa303712763e847bfd','ALAGU MANIRAJ K','','2024-07-14 18:34:35',NULL,NULL),
 (198,'A22','5aaab154a8a537dd3de3e2c4ba21c73a','ALAN NOBLE','','2024-07-14 18:34:35',NULL,NULL),
 (199,'A23','2421494727b5942bb9c741aa5253bfe7','ANAGHA P','','2024-07-14 18:34:35',NULL,NULL),
 (200,'A24','4ad86d48a138d108dd47025f002b3ec5','ARULSAKTHI B','','2024-07-14 18:34:35',NULL,NULL),
 (201,'A25','6fd97ecbe4c701fcf8b042ebc1e76f26','BHARATH S','','2024-07-14 18:34:35',NULL,NULL),
 (202,'A26','cc0b3de99a735bd23ba50e6788466d4b','D SAI VISHNU','','2024-07-14 18:34:35',NULL,NULL),
 (203,'A27','b0026c79a0f0b645b5f15dd71f33f309','DHARANISH R','','2024-07-14 18:34:35',NULL,NULL),
 (204,'A28','bdc2dd9a86b4d81265890cfc5644523f','DHILIPRAJ S','','2024-07-14 18:34:35',NULL,NULL),
 (205,'A29','9a8e6a5aadf958873877e7fc7d2cb037','DHIRAJ KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (206,'A30','30ac630a2ce76d4e927e80ca26be3d6a','DINESH M','','2024-07-14 18:34:35',NULL,NULL),
 (207,'A31','548732c472826453b08906e9aeaeb792','GEORGE WILLIAM B','','2024-07-14 18:34:35',NULL,NULL),
 (208,'A32','0c839818442eb88f71ad1f34d94dd0e0','GOKUL J','','2024-07-14 18:34:35',NULL,NULL),
 (209,'A33','e0e8984cd13be71415c5f50f7e39657d','HARDEEP B','','2024-07-14 18:34:35',NULL,NULL),
 (210,'A34','91fd4552e5109772d93cd9deafc51101','HARIKUMARAN V','','2024-07-14 18:34:35',NULL,NULL),
 (211,'A35','807f71cdfb3854fd134ea95d2f072741','JOHN SMILIN D S','','2024-07-14 18:34:35',NULL,NULL),
 (212,'A36','6cdd4c523067dea1e57d895e5838835b','KANAGARAJ S','','2024-07-14 18:34:35',NULL,NULL),
 (213,'A37','38d313fb013f4f02d7cbde2d29a24fc0','KANIMOZHI S','','2024-07-14 18:34:35',NULL,NULL),
 (214,'A38','ef1797caeec4a66b58eae5f9a77b5217','MAHIZHINI T','','2024-07-14 18:34:35',NULL,NULL),
 (215,'A39','0f77ba110e069f602bdf98666740a6b3','MOHAMMED KAWZER A','','2024-07-14 18:34:35',NULL,NULL),
 (216,'A40','03dfcc7ee576ea1d710c0b1ef6478731','MOHANASUNDARAM B','','2024-07-14 18:34:35',NULL,NULL),
 (217,'A41','49cffe36dc09b3bcc005f61c29457f13','MUHAMMED ALTHAF N M','','2024-07-14 18:34:35',NULL,NULL),
 (218,'A42','eb3bfe666a03c57a6d9eb4b03ce30526','MUHILARASAN K','','2024-07-14 18:34:35',NULL,NULL),
 (219,'A43','5fb737948ea8e67b2ba101050b921c8c','NAVEEN E','','2024-07-14 18:34:35',NULL,NULL),
 (220,'A44','3d23ba832eb6415350fe265569964866','NITHISH P','','2024-07-14 18:34:35',NULL,NULL),
 (221,'A45','08eff1b5ba9863cfcf8a2b0662374509','RANJAN KUMAR SINGH','','2024-07-14 18:34:35',NULL,NULL),
 (222,'A46','7dc2d02296a0869c811b64903bdc4f6e','RANJITH P','','2024-07-14 18:34:35',NULL,NULL),
 (223,'A47','1905063316e7c42d4eb7eab735497e5c','SANJAI G','','2024-07-14 18:34:35',NULL,NULL),
 (224,'A48','06b9f98c6b75b6c9e6ce45c973f66b34','SARAN P S','','2024-07-14 18:34:35',NULL,NULL),
 (225,'A49','23ab6d0194a1cbcf9b542746475ba4e0','SARVESH KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (226,'A50','f2756a9596feb6021834d9f50935b22b','SIBIRAJ R','','2024-07-14 18:34:35',NULL,NULL),
 (227,'A51','af8b92da7df10d56c85353b54bdf4db3','SIDARTH S','','2024-07-14 18:34:35',NULL,NULL),
 (228,'A52','3fb3551e56c811d983af35d2be71571d','SONU KUMAR YADAV','','2024-07-14 18:34:35',NULL,NULL),
 (229,'A53','b1e507eea1df726ebd8e8a97b687f4b0','SUNIL KUMAR K','','2024-07-14 18:34:35',NULL,NULL),
 (230,'A54','5a1df685e8bd9a4b3103652c0b29be49','THIRUMALAIVASAN K','','2024-07-14 18:34:35',NULL,NULL),
 (231,'A55','2a6b5d4d71cbb77c4916cc419c281a80','VIKASH KUMAR BHARTI','','2024-07-14 18:34:35',NULL,NULL),
 (232,'A56','810532494dbdc0331eee89127e4c1492','VISHWARAJ KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (233,'A57','6a95fffd1c26a76879835ca1f02b7e39','AINAM AZMI','','2024-07-14 18:34:35',NULL,NULL),
 (234,'A58','5f0fa972f8aaad7d659eac65227374b0','KULANDHAIVEL M','','2024-07-14 18:34:35',NULL,NULL),
 (235,'A59','59d39b2631d048fa1f8ca9eb84b39ab9','SILAMBARASAN M','','2024-07-14 18:34:35',NULL,NULL),
 (236,'B1','9f2ea7909f88c6d1299ac11ec25d5a76','AMUTHA S','','2024-07-14 18:34:35',NULL,NULL),
 (237,'B2','88012173b048342bc6f63a827fd791c5','ARCHANAA M','','2024-07-14 18:34:35',NULL,NULL),
 (238,'B3','72c6e8f0da8afee29c865817dbc523f4','BOOPESH S','','2024-07-14 18:34:35',NULL,NULL),
 (239,'B4','4229cc4876e1fdcee395c4534b1dac8d','DEVIKA S','','2024-07-14 18:34:35',NULL,NULL),
 (240,'B5','aa20874718e7433bbb60199016f3f5da','DHIVYA A','','2024-07-14 18:34:35',NULL,NULL),
 (241,'B6','c7e51438ab6e9228b01115f762d913eb','GAYATHRI S','','2024-07-14 18:34:35',NULL,NULL),
 (242,'B7','8d9e6bd9ba6b2ce2a5a178d2d01e3332','KAMALESWARAN S','','2024-07-14 18:34:35',NULL,NULL),
 (243,'B8','f8e047e626e19545ed097fb8f32b8691','KIRAN J','','2024-07-14 18:34:35',NULL,NULL),
 (244,'B9','69c400d3eab7d2808337a2d5a36e9392','MANJU M','','2024-07-14 18:34:35',NULL,NULL),
 (245,'B10','1559d211e9624e79a2b196ebcaf72626','PALLAV KARN','','2024-07-14 18:34:35',NULL,NULL),
 (246,'B11','5e784be591fa3ce9c0d356efbc9ec597','PHURITSHABAM SUSHIL KUMAR SINGH','','2024-07-14 18:34:35',NULL,NULL),
 (247,'B12','b0b2e5dea85d1f2531af08baf127b32f','PRADEEP G','','2024-07-14 18:34:35',NULL,NULL),
 (248,'B13','05b8ee147d442b27e62e4d709135d672','RAGUPRASATH M','','2024-07-14 18:34:35',NULL,NULL),
 (249,'B14','3cc103522e12e182c4b95f9406e291c4','RUBIKA N','','2024-07-14 18:34:35',NULL,NULL),
 (250,'B15','e538b1485f460098ee457d7946c51165','SHIVAM SINHA','','2024-07-14 18:34:35',NULL,NULL),
 (251,'B16','c406ab7e084b54cc2540afcad4caca48','SIVAKUMAR C','','2024-07-14 18:34:35',NULL,NULL),
 (252,'B17','91d16224e5490174b0785ba47aac304a','SURA VISHNUVARDHAN REDDY','','2024-07-14 18:34:35',NULL,NULL),
 (253,'B18','bbf01847a9665d349d262de488eda20e','THAMARAIKANNAN S','','2024-07-14 18:34:35',NULL,NULL),
 (254,'B19','d9f18ffd0c879f10fca3681bcea48b1f','GOVINDARAJ M','','2024-07-14 18:34:35',NULL,NULL),
 (255,'B20','f937aa7611f5d71af11358ae3d0a90bf','RAGU P','','2024-07-14 18:34:35',NULL,NULL),
 (256,'B21','6b0afa66f34963ddf731132c6b3742aa','ABIRAMI B','','2024-07-14 18:34:35',NULL,NULL),
 (257,'B22','e2372f4ab2e9edcb4bd747384bb62c42','AMRENDRA KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (258,'B23','31b05161924576b45e413fcb5184cbf5','ANJALI KUMARI','','2024-07-14 18:34:35',NULL,NULL),
 (259,'B24','22e6c5a827076472617a76ca7b46bf92','ASWATHA S','','2024-07-14 18:34:35',NULL,NULL),
 (260,'B25','dd268f3eb760a425a5af0c15c05df802','AVINASH KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (261,'B26','e9a53e7af0757d8e7a4419026492aab8','BHARATHI M','','2024-07-14 18:34:35',NULL,NULL),
 (262,'B27','0c00eafe73677fa0a1ed9a426aabcc73','DHANUSH KUMAR S','','2024-07-14 18:34:35',NULL,NULL),
 (263,'B28','5296fb8c04c4ee025018607b6f37ad75','DHIVYA S','','2024-07-14 18:34:35',NULL,NULL),
 (264,'B29','6e4207d2fa106c1d11059fbfeb3023c7','GURU SANKAR M','','2024-07-14 18:34:35',NULL,NULL),
 (265,'B30','3b5203c574e936a8e5d82fbba813b131','JAGAN S','','2024-07-14 18:34:35',NULL,NULL),
 (266,'B31','73f304e7ee9e574c936f3fb8e0dd3c36','JAGATHEESWARI M','','2024-07-14 18:34:35',NULL,NULL),
 (267,'B32','3ababe2bc7c54486bc6d034feda0fb80','JAYASURIYA S','','2024-07-14 18:34:35',NULL,NULL),
 (268,'B33','6ca70ff9f165ab8171dfc2efdcdafe66','KAUSHAL KUMAR N','','2024-07-14 18:34:35',NULL,NULL),
 (269,'B34','ee45f9116cbe8a9d8060273bdcadb783','MANIPRIYA E','','2024-07-14 18:34:35',NULL,NULL),
 (270,'B35','e4c86f8b10705ff3319e6c635a5e8ac4','NAVEENPRASATH P','','2024-07-14 18:34:35',NULL,NULL),
 (271,'B36','cdf7181a666014524e017bd36562ebeb','PRADEEPASRI C S','','2024-07-14 18:34:35',NULL,NULL),
 (272,'B37','1d7af33208a12a3b57e64981b958ec60','PRAVEENKUMAR K','','2024-07-14 18:34:35',NULL,NULL),
 (273,'B38','1d7e3255dfb01a30184abc37da901f98','VINOTH R','','2024-07-14 18:34:35',NULL,NULL),
 (274,'B39','43df7f948df8f223e0d81852ae924b0b','RAMYA V','','2024-07-14 18:34:35',NULL,NULL),
 (275,'B40','f026943f695526dc7b8f887c62b9ca6c','SIVAKUMAR S','','2024-07-14 18:34:35',NULL,NULL),
 (276,'B41','afdaf8c47e2fb72bed4aca4330d565ea','SOWMIYA S','','2024-07-14 18:34:35',NULL,NULL),
 (277,'B42','6ec9b57a855dcfbb81d8c8ffe430c9f5','SOWNDARYA S N','','2024-07-14 18:34:35',NULL,NULL),
 (278,'B43','9b0f478273a8299ed54dd7b258f1356b','SUBASH KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (279,'B44','4729fb64b5e04111436db77b76081a34','SUDHARSHAN B','','2024-07-14 18:34:35',NULL,NULL),
 (280,'B45','a6c0e98221b1c470ba65471fe61b3055','SURAJ KUMAR','','2024-07-14 18:34:35',NULL,NULL),
 (281,'B46','785ff551614e8c793f4aee0ce30e6037','VICKNESH K','','2024-07-14 18:34:35',NULL,NULL),
 (282,'B47','80365dcbfe0582525869cda4b7796d0a','VIKRAM M','','2024-07-14 18:34:35',NULL,NULL),
 (283,'B48','2e8ea8a1d9a3097d5d952d25249db524','YASHIKA B S','','2024-07-14 18:34:35',NULL,NULL),
 (284,'B49','50323b2f599ebab2e65359d9c1cea897','YUVASHREE R','','2024-07-14 18:34:35',NULL,NULL),
 (285,'B50','076f4bfdbeeaee0c4b0959ae40f1551d','AMARAKANNAN R','','2024-07-14 18:34:35',NULL,NULL),
 (286,'B51','56bdd2bf44b62232088a1d2f005e9cd5','BABUPRAKASH G','','2024-07-14 18:34:35',NULL,NULL),
 (287,'B52','e81c71d915b6880e4ee5b3a926398f90','DHANUSH S','','2024-07-14 18:34:35',NULL,NULL),
 (288,'B53','96b2302699603f4209e60d897d0c1955','DHASARATHAN M','','2024-07-14 18:34:35',NULL,NULL),
 (289,'B54','4d30d9b122b439db48eb56ba67ed0621','MANOJ R','','2024-07-14 18:34:35',NULL,NULL),
 (290,'B55','6d87a19f011653459575ceb722db3b69','PRAVEENKUMAR C','','2024-07-14 18:34:35',NULL,NULL),
 (291,'B56','50a5b9163d3175a0f250fb8a6e354634','RAJA VIGNESH R','','2024-07-14 18:34:35',NULL,NULL),
 (292,'B57','1860fba0fe38288158f608edd2aff4f5','AAKASH PURI','','2024-07-14 18:34:35',NULL,NULL),
 (293,'B58','36e67630d308068a90413409db92a449','CHINTHAKUNTA. RAJESH','','2024-07-14 18:34:35',NULL,NULL),
 (294,'B59','47e22c4596e9aa5f5c9aeadc2791282d','MOHAMMED ALTAF','','2024-07-14 18:34:35',NULL,NULL),
 (295,'B60','883361f333d87f92c064e2b5f94f6599','PATHAN BASHA','','2024-07-14 18:34:35',NULL,NULL),
 (296,'B61','339c6bbc2fe8311e04c99d4d0f7b22ff','RITIK KUMAR SINGH','','2024-07-14 18:34:35',NULL,NULL),
 (297,'B62','c2d00036d2714fe22c35ecf217e7156a','VIKASH KUMAR SINGH','','2024-07-14 18:34:35',NULL,NULL),
 (298,'B63','24e034ea1d8053eed48355d6c4b56bac','MOHAMMAD AVASE','','2024-07-14 18:34:35',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;

--
-- Create schema aptonlinethree
--

CREATE DATABASE IF NOT EXISTS aptonlinethree;
USE aptonlinethree;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,2);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1402 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'24400',NULL,0,0,'',0,0,NULL,1,0,''),
 (2,1,'21300',NULL,0,0,'',0,0,NULL,1,0,''),
 (3,1,'210',NULL,0,0,'',0,0,NULL,1,0,''),
 (4,1,'25200',NULL,1,0,'',0,0,NULL,1,0,''),
 (5,1,'21400',NULL,0,0,'',0,0,NULL,1,0,''),
 (6,2,'159',NULL,0,0,'',0,0,NULL,1,0,''),
 (7,2,'209',NULL,1,0,'',0,0,NULL,1,0,''),
 (8,2,'201',NULL,0,0,'',0,0,NULL,1,0,''),
 (9,2,'212',NULL,0,0,'',0,0,NULL,1,0,''),
 (10,2,'211',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'624',NULL,0,0,'',0,0,NULL,1,0,''),
 (12,3,'702',NULL,0,0,'',0,0,NULL,1,0,''),
 (13,3,'756',NULL,1,0,'',0,0,NULL,1,0,''),
 (14,3,'812',NULL,0,0,'',0,0,NULL,1,0,''),
 (15,3,'735',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'610',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,4,'720',NULL,1,0,'',0,0,NULL,1,0,''),
 (18,4,'825',NULL,0,0,'',0,0,NULL,1,0,''),
 (19,4,'920',NULL,0,0,'',0,0,NULL,1,0,''),
 (20,4,'4320',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,5,'47200',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,5,'48000',NULL,0,0,'',0,0,NULL,1,0,''),
 (23,5,'42000',NULL,0,0,'',0,0,NULL,1,0,''),
 (24,5,'50400',NULL,1,0,'',0,0,NULL,1,0,''),
 (25,5,'5760',NULL,0,0,'',0,0,NULL,1,0,''),
 (26,6,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,6,'126',NULL,0,0,'',0,0,NULL,1,0,''),
 (28,6,'63',NULL,1,0,'',0,0,NULL,1,0,''),
 (29,6,'64',NULL,0,0,'',0,0,NULL,1,0,''),
 (30,6,'104',NULL,0,0,'',0,0,NULL,1,0,''),
 (31,7,'9800',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,7,'100020',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,7,'120960',NULL,1,0,'',0,0,NULL,1,0,''),
 (34,7,'140020',NULL,0,0,'',0,0,NULL,1,0,''),
 (35,7,'4989600',NULL,0,0,'',0,0,NULL,1,0,''),
 (36,8,'10420',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,8,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (38,8,'11760',NULL,1,0,'',0,0,NULL,1,0,''),
 (39,8,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (40,8,'86400',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,9,'720',NULL,0,0,'',0,0,NULL,1,0,''),
 (42,9,'420',NULL,0,0,'',0,0,NULL,1,0,''),
 (43,9,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (44,9,'5040',NULL,1,0,'',0,0,NULL,1,0,''),
 (45,9,'2520',NULL,0,0,'',0,0,NULL,1,0,''),
 (46,10,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (47,10,'720',NULL,1,0,'',0,0,NULL,1,0,''),
 (48,10,'420',NULL,0,0,'',0,0,NULL,1,0,''),
 (49,10,'122',NULL,0,0,'',0,0,NULL,1,0,''),
 (50,10,'130',NULL,0,0,'',0,0,NULL,1,0,''),
 (51,11,'43',NULL,0,0,'',0,0,NULL,1,0,''),
 (52,11,'24',NULL,0,0,'',0,0,NULL,1,0,''),
 (53,11,'65',NULL,1,0,'',0,0,NULL,1,0,''),
 (54,11,'52',NULL,0,0,'',0,0,NULL,1,0,''),
 (55,11,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (56,12,'23: 57',NULL,0,0,'',0,0,NULL,1,0,''),
 (57,12,'51: 79',NULL,0,0,'',0,0,NULL,1,0,''),
 (58,12,'5: 13',NULL,0,0,'',0,0,NULL,1,0,''),
 (59,12,'11: 39',NULL,1,0,'',0,0,NULL,1,0,''),
 (60,12,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (61,13,'2450',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,13,'2300',NULL,0,0,'',0,0,NULL,1,0,''),
 (63,13,'2440',NULL,1,0,'',0,0,NULL,1,0,''),
 (64,13,'3340',NULL,0,0,'',0,0,NULL,1,0,''),
 (65,13,'1430',NULL,0,0,'',0,0,NULL,1,0,''),
 (66,14,'314',NULL,1,0,'',0,0,NULL,1,0,''),
 (67,14,'352',NULL,0,0,'',0,0,NULL,1,0,''),
 (68,14,'287',NULL,0,0,'',0,0,NULL,1,0,''),
 (69,14,'275',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,14,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,15,'42%',NULL,0,0,'',0,0,NULL,1,0,''),
 (72,15,'49%',NULL,1,0,'',0,0,NULL,1,0,''),
 (73,15,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (74,15,'15%',NULL,0,0,'',0,0,NULL,1,0,''),
 (75,15,'66%',NULL,0,0,'',0,0,NULL,1,0,''),
 (76,16,'110%',NULL,0,0,'',0,0,NULL,1,0,''),
 (77,16,'100%',NULL,1,0,'',0,0,NULL,1,0,''),
 (78,16,'90%',NULL,0,0,'',0,0,NULL,1,0,''),
 (79,16,'80%',NULL,0,0,'',0,0,NULL,1,0,''),
 (80,16,'125%',NULL,0,0,'',0,0,NULL,1,0,''),
 (81,17,'80000',NULL,0,0,'',0,0,NULL,1,0,''),
 (82,17,'50000',NULL,0,0,'',0,0,NULL,1,0,''),
 (83,17,'60000',NULL,1,0,'',0,0,NULL,1,0,''),
 (84,17,'75000',NULL,0,0,'',0,0,NULL,1,0,''),
 (85,17,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (86,18,'140000',NULL,1,0,'',0,0,NULL,1,0,''),
 (87,18,'160000',NULL,0,0,'',0,0,NULL,1,0,''),
 (88,18,'150000',NULL,0,0,'',0,0,NULL,1,0,''),
 (89,18,'130000',NULL,0,0,'',0,0,NULL,1,0,''),
 (90,18,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (91,19,'25: 11',NULL,0,0,'',0,0,NULL,1,0,''),
 (92,19,'29: 13',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,19,'35: 16',NULL,0,0,'',0,0,NULL,1,0,''),
 (94,19,'38: 9',NULL,1,0,'',0,0,NULL,1,0,''),
 (95,19,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,20,'72.50',NULL,0,0,'',0,0,NULL,1,0,''),
 (97,20,'64.80',NULL,1,0,'',0,0,NULL,1,0,''),
 (98,20,'68.20',NULL,0,0,'',0,0,NULL,1,0,''),
 (99,20,'75.60',NULL,0,0,'',0,0,NULL,1,0,''),
 (100,20,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (101,21,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,21,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (103,21,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (104,21,'E',NULL,1,0,'',0,0,NULL,1,0,''),
 (105,22,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (106,22,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (107,22,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (108,22,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (109,23,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (110,23,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (111,23,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (112,23,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,24,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (114,24,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (115,24,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (116,24,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (117,25,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,25,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (119,25,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (120,25,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (121,26,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (122,26,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (123,26,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (124,26,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,27,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (126,27,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (127,27,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (128,27,'e',NULL,1,0,'',0,0,NULL,1,0,''),
 (129,28,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (130,28,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,28,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (132,28,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (133,29,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,29,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (135,29,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (136,29,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,30,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (138,30,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (139,30,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (140,30,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (141,30,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,31,'30',NULL,0,0,'',0,0,NULL,1,0,''),
 (143,31,'40',NULL,0,0,'',0,0,NULL,1,0,''),
 (144,31,'50',NULL,1,0,'',0,0,NULL,1,0,''),
 (145,31,'70',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,31,'60',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,32,'60',NULL,0,0,'',0,0,NULL,1,0,''),
 (148,32,'40',NULL,0,0,'',0,0,NULL,1,0,''),
 (149,32,'31',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,32,'73',NULL,0,0,'',0,0,NULL,1,0,''),
 (151,32,'42',NULL,1,0,'',0,0,NULL,1,0,''),
 (152,33,'61',NULL,1,0,'',0,0,NULL,1,0,''),
 (153,33,'67',NULL,0,0,'',0,0,NULL,1,0,''),
 (154,33,'59',NULL,0,0,'',0,0,NULL,1,0,''),
 (155,33,'71',NULL,0,0,'',0,0,NULL,1,0,''),
 (156,33,'53',NULL,0,0,'',0,0,NULL,1,0,''),
 (157,34,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (158,34,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (159,34,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (160,34,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (161,34,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (162,35,'16',NULL,0,0,'',0,0,NULL,1,0,''),
 (163,35,'19',NULL,0,0,'',0,0,NULL,1,0,''),
 (164,35,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (165,35,'17',NULL,1,0,'',0,0,NULL,1,0,''),
 (166,35,'18',NULL,0,0,'',0,0,NULL,1,0,''),
 (167,36,'3,5,7',NULL,0,0,'',0,0,NULL,1,0,''),
 (168,36,'7,9,11',NULL,1,0,'',0,0,NULL,1,0,''),
 (169,36,'9,10,11',NULL,0,0,'',0,0,NULL,1,0,''),
 (170,36,'1,3,5',NULL,0,0,'',0,0,NULL,1,0,''),
 (171,36,'11,13,15',NULL,0,0,'',0,0,NULL,1,0,''),
 (172,37,'30',NULL,1,0,'',0,0,NULL,1,0,''),
 (173,37,'40',NULL,0,0,'',0,0,NULL,1,0,''),
 (174,37,'50',NULL,0,0,'',0,0,NULL,1,0,''),
 (175,37,'70',NULL,0,0,'',0,0,NULL,1,0,''),
 (176,37,'60',NULL,0,0,'',0,0,NULL,1,0,''),
 (177,38,'30',NULL,0,0,'',0,0,NULL,1,0,''),
 (178,38,'40',NULL,0,0,'',0,0,NULL,1,0,''),
 (179,38,'60',NULL,1,0,'',0,0,NULL,1,0,''),
 (180,38,'70',NULL,0,0,'',0,0,NULL,1,0,''),
 (181,38,'50',NULL,0,0,'',0,0,NULL,1,0,''),
 (182,39,'3',NULL,1,0,'',0,0,NULL,1,0,''),
 (183,39,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (184,39,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (185,39,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (186,39,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (187,40,'11,12',NULL,0,0,'',0,0,NULL,1,0,''),
 (188,40,'5,6',NULL,0,0,'',0,0,NULL,1,0,''),
 (189,40,'8,9',NULL,0,0,'',0,0,NULL,1,0,''),
 (190,40,'3,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (191,40,'7,8',NULL,1,0,'',0,0,NULL,1,0,''),
 (192,41,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (193,41,'B',NULL,1,0,'',0,0,NULL,1,0,''),
 (194,41,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (195,41,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (196,41,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (197,42,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (198,42,'B',NULL,1,0,'',0,0,NULL,1,0,''),
 (199,42,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (200,42,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (201,42,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (202,43,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (203,43,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (204,43,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (205,43,'D',NULL,1,0,'',0,0,NULL,1,0,''),
 (206,43,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (207,44,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (208,44,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (209,44,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (210,44,'D',NULL,1,0,'',0,0,NULL,1,0,''),
 (211,44,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (212,45,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (213,45,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (214,45,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (215,45,'D',NULL,1,0,'',0,0,NULL,1,0,''),
 (216,45,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (217,46,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (218,46,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (219,46,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (220,46,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (221,46,'E',NULL,1,0,'',0,0,NULL,1,0,''),
 (222,47,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (223,47,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (224,47,'C',NULL,1,0,'',0,0,NULL,1,0,''),
 (225,47,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (226,47,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (227,48,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (228,48,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (229,48,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (230,48,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (231,48,'E',NULL,1,0,'',0,0,NULL,1,0,''),
 (232,49,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (233,49,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (234,49,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (235,49,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (236,49,'E',NULL,1,0,'',0,0,NULL,1,0,''),
 (237,50,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (238,50,'B',NULL,1,0,'',0,0,NULL,1,0,''),
 (239,50,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (240,50,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (241,50,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (242,51,'Phrase : Act',NULL,0,0,'',0,0,NULL,1,0,''),
 (243,51,'Message : Code',NULL,1,0,'',0,0,NULL,1,0,''),
 (244,51,'Fun : Frolic',NULL,0,0,'',0,0,NULL,1,0,''),
 (245,51,'Chart : Graph',NULL,0,0,'',0,0,NULL,1,0,''),
 (246,52,'Derivation : Word',NULL,1,0,'',0,0,NULL,1,0,''),
 (247,52,'Foliage : Tree',NULL,0,0,'',0,0,NULL,1,0,''),
 (248,52,'Adolescence : Child',NULL,0,0,'',0,0,NULL,1,0,''),
 (249,52,'Title : Book',NULL,0,0,'',0,0,NULL,1,0,''),
 (250,53,'Chant : Sing',NULL,0,0,'',0,0,NULL,1,0,''),
 (251,53,'Carry : Lift',NULL,0,0,'',0,0,NULL,1,0,''),
 (252,53,'Chatter : Talk',NULL,1,0,'',0,0,NULL,1,0,''),
 (253,53,'Sleep : Drowse',NULL,0,0,'',0,0,NULL,1,0,''),
 (254,54,'Admiration : Love',NULL,1,0,'',0,0,NULL,1,0,''),
 (255,54,'Life : Help',NULL,0,0,'',0,0,NULL,1,0,''),
 (256,54,'Happiness : Sorrow',NULL,0,0,'',0,0,NULL,1,0,''),
 (257,54,'Youth : Fun',NULL,0,0,'',0,0,NULL,1,0,''),
 (258,55,'Catalogue : Dates',NULL,0,0,'',0,0,NULL,1,0,''),
 (259,55,'Atlas : Maps',NULL,1,0,'',0,0,NULL,1,0,''),
 (260,55,'Almanac : Synonyms',NULL,0,0,'',0,0,NULL,1,0,''),
 (261,55,'Thesaurus : Rhymes',NULL,0,0,'',0,0,NULL,1,0,''),
 (262,56,'Humility : Vanity',NULL,0,0,'',0,0,NULL,1,0,''),
 (263,56,'Credulity : Sincerity',NULL,0,0,'',0,0,NULL,1,0,''),
 (264,56,'Emulation : Rivalry',NULL,0,0,'',0,0,NULL,1,0,''),
 (265,56,'Castigation : Admonishment',NULL,1,0,'',0,0,NULL,1,0,''),
 (266,57,'Mystery : Detective',NULL,0,0,'',0,0,NULL,1,0,''),
 (267,57,'Tunnel : Toil',NULL,0,0,'',0,0,NULL,1,0,''),
 (268,57,'Forthright : Snide',NULL,1,0,'',0,0,NULL,1,0,''),
 (269,57,'Better : Best',NULL,0,0,'',0,0,NULL,1,0,''),
 (270,58,'Man : Woman',NULL,0,0,'',0,0,NULL,1,0,''),
 (271,58,'Doctor : Medicine',NULL,0,0,'',0,0,NULL,1,0,''),
 (272,58,'War : Destruction',NULL,1,0,'',0,0,NULL,1,0,''),
 (273,58,'Shopkeeper : Goods',NULL,0,0,'',0,0,NULL,1,0,''),
 (274,59,'Noose : Neck',NULL,0,0,'',0,0,NULL,1,0,''),
 (275,59,'Tiara : Head',NULL,1,0,'',0,0,NULL,1,0,''),
 (276,59,'Splint : Arm',NULL,0,0,'',0,0,NULL,1,0,''),
 (277,59,'Knapsack : Back',NULL,0,0,'',0,0,NULL,1,0,''),
 (278,60,'Legislator : Election',NULL,0,0,'',0,0,NULL,1,0,''),
 (279,60,'Chef : Banquet',NULL,0,0,'',0,0,NULL,1,0,''),
 (280,60,'Auditor : Lecture',NULL,0,0,'',0,0,NULL,1,0,''),
 (281,60,'Umpire : Game',NULL,1,0,'',0,0,NULL,1,0,''),
 (282,61,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (283,61,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (284,61,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (285,61,'9',NULL,1,0,'',0,0,NULL,1,0,''),
 (286,61,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (287,62,'34',NULL,0,0,'',0,0,NULL,1,0,''),
 (288,62,'24.5',NULL,1,0,'',0,0,NULL,1,0,''),
 (289,62,'25.75',NULL,0,0,'',0,0,NULL,1,0,''),
 (290,62,'30',NULL,0,0,'',0,0,NULL,1,0,''),
 (291,62,'20.50',NULL,0,0,'',0,0,NULL,1,0,''),
 (292,63,'57',NULL,0,0,'',0,0,NULL,1,0,''),
 (293,63,'39',NULL,0,0,'',0,0,NULL,1,0,''),
 (294,63,'40',NULL,0,0,'',0,0,NULL,1,0,''),
 (295,63,'41',NULL,0,0,'',0,0,NULL,1,0,''),
 (296,63,'36',NULL,1,0,'',0,0,NULL,1,0,''),
 (297,64,'164',NULL,0,0,'',0,0,NULL,1,0,''),
 (298,64,'170',NULL,0,0,'',0,0,NULL,1,0,''),
 (299,64,'162',NULL,1,0,'',0,0,NULL,1,0,''),
 (300,64,'167',NULL,0,0,'',0,0,NULL,1,0,''),
 (301,64,'171',NULL,0,0,'',0,0,NULL,1,0,''),
 (302,65,'50',NULL,1,0,'',0,0,NULL,1,0,''),
 (303,65,'55',NULL,0,0,'',0,0,NULL,1,0,''),
 (304,65,'52',NULL,0,0,'',0,0,NULL,1,0,''),
 (305,65,'53',NULL,0,0,'',0,0,NULL,1,0,''),
 (306,65,'47',NULL,0,0,'',0,0,NULL,1,0,''),
 (307,66,'132',NULL,0,0,'',0,0,NULL,1,0,''),
 (308,66,'108',NULL,0,0,'',0,0,NULL,1,0,''),
 (309,66,'120',NULL,0,0,'',0,0,NULL,1,0,''),
 (310,66,'84',NULL,1,0,'',0,0,NULL,1,0,''),
 (311,66,'72',NULL,0,0,'',0,0,NULL,1,0,''),
 (312,67,'40',NULL,1,0,'',0,0,NULL,1,0,''),
 (313,67,'132',NULL,0,0,'',0,0,NULL,1,0,''),
 (314,67,'56',NULL,0,0,'',0,0,NULL,1,0,''),
 (315,67,'67',NULL,0,0,'',0,0,NULL,1,0,''),
 (316,67,'25',NULL,0,0,'',0,0,NULL,1,0,''),
 (317,68,'35',NULL,0,0,'',0,0,NULL,1,0,''),
 (318,68,'39.7',NULL,1,0,'',0,0,NULL,1,0,''),
 (319,68,'23.8',NULL,0,0,'',0,0,NULL,1,0,''),
 (320,68,'34.8',NULL,0,0,'',0,0,NULL,1,0,''),
 (321,68,'25',NULL,0,0,'',0,0,NULL,1,0,''),
 (322,69,'25',NULL,1,0,'',0,0,NULL,1,0,''),
 (323,69,'45',NULL,0,0,'',0,0,NULL,1,0,''),
 (324,69,'65',NULL,0,0,'',0,0,NULL,1,0,''),
 (325,69,'36',NULL,0,0,'',0,0,NULL,1,0,''),
 (326,69,'57',NULL,0,0,'',0,0,NULL,1,0,''),
 (327,70,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (328,70,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (329,70,'24',NULL,0,0,'',0,0,NULL,1,0,''),
 (330,70,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (331,70,'21',NULL,1,0,'',0,0,NULL,1,0,''),
 (332,71,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (333,71,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (334,71,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (335,71,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (336,71,'E',NULL,1,0,'',0,0,NULL,1,0,''),
 (337,72,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (338,72,'B',NULL,1,0,'',0,0,NULL,1,0,''),
 (339,72,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (340,72,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (341,72,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (342,73,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (343,73,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (344,73,'C',NULL,1,0,'',0,0,NULL,1,0,''),
 (345,73,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (346,73,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (347,74,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (348,74,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (349,74,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (350,74,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (351,74,'E',NULL,1,0,'',0,0,NULL,1,0,''),
 (352,75,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (353,75,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (354,75,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (355,75,'D',NULL,1,0,'',0,0,NULL,1,0,''),
 (356,75,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (357,76,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (358,76,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (359,76,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (360,76,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (361,76,'E',NULL,1,0,'',0,0,NULL,1,0,''),
 (362,77,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (363,77,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (364,77,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (365,77,'D',NULL,1,0,'',0,0,NULL,1,0,''),
 (366,77,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (367,78,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (368,78,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (369,78,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (370,78,'D',NULL,1,0,'',0,0,NULL,1,0,''),
 (371,78,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (372,79,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (373,79,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (374,79,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (375,79,'D',NULL,1,0,'',0,0,NULL,1,0,''),
 (376,79,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (377,80,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (378,80,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (379,80,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (380,80,'D',NULL,1,0,'',0,0,NULL,1,0,''),
 (381,80,'E',NULL,0,0,'',0,0,NULL,1,0,''),
 (382,81,'sat',NULL,0,0,'',0,0,NULL,1,0,''),
 (383,81,'crossed',NULL,0,0,'',0,0,NULL,1,0,''),
 (384,81,'leaned',NULL,0,0,'',0,0,NULL,1,0,''),
 (385,81,'lay',NULL,1,0,'',0,0,NULL,1,0,''),
 (386,82,'into',NULL,0,0,'',0,0,NULL,1,0,''),
 (387,82,'down',NULL,1,0,'',0,0,NULL,1,0,''),
 (388,82,'at',NULL,0,0,'',0,0,NULL,1,0,''),
 (389,82,'for',NULL,0,0,'',0,0,NULL,1,0,''),
 (390,83,'number',NULL,1,0,'',0,0,NULL,1,0,''),
 (391,83,'family',NULL,0,0,'',0,0,NULL,1,0,''),
 (392,83,'volume',NULL,0,0,'',0,0,NULL,1,0,''),
 (393,83,'semblance',NULL,0,0,'',0,0,NULL,1,0,''),
 (394,84,'an',NULL,0,0,'',0,0,NULL,1,0,''),
 (395,84,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (396,84,'one',NULL,0,0,'',0,0,NULL,1,0,''),
 (397,84,'single',NULL,0,0,'',0,0,NULL,1,0,''),
 (398,85,'bank',NULL,0,0,'',0,0,NULL,1,0,''),
 (399,85,'peak',NULL,0,0,'',0,0,NULL,1,0,''),
 (400,85,'pile',NULL,1,0,'',0,0,NULL,1,0,''),
 (401,85,'pit',NULL,0,0,'',0,0,NULL,1,0,''),
 (402,86,'form',NULL,0,0,'',0,0,NULL,1,0,''),
 (403,86,'kind',NULL,0,0,'',0,0,NULL,1,0,''),
 (404,86,'glory',NULL,0,0,'',0,0,NULL,1,0,''),
 (405,86,'number',NULL,1,0,'',0,0,NULL,1,0,''),
 (406,87,'limited',NULL,0,0,'',0,0,NULL,1,0,''),
 (407,87,'shrunk',NULL,1,0,'',0,0,NULL,1,0,''),
 (408,87,'abolished',NULL,0,0,'',0,0,NULL,1,0,''),
 (409,87,'eliminated',NULL,0,0,'',0,0,NULL,1,0,''),
 (410,88,'prevention',NULL,0,0,'',0,0,NULL,1,0,''),
 (411,88,'encroaching',NULL,0,0,'',0,0,NULL,1,0,''),
 (412,88,'shift',NULL,1,0,'',0,0,NULL,1,0,''),
 (413,88,'condition',NULL,0,0,'',0,0,NULL,1,0,''),
 (414,89,'deployed',NULL,1,0,'',0,0,NULL,1,0,''),
 (415,89,'brought',NULL,0,0,'',0,0,NULL,1,0,''),
 (416,89,'swept',NULL,0,0,'',0,0,NULL,1,0,''),
 (417,89,'set',NULL,0,0,'',0,0,NULL,1,0,''),
 (418,90,'agreement',NULL,0,0,'',0,0,NULL,1,0,''),
 (419,90,'contract',NULL,0,0,'',0,0,NULL,1,0,''),
 (420,90,'ban',NULL,1,0,'',0,0,NULL,1,0,''),
 (421,90,'link',NULL,0,0,'',0,0,NULL,1,0,''),
 (422,91,'Sunday',NULL,0,0,'',0,0,NULL,1,0,''),
 (423,91,'Saturday',NULL,0,0,'',0,0,NULL,1,0,''),
 (424,91,'Friday',NULL,1,0,'',0,0,NULL,1,0,''),
 (425,91,'Wednesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (426,91,'Thursday',NULL,0,0,'',0,0,NULL,1,0,''),
 (427,92,'Wednesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (428,92,'Saturday',NULL,1,0,'',0,0,NULL,1,0,''),
 (429,92,'Tuesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (430,92,'Thursday',NULL,0,0,'',0,0,NULL,1,0,''),
 (431,92,'Friday',NULL,0,0,'',0,0,NULL,1,0,''),
 (432,93,'Sunday',NULL,1,0,'',0,0,NULL,1,0,''),
 (433,93,'Monday',NULL,0,0,'',0,0,NULL,1,0,''),
 (434,93,'Tuesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (435,93,'Friday',NULL,0,0,'',0,0,NULL,1,0,''),
 (436,93,'Thursday',NULL,0,0,'',0,0,NULL,1,0,''),
 (437,94,'Monday',NULL,0,0,'',0,0,NULL,1,0,''),
 (438,94,'Tuesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (439,94,'Wednesday',NULL,1,0,'',0,0,NULL,1,0,''),
 (440,94,'Thursday',NULL,0,0,'',0,0,NULL,1,0,''),
 (441,94,'Friday',NULL,0,0,'',0,0,NULL,1,0,''),
 (442,95,'Thursday',NULL,0,0,'',0,0,NULL,1,0,''),
 (443,95,'Friday',NULL,0,0,'',0,0,NULL,1,0,''),
 (444,95,'Saturday',NULL,0,0,'',0,0,NULL,1,0,''),
 (445,95,'Sunday',NULL,1,0,'',0,0,NULL,1,0,''),
 (446,95,'Tuesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (447,96,'Monday',NULL,0,0,'',0,0,NULL,1,0,''),
 (448,96,'Tuesday',NULL,1,0,'',0,0,NULL,1,0,''),
 (449,96,'Wednesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (450,96,'Sunday',NULL,0,0,'',0,0,NULL,1,0,''),
 (451,96,'Thursday',NULL,0,0,'',0,0,NULL,1,0,''),
 (452,97,'6.48 pm',NULL,0,0,'',0,0,NULL,1,0,''),
 (453,97,'5.47 pm',NULL,1,0,'',0,0,NULL,1,0,''),
 (454,97,'6.49 pm',NULL,0,0,'',0,0,NULL,1,0,''),
 (455,97,'4.46 pm',NULL,0,0,'',0,0,NULL,1,0,''),
 (456,97,'6.24 pm',NULL,0,0,'',0,0,NULL,1,0,''),
 (457,98,'Sunday',NULL,0,0,'',0,0,NULL,1,0,''),
 (458,98,'Thursday',NULL,0,0,'',0,0,NULL,1,0,''),
 (459,98,'Tuesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (460,98,'Friday',NULL,1,0,'',0,0,NULL,1,0,''),
 (461,98,'Wednesday',NULL,0,0,'',0,0,NULL,1,0,''),
 (462,99,'700',NULL,1,0,'',0,0,NULL,1,0,''),
 (463,99,'800',NULL,0,0,'',0,0,NULL,1,0,''),
 (464,99,'1200',NULL,0,0,'',0,0,NULL,1,0,''),
 (465,99,'2000',NULL,0,0,'',0,0,NULL,1,0,''),
 (466,99,'2400',NULL,0,0,'',0,0,NULL,1,0,''),
 (467,100,'2014',NULL,0,0,'',0,0,NULL,1,0,''),
 (468,100,'2016',NULL,0,0,'',0,0,NULL,1,0,''),
 (469,100,'2017',NULL,0,0,'',0,0,NULL,1,0,''),
 (470,100,'2018',NULL,1,0,'',0,0,NULL,1,0,''),
 (471,100,'2015',NULL,0,0,'',0,0,NULL,1,0,''),
 (472,101,'Only assumption I is implicit',NULL,0,0,'',0,0,NULL,1,0,''),
 (473,101,'Only assumption II is implicit',NULL,0,0,'',0,0,NULL,1,0,''),
 (474,101,'Either I or II is implicit',NULL,0,0,'',0,0,NULL,1,0,''),
 (475,101,'Neither I nor II is implicit',NULL,0,0,'',0,0,NULL,1,0,''),
 (476,101,'Both I and II are implicit',NULL,1,0,'',0,0,NULL,1,0,''),
 (477,102,'Only assumption I is implicit',NULL,1,0,'',0,0,NULL,1,0,''),
 (478,102,'Only assumption II is implicit',NULL,0,0,'',0,0,NULL,1,0,''),
 (479,102,'Either I or II is implicit',NULL,0,0,'',0,0,NULL,1,0,''),
 (480,102,'Neither I nor II is implicit',NULL,0,0,'',0,0,NULL,1,0,''),
 (481,102,'Both I and II are implicit',NULL,0,0,'',0,0,NULL,1,0,''),
 (482,103,'The only argument I am strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (483,103,'If only argument II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (484,103,'Neither I nor II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (485,103,'If both I and II are strong',NULL,1,0,'',0,0,NULL,1,0,''),
 (486,103,'Cannot be determined',NULL,0,0,'',0,0,NULL,1,0,''),
 (487,104,'Only argument I is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (488,104,'Only argument II is strong',NULL,1,0,'',0,0,NULL,1,0,''),
 (489,104,'Either I or II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (490,104,'Neither I nor II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (491,104,'Both I and II are strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (492,105,'Only argument I is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (493,105,'Only argument II is strong',NULL,1,0,'',0,0,NULL,1,0,''),
 (494,105,'Either I or II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (495,105,'Neither I nor II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (496,105,'Both I and II are strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (497,106,'Only argument I is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (498,106,'Only argument II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (499,106,'Either I or II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (500,106,'Neither I nor II is strong',NULL,1,0,'',0,0,NULL,1,0,''),
 (501,106,'Both I and II are strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (502,107,'Only argument I is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (503,107,'Only argument II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (504,107,'Either I or II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (505,107,'Neither I nor II is strong',NULL,1,0,'',0,0,NULL,1,0,''),
 (506,107,'Both I and II are strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (507,108,'Only argument I is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (508,108,'Only argument II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (509,108,'Either I or II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (510,108,'Neither I nor II is strong',NULL,1,0,'',0,0,NULL,1,0,''),
 (511,108,'Both I and II are strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (512,109,'Only argument I is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (513,109,'Only argument II is strong',NULL,1,0,'',0,0,NULL,1,0,''),
 (514,109,'Either I or II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (515,109,'Neither I nor II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (516,109,'Both I and II are strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (517,110,'Only argument I is strong',NULL,1,0,'',0,0,NULL,1,0,''),
 (518,110,'Only argument II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (519,110,'Either I or II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (520,110,'Neither I nor II is strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (521,110,'Both I and II are strong',NULL,0,0,'',0,0,NULL,1,0,''),
 (522,111,'fuelling',NULL,1,0,'',0,0,NULL,1,0,''),
 (523,111,'ornate',NULL,0,0,'',0,0,NULL,1,0,''),
 (524,111,'genial',NULL,0,0,'',0,0,NULL,1,0,''),
 (525,111,'hissing',NULL,0,0,'',0,0,NULL,1,0,''),
 (526,112,'shrinking',NULL,0,0,'',0,0,NULL,1,0,''),
 (527,112,'grown',NULL,0,0,'',0,0,NULL,1,0,''),
 (528,112,'growth',NULL,1,0,'',0,0,NULL,1,0,''),
 (529,112,'expand',NULL,0,0,'',0,0,NULL,1,0,''),
 (530,113,'malice',NULL,0,0,'',0,0,NULL,1,0,''),
 (531,113,'sullen',NULL,0,0,'',0,0,NULL,1,0,''),
 (532,113,'cruising',NULL,1,0,'',0,0,NULL,1,0,''),
 (533,113,'abhorrence',NULL,0,0,'',0,0,NULL,1,0,''),
 (534,114,'directing',NULL,0,0,'',0,0,NULL,1,0,''),
 (535,114,'handle',NULL,0,0,'',0,0,NULL,1,0,''),
 (536,114,'deviate',NULL,0,0,'',0,0,NULL,1,0,''),
 (537,114,'implementation',NULL,1,0,'',0,0,NULL,1,0,''),
 (538,115,'tremendous',NULL,1,0,'',0,0,NULL,1,0,''),
 (539,115,'light',NULL,0,0,'',0,0,NULL,1,0,''),
 (540,115,'bewilder',NULL,0,0,'',0,0,NULL,1,0,''),
 (541,115,'sharply',NULL,0,0,'',0,0,NULL,1,0,''),
 (542,116,'PSQR',NULL,0,0,'',0,0,NULL,1,0,''),
 (543,116,'PSRQ',NULL,1,0,'',0,0,NULL,1,0,''),
 (544,116,'SPQR',NULL,0,0,'',0,0,NULL,1,0,''),
 (545,116,'SPRQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (546,117,'PRSQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (547,117,'QPSR',NULL,0,0,'',0,0,NULL,1,0,''),
 (548,117,'RPSQ',NULL,1,0,'',0,0,NULL,1,0,''),
 (549,117,'SRPQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (550,118,'PQRS',NULL,0,0,'',0,0,NULL,1,0,''),
 (551,118,'QPSR',NULL,0,0,'',0,0,NULL,1,0,''),
 (552,118,'RPSQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (553,118,'SQRP',NULL,1,0,'',0,0,NULL,1,0,''),
 (554,119,'PRSQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (555,119,'QSPR',NULL,0,0,'',0,0,NULL,1,0,''),
 (556,119,'RQSP',NULL,0,0,'',0,0,NULL,1,0,''),
 (557,119,'SQPR',NULL,1,0,'',0,0,NULL,1,0,''),
 (558,120,'PRSQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (559,120,'RQPS',NULL,1,0,'',0,0,NULL,1,0,''),
 (560,120,'RQPS',NULL,0,0,'',0,0,NULL,1,0,''),
 (561,120,'PSRQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (562,121,'200 secs',NULL,0,0,'',0,0,NULL,1,0,''),
 (563,121,'190 secs',NULL,1,0,'',0,0,NULL,1,0,''),
 (564,121,'210 secs',NULL,0,0,'',0,0,NULL,1,0,''),
 (565,121,'150 secs',NULL,0,0,'',0,0,NULL,1,0,''),
 (566,121,'165 secs',NULL,0,0,'',0,0,NULL,1,0,''),
 (567,122,'88 mts',NULL,1,0,'',0,0,NULL,1,0,''),
 (568,122,'80 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (569,122,'77 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (570,122,'98 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (571,122,'90 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (572,123,'100 seconds',NULL,0,0,'',0,0,NULL,1,0,''),
 (573,123,'95 seconds',NULL,1,0,'',0,0,NULL,1,0,''),
 (574,123,'105 seconds',NULL,0,0,'',0,0,NULL,1,0,''),
 (575,123,'90 seconds',NULL,0,0,'',0,0,NULL,1,0,''),
 (576,123,'40 seconds',NULL,0,0,'',0,0,NULL,1,0,''),
 (577,124,'20 mts',NULL,1,0,'',0,0,NULL,1,0,''),
 (578,124,'25 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (579,124,'22.5 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (580,124,'9 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (581,124,'8.31 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (582,125,'8 mins',NULL,0,0,'',0,0,NULL,1,0,''),
 (583,125,'20 mins',NULL,0,0,'',0,0,NULL,1,0,''),
 (584,125,'12 mins',NULL,0,0,'',0,0,NULL,1,0,''),
 (585,125,'10 mins',NULL,1,0,'',0,0,NULL,1,0,''),
 (586,125,'12 mins',NULL,0,0,'',0,0,NULL,1,0,''),
 (587,126,'8 points',NULL,0,0,'',0,0,NULL,1,0,''),
 (588,126,'10 points',NULL,1,0,'',0,0,NULL,1,0,''),
 (589,126,'12 points',NULL,0,0,'',0,0,NULL,1,0,''),
 (590,126,'14 points',NULL,0,0,'',0,0,NULL,1,0,''),
 (591,126,'16 points',NULL,0,0,'',0,0,NULL,1,0,''),
 (592,127,'Raghu passes Rajan thrice',NULL,1,0,'',0,0,NULL,1,0,''),
 (593,127,'Raghu passes Rajan twice',NULL,0,0,'',0,0,NULL,1,0,''),
 (594,127,'Raghu passes Rajan once',NULL,0,0,'',0,0,NULL,1,0,''),
 (595,127,'Rajan passes Raghu twice',NULL,0,0,'',0,0,NULL,1,0,''),
 (596,127,'none of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (597,128,'7.2 km/hr',NULL,1,0,'',0,0,NULL,1,0,''),
 (598,128,'3.6 km/hr',NULL,0,0,'',0,0,NULL,1,0,''),
 (599,128,'1.2 km/hr',NULL,0,0,'',0,0,NULL,1,0,''),
 (600,128,'4.2 km/hr',NULL,0,0,'',0,0,NULL,1,0,''),
 (601,128,'5.2 km/hr',NULL,0,0,'',0,0,NULL,1,0,''),
 (602,129,'110 secs',NULL,0,0,'',0,0,NULL,1,0,''),
 (603,129,'150 secs',NULL,0,0,'',0,0,NULL,1,0,''),
 (604,129,'100 secs',NULL,1,0,'',0,0,NULL,1,0,''),
 (605,129,'120 secs',NULL,0,0,'',0,0,NULL,1,0,''),
 (606,129,'230 secs',NULL,0,0,'',0,0,NULL,1,0,''),
 (607,130,'30 points',NULL,0,0,'',0,0,NULL,1,0,''),
 (608,130,'20 points',NULL,0,0,'',0,0,NULL,1,0,''),
 (609,130,'10 points',NULL,1,0,'',0,0,NULL,1,0,''),
 (610,130,'12.5 points',NULL,0,0,'',0,0,NULL,1,0,''),
 (611,130,'23 points',NULL,0,0,'',0,0,NULL,1,0,''),
 (612,131,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (613,131,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (614,131,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (615,131,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (616,131,'e',NULL,1,0,'',0,0,NULL,1,0,''),
 (617,132,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (618,132,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (619,132,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (620,132,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (621,132,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (622,133,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (623,133,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (624,133,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (625,133,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (626,133,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (627,134,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (628,134,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (629,134,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (630,134,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (631,134,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (632,135,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (633,135,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (634,135,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (635,135,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (636,135,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (637,136,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (638,136,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (639,136,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (640,136,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (641,136,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (642,137,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (643,137,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (644,137,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (645,137,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (646,137,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (647,138,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (648,138,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (649,138,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (650,138,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (651,138,'e',NULL,1,0,'',0,0,NULL,1,0,''),
 (652,139,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (653,139,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (654,139,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (655,139,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (656,139,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (657,140,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (658,140,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (659,140,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (660,140,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (661,140,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (662,141,'RPSQ',NULL,1,0,'',0,0,NULL,1,0,''),
 (663,141,'QSPR',NULL,0,0,'',0,0,NULL,1,0,''),
 (664,141,'QSRP',NULL,0,0,'',0,0,NULL,1,0,''),
 (665,141,'RSQP',NULL,0,0,'',0,0,NULL,1,0,''),
 (666,142,'PQRS',NULL,0,0,'',0,0,NULL,1,0,''),
 (667,142,'RQPS',NULL,0,0,'',0,0,NULL,1,0,''),
 (668,142,'QPSR',NULL,1,0,'',0,0,NULL,1,0,''),
 (669,142,'RSPQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (670,143,'QPRS',NULL,1,0,'',0,0,NULL,1,0,''),
 (671,143,'QPSR',NULL,0,0,'',0,0,NULL,1,0,''),
 (672,143,'RQPS',NULL,0,0,'',0,0,NULL,1,0,''),
 (673,143,'SRPQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (674,144,'PRSQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (675,144,'QRSP',NULL,1,0,'',0,0,NULL,1,0,''),
 (676,144,'RSPQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (677,144,'RSPQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (678,145,'PQRS',NULL,0,0,'',0,0,NULL,1,0,''),
 (679,145,'QSPR',NULL,0,0,'',0,0,NULL,1,0,''),
 (680,145,'PRSQ',NULL,0,0,'',0,0,NULL,1,0,''),
 (681,145,'RQPS',NULL,1,0,'',0,0,NULL,1,0,''),
 (682,146,'there is a great number of books available to us',NULL,1,0,'',0,0,NULL,1,0,''),
 (683,146,'there is scarcity of books',NULL,0,0,'',0,0,NULL,1,0,''),
 (684,146,'there are only bad books in the market',NULL,0,0,'',0,0,NULL,1,0,''),
 (685,146,'none of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (686,147,'cost high price',NULL,0,0,'',0,0,NULL,1,0,''),
 (687,147,'come in paperback',NULL,0,0,'',0,0,NULL,1,0,''),
 (688,147,'corrupt our lives by suggesting evils',NULL,1,0,'',0,0,NULL,1,0,''),
 (689,147,'come in more than one volume',NULL,0,0,'',0,0,NULL,1,0,''),
 (690,148,'great books',NULL,0,0,'',0,0,NULL,1,0,''),
 (691,148,'rare books',NULL,0,0,'',0,0,NULL,1,0,''),
 (692,148,'biographies',NULL,0,0,'',0,0,NULL,1,0,''),
 (693,148,'classics',NULL,1,0,'',0,0,NULL,1,0,''),
 (694,149,'They affect our mind in a good way',NULL,0,0,'',0,0,NULL,1,0,''),
 (695,149,'They teach us something great and also entertain us',NULL,0,0,'',0,0,NULL,1,0,''),
 (696,149,'They help us in our spiritual growth',NULL,0,0,'',0,0,NULL,1,0,''),
 (697,149,'All the above',NULL,1,0,'',0,0,NULL,1,0,''),
 (698,150,'Spiritual enjoyment',NULL,0,0,'',0,0,NULL,1,0,''),
 (699,150,'Ennobling influence',NULL,1,0,'',0,0,NULL,1,0,''),
 (700,150,'high ideals',NULL,0,0,'',0,0,NULL,1,0,''),
 (701,150,'Very careful',NULL,0,0,'',0,0,NULL,1,0,''),
 (702,151,'Rs 2850',NULL,0,0,'',0,0,NULL,1,0,''),
 (703,151,'Rs 2750',NULL,0,0,'',0,0,NULL,1,0,''),
 (704,151,'Rs 2800',NULL,1,0,'',0,0,NULL,1,0,''),
 (705,151,'Rs 2900',NULL,0,0,'',0,0,NULL,1,0,''),
 (706,151,'Rs 3000',NULL,0,0,'',0,0,NULL,1,0,''),
 (707,152,'Rs 9000',NULL,1,0,'',0,0,NULL,1,0,''),
 (708,152,'Rs 7450',NULL,0,0,'',0,0,NULL,1,0,''),
 (709,152,'Rs 10500',NULL,0,0,'',0,0,NULL,1,0,''),
 (710,152,'Rs 8750',NULL,0,0,'',0,0,NULL,1,0,''),
 (711,152,'Rs 9500',NULL,0,0,'',0,0,NULL,1,0,''),
 (712,153,'Rs 6695',NULL,0,0,'',0,0,NULL,1,0,''),
 (713,153,'Rs 7500',NULL,0,0,'',0,0,NULL,1,0,''),
 (714,153,'Rs 8000',NULL,0,0,'',0,0,NULL,1,0,''),
 (715,153,'Rs 6795',NULL,1,0,'',0,0,NULL,1,0,''),
 (716,153,'Rs 6895',NULL,0,0,'',0,0,NULL,1,0,''),
 (717,154,'15%',NULL,0,0,'',0,0,NULL,1,0,''),
 (718,154,'11 (1/2) %',NULL,0,0,'',0,0,NULL,1,0,''),
 (719,154,'9 (1/2) %',NULL,0,0,'',0,0,NULL,1,0,''),
 (720,154,'12 %',NULL,0,0,'',0,0,NULL,1,0,''),
 (721,154,'10%',NULL,1,0,'',0,0,NULL,1,0,''),
 (722,155,'Rs 7750',NULL,0,0,'',0,0,NULL,1,0,''),
 (723,155,'Rs 8000',NULL,1,0,'',0,0,NULL,1,0,''),
 (724,155,'Rs 8500',NULL,0,0,'',0,0,NULL,1,0,''),
 (725,155,'Rs 7950',NULL,0,0,'',0,0,NULL,1,0,''),
 (726,155,'Rs 8250',NULL,0,0,'',0,0,NULL,1,0,''),
 (727,156,'10%',NULL,0,0,'',0,0,NULL,1,0,''),
 (728,156,'8(1/2) %',NULL,0,0,'',0,0,NULL,1,0,''),
 (729,156,'9%',NULL,0,0,'',0,0,NULL,1,0,''),
 (730,156,'8%',NULL,1,0,'',0,0,NULL,1,0,''),
 (731,156,'7(1/2)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (732,157,'7 (1/2)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (733,157,'15%',NULL,0,0,'',0,0,NULL,1,0,''),
 (734,157,'12%',NULL,1,0,'',0,0,NULL,1,0,''),
 (735,157,'10%',NULL,0,0,'',0,0,NULL,1,0,''),
 (736,157,'8%',NULL,0,0,'',0,0,NULL,1,0,''),
 (737,158,'Rs 8500',NULL,0,0,'',0,0,NULL,1,0,''),
 (738,158,'Rs 9950',NULL,0,0,'',0,0,NULL,1,0,''),
 (739,158,'Rs 15000',NULL,0,0,'',0,0,NULL,1,0,''),
 (740,158,'Rs 7500',NULL,0,0,'',0,0,NULL,1,0,''),
 (741,158,'Rs 10000',NULL,1,0,'',0,0,NULL,1,0,''),
 (742,159,'7 (1/2)',NULL,0,0,'',0,0,NULL,1,0,''),
 (743,159,'6 (2/3)',NULL,1,0,'',0,0,NULL,1,0,''),
 (744,159,'8 (3/4)',NULL,0,0,'',0,0,NULL,1,0,''),
 (745,159,'9 (3/2)',NULL,0,0,'',0,0,NULL,1,0,''),
 (746,159,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (747,160,'1:3',NULL,1,0,'',0,0,NULL,1,0,''),
 (748,160,'1:2',NULL,0,0,'',0,0,NULL,1,0,''),
 (749,160,'1:4',NULL,0,0,'',0,0,NULL,1,0,''),
 (750,160,'1:5',NULL,0,0,'',0,0,NULL,1,0,''),
 (751,160,'2:3',NULL,0,0,'',0,0,NULL,1,0,''),
 (752,161,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (753,161,'20',NULL,0,0,'',0,0,NULL,1,0,''),
 (754,161,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (755,161,'18',NULL,0,0,'',0,0,NULL,1,0,''),
 (756,161,'10',NULL,1,0,'',0,0,NULL,1,0,''),
 (757,162,'17',NULL,0,0,'',0,0,NULL,1,0,''),
 (758,162,'9',NULL,0,0,'',0,0,NULL,1,0,''),
 (759,162,'10',NULL,1,0,'',0,0,NULL,1,0,''),
 (760,162,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (761,162,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (762,163,'10',NULL,1,0,'',0,0,NULL,1,0,''),
 (763,163,'14',NULL,0,0,'',0,0,NULL,1,0,''),
 (764,163,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (765,163,'22',NULL,0,0,'',0,0,NULL,1,0,''),
 (766,163,'23',NULL,0,0,'',0,0,NULL,1,0,''),
 (767,164,'055',NULL,0,0,'',0,0,NULL,1,0,''),
 (768,164,'077',NULL,0,0,'',0,0,NULL,1,0,''),
 (769,164,'066',NULL,0,0,'',0,0,NULL,1,0,''),
 (770,164,'088',NULL,1,0,'',0,0,NULL,1,0,''),
 (771,164,'099',NULL,0,0,'',0,0,NULL,1,0,''),
 (772,165,'19',NULL,0,0,'',0,0,NULL,1,0,''),
 (773,165,'21',NULL,0,0,'',0,0,NULL,1,0,''),
 (774,165,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (775,165,'16',NULL,0,0,'',0,0,NULL,1,0,''),
 (776,165,'31',NULL,1,0,'',0,0,NULL,1,0,''),
 (777,166,'22',NULL,0,0,'',0,0,NULL,1,0,''),
 (778,166,'15',NULL,1,0,'',0,0,NULL,1,0,''),
 (779,166,'33',NULL,0,0,'',0,0,NULL,1,0,''),
 (780,166,'37',NULL,0,0,'',0,0,NULL,1,0,''),
 (781,166,'25',NULL,0,0,'',0,0,NULL,1,0,''),
 (782,167,'13',NULL,0,0,'',0,0,NULL,1,0,''),
 (783,167,'17',NULL,1,0,'',0,0,NULL,1,0,''),
 (784,167,'19',NULL,0,0,'',0,0,NULL,1,0,''),
 (785,167,'18',NULL,0,0,'',0,0,NULL,1,0,''),
 (786,167,'20',NULL,0,0,'',0,0,NULL,1,0,''),
 (787,168,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (788,168,'16',NULL,0,0,'',0,0,NULL,1,0,''),
 (789,168,'17',NULL,1,0,'',0,0,NULL,1,0,''),
 (790,168,'18',NULL,0,0,'',0,0,NULL,1,0,''),
 (791,168,'19',NULL,0,0,'',0,0,NULL,1,0,''),
 (792,169,'31',NULL,1,0,'',0,0,NULL,1,0,''),
 (793,169,'36',NULL,0,0,'',0,0,NULL,1,0,''),
 (794,169,'33',NULL,0,0,'',0,0,NULL,1,0,''),
 (795,169,'38',NULL,0,0,'',0,0,NULL,1,0,''),
 (796,169,'35',NULL,0,0,'',0,0,NULL,1,0,''),
 (797,170,'1558',NULL,0,0,'',0,0,NULL,1,0,''),
 (798,170,'1808',NULL,0,0,'',0,0,NULL,1,0,''),
 (799,170,'1208',NULL,0,0,'',0,0,NULL,1,0,''),
 (800,170,'1850',NULL,0,0,'',0,0,NULL,1,0,''),
 (801,170,'1082',NULL,1,0,'',0,0,NULL,1,0,''),
 (802,171,'Working force of a country',NULL,0,0,'',0,0,NULL,1,0,''),
 (803,171,'Technology developed in a country',NULL,0,0,'',0,0,NULL,1,0,''),
 (804,171,'Climatic conditions in a country',NULL,0,0,'',0,0,NULL,1,0,''),
 (805,171,'Raw materials available in a country',NULL,1,0,'',0,0,NULL,1,0,''),
 (806,172,'do not create jobs',NULL,0,0,'',0,0,NULL,1,0,''),
 (807,172,'pay minimum wages and exploit natural resources',NULL,1,0,'',0,0,NULL,1,0,''),
 (808,172,'do not bring in new technology',NULL,0,0,'',0,0,NULL,1,0,''),
 (809,172,'make huge profits',NULL,0,0,'',0,0,NULL,1,0,''),
 (810,173,'are a boon to the third world countries',NULL,0,0,'',0,0,NULL,1,0,''),
 (811,173,'become prosperous at the expense of poor countries',NULL,1,0,'',0,0,NULL,1,0,''),
 (812,173,'facilitate the economic growth of poor nations',NULL,0,0,'',0,0,NULL,1,0,''),
 (813,173,'bring technological innovations to poor countries',NULL,0,0,'',0,0,NULL,1,0,''),
 (814,174,'make huge profits',NULL,0,0,'',0,0,NULL,1,0,''),
 (815,174,'operate in at least six countries',NULL,0,0,'',0,0,NULL,1,0,''),
 (816,174,'exploit their employees in the third world',NULL,0,0,'',0,0,NULL,1,0,''),
 (817,174,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (818,175,'Introduction of new gadgets',NULL,0,0,'',0,0,NULL,1,0,''),
 (819,175,'Creation of more jobs',NULL,0,0,'',0,0,NULL,1,0,''),
 (820,175,'Transfer of technical know-how',NULL,1,0,'',0,0,NULL,1,0,''),
 (821,175,'Development of scientific knowledge',NULL,0,0,'',0,0,NULL,1,0,''),
 (822,176,'pulling sledges in the snow',NULL,1,0,'',0,0,NULL,1,0,''),
 (823,176,'helping with farming',NULL,0,0,'',0,0,NULL,1,0,''),
 (824,176,'helping with many things',NULL,0,0,'',0,0,NULL,1,0,''),
 (825,176,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (826,177,'3 inches',NULL,0,0,'',0,0,NULL,1,0,''),
 (827,177,'5 inches',NULL,0,0,'',0,0,NULL,1,0,''),
 (828,177,'6 inches',NULL,1,0,'',0,0,NULL,1,0,''),
 (829,177,'13 inches',NULL,0,0,'',0,0,NULL,1,0,''),
 (830,178,'1 foot',NULL,0,0,'',0,0,NULL,1,0,''),
 (831,178,'3 feet',NULL,1,0,'',0,0,NULL,1,0,''),
 (832,178,'2 feet',NULL,0,0,'',0,0,NULL,1,0,''),
 (833,178,'5 feet',NULL,0,0,'',0,0,NULL,1,0,''),
 (834,179,'see',NULL,0,0,'',0,0,NULL,1,0,''),
 (835,179,'hear',NULL,0,0,'',0,0,NULL,1,0,''),
 (836,179,'smell',NULL,0,0,'',0,0,NULL,1,0,''),
 (837,179,'Both B and C are correct',NULL,1,0,'',0,0,NULL,1,0,''),
 (838,180,'5 years old',NULL,0,0,'',0,0,NULL,1,0,''),
 (839,180,'10 years old',NULL,0,0,'',0,0,NULL,1,0,''),
 (840,180,'24 years old',NULL,1,0,'',0,0,NULL,1,0,''),
 (841,180,'13 years old',NULL,0,0,'',0,0,NULL,1,0,''),
 (842,181,'1,52,897',NULL,0,0,'',0,0,NULL,1,0,''),
 (843,181,'1,64,850',NULL,1,0,'',0,0,NULL,1,0,''),
 (844,181,'1,67,749',NULL,0,0,'',0,0,NULL,1,0,''),
 (845,181,'1,49,700',NULL,0,0,'',0,0,NULL,1,0,''),
 (846,181,'1,69,700',NULL,0,0,'',0,0,NULL,1,0,''),
 (847,182,'22.53',NULL,1,0,'',0,0,NULL,1,0,''),
 (848,182,'22.23',NULL,0,0,'',0,0,NULL,1,0,''),
 (849,182,'22.23',NULL,0,0,'',0,0,NULL,1,0,''),
 (850,182,'32.53',NULL,0,0,'',0,0,NULL,1,0,''),
 (851,182,'12.23',NULL,0,0,'',0,0,NULL,1,0,''),
 (852,183,'25.56',NULL,0,0,'',0,0,NULL,1,0,''),
 (853,183,'20.36',NULL,0,0,'',0,0,NULL,1,0,''),
 (854,183,'32.36',NULL,0,0,'',0,0,NULL,1,0,''),
 (855,183,'22.46',NULL,0,0,'',0,0,NULL,1,0,''),
 (856,183,'22.56',NULL,1,0,'',0,0,NULL,1,0,''),
 (857,184,'Yes',NULL,1,0,'',0,0,NULL,1,0,''),
 (858,184,'No',NULL,0,0,'',0,0,NULL,1,0,''),
 (859,184,'A = G = H',NULL,0,0,'',0,0,NULL,1,0,''),
 (860,184,'A &ge; G < H',NULL,0,0,'',0,0,NULL,1,0,''),
 (861,184,'A < G &ge; H',NULL,0,0,'',0,0,NULL,1,0,''),
 (862,185,'44',NULL,0,0,'',0,0,NULL,1,0,''),
 (863,185,'78',NULL,0,0,'',0,0,NULL,1,0,''),
 (864,185,'32',NULL,0,0,'',0,0,NULL,1,0,''),
 (865,185,'64',NULL,1,0,'',0,0,NULL,1,0,''),
 (866,185,'68',NULL,0,0,'',0,0,NULL,1,0,''),
 (867,186,'2, 6 and 16',NULL,0,0,'',0,0,NULL,1,0,''),
 (868,186,'2, 6 and 15',NULL,0,0,'',0,0,NULL,1,0,''),
 (869,186,'2, 5 and 18',NULL,0,0,'',0,0,NULL,1,0,''),
 (870,186,'2, 4 and 18',NULL,0,0,'',0,0,NULL,1,0,''),
 (871,186,'2, 6 and 18',NULL,1,0,'',0,0,NULL,1,0,''),
 (872,187,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (873,187,'7',NULL,1,0,'',0,0,NULL,1,0,''),
 (874,187,'9',NULL,0,0,'',0,0,NULL,1,0,''),
 (875,187,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (876,187,'13',NULL,0,0,'',0,0,NULL,1,0,''),
 (877,188,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (878,188,'7',NULL,0,0,'',0,0,NULL,1,0,''),
 (879,188,'9',NULL,1,0,'',0,0,NULL,1,0,''),
 (880,188,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (881,188,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (882,189,'130',NULL,0,0,'',0,0,NULL,1,0,''),
 (883,189,'100',NULL,1,0,'',0,0,NULL,1,0,''),
 (884,189,'50',NULL,0,0,'',0,0,NULL,1,0,''),
 (885,189,'120',NULL,0,0,'',0,0,NULL,1,0,''),
 (886,189,'200',NULL,0,0,'',0,0,NULL,1,0,''),
 (887,190,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (888,190,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (889,190,'2',NULL,1,0,'',0,0,NULL,1,0,''),
 (890,190,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (891,190,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (892,191,'R / B * S',NULL,0,0,'',0,0,NULL,1,0,''),
 (893,191,'R + D / E * S',NULL,1,0,'',0,0,NULL,1,0,''),
 (894,191,'S / R * A',NULL,0,0,'',0,0,NULL,1,0,''),
 (895,191,'R + D *E / S',NULL,0,0,'',0,0,NULL,1,0,''),
 (896,191,'R * A / S',NULL,0,0,'',0,0,NULL,1,0,''),
 (897,192,'A * M / T',NULL,0,0,'',0,0,NULL,1,0,''),
 (898,192,'K + A * M',NULL,0,0,'',0,0,NULL,1,0,''),
 (899,192,'K * M + A',NULL,1,0,'',0,0,NULL,1,0,''),
 (900,192,'A + M  T',NULL,0,0,'',0,0,NULL,1,0,''),
 (901,192,'None of above',NULL,0,0,'',0,0,NULL,1,0,''),
 (902,193,'T * M  + S - K',NULL,0,0,'',0,0,NULL,1,0,''),
 (903,193,'K - S  * M  T',NULL,0,0,'',0,0,NULL,1,0,''),
 (904,193,'T + M * S + K',NULL,0,0,'',0,0,NULL,1,0,''),
 (905,193,'T * S + M - K',NULL,0,0,'',0,0,NULL,1,0,''),
 (906,193,'None of the above',NULL,1,0,'',0,0,NULL,1,0,''),
 (907,194,'A+X*B',NULL,0,0,'',0,0,NULL,1,0,''),
 (908,194,'A/X-B',NULL,0,0,'',0,0,NULL,1,0,''),
 (909,194,'A-X*B',NULL,0,0,'',0,0,NULL,1,0,''),
 (910,194,'A/X*B',NULL,1,0,'',0,0,NULL,1,0,''),
 (911,194,'A/X+B',NULL,0,0,'',0,0,NULL,1,0,''),
 (912,195,'T is N\'s daughter',NULL,0,0,'',0,0,NULL,1,0,''),
 (913,195,'N is the wife of Q',NULL,1,0,'',0,0,NULL,1,0,''),
 (914,195,'M is the mother-in-law of Q',NULL,0,0,'',0,0,NULL,1,0,''),
 (915,195,'Q is the wife of  N',NULL,0,0,'',0,0,NULL,1,0,''),
 (916,195,'T is grand-daughter of M',NULL,0,0,'',0,0,NULL,1,0,''),
 (917,196,'FBACDE',NULL,0,0,'',0,0,NULL,1,0,''),
 (918,196,'BACDEF',NULL,1,0,'',0,0,NULL,1,0,''),
 (919,196,'EDBACF',NULL,0,0,'',0,0,NULL,1,0,''),
 (920,196,'ACFEDB',NULL,0,0,'',0,0,NULL,1,0,''),
 (921,196,'ACEFDB',NULL,0,0,'',0,0,NULL,1,0,''),
 (922,197,'9',NULL,0,0,'',0,0,NULL,1,0,''),
 (923,197,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (924,197,'7',NULL,0,0,'',0,0,NULL,1,0,''),
 (925,197,'8',NULL,0,0,'',0,0,NULL,1,0,''),
 (926,197,'4',NULL,1,0,'',0,0,NULL,1,0,''),
 (927,198,'0',NULL,1,0,'',0,0,NULL,1,0,''),
 (928,198,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (929,198,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (930,198,'7',NULL,0,0,'',0,0,NULL,1,0,''),
 (931,198,'8',NULL,0,0,'',0,0,NULL,1,0,''),
 (932,199,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (933,199,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (934,199,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (935,199,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (936,199,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (937,200,'Letter \"F\" can occupy the first or second position from the left.',NULL,0,0,'',0,0,NULL,1,0,''),
 (938,200,'Letter \"B\" may not occupy the first position from the left.',NULL,0,0,'',0,0,NULL,1,0,''),
 (939,200,'Letter \"C\" can occupy the second position from the left.',NULL,0,0,'',0,0,NULL,1,0,''),
 (940,200,'Letter \"D\" can occupy the fourth, fifth or sixth position from the left.',NULL,1,0,'',0,0,NULL,1,0,''),
 (941,200,'Letter \"F\" can occupy the first or third position from the right.',NULL,0,0,'',0,0,NULL,1,0,''),
 (942,201,'a, the, an, the',NULL,0,0,'',0,0,NULL,1,0,''),
 (943,201,'a, no article , the, an',NULL,1,0,'',0,0,NULL,1,0,''),
 (944,201,'an, no article, a, the',NULL,0,0,'',0,0,NULL,1,0,''),
 (945,201,'no article, an, the, a',NULL,0,0,'',0,0,NULL,1,0,''),
 (946,202,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (947,202,'an',NULL,0,0,'',0,0,NULL,1,0,''),
 (948,202,'the',NULL,0,0,'',0,0,NULL,1,0,''),
 (949,202,'no article',NULL,0,0,'',0,0,NULL,1,0,''),
 (950,203,'The, a, the, a',NULL,0,0,'',0,0,NULL,1,0,''),
 (951,203,'An, the, a, a',NULL,0,0,'',0,0,NULL,1,0,''),
 (952,203,'An, the, a, the',NULL,0,0,'',0,0,NULL,1,0,''),
 (953,203,'An, the, the, the',NULL,1,0,'',0,0,NULL,1,0,''),
 (954,204,'The',NULL,1,0,'',0,0,NULL,1,0,''),
 (955,204,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (956,204,'An',NULL,0,0,'',0,0,NULL,1,0,''),
 (957,204,'No article',NULL,0,0,'',0,0,NULL,1,0,''),
 (958,205,'an',NULL,0,0,'',0,0,NULL,1,0,''),
 (959,205,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (960,205,'the',NULL,0,0,'',0,0,NULL,1,0,''),
 (961,205,'no article',NULL,0,0,'',0,0,NULL,1,0,''),
 (962,206,'through',NULL,0,0,'',0,0,NULL,1,0,''),
 (963,206,'by',NULL,0,0,'',0,0,NULL,1,0,''),
 (964,206,'since',NULL,1,0,'',0,0,NULL,1,0,''),
 (965,206,'on',NULL,0,0,'',0,0,NULL,1,0,''),
 (966,207,'on',NULL,0,0,'',0,0,NULL,1,0,''),
 (967,207,'over',NULL,0,0,'',0,0,NULL,1,0,''),
 (968,207,'for',NULL,0,0,'',0,0,NULL,1,0,''),
 (969,207,'at',NULL,1,0,'',0,0,NULL,1,0,''),
 (970,208,'near the railway station',NULL,0,0,'',0,0,NULL,1,0,''),
 (971,208,'in front of the hostel',NULL,0,0,'',0,0,NULL,1,0,''),
 (972,208,'for the show-room',NULL,0,0,'',0,0,NULL,1,0,''),
 (973,208,'against this building',NULL,1,0,'',0,0,NULL,1,0,''),
 (974,209,'until',NULL,0,0,'',0,0,NULL,1,0,''),
 (975,209,'till',NULL,1,0,'',0,0,NULL,1,0,''),
 (976,209,'on',NULL,0,0,'',0,0,NULL,1,0,''),
 (977,209,'along',NULL,0,0,'',0,0,NULL,1,0,''),
 (978,210,'at, in',NULL,1,0,'',0,0,NULL,1,0,''),
 (979,210,'on, in',NULL,0,0,'',0,0,NULL,1,0,''),
 (980,210,'no preposition, in',NULL,0,0,'',0,0,NULL,1,0,''),
 (981,210,'to, in',NULL,0,0,'',0,0,NULL,1,0,''),
 (982,211,'Rs 14000',NULL,0,0,'',0,0,NULL,1,0,''),
 (983,211,'Rs 15000',NULL,1,0,'',0,0,NULL,1,0,''),
 (984,211,'Rs 16000',NULL,0,0,'',0,0,NULL,1,0,''),
 (985,211,'Rs 15250',NULL,0,0,'',0,0,NULL,1,0,''),
 (986,211,'Rs 15750',NULL,0,0,'',0,0,NULL,1,0,''),
 (987,212,'Rs 2500',NULL,0,0,'',0,0,NULL,1,0,''),
 (988,212,'Rs 1300',NULL,0,0,'',0,0,NULL,1,0,''),
 (989,212,'Rs 2100',NULL,0,0,'',0,0,NULL,1,0,''),
 (990,212,'Rs 3200',NULL,0,0,'',0,0,NULL,1,0,''),
 (991,212,'Rs 2300',NULL,1,0,'',0,0,NULL,1,0,''),
 (992,213,'19:18:17',NULL,0,0,'',0,0,NULL,1,0,''),
 (993,213,'18:19:20',NULL,0,0,'',0,0,NULL,1,0,''),
 (994,213,'19:19:18',NULL,1,0,'',0,0,NULL,1,0,''),
 (995,213,'1:1:2',NULL,0,0,'',0,0,NULL,1,0,''),
 (996,213,'1:1:1',NULL,0,0,'',0,0,NULL,1,0,''),
 (997,214,'Rs 3600',NULL,1,0,'',0,0,NULL,1,0,''),
 (998,214,'Rs 1300',NULL,0,0,'',0,0,NULL,1,0,''),
 (999,214,'Rs 2100',NULL,0,0,'',0,0,NULL,1,0,''),
 (1000,214,'Rs 3200',NULL,0,0,'',0,0,NULL,1,0,''),
 (1001,214,'Rs 2500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1002,215,'Rs 3200',NULL,0,0,'',0,0,NULL,1,0,''),
 (1003,215,'Rs 1300',NULL,0,0,'',0,0,NULL,1,0,''),
 (1004,215,'Rs 2100',NULL,0,0,'',0,0,NULL,1,0,''),
 (1005,215,'Rs 5000',NULL,1,0,'',0,0,NULL,1,0,''),
 (1006,215,'Rs 2500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1007,216,'Rs 1500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1008,216,'Rs 900',NULL,1,0,'',0,0,NULL,1,0,''),
 (1009,216,'Rs 2100',NULL,0,0,'',0,0,NULL,1,0,''),
 (1010,216,'Rs1200',NULL,0,0,'',0,0,NULL,1,0,''),
 (1011,216,'Rs 2500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1012,217,'Rs 135',NULL,0,0,'',0,0,NULL,1,0,''),
 (1013,217,'Rs 200',NULL,0,0,'',0,0,NULL,1,0,''),
 (1014,217,'Rs 120',NULL,1,0,'',0,0,NULL,1,0,''),
 (1015,217,'Rs 300',NULL,0,0,'',0,0,NULL,1,0,''),
 (1016,217,'Rs 95',NULL,0,0,'',0,0,NULL,1,0,''),
 (1017,218,'Rs 9000',NULL,1,0,'',0,0,NULL,1,0,''),
 (1018,218,'Rs 4300',NULL,0,0,'',0,0,NULL,1,0,''),
 (1019,218,'Rs 8100',NULL,0,0,'',0,0,NULL,1,0,''),
 (1020,218,'Rs 3200',NULL,0,0,'',0,0,NULL,1,0,''),
 (1021,218,'Rs 7500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1022,219,'Rs 14300',NULL,0,0,'',0,0,NULL,1,0,''),
 (1023,219,'Rs 12800',NULL,1,0,'',0,0,NULL,1,0,''),
 (1024,219,'Rs 8100',NULL,0,0,'',0,0,NULL,1,0,''),
 (1025,219,'Rs 13200',NULL,0,0,'',0,0,NULL,1,0,''),
 (1026,219,'Rs 17500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1027,220,'Rs 8100',NULL,0,0,'',0,0,NULL,1,0,''),
 (1028,220,'Rs 4300',NULL,0,0,'',0,0,NULL,1,0,''),
 (1029,220,'Rs 4200',NULL,1,0,'',0,0,NULL,1,0,''),
 (1030,220,'Rs 3200',NULL,0,0,'',0,0,NULL,1,0,''),
 (1031,220,'Rs 7500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1032,221,'0.0025',NULL,0,0,'',0,0,NULL,1,0,''),
 (1033,221,'0.0256',NULL,0,0,'',0,0,NULL,1,0,''),
 (1034,221,'0.00027',NULL,1,0,'',0,0,NULL,1,0,''),
 (1035,221,'0. 000126',NULL,0,0,'',0,0,NULL,1,0,''),
 (1036,221,'0.000256',NULL,0,0,'',0,0,NULL,1,0,''),
 (1037,222,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1038,222,'4',NULL,1,0,'',0,0,NULL,1,0,''),
 (1039,222,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (1040,222,'8',NULL,0,0,'',0,0,NULL,1,0,''),
 (1041,222,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (1042,223,'7.35',NULL,1,0,'',0,0,NULL,1,0,''),
 (1043,223,'6.25',NULL,0,0,'',0,0,NULL,1,0,''),
 (1044,223,'8.15',NULL,0,0,'',0,0,NULL,1,0,''),
 (1045,223,'6.95',NULL,0,0,'',0,0,NULL,1,0,''),
 (1046,223,'8.25',NULL,0,0,'',0,0,NULL,1,0,''),
 (1047,224,'16',NULL,0,0,'',0,0,NULL,1,0,''),
 (1048,224,'1.6',NULL,1,0,'',0,0,NULL,1,0,''),
 (1049,224,'0.16',NULL,0,0,'',0,0,NULL,1,0,''),
 (1050,224,'0.016',NULL,0,0,'',0,0,NULL,1,0,''),
 (1051,224,'0.0016',NULL,0,0,'',0,0,NULL,1,0,''),
 (1052,225,'47.095',NULL,0,0,'',0,0,NULL,1,0,''),
 (1053,225,'47.752',NULL,0,0,'',0,0,NULL,1,0,''),
 (1054,225,'47.932',NULL,0,0,'',0,0,NULL,1,0,''),
 (1055,225,'47.95',NULL,1,0,'',0,0,NULL,1,0,''),
 (1056,225,'47.295',NULL,0,0,'',0,0,NULL,1,0,''),
 (1057,226,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1058,226,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (1059,226,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (1060,226,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (1061,226,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (1062,227,'1.9832',NULL,1,0,'',0,0,NULL,1,0,''),
 (1063,227,'1.9831',NULL,0,0,'',0,0,NULL,1,0,''),
 (1064,227,'1.8831',NULL,0,0,'',0,0,NULL,1,0,''),
 (1065,227,'1.9952',NULL,0,0,'',0,0,NULL,1,0,''),
 (1066,227,'1.8852',NULL,0,0,'',0,0,NULL,1,0,''),
 (1067,228,'233',NULL,0,0,'',0,0,NULL,1,0,''),
 (1068,228,'23.3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1069,228,'0.233',NULL,0,0,'',0,0,NULL,1,0,''),
 (1070,228,'0.0233',NULL,1,0,'',0,0,NULL,1,0,''),
 (1071,228,'0.00233',NULL,0,0,'',0,0,NULL,1,0,''),
 (1072,229,'42525.787',NULL,1,0,'',0,0,NULL,1,0,''),
 (1073,229,'42135.364',NULL,0,0,'',0,0,NULL,1,0,''),
 (1074,229,'68395.387',NULL,0,0,'',0,0,NULL,1,0,''),
 (1075,229,'91246.023',NULL,0,0,'',0,0,NULL,1,0,''),
 (1076,229,'71246.22',NULL,0,0,'',0,0,NULL,1,0,''),
 (1077,230,'(i) (3/5) (ii) (751/250) (iii) (7/1251)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1078,230,'(i) (3/4) (ii) (751/250) (iii) (7/1250)',NULL,1,0,'',0,0,NULL,1,0,''),
 (1079,230,'(i) (3/3) (ii) (751/252) (iii) (7/1250)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1080,230,'(i) (3/2) (ii) (750/250) (iii) (6/1250)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1081,230,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1082,231,'Window : Bedroom',NULL,0,0,'',0,0,NULL,1,0,''),
 (1083,231,'Lament : Bereavement',NULL,1,0,'',0,0,NULL,1,0,''),
 (1084,231,'Pot : Pan',NULL,0,0,'',0,0,NULL,1,0,''),
 (1085,231,'Face : Penalty',NULL,0,0,'',0,0,NULL,1,0,''),
 (1086,232,'Muscle : spasm',NULL,0,0,'',0,0,NULL,1,0,''),
 (1087,232,'Brain : Context',NULL,0,0,'',0,0,NULL,1,0,''),
 (1088,232,'Organ : Kidney',NULL,0,0,'',0,0,NULL,1,0,''),
 (1089,232,'Generator : Current',NULL,1,0,'',0,0,NULL,1,0,''),
 (1090,233,'Blare : Hearing',NULL,0,0,'',0,0,NULL,1,0,''),
 (1091,233,'Aroma : Smelling',NULL,0,0,'',0,0,NULL,1,0,''),
 (1092,233,'Astigmatism : Sight',NULL,1,0,'',0,0,NULL,1,0,''),
 (1093,233,'Novocaine : Touch',NULL,0,0,'',0,0,NULL,1,0,''),
 (1094,234,'Misogynist : Women',NULL,1,0,'',0,0,NULL,1,0,''),
 (1095,234,'Teacher : Classroom',NULL,0,0,'',0,0,NULL,1,0,''),
 (1096,234,'Capitalist : Communist',NULL,0,0,'',0,0,NULL,1,0,''),
 (1097,234,'Scholar : Knowledge',NULL,0,0,'',0,0,NULL,1,0,''),
 (1098,235,'Flight : Escape',NULL,0,0,'',0,0,NULL,1,0,''),
 (1099,235,'Accident : Injury',NULL,0,0,'',0,0,NULL,1,0,''),
 (1100,235,'Peace : War',NULL,0,0,'',0,0,NULL,1,0,''),
 (1101,235,'Destination : Traveller',NULL,1,0,'',0,0,NULL,1,0,''),
 (1102,236,'Steal : Human',NULL,0,0,'',0,0,NULL,1,0,''),
 (1103,236,'Proclaim : Impose',NULL,0,0,'',0,0,NULL,1,0,''),
 (1104,236,'Clandestine : Secret',NULL,1,0,'',0,0,NULL,1,0,''),
 (1105,236,'Stringent : Inflation',NULL,0,0,'',0,0,NULL,1,0,''),
 (1106,237,'Charred : Shapeless',NULL,1,0,'',0,0,NULL,1,0,''),
 (1107,237,'Slightly : Detectable',NULL,0,0,'',0,0,NULL,1,0,''),
 (1108,237,'Careless : Spending',NULL,0,0,'',0,0,NULL,1,0,''),
 (1109,237,'Traits : Peculiar',NULL,0,0,'',0,0,NULL,1,0,''),
 (1110,238,'Polyhedron : Ten',NULL,0,0,'',0,0,NULL,1,0,''),
 (1111,238,'Dodecahedron : Twelve',NULL,1,0,'',0,0,NULL,1,0,''),
 (1112,238,'Pyramid : Six',NULL,0,0,'',0,0,NULL,1,0,''),
 (1113,238,'Pentagon : Six',NULL,0,0,'',0,0,NULL,1,0,''),
 (1114,239,'Circularise : Combination',NULL,0,0,'',0,0,NULL,1,0,''),
 (1115,239,'Circumference : Harmonic',NULL,0,0,'',0,0,NULL,1,0,''),
 (1116,239,'Conjugate : Pair',NULL,1,0,'',0,0,NULL,1,0,''),
 (1117,239,'Damping : Stationary',NULL,0,0,'',0,0,NULL,1,0,''),
 (1118,240,'Colic : Shear',NULL,0,0,'',0,0,NULL,1,0,''),
 (1119,240,'Travesty : Spiritual',NULL,0,0,'',0,0,NULL,1,0,''),
 (1120,240,'Accomplish : Abandon',NULL,1,0,'',0,0,NULL,1,0,''),
 (1121,240,'Rational : Temptation',NULL,0,0,'',0,0,NULL,1,0,''),
 (1122,241,'&radic;2',NULL,1,0,'',0,0,NULL,1,0,''),
 (1123,241,'&radic;5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1124,241,'&radic;3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1125,241,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1126,241,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1127,242,'5',NULL,1,0,'',0,0,NULL,1,0,''),
 (1128,242,'5&radic;2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1129,242,'&radic;5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1130,242,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1131,242,'25',NULL,0,0,'',0,0,NULL,1,0,''),
 (1132,243,'(4/9)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1133,243,'(9/4)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1134,243,'(16/81)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1135,243,'(81/16)',NULL,1,0,'',0,0,NULL,1,0,''),
 (1136,243,'(16/9)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1137,244,'10^3',NULL,1,0,'',0,0,NULL,1,0,''),
 (1138,244,'10^2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1139,244,'10^4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1140,244,'11^3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1141,244,'11^2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1142,245,'125',NULL,0,0,'',0,0,NULL,1,0,''),
 (1143,245,'3125',NULL,1,0,'',0,0,NULL,1,0,''),
 (1144,245,'25',NULL,0,0,'',0,0,NULL,1,0,''),
 (1145,245,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1146,245,'625',NULL,0,0,'',0,0,NULL,1,0,''),
 (1147,246,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1148,246,'2',NULL,1,0,'',0,0,NULL,1,0,''),
 (1149,246,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1150,246,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1151,246,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1152,247,'(4/9)',NULL,1,0,'',0,0,NULL,1,0,''),
 (1153,247,'(9/4)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1154,247,'(16/81)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1155,247,'(81/16)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1156,247,'(16/9)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1157,248,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (1158,248,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1159,248,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1160,248,'8',NULL,0,0,'',0,0,NULL,1,0,''),
 (1161,248,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (1162,249,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1163,249,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1164,249,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1165,249,'7',NULL,1,0,'',0,0,NULL,1,0,''),
 (1166,249,'8',NULL,0,0,'',0,0,NULL,1,0,''),
 (1167,250,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1168,250,'4.5',NULL,1,0,'',0,0,NULL,1,0,''),
 (1169,250,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1170,250,'3.5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1171,250,'14',NULL,0,0,'',0,0,NULL,1,0,''),
 (1172,251,'KF',NULL,0,0,'',0,0,NULL,1,0,''),
 (1173,251,'RX',NULL,0,0,'',0,0,NULL,1,0,''),
 (1174,251,'YB',NULL,1,0,'',0,0,NULL,1,0,''),
 (1175,251,'TS',NULL,0,0,'',0,0,NULL,1,0,''),
 (1176,251,'TU',NULL,0,0,'',0,0,NULL,1,0,''),
 (1177,252,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1178,252,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1179,252,'3',NULL,1,0,'',0,0,NULL,1,0,''),
 (1180,252,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1181,252,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1182,253,'9',NULL,0,0,'',0,0,NULL,1,0,''),
 (1183,253,'13',NULL,1,0,'',0,0,NULL,1,0,''),
 (1184,253,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (1185,253,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (1186,253,'13',NULL,0,0,'',0,0,NULL,1,0,''),
 (1187,254,'99',NULL,0,0,'',0,0,NULL,1,0,''),
 (1188,254,'97',NULL,1,0,'',0,0,NULL,1,0,''),
 (1189,254,'98',NULL,0,0,'',0,0,NULL,1,0,''),
 (1190,254,'101',NULL,0,0,'',0,0,NULL,1,0,''),
 (1191,254,'100',NULL,0,0,'',0,0,NULL,1,0,''),
 (1192,255,'147',NULL,1,0,'',0,0,NULL,1,0,''),
 (1193,255,'165',NULL,0,0,'',0,0,NULL,1,0,''),
 (1194,255,'199',NULL,0,0,'',0,0,NULL,1,0,''),
 (1195,255,'154',NULL,0,0,'',0,0,NULL,1,0,''),
 (1196,255,'166',NULL,0,0,'',0,0,NULL,1,0,''),
 (1197,256,'M',NULL,0,0,'',0,0,NULL,1,0,''),
 (1198,256,'L',NULL,0,0,'',0,0,NULL,1,0,''),
 (1199,256,'K',NULL,1,0,'',0,0,NULL,1,0,''),
 (1200,256,'H',NULL,0,0,'',0,0,NULL,1,0,''),
 (1201,256,'J',NULL,0,0,'',0,0,NULL,1,0,''),
 (1202,257,'L',NULL,0,0,'',0,0,NULL,1,0,''),
 (1203,257,'K',NULL,1,0,'',0,0,NULL,1,0,''),
 (1204,257,'J',NULL,0,0,'',0,0,NULL,1,0,''),
 (1205,257,'I',NULL,0,0,'',0,0,NULL,1,0,''),
 (1206,257,'H',NULL,0,0,'',0,0,NULL,1,0,''),
 (1207,258,'R, D',NULL,1,0,'',0,0,NULL,1,0,''),
 (1208,258,'R, E',NULL,0,0,'',0,0,NULL,1,0,''),
 (1209,258,'S, E',NULL,0,0,'',0,0,NULL,1,0,''),
 (1210,258,'Q, D',NULL,0,0,'',0,0,NULL,1,0,''),
 (1211,258,'Q, E',NULL,0,0,'',0,0,NULL,1,0,''),
 (1212,259,'N, C',NULL,1,0,'',0,0,NULL,1,0,''),
 (1213,259,'N, D',NULL,0,0,'',0,0,NULL,1,0,''),
 (1214,259,'O, C',NULL,0,0,'',0,0,NULL,1,0,''),
 (1215,259,'O, D',NULL,0,0,'',0,0,NULL,1,0,''),
 (1216,259,'O, E',NULL,0,0,'',0,0,NULL,1,0,''),
 (1217,260,'H, G',NULL,0,0,'',0,0,NULL,1,0,''),
 (1218,260,'H, I',NULL,0,0,'',0,0,NULL,1,0,''),
 (1219,260,'I, H',NULL,0,0,'',0,0,NULL,1,0,''),
 (1220,260,'J, I',NULL,1,0,'',0,0,NULL,1,0,''),
 (1221,260,'I, J',NULL,0,0,'',0,0,NULL,1,0,''),
 (1222,261,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1223,261,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (1224,261,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (1225,261,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (1226,262,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1227,262,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (1228,262,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (1229,262,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (1230,263,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1231,263,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (1232,263,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (1233,263,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (1234,264,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1235,264,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (1236,264,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (1237,264,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (1238,265,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1239,265,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (1240,265,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (1241,265,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (1242,266,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1243,266,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (1244,266,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (1245,266,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (1246,267,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1247,267,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (1248,267,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (1249,267,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (1250,268,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1251,268,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (1252,268,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (1253,268,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (1254,269,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (1255,269,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (1256,269,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (1257,269,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (1258,270,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1259,270,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (1260,270,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (1261,270,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (1262,271,'13000 m&sup2;',NULL,0,0,'',0,0,NULL,1,0,''),
 (1263,271,'15000 m&sup2;',NULL,0,0,'',0,0,NULL,1,0,''),
 (1264,271,'12750 m&sup2;',NULL,0,0,'',0,0,NULL,1,0,''),
 (1265,271,'13500 m&sup2;',NULL,1,0,'',0,0,NULL,1,0,''),
 (1266,271,'21000 m&sup2;',NULL,0,0,'',0,0,NULL,1,0,''),
 (1267,272,'(8/5) times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1268,272,'(9/5) times',NULL,1,0,'',0,0,NULL,1,0,''),
 (1269,272,'(7/5) times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1270,272,'(6/5) times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1271,272,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1272,273,'37.5%',NULL,1,0,'',0,0,NULL,1,0,''),
 (1273,273,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (1274,273,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (1275,273,'25.5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (1276,273,'40.5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (1277,274,'Rs 400',NULL,0,0,'',0,0,NULL,1,0,''),
 (1278,274,'Rs 375',NULL,0,0,'',0,0,NULL,1,0,''),
 (1279,274,'Rs 700',NULL,1,0,'',0,0,NULL,1,0,''),
 (1280,274,'Rs 750',NULL,0,0,'',0,0,NULL,1,0,''),
 (1281,274,'Rs 500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1282,275,'1:2',NULL,1,0,'',0,0,NULL,1,0,'');
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1283,275,'1:3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1284,275,'1:4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1285,275,'1:5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1286,275,'1:6',NULL,0,0,'',0,0,NULL,1,0,''),
 (1287,276,'1:6',NULL,0,0,'',0,0,NULL,1,0,''),
 (1288,276,'1:3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1289,276,'4:1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1290,276,'1:5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1291,276,'3:1',NULL,1,0,'',0,0,NULL,1,0,''),
 (1292,277,'150 sq.cm',NULL,0,0,'',0,0,NULL,1,0,''),
 (1293,277,'120 sq.cm',NULL,0,0,'',0,0,NULL,1,0,''),
 (1294,277,'120 sq.cm',NULL,1,0,'',0,0,NULL,1,0,''),
 (1295,277,'90 sq.cm',NULL,0,0,'',0,0,NULL,1,0,''),
 (1296,277,'175 sq.cm',NULL,0,0,'',0,0,NULL,1,0,''),
 (1297,278,'40 &10 cms',NULL,0,0,'',0,0,NULL,1,0,''),
 (1298,278,'40 & 30 cms',NULL,0,0,'',0,0,NULL,1,0,''),
 (1299,278,'50 &30 cms',NULL,0,0,'',0,0,NULL,1,0,''),
 (1300,278,'30 &10 cms',NULL,1,0,'',0,0,NULL,1,0,''),
 (1301,278,'30 &20 cms',NULL,0,0,'',0,0,NULL,1,0,''),
 (1302,279,'120 sq.m',NULL,0,0,'',0,0,NULL,1,0,''),
 (1303,279,'299 sq.m',NULL,1,0,'',0,0,NULL,1,0,''),
 (1304,279,'150 sq.m',NULL,0,0,'',0,0,NULL,1,0,''),
 (1305,279,'90 sq.m',NULL,0,0,'',0,0,NULL,1,0,''),
 (1306,279,'175 sq.cm',NULL,0,0,'',0,0,NULL,1,0,''),
 (1307,280,'Halved',NULL,0,0,'',0,0,NULL,1,0,''),
 (1308,280,'Doubled',NULL,0,0,'',0,0,NULL,1,0,''),
 (1309,280,'Tripled',NULL,0,0,'',0,0,NULL,1,0,''),
 (1310,280,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1311,280,'No change',NULL,1,0,'',0,0,NULL,1,0,''),
 (1312,281,'Port',NULL,1,0,'',0,0,NULL,1,0,''),
 (1313,281,'Sea',NULL,0,0,'',0,0,NULL,1,0,''),
 (1314,281,'Calcutta',NULL,0,0,'',0,0,NULL,1,0,''),
 (1315,281,'City',NULL,0,0,'',0,0,NULL,1,0,''),
 (1316,281,'None',NULL,0,0,'',0,0,NULL,1,0,''),
 (1317,282,'Ghee',NULL,0,0,'',0,0,NULL,1,0,''),
 (1318,282,'Milk',NULL,1,0,'',0,0,NULL,1,0,''),
 (1319,282,'White',NULL,0,0,'',0,0,NULL,1,0,''),
 (1320,282,'Cow',NULL,0,0,'',0,0,NULL,1,0,''),
 (1321,282,'Sweet',NULL,0,0,'',0,0,NULL,1,0,''),
 (1322,283,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (1323,283,'S',NULL,1,0,'',0,0,NULL,1,0,''),
 (1324,283,'C',NULL,0,0,'',0,0,NULL,1,0,''),
 (1325,283,'V',NULL,0,0,'',0,0,NULL,1,0,''),
 (1326,283,'Q',NULL,0,0,'',0,0,NULL,1,0,''),
 (1327,284,'u',NULL,0,0,'',0,0,NULL,1,0,''),
 (1328,284,'t',NULL,0,0,'',0,0,NULL,1,0,''),
 (1329,284,'h',NULL,1,0,'',0,0,NULL,1,0,''),
 (1330,284,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1331,284,'o',NULL,0,0,'',0,0,NULL,1,0,''),
 (1332,285,'31',NULL,0,0,'',0,0,NULL,1,0,''),
 (1333,285,'28',NULL,0,0,'',0,0,NULL,1,0,''),
 (1334,285,'27',NULL,0,0,'',0,0,NULL,1,0,''),
 (1335,285,'29',NULL,1,0,'',0,0,NULL,1,0,''),
 (1336,285,'32',NULL,0,0,'',0,0,NULL,1,0,''),
 (1337,286,'76',NULL,0,0,'',0,0,NULL,1,0,''),
 (1338,286,'84',NULL,1,0,'',0,0,NULL,1,0,''),
 (1339,286,'87',NULL,0,0,'',0,0,NULL,1,0,''),
 (1340,286,'98',NULL,0,0,'',0,0,NULL,1,0,''),
 (1341,286,'14',NULL,0,0,'',0,0,NULL,1,0,''),
 (1342,287,'50',NULL,0,0,'',0,0,NULL,1,0,''),
 (1343,287,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1344,287,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (1345,287,'5000',NULL,1,0,'',0,0,NULL,1,0,''),
 (1346,287,'500',NULL,0,0,'',0,0,NULL,1,0,''),
 (1347,288,'26',NULL,0,0,'',0,0,NULL,1,0,''),
 (1348,288,'33',NULL,1,0,'',0,0,NULL,1,0,''),
 (1349,288,'46',NULL,0,0,'',0,0,NULL,1,0,''),
 (1350,288,'59',NULL,0,0,'',0,0,NULL,1,0,''),
 (1351,288,'74',NULL,0,0,'',0,0,NULL,1,0,''),
 (1352,289,'Apple',NULL,0,0,'',0,0,NULL,1,0,''),
 (1353,289,'Mango',NULL,0,0,'',0,0,NULL,1,0,''),
 (1354,289,'Banana',NULL,1,0,'',0,0,NULL,1,0,''),
 (1355,289,'Papaya',NULL,0,0,'',0,0,NULL,1,0,''),
 (1356,289,'Orange',NULL,0,0,'',0,0,NULL,1,0,''),
 (1357,290,'Seed',NULL,1,0,'',0,0,NULL,1,0,''),
 (1358,290,'Carpel',NULL,0,0,'',0,0,NULL,1,0,''),
 (1359,290,'Petal',NULL,0,0,'',0,0,NULL,1,0,''),
 (1360,290,'Stamen',NULL,0,0,'',0,0,NULL,1,0,''),
 (1361,290,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1362,291,'important',NULL,0,0,'',0,0,NULL,1,0,''),
 (1363,291,'tip',NULL,0,0,'',0,0,NULL,1,0,''),
 (1364,291,'pointless',NULL,0,0,'',0,0,NULL,1,0,''),
 (1365,291,'key',NULL,1,0,'',0,0,NULL,1,0,''),
 (1366,292,'high',NULL,0,0,'',0,0,NULL,1,0,''),
 (1367,292,'pointed',NULL,0,0,'',0,0,NULL,1,0,''),
 (1368,292,'acute',NULL,0,0,'',0,0,NULL,1,0,''),
 (1369,292,'low',NULL,1,0,'',0,0,NULL,1,0,''),
 (1370,293,'exacerbated',NULL,1,0,'',0,0,NULL,1,0,''),
 (1371,293,'married',NULL,0,0,'',0,0,NULL,1,0,''),
 (1372,293,'stated',NULL,0,0,'',0,0,NULL,1,0,''),
 (1373,293,'witnessed',NULL,0,0,'',0,0,NULL,1,0,''),
 (1374,294,'presence',NULL,0,0,'',0,0,NULL,1,0,''),
 (1375,294,'forcing',NULL,0,0,'',0,0,NULL,1,0,''),
 (1376,294,'driver',NULL,1,0,'',0,0,NULL,1,0,''),
 (1377,294,'reckon',NULL,0,0,'',0,0,NULL,1,0,''),
 (1378,295,'together',NULL,0,0,'',0,0,NULL,1,0,''),
 (1379,295,'argue',NULL,1,0,'',0,0,NULL,1,0,''),
 (1380,295,'says',NULL,0,0,'',0,0,NULL,1,0,''),
 (1381,295,'couple',NULL,0,0,'',0,0,NULL,1,0,''),
 (1382,296,'minor',NULL,0,0,'',0,0,NULL,1,0,''),
 (1383,296,'major',NULL,0,0,'',0,0,NULL,1,0,''),
 (1384,296,'majority',NULL,1,0,'',0,0,NULL,1,0,''),
 (1385,296,'minority',NULL,0,0,'',0,0,NULL,1,0,''),
 (1386,297,'go',NULL,0,0,'',0,0,NULL,1,0,''),
 (1387,297,'follow',NULL,0,0,'',0,0,NULL,1,0,''),
 (1388,297,'attend',NULL,1,0,'',0,0,NULL,1,0,''),
 (1389,297,'attended',NULL,0,0,'',0,0,NULL,1,0,''),
 (1390,298,'account',NULL,0,0,'',0,0,NULL,1,0,''),
 (1391,298,'accounted',NULL,1,0,'',0,0,NULL,1,0,''),
 (1392,298,'arranged',NULL,0,0,'',0,0,NULL,1,0,''),
 (1393,298,'counted',NULL,0,0,'',0,0,NULL,1,0,''),
 (1394,299,'tougher',NULL,0,0,'',0,0,NULL,1,0,''),
 (1395,299,'stricter',NULL,0,0,'',0,0,NULL,1,0,''),
 (1396,299,'toughest',NULL,1,0,'',0,0,NULL,1,0,''),
 (1397,299,'simplest',NULL,0,0,'',0,0,NULL,1,0,''),
 (1398,300,'nuanced',NULL,1,0,'',0,0,NULL,1,0,''),
 (1399,300,'difference',NULL,0,0,'',0,0,NULL,1,0,''),
 (1400,300,'similar',NULL,0,0,'',0,0,NULL,1,0,''),
 (1401,300,'simplified',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
INSERT INTO `apt_tp_rule` (`tp_id`,`rule`) VALUES 
 (1,''),
 (2,''),
 (3,''),
 (4,''),
 (5,''),
 (6,''),
 (7,''),
 (8,''),
 (9,''),
 (10,''),
 (11,''),
 (12,''),
 (13,''),
 (14,''),
 (15,''),
 (16,''),
 (17,''),
 (18,''),
 (19,''),
 (20,'');
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=8451 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,3,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,3,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,3,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,3,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,3,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,3,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,3,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,3,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,3,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,3,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,3,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,3,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,3,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,3,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,3,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,3,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,3,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,3,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,3,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,3,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,3,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,3,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,3,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,3,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,3,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,3,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,3,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,3,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,3,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,3,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,3,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,3,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,3,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,3,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,3,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,3,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,3,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,3,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,3,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,3,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,3,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,3,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,3,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,3,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,3,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,3,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,3,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,3,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,3,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,3,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,3,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,3,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,3,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,3,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,3,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,3,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,3,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,3,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,3,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,3,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,3,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,3,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,3,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,3,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,3,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,3,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,3,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,3,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,3,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,3,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,3,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,3,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,3,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,3,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,3,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,4,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,4,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,4,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,4,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,4,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,4,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,4,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,4,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,4,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,4,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,4,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,4,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,4,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,4,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,4,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,4,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,4,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,4,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,4,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,4,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,4,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,4,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,4,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,4,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,4,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,4,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,4,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,4,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,4,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,4,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,4,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,4,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,4,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,4,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,4,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,4,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,4,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,4,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,4,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,4,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,4,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,4,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,4,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,4,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,4,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,4,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,4,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,4,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,4,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,4,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,4,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,4,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,4,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,4,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,4,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,4,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,4,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,4,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,4,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,4,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,4,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,4,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,4,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,4,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,4,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,4,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,4,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,4,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,4,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,4,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,4,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,4,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,4,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,4,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,4,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,5,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,5,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,5,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,5,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,5,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,5,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,5,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,5,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,5,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,5,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (311,5,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (312,5,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (313,5,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (314,5,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (315,5,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (316,5,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (317,5,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (318,5,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (319,5,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (320,5,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (321,5,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (322,5,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (323,5,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (324,5,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (325,5,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (326,5,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (327,5,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (328,5,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (329,5,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (330,5,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (331,5,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (332,5,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (333,5,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (334,5,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (335,5,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (336,5,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (337,5,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (338,5,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (339,5,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (340,5,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (341,5,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (342,5,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (343,5,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (344,5,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (345,5,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (346,5,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (347,5,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (348,5,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (349,5,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (350,5,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (351,5,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (352,5,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (353,5,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (354,5,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (355,5,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (356,5,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (357,5,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (358,5,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (359,5,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (360,5,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (361,5,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (362,5,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (363,5,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (364,5,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (365,5,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (366,5,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (367,5,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (368,5,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (369,5,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (370,5,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (371,5,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (372,5,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (373,5,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (374,5,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (375,5,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (376,6,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (377,6,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (378,6,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (379,6,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (380,6,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (381,6,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (382,6,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (383,6,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (384,6,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (385,6,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (386,6,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (387,6,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (388,6,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (389,6,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (390,6,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (391,6,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (392,6,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (393,6,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (394,6,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (395,6,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (396,6,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (397,6,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (398,6,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (399,6,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (400,6,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (401,6,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (402,6,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (403,6,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (404,6,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (405,6,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (406,6,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (407,6,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (408,6,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (409,6,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (410,6,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (411,6,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (412,6,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (413,6,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (414,6,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (415,6,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (416,6,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (417,6,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (418,6,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (419,6,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (420,6,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (421,6,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (422,6,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (423,6,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (424,6,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (425,6,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (426,6,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (427,6,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (428,6,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (429,6,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (430,6,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (431,6,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (432,6,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (433,6,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (434,6,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (435,6,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (436,6,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (437,6,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (438,6,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (439,6,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (440,6,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (441,6,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (442,6,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (443,6,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (444,6,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (445,6,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (446,6,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (447,6,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (448,6,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (449,6,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (450,6,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (451,7,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (452,7,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (453,7,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (454,7,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (455,7,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (456,7,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (457,7,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (458,7,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (459,7,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (460,7,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (461,7,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (462,7,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (463,7,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (464,7,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (465,7,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (466,7,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (467,7,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (468,7,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (469,7,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (470,7,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (471,7,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (472,7,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (473,7,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (474,7,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (475,7,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (476,7,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (477,7,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (478,7,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (479,7,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (480,7,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (481,7,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (482,7,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (483,7,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (484,7,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (485,7,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (486,7,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (487,7,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (488,7,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (489,7,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (490,7,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (491,7,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (492,7,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (493,7,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (494,7,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (495,7,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (496,7,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (497,7,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (498,7,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (499,7,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (500,7,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (501,7,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (502,7,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (503,7,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (504,7,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (505,7,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (506,7,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (507,7,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (508,7,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (509,7,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (510,7,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (511,7,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (512,7,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (513,7,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (514,7,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (515,7,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (516,7,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (517,7,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (518,7,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (519,7,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (520,7,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (521,7,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (522,7,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (523,7,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (524,7,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (525,7,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (526,8,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (527,8,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (528,8,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (529,8,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (530,8,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (531,8,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (532,8,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (533,8,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (534,8,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (535,8,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (536,8,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (537,8,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (538,8,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (539,8,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (540,8,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (541,8,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (542,8,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (543,8,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (544,8,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (545,8,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (546,8,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (547,8,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (548,8,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (549,8,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (550,8,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (551,8,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (552,8,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (553,8,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (554,8,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (555,8,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (556,8,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (557,8,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (558,8,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (559,8,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (560,8,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (561,8,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (562,8,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (563,8,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (564,8,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (565,8,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (566,8,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (567,8,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (568,8,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (569,8,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (570,8,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (571,8,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (572,8,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (573,8,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (574,8,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (575,8,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (576,8,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (577,8,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (578,8,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (579,8,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (580,8,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (581,8,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (582,8,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (583,8,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (584,8,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (585,8,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (586,8,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (587,8,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (588,8,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (589,8,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (590,8,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (591,8,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (592,8,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (593,8,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (594,8,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (595,8,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (596,8,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (597,8,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (598,8,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (599,8,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (600,8,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (601,9,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (602,9,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (603,9,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (604,9,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (605,9,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (606,9,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (607,9,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (608,9,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (609,9,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (610,9,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (611,9,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (612,9,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (613,9,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (614,9,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (615,9,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (616,9,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (617,9,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (618,9,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (619,9,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (620,9,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (621,9,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (622,9,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (623,9,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (624,9,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (625,9,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (626,9,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (627,9,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (628,9,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (629,9,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (630,9,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (631,9,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (632,9,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (633,9,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (634,9,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (635,9,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (636,9,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (637,9,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (638,9,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (639,9,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (640,9,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (641,9,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (642,9,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (643,9,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (644,9,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (645,9,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (646,9,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (647,9,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (648,9,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (649,9,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (650,9,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (651,9,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (652,9,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (653,9,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (654,9,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (655,9,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (656,9,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (657,9,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (658,9,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (659,9,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (660,9,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (661,9,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (662,9,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (663,9,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (664,9,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (665,9,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (666,9,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (667,9,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (668,9,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (669,9,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (670,9,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (671,9,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (672,9,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (673,9,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (674,9,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (675,9,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (676,10,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (677,10,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (678,10,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (679,10,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (680,10,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (681,10,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (682,10,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (683,10,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (684,10,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (685,10,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (686,10,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (687,10,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (688,10,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (689,10,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (690,10,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (691,10,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (692,10,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (693,10,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (694,10,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (695,10,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (696,10,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (697,10,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (698,10,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (699,10,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (700,10,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (701,10,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (702,10,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (703,10,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (704,10,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (705,10,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (706,10,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (707,10,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (708,10,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (709,10,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (710,10,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (711,10,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (712,10,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (713,10,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (714,10,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (715,10,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (716,10,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (717,10,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (718,10,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (719,10,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (720,10,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (721,10,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (722,10,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (723,10,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (724,10,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (725,10,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (726,10,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (727,10,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (728,10,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (729,10,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (730,10,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (731,10,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (732,10,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (733,10,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (734,10,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (735,10,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (736,10,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (737,10,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (738,10,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (739,10,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (740,10,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (741,10,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (742,10,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (743,10,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (744,10,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (745,10,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (746,10,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (747,10,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (748,10,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (749,10,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (750,10,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (751,11,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (752,11,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (753,11,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (754,11,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (755,11,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (756,11,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (757,11,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (758,11,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (759,11,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (760,11,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (761,11,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (762,11,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (763,11,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (764,11,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (765,11,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (766,11,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (767,11,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (768,11,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (769,11,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (770,11,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (771,11,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (772,11,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (773,11,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (774,11,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (775,11,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (776,11,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (777,11,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (778,11,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (779,11,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (780,11,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (781,11,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (782,11,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (783,11,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (784,11,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (785,11,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (786,11,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (787,11,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (788,11,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (789,11,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (790,11,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (791,11,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (792,11,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (793,11,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (794,11,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (795,11,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (796,11,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (797,11,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (798,11,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (799,11,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (800,11,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (801,11,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (802,11,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (803,11,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (804,11,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (805,11,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (806,11,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (807,11,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (808,11,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (809,11,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (810,11,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (811,11,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (812,11,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (813,11,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (814,11,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (815,11,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (816,11,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (817,11,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (818,11,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (819,11,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (820,11,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (821,11,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (822,11,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (823,11,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (824,11,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (825,11,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (826,11,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (827,11,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (828,11,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (829,11,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (830,11,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (831,11,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (832,11,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (833,11,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (834,11,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (835,11,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (836,11,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (837,11,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (838,11,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (839,11,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (840,11,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (841,11,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (842,11,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (843,11,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (844,11,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (845,11,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (846,11,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (847,11,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (848,11,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (849,11,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (850,11,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (851,11,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (852,11,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (853,11,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (854,11,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (855,11,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (856,11,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (857,11,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (858,11,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (859,11,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (860,11,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (861,11,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (862,11,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (863,11,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (864,11,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (865,11,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (866,11,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (867,11,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (868,11,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (869,11,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (870,11,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (871,11,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (872,11,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (873,11,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (874,11,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (875,11,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (876,11,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (877,11,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (878,11,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (879,11,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (880,11,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (881,11,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (882,11,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (883,11,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (884,11,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (885,11,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (886,11,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (887,11,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (888,11,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (889,11,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (890,11,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (891,11,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (892,11,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (893,11,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (894,11,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (895,11,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (896,11,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (897,11,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (898,11,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (899,11,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (900,11,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (901,11,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (902,11,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (903,11,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (904,11,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (905,11,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (906,11,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (907,11,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (908,11,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (909,11,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (910,11,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (911,11,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (912,11,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (913,11,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (914,11,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (915,11,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (916,11,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (917,11,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (918,11,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (919,11,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (920,11,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (921,11,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (922,11,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (923,11,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (924,11,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (925,11,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (926,11,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (927,11,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (928,11,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (929,11,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (930,11,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (931,11,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (932,11,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (933,11,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (934,11,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (935,11,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (936,11,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (937,11,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (938,11,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (939,11,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (940,11,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (941,11,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (942,11,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (943,11,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (944,11,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (945,11,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (946,11,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (947,11,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (948,11,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (949,11,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (950,11,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (951,11,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (952,11,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (953,11,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (954,11,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (955,11,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (956,11,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (957,11,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (958,11,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (959,11,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (960,11,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (961,11,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (962,11,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (963,11,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (964,11,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (965,11,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (966,11,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (967,11,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (968,11,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (969,11,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (970,11,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (971,11,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (972,11,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (973,11,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (974,11,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (975,11,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (976,11,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (977,11,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (978,11,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (979,11,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (980,11,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (981,11,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (982,11,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (983,11,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (984,11,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (985,11,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (986,11,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (987,11,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (988,11,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (989,11,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (990,11,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (991,11,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (992,11,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (993,11,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (994,11,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (995,11,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (996,11,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (997,11,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (998,11,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (999,11,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1000,11,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1001,11,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1002,11,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1003,11,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1004,11,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1005,11,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1006,11,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1007,11,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1008,11,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1009,11,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1010,11,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1011,11,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1012,11,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1013,11,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1014,11,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1015,11,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1016,11,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1017,11,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1018,11,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1019,11,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1020,11,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1021,11,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1022,11,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1023,11,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1024,11,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1025,11,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1026,11,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1027,11,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1028,11,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1029,11,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1030,11,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1031,11,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1032,11,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1033,11,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1034,11,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1035,11,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1036,11,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1037,11,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1038,11,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1039,11,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1040,11,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1041,11,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1042,11,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1043,11,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1044,11,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1045,11,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1046,11,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1047,11,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1048,11,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1049,11,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1050,11,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1051,11,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1052,11,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1053,11,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1054,11,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1055,11,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1056,11,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1057,11,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1058,11,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1059,11,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1060,11,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1061,11,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1062,11,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1063,11,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1064,11,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1065,11,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1066,11,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1067,11,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1068,11,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1069,11,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1070,11,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1071,11,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1072,11,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1073,11,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1074,11,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1075,11,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1076,11,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1077,11,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1078,11,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1079,11,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1080,11,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1081,11,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1082,11,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1083,11,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1084,11,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1085,11,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1086,11,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1087,11,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1088,11,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1089,11,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1090,11,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1091,11,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1092,11,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1093,11,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1094,11,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1095,11,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1096,11,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1097,11,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1098,11,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1099,11,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1100,11,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1101,11,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1102,11,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1103,11,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1104,11,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1105,11,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1106,11,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1107,11,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1108,11,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1109,11,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1110,11,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1111,11,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1112,11,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1113,11,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1114,11,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1115,11,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1116,11,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1117,11,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1118,11,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1119,11,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1120,11,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1121,11,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1122,11,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1123,11,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1124,11,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1125,11,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1126,11,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1127,11,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1128,11,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1129,11,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1130,11,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1131,11,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1132,11,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1133,11,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1134,11,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1135,11,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1136,11,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1137,11,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1138,11,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1139,11,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1140,11,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1141,11,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1142,11,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1143,11,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1144,11,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1145,11,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1146,11,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1147,11,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1148,11,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1149,11,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1150,11,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1151,11,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1152,11,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1153,11,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1154,11,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1155,11,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1156,11,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1157,11,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1158,11,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1159,11,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1160,11,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1161,11,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1162,11,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1163,11,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1164,11,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1165,11,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1166,11,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1167,11,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1168,11,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1169,11,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1170,11,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1171,11,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1172,11,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1173,11,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1174,11,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1175,11,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1176,11,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1177,11,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1178,11,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1179,11,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1180,11,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1181,11,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1182,11,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1183,11,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1184,11,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1185,11,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1186,11,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1187,11,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1188,11,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1189,11,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1190,11,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1191,11,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1192,11,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1193,11,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1194,11,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1195,11,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1196,11,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1197,11,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1198,11,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1199,11,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1200,11,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1201,11,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1202,11,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1203,11,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1204,11,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1205,11,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1206,11,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1207,11,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1208,11,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1209,11,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1210,11,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1211,11,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1212,11,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1213,11,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1214,11,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1215,11,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1216,11,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1217,11,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1218,11,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1219,11,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1220,11,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1221,11,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1222,11,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1223,11,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1224,11,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1225,11,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1226,11,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1227,11,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1228,11,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1229,11,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1230,11,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1231,11,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1232,11,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1233,11,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1234,11,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1235,11,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1236,11,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1237,11,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1238,11,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1239,11,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1240,11,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1241,11,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1242,11,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1243,11,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1244,11,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1245,11,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1246,11,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1247,11,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1248,11,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1249,11,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1250,11,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1251,11,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1252,11,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1253,11,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1254,11,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1255,11,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1256,11,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1257,11,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1258,11,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1259,11,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1260,11,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1261,11,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1262,11,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1263,11,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1264,11,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1265,11,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1266,11,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1267,11,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1268,11,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1269,11,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1270,11,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1271,11,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1272,11,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1273,11,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1274,11,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1275,11,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1276,11,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1277,11,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1278,11,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1279,11,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1280,11,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1281,11,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1282,11,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1283,11,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1284,11,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1285,11,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1286,11,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1287,11,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1288,11,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1289,11,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1290,11,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1291,11,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1292,11,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1293,11,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1294,11,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1295,11,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1296,11,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1297,11,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1298,11,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1299,11,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1300,11,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1301,11,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1302,11,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1303,11,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1304,11,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1305,11,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1306,11,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1307,11,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1308,11,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1309,11,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1310,11,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1311,11,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1312,11,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1313,11,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1314,11,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1315,11,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1316,11,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1317,11,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1318,11,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1319,11,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1320,11,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1321,11,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1322,11,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1323,11,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1324,11,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1325,11,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1326,11,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1327,11,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1328,11,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1329,11,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1330,11,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1331,11,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1332,11,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1333,11,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1334,11,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1335,11,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1336,11,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1337,11,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1338,11,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1339,11,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1340,11,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1341,11,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1342,11,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1343,11,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1344,11,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1345,11,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1346,11,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1347,11,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1348,11,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1349,11,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1350,11,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1351,11,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1352,11,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1353,11,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1354,11,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1355,11,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1356,11,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1357,11,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1358,11,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1359,11,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1360,11,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1361,11,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1362,11,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1363,11,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1364,11,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1365,11,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1366,11,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1367,11,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1368,11,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1369,11,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1370,11,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1371,11,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1372,11,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1373,11,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1374,11,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1375,11,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1376,11,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1377,11,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1378,11,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1379,11,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1380,11,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1381,11,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1382,11,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1383,11,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1384,11,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1385,11,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1386,11,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1387,11,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1388,11,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1389,11,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1390,11,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1391,11,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1392,11,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1393,11,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1394,11,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1395,11,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1396,11,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1397,11,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1398,11,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1399,11,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1400,11,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1401,11,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1402,11,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1403,11,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1404,11,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1405,11,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1406,11,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1407,11,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1408,11,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1409,11,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1410,11,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1411,11,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1412,11,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1413,11,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1414,11,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1415,11,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1416,11,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1417,11,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1418,11,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1419,11,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1420,11,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1421,11,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1422,11,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1423,11,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1424,11,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1425,11,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1426,11,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1427,11,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1428,11,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1429,11,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1430,11,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1431,11,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1432,11,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1433,11,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1434,11,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1435,11,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1436,11,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1437,11,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1438,11,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1439,11,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1440,11,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1441,11,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1442,11,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1443,11,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1444,11,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1445,11,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1446,11,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1447,11,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1448,11,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1449,11,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1450,11,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1451,11,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1452,11,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1453,11,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1454,11,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1455,11,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1456,11,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1457,11,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1458,11,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1459,11,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1460,11,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1461,11,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1462,11,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1463,11,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1464,11,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1465,11,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1466,11,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1467,11,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1468,11,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1469,11,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1470,11,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1471,11,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1472,11,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1473,11,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1474,11,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1475,11,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1476,11,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1477,11,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1478,11,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1479,11,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1480,11,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1481,11,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1482,11,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1483,11,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1484,11,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1485,11,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1486,11,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1487,11,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1488,11,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1489,11,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1490,11,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1491,11,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1492,11,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1493,11,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1494,11,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1495,11,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1496,11,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1497,11,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1498,11,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1499,11,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1500,11,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1501,11,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1502,11,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1503,11,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1504,11,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1505,11,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1506,11,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1507,11,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1508,11,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1509,11,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1510,11,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1511,11,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1512,11,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1513,11,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1514,11,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1515,11,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1516,11,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1517,11,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1518,11,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1519,11,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1520,11,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1521,12,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1522,12,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1523,12,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1524,12,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1525,12,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1526,12,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1527,12,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1528,12,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1529,12,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1530,12,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1531,12,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1532,12,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1533,12,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1534,12,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1535,12,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1536,12,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1537,12,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1538,12,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1539,12,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1540,12,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1541,12,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1542,12,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1543,12,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1544,12,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1545,12,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1546,12,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1547,12,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1548,12,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1549,12,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1550,12,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1551,12,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1552,12,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1553,12,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1554,12,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1555,12,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1556,12,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1557,12,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1558,12,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1559,12,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1560,12,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1561,12,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1562,12,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1563,12,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1564,12,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1565,12,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1566,12,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1567,12,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1568,12,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1569,12,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1570,12,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1571,12,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1572,12,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1573,12,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1574,12,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1575,12,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1576,12,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1577,12,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1578,12,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1579,12,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1580,12,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1581,12,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1582,12,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1583,12,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1584,12,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1585,12,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1586,12,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1587,12,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1588,12,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1589,12,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1590,12,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1591,12,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1592,12,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1593,12,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1594,12,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1595,12,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1596,12,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1597,12,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1598,12,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1599,12,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1600,12,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1601,12,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1602,12,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1603,12,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1604,12,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1605,12,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1606,12,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1607,12,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1608,12,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1609,12,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1610,12,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1611,12,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1612,12,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1613,12,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1614,12,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1615,12,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1616,12,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1617,12,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1618,12,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1619,12,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1620,12,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1621,12,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1622,12,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1623,12,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1624,12,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1625,12,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1626,12,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1627,12,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1628,12,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1629,12,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1630,12,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1631,12,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1632,12,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1633,12,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1634,12,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1635,12,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1636,12,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1637,12,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1638,12,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1639,12,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1640,12,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1641,12,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1642,12,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1643,12,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1644,12,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1645,12,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1646,12,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1647,12,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1648,12,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1649,12,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1650,12,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1651,12,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1652,12,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1653,12,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1654,12,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1655,12,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1656,12,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1657,12,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1658,12,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1659,12,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1660,12,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1661,12,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1662,12,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1663,12,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1664,12,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1665,12,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1666,12,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1667,12,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1668,12,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1669,12,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1670,12,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1671,12,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1672,12,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1673,12,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1674,12,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1675,12,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1676,12,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1677,12,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1678,12,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1679,12,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1680,12,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1681,12,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1682,12,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1683,12,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1684,12,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1685,12,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1686,12,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1687,12,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1688,12,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1689,12,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1690,12,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1691,12,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1692,12,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1693,12,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1694,12,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1695,12,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1696,12,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1697,12,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1698,12,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1699,12,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1700,12,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1701,12,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1702,12,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1703,12,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1704,12,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1705,12,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1706,12,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1707,12,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1708,12,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1709,12,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1710,12,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1711,12,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1712,12,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1713,12,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1714,12,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1715,12,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1716,12,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1717,12,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1718,12,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1719,12,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1720,12,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1721,12,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1722,12,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1723,12,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1724,12,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1725,12,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1726,12,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1727,12,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1728,12,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1729,12,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1730,12,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1731,12,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1732,12,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1733,12,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1734,12,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1735,12,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1736,12,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1737,12,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1738,12,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1739,12,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1740,12,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1741,12,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1742,12,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1743,12,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1744,12,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1745,12,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1746,12,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1747,12,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1748,12,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1749,12,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1750,12,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1751,12,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1752,12,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1753,12,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1754,12,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1755,12,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1756,12,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1757,12,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1758,12,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1759,12,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1760,12,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1761,12,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1762,12,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1763,12,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1764,12,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1765,12,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1766,12,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1767,12,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1768,12,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1769,12,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1770,12,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1771,12,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1772,12,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1773,12,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1774,12,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1775,12,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1776,12,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1777,12,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1778,12,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1779,12,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1780,12,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1781,12,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1782,12,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1783,12,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1784,12,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1785,12,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1786,12,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1787,12,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1788,12,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1789,12,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1790,12,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1791,12,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1792,12,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1793,12,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1794,12,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1795,12,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1796,12,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1797,12,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1798,12,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1799,12,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1800,12,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1801,12,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1802,12,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1803,12,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1804,12,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1805,12,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1806,12,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1807,12,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1808,12,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1809,12,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1810,12,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1811,12,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1812,12,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1813,12,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1814,12,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1815,12,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1816,12,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1817,12,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1818,12,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1819,12,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1820,12,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1821,12,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1822,12,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1823,12,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1824,12,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1825,12,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1826,12,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1827,12,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1828,12,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1829,12,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1830,12,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1831,12,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1832,12,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1833,12,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1834,12,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1835,12,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1836,12,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1837,12,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1838,12,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1839,12,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1840,12,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1841,12,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1842,12,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1843,12,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1844,12,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1845,12,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1846,12,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1847,12,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1848,12,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1849,12,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1850,12,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1851,12,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1852,12,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1853,12,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1854,12,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1855,12,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1856,12,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1857,12,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1858,12,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1859,12,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1860,12,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1861,12,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1862,12,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1863,12,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1864,12,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1865,12,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1866,12,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1867,12,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1868,12,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1869,12,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1870,12,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1871,12,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1872,12,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1873,12,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1874,12,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1875,12,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1876,12,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1877,12,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1878,12,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1879,12,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1880,12,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1881,12,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1882,12,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1883,12,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1884,12,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1885,12,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1886,12,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1887,12,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1888,12,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1889,12,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1890,12,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1891,12,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1892,12,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1893,12,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1894,12,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1895,12,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1896,12,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1897,12,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1898,12,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1899,12,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1900,12,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1901,12,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1902,12,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1903,12,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1904,12,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1905,12,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1906,12,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1907,12,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1908,12,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1909,12,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1910,12,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1911,12,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1912,12,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1913,12,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1914,12,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1915,12,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1916,12,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1917,12,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1918,12,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1919,12,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1920,12,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1921,12,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1922,12,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1923,12,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1924,12,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1925,12,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1926,12,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1927,12,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1928,12,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1929,12,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1930,12,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1931,12,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1932,12,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1933,12,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1934,12,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1935,12,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1936,12,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1937,12,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1938,12,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1939,12,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1940,12,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1941,12,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1942,12,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1943,12,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1944,12,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1945,12,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1946,12,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1947,12,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1948,12,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1949,12,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1950,12,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1951,12,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1952,12,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1953,12,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1954,12,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1955,12,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1956,12,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1957,12,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1958,12,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1959,12,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1960,12,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1961,12,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1962,12,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1963,12,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1964,12,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1965,12,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1966,12,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1967,12,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1968,12,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1969,12,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1970,12,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1971,12,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1972,12,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1973,12,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1974,12,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1975,12,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1976,12,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1977,12,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1978,12,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1979,12,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1980,12,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1981,12,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1982,12,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1983,12,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1984,12,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1985,12,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1986,12,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1987,12,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1988,12,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1989,12,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1990,12,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1991,12,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1992,12,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1993,12,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1994,12,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1995,12,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1996,12,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1997,12,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1998,12,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1999,12,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2000,12,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2001,12,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2002,12,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2003,12,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2004,12,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2005,12,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2006,12,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2007,12,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2008,12,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2009,12,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2010,12,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2011,12,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2012,12,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2013,12,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2014,12,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2015,12,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2016,12,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2017,12,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2018,12,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2019,12,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2020,12,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2021,12,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2022,12,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2023,12,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2024,12,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2025,12,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2026,12,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2027,12,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2028,12,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2029,12,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2030,12,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2031,12,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2032,12,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2033,12,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2034,12,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2035,12,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2036,12,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2037,12,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2038,12,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2039,12,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2040,12,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2041,12,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2042,12,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2043,12,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2044,12,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2045,12,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2046,12,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2047,12,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2048,12,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2049,12,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2050,12,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2051,12,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2052,12,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2053,12,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2054,12,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2055,12,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2056,12,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2057,12,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2058,12,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2059,12,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2060,12,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2061,12,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2062,12,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2063,12,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2064,12,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2065,12,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2066,12,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2067,12,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2068,12,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2069,12,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2070,12,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2071,12,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2072,12,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2073,12,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2074,12,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2075,12,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2076,12,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2077,12,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2078,12,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2079,12,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2080,12,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2081,12,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2082,12,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2083,12,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2084,12,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2085,12,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2086,12,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2087,12,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2088,12,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2089,12,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2090,12,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2091,12,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2092,12,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2093,12,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2094,12,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2095,12,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2096,12,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2097,12,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2098,12,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2099,12,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2100,12,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (2101,12,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2102,12,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2103,12,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2104,12,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2105,12,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2106,12,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2107,12,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2108,12,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2109,12,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2110,12,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2111,12,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2112,12,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2113,12,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2114,12,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2115,12,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2116,12,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2117,12,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2118,12,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2119,12,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2120,12,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2121,12,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2122,12,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2123,12,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2124,12,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2125,12,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2126,12,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2127,12,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2128,12,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2129,12,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2130,12,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2131,12,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2132,12,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2133,12,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2134,12,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2135,12,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2136,12,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2137,12,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2138,12,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2139,12,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2140,12,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2141,12,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2142,12,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2143,12,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2144,12,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2145,12,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2146,12,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2147,12,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2148,12,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2149,12,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2150,12,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2151,12,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2152,12,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2153,12,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2154,12,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2155,12,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2156,12,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2157,12,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2158,12,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2159,12,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2160,12,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2161,12,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2162,12,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2163,12,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2164,12,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2165,12,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2166,12,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2167,12,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2168,12,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2169,12,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2170,12,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2171,12,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2172,12,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2173,12,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2174,12,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2175,12,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2176,12,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2177,12,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2178,12,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2179,12,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2180,12,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2181,12,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2182,12,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2183,12,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2184,12,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2185,12,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2186,12,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2187,12,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2188,12,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2189,12,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2190,12,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2191,12,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2192,12,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2193,12,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2194,12,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2195,12,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2196,12,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2197,12,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2198,12,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2199,12,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2200,12,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2201,12,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2202,12,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2203,12,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2204,12,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2205,12,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2206,12,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2207,12,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2208,12,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2209,12,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2210,12,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2211,12,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2212,12,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2213,12,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2214,12,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2215,12,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2216,12,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2217,12,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2218,12,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2219,12,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2220,12,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2221,12,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2222,12,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2223,12,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2224,12,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2225,12,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2226,12,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2227,12,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2228,12,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2229,12,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2230,12,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2231,12,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2232,12,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2233,12,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2234,12,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2235,12,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2236,12,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2237,12,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2238,12,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2239,12,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2240,12,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2241,12,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2242,12,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2243,12,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2244,12,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2245,12,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2246,12,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2247,12,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2248,12,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2249,12,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2250,12,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2251,12,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2252,12,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2253,12,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2254,12,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2255,12,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2256,12,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2257,12,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2258,12,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2259,12,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2260,12,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2261,12,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2262,12,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2263,12,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2264,12,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2265,12,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2266,12,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2267,12,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2268,12,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2269,12,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2270,12,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2271,12,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2272,12,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2273,12,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2274,12,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2275,12,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2276,12,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2277,12,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2278,12,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2279,12,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2280,12,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2281,12,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2282,12,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2283,12,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2284,12,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2285,12,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2286,12,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2287,12,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2288,12,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2289,12,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2290,12,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2291,13,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2292,13,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2293,13,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2294,13,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2295,13,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2296,13,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2297,13,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2298,13,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2299,13,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2300,13,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2301,13,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2302,13,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2303,13,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2304,13,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2305,13,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2306,13,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2307,13,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2308,13,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2309,13,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2310,13,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2311,13,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2312,13,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2313,13,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2314,13,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2315,13,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2316,13,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2317,13,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2318,13,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2319,13,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2320,13,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2321,13,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2322,13,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2323,13,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2324,13,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2325,13,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2326,13,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2327,13,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2328,13,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2329,13,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2330,13,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2331,13,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2332,13,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2333,13,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2334,13,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2335,13,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2336,13,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2337,13,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2338,13,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2339,13,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2340,13,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2341,13,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2342,13,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2343,13,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2344,13,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2345,13,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2346,13,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2347,13,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2348,13,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2349,13,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2350,13,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2351,13,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2352,13,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2353,13,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2354,13,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2355,13,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2356,13,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2357,13,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2358,13,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2359,13,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2360,13,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2361,13,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2362,13,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2363,13,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2364,13,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2365,13,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2366,13,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2367,13,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2368,13,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2369,13,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2370,13,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2371,13,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2372,13,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2373,13,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2374,13,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2375,13,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2376,13,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2377,13,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2378,13,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2379,13,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2380,13,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2381,13,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2382,13,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2383,13,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2384,13,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2385,13,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2386,13,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2387,13,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2388,13,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2389,13,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2390,13,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2391,13,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2392,13,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2393,13,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2394,13,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2395,13,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2396,13,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2397,13,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2398,13,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2399,13,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2400,13,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2401,13,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2402,13,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2403,13,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2404,13,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2405,13,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2406,13,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2407,13,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2408,13,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2409,13,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2410,13,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2411,13,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2412,13,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2413,13,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2414,13,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2415,13,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2416,13,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2417,13,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2418,13,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2419,13,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2420,13,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2421,13,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2422,13,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2423,13,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2424,13,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2425,13,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2426,13,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2427,13,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2428,13,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2429,13,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2430,13,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2431,13,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2432,13,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2433,13,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2434,13,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2435,13,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2436,13,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2437,13,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2438,13,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2439,13,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2440,13,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2441,13,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2442,13,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2443,13,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2444,13,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2445,13,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2446,13,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2447,13,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2448,13,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2449,13,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2450,13,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2451,13,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2452,13,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2453,13,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2454,13,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2455,13,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2456,13,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2457,13,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2458,13,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2459,13,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2460,13,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2461,13,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2462,13,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2463,13,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2464,13,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2465,13,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2466,13,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2467,13,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2468,13,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2469,13,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2470,13,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2471,13,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2472,13,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2473,13,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2474,13,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2475,13,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2476,13,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2477,13,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2478,13,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2479,13,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2480,13,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2481,13,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2482,13,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2483,13,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2484,13,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2485,13,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2486,13,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2487,13,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2488,13,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2489,13,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2490,13,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2491,13,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2492,13,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2493,13,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2494,13,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2495,13,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2496,13,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2497,13,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2498,13,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2499,13,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2500,13,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2501,13,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2502,13,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2503,13,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2504,13,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2505,13,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2506,13,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2507,13,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2508,13,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2509,13,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2510,13,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2511,13,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2512,13,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2513,13,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2514,13,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2515,13,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2516,13,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2517,13,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2518,13,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2519,13,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2520,13,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2521,13,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2522,13,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2523,13,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2524,13,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2525,13,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2526,13,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2527,13,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2528,13,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2529,13,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2530,13,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2531,13,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2532,13,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2533,13,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2534,13,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2535,13,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2536,13,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2537,13,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2538,13,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2539,13,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2540,13,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2541,13,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2542,13,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2543,13,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2544,13,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2545,13,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2546,13,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2547,13,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2548,13,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2549,13,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2550,13,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2551,13,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2552,13,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2553,13,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2554,13,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2555,13,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2556,13,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2557,13,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2558,13,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2559,13,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2560,13,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2561,13,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2562,13,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2563,13,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2564,13,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2565,13,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2566,13,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2567,13,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2568,13,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2569,13,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2570,13,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2571,13,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2572,13,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2573,13,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2574,13,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2575,13,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2576,13,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2577,13,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2578,13,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2579,13,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2580,13,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2581,13,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2582,13,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2583,13,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2584,13,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2585,13,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2586,13,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2587,13,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2588,13,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2589,13,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2590,13,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2591,13,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2592,13,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2593,13,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2594,13,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2595,13,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2596,13,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2597,13,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2598,13,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2599,13,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2600,13,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2601,13,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2602,13,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2603,13,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2604,13,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2605,13,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2606,13,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2607,13,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2608,13,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2609,13,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2610,13,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2611,13,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2612,13,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2613,13,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2614,13,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2615,13,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2616,13,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2617,13,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2618,13,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2619,13,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2620,13,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2621,13,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2622,13,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2623,13,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2624,13,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2625,13,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2626,13,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2627,13,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2628,13,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2629,13,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2630,13,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2631,13,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2632,13,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2633,13,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2634,13,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2635,13,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2636,13,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2637,13,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2638,13,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2639,13,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2640,13,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2641,13,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2642,13,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2643,13,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2644,13,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2645,13,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2646,13,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2647,13,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2648,13,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2649,13,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2650,13,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2651,13,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2652,13,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2653,13,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2654,13,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2655,13,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2656,13,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2657,13,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2658,13,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2659,13,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2660,13,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2661,13,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2662,13,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2663,13,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2664,13,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2665,13,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2666,13,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2667,13,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2668,13,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2669,13,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2670,13,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2671,13,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2672,13,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2673,13,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2674,13,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2675,13,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2676,13,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2677,13,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2678,13,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2679,13,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2680,13,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2681,13,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2682,13,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2683,13,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2684,13,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2685,13,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2686,13,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2687,13,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2688,13,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2689,13,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2690,13,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2691,13,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2692,13,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2693,13,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2694,13,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2695,13,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2696,13,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2697,13,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2698,13,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2699,13,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2700,13,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2701,13,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2702,13,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2703,13,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2704,13,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2705,13,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2706,13,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2707,13,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2708,13,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2709,13,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2710,13,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2711,13,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2712,13,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2713,13,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2714,13,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2715,13,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2716,13,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2717,13,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2718,13,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2719,13,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2720,13,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2721,13,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2722,13,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2723,13,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2724,13,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2725,13,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2726,13,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2727,13,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2728,13,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2729,13,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2730,13,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2731,13,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2732,13,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2733,13,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2734,13,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2735,13,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2736,13,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2737,13,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2738,13,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2739,13,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2740,13,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2741,13,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2742,13,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2743,13,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2744,13,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2745,13,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2746,13,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2747,13,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2748,13,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2749,13,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2750,13,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2751,13,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2752,13,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2753,13,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2754,13,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2755,13,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2756,13,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2757,13,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2758,13,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2759,13,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2760,13,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2761,13,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2762,13,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2763,13,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2764,13,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2765,13,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2766,13,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2767,13,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2768,13,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2769,13,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2770,13,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2771,13,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2772,13,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2773,13,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2774,13,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2775,13,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2776,13,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2777,13,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2778,13,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2779,13,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2780,13,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2781,13,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2782,13,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2783,13,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2784,13,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2785,13,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2786,13,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2787,13,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2788,13,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2789,13,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2790,13,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2791,13,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2792,13,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2793,13,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2794,13,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2795,13,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2796,13,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2797,13,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2798,13,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2799,13,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2800,13,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2801,13,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2802,13,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2803,13,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2804,13,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2805,13,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2806,13,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2807,13,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2808,13,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2809,13,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2810,13,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2811,13,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2812,13,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2813,13,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2814,13,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2815,13,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2816,13,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2817,13,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2818,13,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2819,13,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2820,13,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2821,13,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2822,13,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2823,13,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2824,13,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2825,13,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2826,13,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2827,13,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2828,13,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2829,13,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2830,13,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2831,13,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2832,13,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2833,13,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2834,13,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2835,13,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2836,13,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2837,13,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2838,13,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2839,13,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2840,13,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2841,13,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2842,13,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2843,13,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2844,13,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2845,13,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2846,13,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2847,13,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2848,13,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2849,13,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2850,13,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2851,13,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2852,13,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2853,13,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2854,13,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2855,13,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2856,13,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2857,13,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2858,13,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2859,13,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2860,13,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2861,13,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2862,13,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2863,13,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2864,13,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2865,13,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2866,13,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2867,13,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2868,13,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2869,13,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2870,13,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2871,13,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2872,13,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2873,13,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2874,13,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2875,13,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2876,13,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2877,13,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2878,13,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2879,13,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2880,13,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2881,13,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2882,13,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2883,13,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2884,13,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2885,13,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2886,13,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2887,13,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2888,13,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2889,13,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2890,13,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2891,13,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2892,13,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2893,13,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2894,13,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2895,13,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2896,13,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2897,13,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2898,13,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2899,13,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2900,13,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2901,13,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2902,13,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2903,13,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2904,13,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2905,13,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2906,13,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2907,13,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2908,13,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2909,13,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2910,13,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2911,13,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2912,13,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2913,13,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2914,13,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2915,13,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2916,13,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2917,13,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2918,13,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2919,13,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2920,13,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2921,13,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2922,13,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2923,13,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2924,13,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2925,13,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2926,13,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2927,13,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2928,13,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2929,13,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2930,13,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2931,13,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2932,13,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2933,13,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2934,13,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2935,13,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2936,13,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2937,13,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2938,13,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2939,13,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2940,13,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2941,13,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2942,13,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2943,13,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2944,13,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2945,13,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2946,13,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2947,13,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2948,13,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2949,13,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2950,13,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2951,13,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2952,13,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2953,13,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2954,13,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2955,13,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2956,13,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2957,13,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2958,13,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2959,13,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2960,13,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2961,13,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2962,13,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2963,13,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2964,13,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2965,13,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2966,13,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2967,13,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2968,13,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2969,13,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2970,13,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2971,13,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2972,13,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2973,13,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2974,13,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2975,13,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2976,13,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2977,13,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2978,13,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2979,13,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2980,13,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2981,13,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2982,13,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2983,13,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2984,13,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2985,13,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2986,13,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2987,13,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2988,13,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2989,13,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2990,13,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2991,13,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2992,13,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2993,13,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2994,13,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2995,13,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2996,13,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2997,13,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2998,13,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2999,13,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3000,13,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3001,13,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3002,13,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3003,13,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3004,13,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3005,13,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3006,13,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3007,13,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3008,13,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3009,13,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3010,13,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3011,13,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3012,13,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3013,13,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3014,13,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3015,13,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3016,13,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3017,13,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3018,13,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3019,13,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3020,13,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3021,13,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3022,13,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3023,13,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3024,13,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3025,13,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3026,13,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3027,13,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3028,13,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3029,13,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3030,13,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3031,13,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3032,13,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3033,13,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3034,13,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3035,13,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3036,13,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3037,13,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3038,13,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3039,13,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3040,13,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3041,13,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3042,13,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3043,13,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3044,13,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3045,13,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3046,13,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3047,13,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3048,13,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3049,13,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3050,13,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3051,13,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3052,13,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3053,13,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3054,13,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3055,13,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3056,13,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3057,13,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3058,13,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3059,13,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3060,13,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3061,14,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3062,14,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3063,14,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3064,14,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3065,14,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3066,14,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3067,14,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3068,14,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3069,14,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3070,14,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3071,14,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3072,14,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3073,14,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3074,14,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3075,14,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3076,14,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3077,14,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3078,14,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3079,14,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3080,14,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3081,14,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3082,14,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3083,14,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3084,14,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3085,14,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3086,14,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3087,14,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3088,14,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3089,14,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3090,14,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3091,14,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3092,14,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3093,14,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3094,14,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3095,14,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3096,14,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3097,14,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3098,14,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3099,14,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3100,14,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3101,14,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3102,14,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3103,14,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3104,14,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3105,14,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3106,14,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3107,14,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3108,14,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3109,14,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3110,14,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3111,14,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3112,14,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3113,14,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3114,14,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3115,14,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3116,14,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3117,14,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3118,14,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3119,14,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3120,14,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3121,14,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3122,14,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3123,14,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3124,14,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3125,14,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3126,14,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3127,14,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3128,14,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3129,14,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (3130,14,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3131,14,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3132,14,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3133,14,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3134,14,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3135,14,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3136,14,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3137,14,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3138,14,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3139,14,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3140,14,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3141,14,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3142,14,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3143,14,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3144,14,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3145,14,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3146,14,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3147,14,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3148,14,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3149,14,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3150,14,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3151,14,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3152,14,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3153,14,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3154,14,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3155,14,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3156,14,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3157,14,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3158,14,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3159,14,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3160,14,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3161,14,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3162,14,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3163,14,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3164,14,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3165,14,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3166,14,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3167,14,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3168,14,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3169,14,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3170,14,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3171,14,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3172,14,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3173,14,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3174,14,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3175,14,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3176,14,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3177,14,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3178,14,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3179,14,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3180,14,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3181,14,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3182,14,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3183,14,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3184,14,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3185,14,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3186,14,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3187,14,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3188,14,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3189,14,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3190,14,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3191,14,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3192,14,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3193,14,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3194,14,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3195,14,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3196,14,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3197,14,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3198,14,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3199,14,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3200,14,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3201,14,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3202,14,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3203,14,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3204,14,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3205,14,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3206,14,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3207,14,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3208,14,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3209,14,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3210,14,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3211,14,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3212,14,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3213,14,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3214,14,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3215,14,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3216,14,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3217,14,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3218,14,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3219,14,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3220,14,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3221,14,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3222,14,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3223,14,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3224,14,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3225,14,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3226,14,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3227,14,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3228,14,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3229,14,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3230,14,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3231,14,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3232,14,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3233,14,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3234,14,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3235,14,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3236,14,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3237,14,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3238,14,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3239,14,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3240,14,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3241,14,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3242,14,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3243,14,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3244,14,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3245,14,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3246,14,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3247,14,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3248,14,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3249,14,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3250,14,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3251,14,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3252,14,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3253,14,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3254,14,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3255,14,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3256,14,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3257,14,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3258,14,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3259,14,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3260,14,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3261,14,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3262,14,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3263,14,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3264,14,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3265,14,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3266,14,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3267,14,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3268,14,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3269,14,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3270,14,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3271,14,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3272,14,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3273,14,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3274,14,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3275,14,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3276,14,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3277,14,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3278,14,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3279,14,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3280,14,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3281,14,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3282,14,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3283,14,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3284,14,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3285,14,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3286,14,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3287,14,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3288,14,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3289,14,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3290,14,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3291,14,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3292,14,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3293,14,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3294,14,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3295,14,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3296,14,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3297,14,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3298,14,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3299,14,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3300,14,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3301,14,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3302,14,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3303,14,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3304,14,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3305,14,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3306,14,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3307,14,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3308,14,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3309,14,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3310,14,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3311,14,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3312,14,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3313,14,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3314,14,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3315,14,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3316,14,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3317,14,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3318,14,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3319,14,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3320,14,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3321,14,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3322,14,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3323,14,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3324,14,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3325,14,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3326,14,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3327,14,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3328,14,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3329,14,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3330,14,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3331,14,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3332,14,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3333,14,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3334,14,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3335,14,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3336,14,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3337,14,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3338,14,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3339,14,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3340,14,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3341,14,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3342,14,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3343,14,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3344,14,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3345,14,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3346,14,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3347,14,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3348,14,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3349,14,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3350,14,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3351,14,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3352,14,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3353,14,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3354,14,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3355,14,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3356,14,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3357,14,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3358,14,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3359,14,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3360,14,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3361,14,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3362,14,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3363,14,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3364,14,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3365,14,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3366,14,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3367,14,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3368,14,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3369,14,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3370,14,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3371,14,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3372,14,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3373,14,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3374,14,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3375,14,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3376,14,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3377,14,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3378,14,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3379,14,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3380,14,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3381,14,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3382,14,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3383,14,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3384,14,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3385,14,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3386,14,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3387,14,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3388,14,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3389,14,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3390,14,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3391,14,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3392,14,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3393,14,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3394,14,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3395,14,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3396,14,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3397,14,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3398,14,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3399,14,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3400,14,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3401,14,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3402,14,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3403,14,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3404,14,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3405,14,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3406,14,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3407,14,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3408,14,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3409,14,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3410,14,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3411,14,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3412,14,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3413,14,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3414,14,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3415,14,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3416,14,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3417,14,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3418,14,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3419,14,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3420,14,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3421,14,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3422,14,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3423,14,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3424,14,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3425,14,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3426,14,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3427,14,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3428,14,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3429,14,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3430,14,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3431,14,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3432,14,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3433,14,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3434,14,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3435,14,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3436,14,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3437,14,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3438,14,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3439,14,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3440,14,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3441,14,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3442,14,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3443,14,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3444,14,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3445,14,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3446,14,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3447,14,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3448,14,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3449,14,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3450,14,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3451,14,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3452,14,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3453,14,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3454,14,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3455,14,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3456,14,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3457,14,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3458,14,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3459,14,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3460,14,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3461,14,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3462,14,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3463,14,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3464,14,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3465,14,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3466,14,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3467,14,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3468,14,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3469,14,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3470,14,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3471,14,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3472,14,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3473,14,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3474,14,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3475,14,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3476,14,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3477,14,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3478,14,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3479,14,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3480,14,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3481,14,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3482,14,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3483,14,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3484,14,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3485,14,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3486,14,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3487,14,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3488,14,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3489,14,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3490,14,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3491,14,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3492,14,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3493,14,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3494,14,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3495,14,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3496,14,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3497,14,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3498,14,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3499,14,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3500,14,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3501,14,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3502,14,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3503,14,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3504,14,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3505,14,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3506,14,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3507,14,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3508,14,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3509,14,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3510,14,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3511,14,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3512,14,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3513,14,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3514,14,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3515,14,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3516,14,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3517,14,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3518,14,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3519,14,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3520,14,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3521,14,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3522,14,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3523,14,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3524,14,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3525,14,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3526,14,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3527,14,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3528,14,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3529,14,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3530,14,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3531,14,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3532,14,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3533,14,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3534,14,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3535,14,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3536,14,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3537,14,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3538,14,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3539,14,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3540,14,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3541,14,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3542,14,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3543,14,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3544,14,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3545,14,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3546,14,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3547,14,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3548,14,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3549,14,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3550,14,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3551,14,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3552,14,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3553,14,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3554,14,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3555,14,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3556,14,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3557,14,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3558,14,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3559,14,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3560,14,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3561,14,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3562,14,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3563,14,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3564,14,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3565,14,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3566,14,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3567,14,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3568,14,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3569,14,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3570,14,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3571,14,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3572,14,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3573,14,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3574,14,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3575,14,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3576,14,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3577,14,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3578,14,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3579,14,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3580,14,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3581,14,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3582,14,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3583,14,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3584,14,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3585,14,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3586,14,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3587,14,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3588,14,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3589,14,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3590,14,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3591,14,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3592,14,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3593,14,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3594,14,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3595,14,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3596,14,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3597,14,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3598,14,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3599,14,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3600,14,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3601,14,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3602,14,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3603,14,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3604,14,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3605,14,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3606,14,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3607,14,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3608,14,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3609,14,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3610,14,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3611,14,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3612,14,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3613,14,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3614,14,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3615,14,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3616,14,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3617,14,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3618,14,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3619,14,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3620,14,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3621,14,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3622,14,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3623,14,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3624,14,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3625,14,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3626,14,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3627,14,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3628,14,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3629,14,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3630,14,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3631,14,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3632,14,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3633,14,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3634,14,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3635,14,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3636,14,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3637,14,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3638,14,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3639,14,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3640,14,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3641,14,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3642,14,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3643,14,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3644,14,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3645,14,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3646,14,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3647,14,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3648,14,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3649,14,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3650,14,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3651,14,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3652,14,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3653,14,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3654,14,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3655,14,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3656,14,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3657,14,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3658,14,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3659,14,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3660,14,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3661,14,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3662,14,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3663,14,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3664,14,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3665,14,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3666,14,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3667,14,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3668,14,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3669,14,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3670,14,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3671,14,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3672,14,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3673,14,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3674,14,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3675,14,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3676,14,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3677,14,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3678,14,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3679,14,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3680,14,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3681,14,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3682,14,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3683,14,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3684,14,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3685,14,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3686,14,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3687,14,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3688,14,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3689,14,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3690,14,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3691,14,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3692,14,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3693,14,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3694,14,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3695,14,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3696,14,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3697,14,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3698,14,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3699,14,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3700,14,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3701,14,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3702,14,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3703,14,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3704,14,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3705,14,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3706,14,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3707,14,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3708,14,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3709,14,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3710,14,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3711,14,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3712,14,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3713,14,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3714,14,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3715,14,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3716,14,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3717,14,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3718,14,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3719,14,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3720,14,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3721,14,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3722,14,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3723,14,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3724,14,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3725,14,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3726,14,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3727,14,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3728,14,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3729,14,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3730,14,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3731,14,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3732,14,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3733,14,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3734,14,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3735,14,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3736,14,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3737,14,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3738,14,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3739,14,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3740,14,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3741,14,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3742,14,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3743,14,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3744,14,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3745,14,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3746,14,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3747,14,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3748,14,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3749,14,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3750,14,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3751,14,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3752,14,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3753,14,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3754,14,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3755,14,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3756,14,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3757,14,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3758,14,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3759,14,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3760,14,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3761,14,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3762,14,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3763,14,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3764,14,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3765,14,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3766,14,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3767,14,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3768,14,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3769,14,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3770,14,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3771,14,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3772,14,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3773,14,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3774,14,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3775,14,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3776,14,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3777,14,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3778,14,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3779,14,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3780,14,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3781,14,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3782,14,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3783,14,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3784,14,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3785,14,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3786,14,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3787,14,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3788,14,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3789,14,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3790,14,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3791,14,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3792,14,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3793,14,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3794,14,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3795,14,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3796,14,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3797,14,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3798,14,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3799,14,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3800,14,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3801,14,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3802,14,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3803,14,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3804,14,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3805,14,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3806,14,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3807,14,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3808,14,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3809,14,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3810,14,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3811,14,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3812,14,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3813,14,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3814,14,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3815,14,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3816,14,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3817,14,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3818,14,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3819,14,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3820,14,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3821,14,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3822,14,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3823,14,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3824,14,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3825,14,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3826,14,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3827,14,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3828,14,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3829,14,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3830,14,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3831,15,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3832,15,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3833,15,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3834,15,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3835,15,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3836,15,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3837,15,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3838,15,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3839,15,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3840,15,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3841,15,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3842,15,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3843,15,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3844,15,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3845,15,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3846,15,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3847,15,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3848,15,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3849,15,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3850,15,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3851,15,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3852,15,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3853,15,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3854,15,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3855,15,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3856,15,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3857,15,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3858,15,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3859,15,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3860,15,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3861,15,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3862,15,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3863,15,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3864,15,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3865,15,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3866,15,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3867,15,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3868,15,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3869,15,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3870,15,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3871,15,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3872,15,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3873,15,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3874,15,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3875,15,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3876,15,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3877,15,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3878,15,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3879,15,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3880,15,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3881,15,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3882,15,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3883,15,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3884,15,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3885,15,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3886,15,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3887,15,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3888,15,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3889,15,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3890,15,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3891,15,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3892,15,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3893,15,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3894,15,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3895,15,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3896,15,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3897,15,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3898,15,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3899,15,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3900,15,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3901,15,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3902,15,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3903,15,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3904,15,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3905,15,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3906,15,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3907,15,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3908,15,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3909,15,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3910,15,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3911,15,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3912,15,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3913,15,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3914,15,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3915,15,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3916,15,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3917,15,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3918,15,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3919,15,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3920,15,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3921,15,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3922,15,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3923,15,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3924,15,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3925,15,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3926,15,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3927,15,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3928,15,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3929,15,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3930,15,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3931,15,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3932,15,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3933,15,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3934,15,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3935,15,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3936,15,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3937,15,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3938,15,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3939,15,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3940,15,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3941,15,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3942,15,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3943,15,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3944,15,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3945,15,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3946,15,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3947,15,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3948,15,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3949,15,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3950,15,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3951,15,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3952,15,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3953,15,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3954,15,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3955,15,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3956,15,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3957,15,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3958,15,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3959,15,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3960,15,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3961,15,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3962,15,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3963,15,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3964,15,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3965,15,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3966,15,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3967,15,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3968,15,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3969,15,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3970,15,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3971,15,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3972,15,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3973,15,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3974,15,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3975,15,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3976,15,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3977,15,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3978,15,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3979,15,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3980,15,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3981,15,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3982,15,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3983,15,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3984,15,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3985,15,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3986,15,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3987,15,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3988,15,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3989,15,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3990,15,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3991,15,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3992,15,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3993,15,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3994,15,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3995,15,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3996,15,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3997,15,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3998,15,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3999,15,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4000,15,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4001,15,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4002,15,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4003,15,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4004,15,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4005,15,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4006,15,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4007,15,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4008,15,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4009,15,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4010,15,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4011,15,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4012,15,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4013,15,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4014,15,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4015,15,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4016,15,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4017,15,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4018,15,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4019,15,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4020,15,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4021,15,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4022,15,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4023,15,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4024,15,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4025,15,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4026,15,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4027,15,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4028,15,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4029,15,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4030,15,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4031,15,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4032,15,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4033,15,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4034,15,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4035,15,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4036,15,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4037,15,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4038,15,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4039,15,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4040,15,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4041,15,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4042,15,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4043,15,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4044,15,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4045,15,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4046,15,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4047,15,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4048,15,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4049,15,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4050,15,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4051,15,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4052,15,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4053,15,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4054,15,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4055,15,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4056,15,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4057,15,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4058,15,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4059,15,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4060,15,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4061,15,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4062,15,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4063,15,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4064,15,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4065,15,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4066,15,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4067,15,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4068,15,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4069,15,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4070,15,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4071,15,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4072,15,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4073,15,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4074,15,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4075,15,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4076,15,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4077,15,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4078,15,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4079,15,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4080,15,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4081,15,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4082,15,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4083,15,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4084,15,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4085,15,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4086,15,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4087,15,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4088,15,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4089,15,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4090,15,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4091,15,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4092,15,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4093,15,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4094,15,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4095,15,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4096,15,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4097,15,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4098,15,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4099,15,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4100,15,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4101,15,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4102,15,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4103,15,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4104,15,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4105,15,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4106,15,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4107,15,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4108,15,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4109,15,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4110,15,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4111,15,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4112,15,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4113,15,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4114,15,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4115,15,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4116,15,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4117,15,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4118,15,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4119,15,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4120,15,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4121,15,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4122,15,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4123,15,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4124,15,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4125,15,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4126,15,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4127,15,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4128,15,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4129,15,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4130,15,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4131,15,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4132,15,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4133,15,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4134,15,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4135,15,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4136,15,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4137,15,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4138,15,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4139,15,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4140,15,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4141,15,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4142,15,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4143,15,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4144,15,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4145,15,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4146,15,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4147,15,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4148,15,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4149,15,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4150,15,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4151,15,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4152,15,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4153,15,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4154,15,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4155,15,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4156,15,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4157,15,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4158,15,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (4159,15,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4160,15,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4161,15,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4162,15,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4163,15,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4164,15,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4165,15,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4166,15,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4167,15,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4168,15,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4169,15,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4170,15,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4171,15,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4172,15,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4173,15,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4174,15,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4175,15,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4176,15,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4177,15,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4178,15,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4179,15,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4180,15,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4181,15,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4182,15,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4183,15,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4184,15,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4185,15,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4186,15,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4187,15,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4188,15,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4189,15,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4190,15,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4191,15,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4192,15,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4193,15,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4194,15,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4195,15,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4196,15,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4197,15,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4198,15,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4199,15,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4200,15,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4201,15,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4202,15,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4203,15,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4204,15,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4205,15,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4206,15,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4207,15,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4208,15,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4209,15,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4210,15,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4211,15,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4212,15,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4213,15,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4214,15,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4215,15,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4216,15,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4217,15,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4218,15,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4219,15,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4220,15,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4221,15,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4222,15,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4223,15,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4224,15,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4225,15,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4226,15,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4227,15,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4228,15,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4229,15,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4230,15,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4231,15,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4232,15,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4233,15,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4234,15,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4235,15,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4236,15,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4237,15,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4238,15,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4239,15,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4240,15,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4241,15,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4242,15,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4243,15,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4244,15,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4245,15,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4246,15,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4247,15,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4248,15,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4249,15,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4250,15,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4251,15,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4252,15,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4253,15,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4254,15,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4255,15,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4256,15,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4257,15,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4258,15,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4259,15,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4260,15,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4261,15,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4262,15,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4263,15,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4264,15,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4265,15,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4266,15,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4267,15,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4268,15,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4269,15,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4270,15,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4271,15,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4272,15,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4273,15,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4274,15,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4275,15,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4276,15,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4277,15,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4278,15,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4279,15,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4280,15,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4281,15,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4282,15,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4283,15,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4284,15,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4285,15,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4286,15,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4287,15,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4288,15,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4289,15,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4290,15,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4291,15,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4292,15,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4293,15,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4294,15,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4295,15,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4296,15,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4297,15,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4298,15,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4299,15,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4300,15,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4301,15,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4302,15,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4303,15,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4304,15,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4305,15,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4306,15,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4307,15,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4308,15,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4309,15,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4310,15,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4311,15,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4312,15,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4313,15,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4314,15,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4315,15,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4316,15,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4317,15,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4318,15,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4319,15,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4320,15,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4321,15,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4322,15,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4323,15,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4324,15,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4325,15,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4326,15,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4327,15,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4328,15,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4329,15,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4330,15,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4331,15,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4332,15,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4333,15,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4334,15,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4335,15,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4336,15,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4337,15,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4338,15,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4339,15,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4340,15,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4341,15,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4342,15,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4343,15,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4344,15,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4345,15,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4346,15,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4347,15,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4348,15,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4349,15,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4350,15,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4351,15,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4352,15,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4353,15,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4354,15,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4355,15,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4356,15,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4357,15,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4358,15,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4359,15,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4360,15,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4361,15,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4362,15,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4363,15,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4364,15,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4365,15,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4366,15,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4367,15,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4368,15,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4369,15,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4370,15,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4371,15,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4372,15,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4373,15,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4374,15,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4375,15,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4376,15,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4377,15,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4378,15,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4379,15,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4380,15,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4381,15,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4382,15,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4383,15,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4384,15,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4385,15,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4386,15,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4387,15,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4388,15,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4389,15,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4390,15,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4391,15,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4392,15,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4393,15,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4394,15,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4395,15,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4396,15,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4397,15,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4398,15,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4399,15,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4400,15,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4401,15,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4402,15,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4403,15,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4404,15,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4405,15,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4406,15,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4407,15,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4408,15,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4409,15,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4410,15,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4411,15,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4412,15,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4413,15,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4414,15,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4415,15,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4416,15,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4417,15,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4418,15,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4419,15,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4420,15,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4421,15,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4422,15,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4423,15,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4424,15,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4425,15,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4426,15,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4427,15,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4428,15,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4429,15,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4430,15,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4431,15,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4432,15,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4433,15,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4434,15,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4435,15,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4436,15,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4437,15,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4438,15,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4439,15,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4440,15,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4441,15,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4442,15,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4443,15,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4444,15,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4445,15,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4446,15,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4447,15,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4448,15,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4449,15,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4450,15,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4451,15,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4452,15,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4453,15,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4454,15,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4455,15,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4456,15,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4457,15,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4458,15,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4459,15,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4460,15,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4461,15,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4462,15,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4463,15,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4464,15,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4465,15,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4466,15,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4467,15,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4468,15,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4469,15,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4470,15,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4471,15,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4472,15,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4473,15,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4474,15,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4475,15,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4476,15,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4477,15,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4478,15,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4479,15,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4480,15,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4481,15,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4482,15,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4483,15,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4484,15,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4485,15,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4486,15,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4487,15,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4488,15,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4489,15,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4490,15,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4491,15,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4492,15,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4493,15,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4494,15,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4495,15,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4496,15,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4497,15,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4498,15,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4499,15,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4500,15,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4501,15,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4502,15,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4503,15,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4504,15,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4505,15,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4506,15,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4507,15,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4508,15,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4509,15,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4510,15,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4511,15,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4512,15,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4513,15,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4514,15,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4515,15,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4516,15,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4517,15,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4518,15,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4519,15,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4520,15,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4521,15,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4522,15,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4523,15,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4524,15,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4525,15,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4526,15,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4527,15,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4528,15,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4529,15,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4530,15,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4531,15,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4532,15,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4533,15,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4534,15,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4535,15,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4536,15,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4537,15,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4538,15,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4539,15,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4540,15,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4541,15,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4542,15,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4543,15,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4544,15,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4545,15,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4546,15,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4547,15,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4548,15,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4549,15,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4550,15,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4551,15,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4552,15,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4553,15,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4554,15,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4555,15,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4556,15,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4557,15,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4558,15,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4559,15,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4560,15,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4561,15,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4562,15,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4563,15,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4564,15,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4565,15,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4566,15,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4567,15,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4568,15,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4569,15,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4570,15,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4571,15,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4572,15,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4573,15,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4574,15,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4575,15,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4576,15,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4577,15,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4578,15,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4579,15,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4580,15,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4581,15,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4582,15,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4583,15,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4584,15,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4585,15,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4586,15,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4587,15,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4588,15,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4589,15,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4590,15,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4591,15,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4592,15,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4593,15,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4594,15,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4595,15,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4596,15,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4597,15,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4598,15,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4599,15,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4600,15,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4601,16,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4602,16,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4603,16,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4604,16,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4605,16,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4606,16,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4607,16,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4608,16,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4609,16,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4610,16,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4611,16,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4612,16,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4613,16,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4614,16,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4615,16,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4616,16,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4617,16,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4618,16,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4619,16,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4620,16,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4621,16,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4622,16,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4623,16,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4624,16,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4625,16,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4626,16,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4627,16,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4628,16,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4629,16,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4630,16,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4631,16,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4632,16,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4633,16,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4634,16,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4635,16,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4636,16,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4637,16,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4638,16,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4639,16,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4640,16,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4641,16,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4642,16,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4643,16,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4644,16,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4645,16,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4646,16,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4647,16,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4648,16,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4649,16,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4650,16,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4651,16,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4652,16,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4653,16,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4654,16,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4655,16,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4656,16,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4657,16,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4658,16,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4659,16,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4660,16,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4661,16,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4662,16,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4663,16,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4664,16,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4665,16,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4666,16,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4667,16,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4668,16,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4669,16,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4670,16,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4671,16,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4672,16,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4673,16,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4674,16,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4675,16,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4676,16,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4677,16,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4678,16,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4679,16,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4680,16,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4681,16,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4682,16,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4683,16,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4684,16,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4685,16,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4686,16,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4687,16,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4688,16,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4689,16,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4690,16,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4691,16,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4692,16,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4693,16,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4694,16,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4695,16,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4696,16,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4697,16,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4698,16,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4699,16,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4700,16,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4701,16,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4702,16,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4703,16,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4704,16,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4705,16,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4706,16,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4707,16,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4708,16,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4709,16,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4710,16,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4711,16,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4712,16,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4713,16,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4714,16,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4715,16,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4716,16,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4717,16,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4718,16,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4719,16,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4720,16,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4721,16,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4722,16,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4723,16,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4724,16,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4725,16,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4726,16,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4727,16,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4728,16,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4729,16,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4730,16,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4731,16,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4732,16,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4733,16,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4734,16,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4735,16,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4736,16,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4737,16,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4738,16,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4739,16,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4740,16,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4741,16,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4742,16,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4743,16,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4744,16,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4745,16,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4746,16,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4747,16,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4748,16,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4749,16,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4750,16,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4751,16,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4752,16,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4753,16,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4754,16,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4755,16,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4756,16,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4757,16,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4758,16,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4759,16,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4760,16,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4761,16,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4762,16,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4763,16,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4764,16,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4765,16,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4766,16,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4767,16,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4768,16,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4769,16,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4770,16,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4771,16,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4772,16,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4773,16,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4774,16,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4775,16,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4776,16,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4777,16,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4778,16,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4779,16,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4780,16,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4781,16,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4782,16,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4783,16,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4784,16,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4785,16,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4786,16,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4787,16,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4788,16,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4789,16,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4790,16,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4791,16,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4792,16,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4793,16,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4794,16,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4795,16,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4796,16,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4797,16,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4798,16,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4799,16,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4800,16,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4801,16,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4802,16,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4803,16,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4804,16,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4805,16,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4806,16,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4807,16,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4808,16,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4809,16,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4810,16,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4811,16,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4812,16,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4813,16,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4814,16,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4815,16,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4816,16,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4817,16,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4818,16,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4819,16,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4820,16,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4821,16,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4822,16,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4823,16,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4824,16,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4825,16,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4826,16,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4827,16,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4828,16,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4829,16,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4830,16,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4831,16,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4832,16,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4833,16,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4834,16,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4835,16,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4836,16,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4837,16,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4838,16,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4839,16,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4840,16,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4841,16,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4842,16,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4843,16,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4844,16,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4845,16,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4846,16,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4847,16,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4848,16,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4849,16,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4850,16,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4851,16,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4852,16,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4853,16,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4854,16,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4855,16,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4856,16,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4857,16,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4858,16,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4859,16,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4860,16,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4861,16,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4862,16,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4863,16,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4864,16,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4865,16,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4866,16,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4867,16,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4868,16,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4869,16,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4870,16,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4871,16,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4872,16,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4873,16,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4874,16,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4875,16,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4876,16,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4877,16,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4878,16,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4879,16,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4880,16,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4881,16,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4882,16,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4883,16,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4884,16,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4885,16,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4886,16,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4887,16,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4888,16,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4889,16,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4890,16,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4891,16,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4892,16,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4893,16,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4894,16,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4895,16,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4896,16,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4897,16,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4898,16,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4899,16,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4900,16,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4901,16,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4902,16,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4903,16,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4904,16,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4905,16,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4906,16,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4907,16,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4908,16,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4909,16,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4910,16,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4911,16,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4912,16,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4913,16,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4914,16,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4915,16,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4916,16,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4917,16,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4918,16,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4919,16,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4920,16,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4921,16,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4922,16,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4923,16,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4924,16,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4925,16,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4926,16,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4927,16,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4928,16,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4929,16,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4930,16,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4931,16,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4932,16,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4933,16,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4934,16,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4935,16,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4936,16,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4937,16,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4938,16,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4939,16,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4940,16,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4941,16,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4942,16,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4943,16,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4944,16,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4945,16,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4946,16,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4947,16,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4948,16,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4949,16,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4950,16,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4951,16,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4952,16,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4953,16,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4954,16,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4955,16,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4956,16,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4957,16,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4958,16,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4959,16,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4960,16,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4961,16,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4962,16,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4963,16,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4964,16,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4965,16,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4966,16,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4967,16,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4968,16,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4969,16,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4970,16,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4971,16,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4972,16,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4973,16,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4974,16,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4975,16,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4976,16,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4977,16,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4978,16,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4979,16,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4980,16,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4981,16,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4982,16,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4983,16,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4984,16,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4985,16,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4986,16,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4987,16,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4988,16,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4989,16,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4990,16,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4991,16,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4992,16,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4993,16,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4994,16,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4995,16,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4996,16,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4997,16,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4998,16,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4999,16,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5000,16,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5001,16,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5002,16,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5003,16,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5004,16,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5005,16,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5006,16,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5007,16,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5008,16,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5009,16,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5010,16,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5011,16,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5012,16,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5013,16,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5014,16,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5015,16,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5016,16,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5017,16,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5018,16,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5019,16,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5020,16,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5021,16,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5022,16,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5023,16,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5024,16,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5025,16,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5026,16,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5027,16,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5028,16,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5029,16,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5030,16,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5031,16,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5032,16,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5033,16,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5034,16,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5035,16,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5036,16,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5037,16,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5038,16,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5039,16,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5040,16,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5041,16,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5042,16,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5043,16,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5044,16,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5045,16,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5046,16,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5047,16,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5048,16,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5049,16,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5050,16,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5051,16,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5052,16,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5053,16,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5054,16,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5055,16,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5056,16,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5057,16,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5058,16,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5059,16,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5060,16,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5061,16,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5062,16,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5063,16,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5064,16,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5065,16,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5066,16,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5067,16,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5068,16,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5069,16,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5070,16,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5071,16,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5072,16,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5073,16,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5074,16,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5075,16,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5076,16,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5077,16,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5078,16,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5079,16,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5080,16,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5081,16,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5082,16,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5083,16,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5084,16,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5085,16,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5086,16,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5087,16,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5088,16,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5089,16,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5090,16,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5091,16,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5092,16,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5093,16,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5094,16,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5095,16,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5096,16,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5097,16,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5098,16,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5099,16,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5100,16,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5101,16,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5102,16,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5103,16,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5104,16,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5105,16,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5106,16,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5107,16,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5108,16,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5109,16,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5110,16,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5111,16,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5112,16,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5113,16,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5114,16,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5115,16,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5116,16,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5117,16,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5118,16,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5119,16,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5120,16,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5121,16,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5122,16,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5123,16,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5124,16,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5125,16,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5126,16,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5127,16,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5128,16,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5129,16,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5130,16,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5131,16,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5132,16,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5133,16,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5134,16,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5135,16,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5136,16,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5137,16,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5138,16,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5139,16,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5140,16,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5141,16,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5142,16,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5143,16,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5144,16,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5145,16,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5146,16,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5147,16,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5148,16,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5149,16,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5150,16,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5151,16,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5152,16,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5153,16,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5154,16,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5155,16,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5156,16,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5157,16,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5158,16,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5159,16,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5160,16,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5161,16,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5162,16,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5163,16,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5164,16,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5165,16,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5166,16,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5167,16,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5168,16,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5169,16,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5170,16,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5171,16,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5172,16,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5173,16,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5174,16,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5175,16,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5176,16,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5177,16,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5178,16,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5179,16,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5180,16,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5181,16,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5182,16,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5183,16,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5184,16,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5185,16,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5186,16,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5187,16,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (5188,16,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5189,16,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5190,16,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5191,16,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5192,16,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5193,16,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5194,16,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5195,16,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5196,16,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5197,16,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5198,16,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5199,16,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5200,16,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5201,16,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5202,16,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5203,16,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5204,16,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5205,16,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5206,16,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5207,16,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5208,16,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5209,16,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5210,16,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5211,16,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5212,16,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5213,16,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5214,16,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5215,16,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5216,16,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5217,16,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5218,16,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5219,16,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5220,16,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5221,16,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5222,16,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5223,16,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5224,16,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5225,16,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5226,16,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5227,16,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5228,16,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5229,16,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5230,16,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5231,16,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5232,16,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5233,16,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5234,16,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5235,16,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5236,16,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5237,16,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5238,16,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5239,16,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5240,16,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5241,16,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5242,16,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5243,16,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5244,16,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5245,16,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5246,16,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5247,16,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5248,16,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5249,16,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5250,16,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5251,16,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5252,16,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5253,16,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5254,16,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5255,16,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5256,16,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5257,16,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5258,16,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5259,16,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5260,16,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5261,16,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5262,16,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5263,16,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5264,16,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5265,16,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5266,16,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5267,16,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5268,16,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5269,16,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5270,16,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5271,16,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5272,16,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5273,16,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5274,16,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5275,16,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5276,16,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5277,16,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5278,16,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5279,16,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5280,16,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5281,16,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5282,16,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5283,16,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5284,16,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5285,16,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5286,16,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5287,16,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5288,16,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5289,16,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5290,16,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5291,16,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5292,16,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5293,16,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5294,16,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5295,16,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5296,16,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5297,16,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5298,16,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5299,16,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5300,16,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5301,16,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5302,16,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5303,16,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5304,16,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5305,16,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5306,16,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5307,16,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5308,16,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5309,16,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5310,16,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5311,16,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5312,16,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5313,16,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5314,16,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5315,16,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5316,16,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5317,16,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5318,16,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5319,16,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5320,16,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5321,16,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5322,16,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5323,16,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5324,16,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5325,16,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5326,16,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5327,16,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5328,16,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5329,16,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5330,16,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5331,16,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5332,16,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5333,16,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5334,16,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5335,16,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5336,16,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5337,16,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5338,16,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5339,16,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5340,16,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5341,16,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5342,16,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5343,16,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5344,16,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5345,16,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5346,16,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5347,16,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5348,16,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5349,16,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5350,16,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5351,16,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5352,16,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5353,16,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5354,16,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5355,16,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5356,16,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5357,16,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5358,16,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5359,16,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5360,16,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5361,16,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5362,16,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5363,16,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5364,16,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5365,16,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5366,16,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5367,16,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5368,16,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5369,16,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5370,16,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5371,17,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5372,17,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5373,17,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5374,17,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5375,17,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5376,17,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5377,17,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5378,17,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5379,17,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5380,17,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5381,17,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5382,17,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5383,17,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5384,17,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5385,17,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5386,17,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5387,17,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5388,17,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5389,17,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5390,17,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5391,17,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5392,17,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5393,17,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5394,17,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5395,17,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5396,17,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5397,17,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5398,17,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5399,17,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5400,17,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5401,17,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5402,17,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5403,17,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5404,17,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5405,17,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5406,17,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5407,17,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5408,17,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5409,17,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5410,17,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5411,17,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5412,17,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5413,17,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5414,17,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5415,17,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5416,17,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5417,17,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5418,17,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5419,17,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5420,17,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5421,17,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5422,17,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5423,17,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5424,17,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5425,17,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5426,17,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5427,17,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5428,17,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5429,17,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5430,17,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5431,17,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5432,17,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5433,17,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5434,17,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5435,17,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5436,17,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5437,17,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5438,17,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5439,17,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5440,17,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5441,17,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5442,17,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5443,17,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5444,17,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5445,17,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5446,17,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5447,17,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5448,17,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5449,17,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5450,17,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5451,17,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5452,17,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5453,17,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5454,17,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5455,17,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5456,17,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5457,17,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5458,17,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5459,17,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5460,17,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5461,17,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5462,17,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5463,17,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5464,17,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5465,17,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5466,17,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5467,17,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5468,17,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5469,17,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5470,17,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5471,17,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5472,17,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5473,17,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5474,17,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5475,17,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5476,17,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5477,17,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5478,17,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5479,17,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5480,17,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5481,17,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5482,17,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5483,17,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5484,17,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5485,17,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5486,17,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5487,17,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5488,17,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5489,17,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5490,17,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5491,17,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5492,17,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5493,17,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5494,17,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5495,17,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5496,17,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5497,17,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5498,17,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5499,17,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5500,17,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5501,17,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5502,17,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5503,17,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5504,17,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5505,17,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5506,17,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5507,17,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5508,17,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5509,17,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5510,17,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5511,17,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5512,17,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5513,17,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5514,17,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5515,17,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5516,17,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5517,17,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5518,17,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5519,17,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5520,17,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5521,17,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5522,17,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5523,17,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5524,17,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5525,17,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5526,17,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5527,17,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5528,17,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5529,17,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5530,17,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5531,17,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5532,17,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5533,17,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5534,17,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5535,17,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5536,17,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5537,17,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5538,17,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5539,17,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5540,17,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5541,17,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5542,17,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5543,17,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5544,17,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5545,17,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5546,17,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5547,17,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5548,17,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5549,17,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5550,17,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5551,17,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5552,17,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5553,17,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5554,17,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5555,17,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5556,17,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5557,17,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5558,17,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5559,17,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5560,17,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5561,17,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5562,17,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5563,17,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5564,17,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5565,17,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5566,17,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5567,17,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5568,17,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5569,17,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5570,17,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5571,17,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5572,17,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5573,17,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5574,17,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5575,17,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5576,17,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5577,17,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5578,17,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5579,17,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5580,17,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5581,17,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5582,17,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5583,17,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5584,17,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5585,17,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5586,17,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5587,17,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5588,17,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5589,17,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5590,17,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5591,17,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5592,17,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5593,17,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5594,17,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5595,17,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5596,17,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5597,17,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5598,17,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5599,17,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5600,17,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5601,17,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5602,17,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5603,17,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5604,17,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5605,17,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5606,17,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5607,17,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5608,17,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5609,17,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5610,17,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5611,17,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5612,17,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5613,17,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5614,17,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5615,17,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5616,17,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5617,17,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5618,17,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5619,17,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5620,17,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5621,17,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5622,17,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5623,17,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5624,17,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5625,17,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5626,17,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5627,17,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5628,17,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5629,17,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5630,17,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5631,17,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5632,17,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5633,17,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5634,17,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5635,17,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5636,17,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5637,17,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5638,17,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5639,17,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5640,17,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5641,17,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5642,17,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5643,17,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5644,17,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5645,17,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5646,17,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5647,17,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5648,17,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5649,17,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5650,17,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5651,17,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5652,17,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5653,17,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5654,17,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5655,17,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5656,17,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5657,17,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5658,17,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5659,17,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5660,17,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5661,17,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5662,17,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5663,17,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5664,17,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5665,17,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5666,17,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5667,17,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5668,17,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5669,17,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5670,17,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5671,17,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5672,17,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5673,17,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5674,17,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5675,17,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5676,17,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5677,17,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5678,17,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5679,17,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5680,17,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5681,17,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5682,17,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5683,17,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5684,17,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5685,17,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5686,17,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5687,17,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5688,17,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5689,17,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5690,17,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5691,17,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5692,17,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5693,17,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5694,17,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5695,17,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5696,17,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5697,17,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5698,17,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5699,17,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5700,17,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5701,17,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5702,17,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5703,17,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5704,17,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5705,17,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5706,17,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5707,17,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5708,17,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5709,17,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5710,17,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5711,17,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5712,17,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5713,17,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5714,17,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5715,17,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5716,17,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5717,17,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5718,17,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5719,17,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5720,17,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5721,17,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5722,17,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5723,17,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5724,17,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5725,17,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5726,17,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5727,17,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5728,17,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5729,17,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5730,17,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5731,17,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5732,17,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5733,17,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5734,17,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5735,17,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5736,17,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5737,17,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5738,17,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5739,17,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5740,17,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5741,17,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5742,17,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5743,17,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5744,17,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5745,17,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5746,17,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5747,17,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5748,17,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5749,17,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5750,17,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5751,17,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5752,17,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5753,17,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5754,17,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5755,17,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5756,17,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5757,17,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5758,17,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5759,17,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5760,17,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5761,17,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5762,17,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5763,17,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5764,17,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5765,17,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5766,17,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5767,17,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5768,17,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5769,17,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5770,17,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5771,17,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5772,17,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5773,17,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5774,17,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5775,17,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5776,17,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5777,17,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5778,17,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5779,17,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5780,17,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5781,17,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5782,17,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5783,17,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5784,17,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5785,17,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5786,17,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5787,17,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5788,17,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5789,17,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5790,17,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5791,17,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5792,17,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5793,17,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5794,17,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5795,17,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5796,17,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5797,17,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5798,17,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5799,17,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5800,17,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5801,17,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5802,17,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5803,17,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5804,17,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5805,17,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5806,17,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5807,17,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5808,17,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5809,17,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5810,17,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5811,17,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5812,17,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5813,17,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5814,17,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5815,17,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5816,17,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5817,17,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5818,17,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5819,17,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5820,17,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5821,17,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5822,17,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5823,17,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5824,17,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5825,17,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5826,17,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5827,17,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5828,17,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5829,17,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5830,17,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5831,17,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5832,17,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5833,17,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5834,17,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5835,17,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5836,17,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5837,17,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5838,17,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5839,17,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5840,17,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5841,17,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5842,17,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5843,17,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5844,17,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5845,17,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5846,17,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5847,17,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5848,17,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5849,17,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5850,17,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5851,17,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5852,17,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5853,17,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5854,17,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5855,17,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5856,17,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5857,17,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5858,17,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5859,17,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5860,17,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5861,17,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5862,17,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5863,17,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5864,17,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5865,17,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5866,17,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5867,17,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5868,17,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5869,17,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5870,17,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5871,17,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5872,17,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5873,17,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5874,17,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5875,17,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5876,17,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5877,17,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5878,17,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5879,17,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5880,17,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5881,17,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5882,17,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5883,17,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5884,17,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5885,17,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5886,17,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5887,17,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5888,17,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5889,17,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5890,17,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5891,17,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5892,17,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5893,17,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5894,17,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5895,17,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5896,17,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5897,17,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5898,17,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5899,17,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5900,17,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5901,17,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5902,17,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5903,17,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5904,17,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5905,17,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5906,17,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5907,17,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5908,17,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5909,17,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5910,17,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5911,17,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5912,17,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5913,17,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5914,17,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5915,17,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5916,17,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5917,17,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5918,17,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5919,17,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5920,17,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5921,17,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5922,17,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5923,17,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5924,17,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5925,17,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5926,17,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5927,17,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5928,17,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5929,17,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5930,17,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5931,17,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5932,17,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5933,17,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5934,17,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5935,17,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5936,17,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5937,17,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5938,17,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5939,17,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5940,17,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5941,17,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5942,17,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5943,17,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5944,17,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5945,17,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5946,17,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5947,17,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5948,17,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5949,17,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5950,17,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5951,17,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5952,17,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5953,17,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5954,17,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5955,17,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5956,17,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5957,17,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5958,17,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5959,17,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5960,17,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5961,17,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5962,17,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5963,17,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5964,17,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5965,17,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5966,17,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5967,17,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5968,17,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5969,17,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5970,17,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5971,17,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5972,17,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5973,17,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5974,17,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5975,17,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5976,17,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5977,17,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5978,17,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5979,17,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5980,17,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5981,17,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5982,17,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5983,17,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5984,17,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5985,17,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5986,17,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5987,17,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5988,17,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5989,17,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5990,17,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5991,17,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5992,17,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5993,17,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5994,17,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5995,17,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5996,17,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5997,17,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5998,17,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5999,17,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6000,17,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6001,17,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6002,17,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6003,17,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6004,17,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6005,17,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6006,17,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6007,17,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6008,17,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6009,17,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6010,17,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6011,17,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6012,17,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6013,17,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6014,17,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6015,17,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6016,17,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6017,17,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6018,17,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6019,17,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6020,17,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6021,17,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6022,17,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6023,17,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6024,17,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6025,17,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6026,17,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6027,17,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6028,17,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6029,17,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6030,17,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6031,17,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6032,17,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6033,17,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6034,17,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6035,17,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6036,17,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6037,17,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6038,17,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6039,17,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6040,17,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6041,17,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6042,17,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6043,17,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6044,17,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6045,17,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6046,17,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6047,17,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6048,17,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6049,17,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6050,17,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6051,17,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6052,17,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6053,17,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6054,17,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6055,17,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6056,17,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6057,17,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6058,17,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6059,17,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6060,17,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6061,17,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6062,17,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6063,17,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6064,17,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6065,17,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6066,17,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6067,17,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6068,17,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6069,17,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6070,17,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6071,17,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6072,17,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6073,17,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6074,17,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6075,17,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6076,17,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6077,17,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6078,17,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6079,17,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6080,17,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6081,17,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6082,17,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6083,17,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6084,17,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6085,17,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6086,17,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6087,17,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6088,17,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6089,17,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6090,17,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6091,17,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6092,17,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6093,17,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6094,17,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6095,17,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6096,17,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6097,17,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6098,17,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6099,17,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6100,17,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6101,17,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6102,17,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6103,17,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6104,17,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6105,17,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6106,17,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6107,17,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6108,17,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6109,17,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6110,17,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6111,17,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6112,17,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6113,17,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6114,17,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6115,17,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6116,17,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6117,17,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6118,17,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6119,17,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6120,17,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6121,17,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6122,17,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6123,17,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6124,17,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6125,17,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6126,17,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6127,17,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6128,17,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6129,17,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6130,17,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6131,17,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6132,17,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6133,17,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6134,17,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6135,17,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6136,17,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6137,17,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6138,17,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6139,17,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6140,17,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6141,18,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6142,18,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6143,18,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6144,18,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6145,18,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6146,18,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6147,18,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6148,18,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6149,18,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6150,18,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6151,18,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6152,18,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6153,18,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6154,18,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6155,18,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6156,18,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6157,18,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6158,18,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6159,18,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6160,18,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6161,18,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6162,18,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6163,18,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6164,18,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6165,18,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6166,18,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6167,18,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6168,18,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6169,18,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6170,18,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6171,18,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6172,18,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6173,18,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6174,18,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6175,18,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6176,18,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6177,18,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6178,18,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6179,18,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6180,18,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6181,18,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6182,18,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6183,18,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6184,18,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6185,18,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6186,18,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6187,18,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6188,18,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6189,18,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6190,18,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6191,18,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6192,18,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6193,18,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6194,18,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6195,18,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6196,18,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6197,18,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6198,18,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6199,18,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6200,18,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6201,18,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6202,18,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6203,18,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6204,18,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6205,18,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6206,18,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6207,18,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6208,18,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6209,18,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6210,18,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6211,18,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6212,18,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6213,18,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6214,18,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6215,18,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6216,18,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (6217,18,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6218,18,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6219,18,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6220,18,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6221,18,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6222,18,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6223,18,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6224,18,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6225,18,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6226,18,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6227,18,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6228,18,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6229,18,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6230,18,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6231,18,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6232,18,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6233,18,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6234,18,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6235,18,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6236,18,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6237,18,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6238,18,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6239,18,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6240,18,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6241,18,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6242,18,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6243,18,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6244,18,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6245,18,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6246,18,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6247,18,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6248,18,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6249,18,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6250,18,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6251,18,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6252,18,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6253,18,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6254,18,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6255,18,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6256,18,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6257,18,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6258,18,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6259,18,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6260,18,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6261,18,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6262,18,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6263,18,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6264,18,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6265,18,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6266,18,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6267,18,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6268,18,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6269,18,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6270,18,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6271,18,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6272,18,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6273,18,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6274,18,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6275,18,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6276,18,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6277,18,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6278,18,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6279,18,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6280,18,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6281,18,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6282,18,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6283,18,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6284,18,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6285,18,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6286,18,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6287,18,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6288,18,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6289,18,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6290,18,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6291,18,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6292,18,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6293,18,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6294,18,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6295,18,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6296,18,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6297,18,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6298,18,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6299,18,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6300,18,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6301,18,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6302,18,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6303,18,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6304,18,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6305,18,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6306,18,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6307,18,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6308,18,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6309,18,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6310,18,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6311,18,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6312,18,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6313,18,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6314,18,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6315,18,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6316,18,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6317,18,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6318,18,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6319,18,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6320,18,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6321,18,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6322,18,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6323,18,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6324,18,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6325,18,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6326,18,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6327,18,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6328,18,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6329,18,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6330,18,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6331,18,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6332,18,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6333,18,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6334,18,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6335,18,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6336,18,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6337,18,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6338,18,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6339,18,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6340,18,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6341,18,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6342,18,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6343,18,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6344,18,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6345,18,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6346,18,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6347,18,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6348,18,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6349,18,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6350,18,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6351,18,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6352,18,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6353,18,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6354,18,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6355,18,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6356,18,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6357,18,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6358,18,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6359,18,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6360,18,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6361,18,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6362,18,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6363,18,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6364,18,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6365,18,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6366,18,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6367,18,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6368,18,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6369,18,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6370,18,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6371,18,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6372,18,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6373,18,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6374,18,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6375,18,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6376,18,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6377,18,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6378,18,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6379,18,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6380,18,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6381,18,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6382,18,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6383,18,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6384,18,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6385,18,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6386,18,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6387,18,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6388,18,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6389,18,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6390,18,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6391,18,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6392,18,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6393,18,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6394,18,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6395,18,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6396,18,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6397,18,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6398,18,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6399,18,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6400,18,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6401,18,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6402,18,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6403,18,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6404,18,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6405,18,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6406,18,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6407,18,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6408,18,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6409,18,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6410,18,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6411,18,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6412,18,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6413,18,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6414,18,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6415,18,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6416,18,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6417,18,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6418,18,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6419,18,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6420,18,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6421,18,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6422,18,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6423,18,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6424,18,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6425,18,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6426,18,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6427,18,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6428,18,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6429,18,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6430,18,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6431,18,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6432,18,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6433,18,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6434,18,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6435,18,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6436,18,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6437,18,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6438,18,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6439,18,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6440,18,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6441,18,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6442,18,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6443,18,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6444,18,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6445,18,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6446,18,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6447,18,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6448,18,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6449,18,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6450,18,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6451,18,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6452,18,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6453,18,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6454,18,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6455,18,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6456,18,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6457,18,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6458,18,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6459,18,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6460,18,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6461,18,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6462,18,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6463,18,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6464,18,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6465,18,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6466,18,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6467,18,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6468,18,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6469,18,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6470,18,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6471,18,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6472,18,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6473,18,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6474,18,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6475,18,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6476,18,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6477,18,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6478,18,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6479,18,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6480,18,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6481,18,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6482,18,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6483,18,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6484,18,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6485,18,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6486,18,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6487,18,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6488,18,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6489,18,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6490,18,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6491,18,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6492,18,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6493,18,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6494,18,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6495,18,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6496,18,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6497,18,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6498,18,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6499,18,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6500,18,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6501,18,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6502,18,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6503,18,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6504,18,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6505,18,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6506,18,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6507,18,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6508,18,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6509,18,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6510,18,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6511,18,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6512,18,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6513,18,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6514,18,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6515,18,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6516,18,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6517,18,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6518,18,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6519,18,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6520,18,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6521,18,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6522,18,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6523,18,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6524,18,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6525,18,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6526,18,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6527,18,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6528,18,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6529,18,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6530,18,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6531,18,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6532,18,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6533,18,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6534,18,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6535,18,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6536,18,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6537,18,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6538,18,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6539,18,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6540,18,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6541,18,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6542,18,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6543,18,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6544,18,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6545,18,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6546,18,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6547,18,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6548,18,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6549,18,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6550,18,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6551,18,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6552,18,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6553,18,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6554,18,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6555,18,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6556,18,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6557,18,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6558,18,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6559,18,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6560,18,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6561,18,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6562,18,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6563,18,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6564,18,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6565,18,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6566,18,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6567,18,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6568,18,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6569,18,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6570,18,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6571,18,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6572,18,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6573,18,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6574,18,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6575,18,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6576,18,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6577,18,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6578,18,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6579,18,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6580,18,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6581,18,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6582,18,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6583,18,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6584,18,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6585,18,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6586,18,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6587,18,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6588,18,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6589,18,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6590,18,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6591,18,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6592,18,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6593,18,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6594,18,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6595,18,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6596,18,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6597,18,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6598,18,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6599,18,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6600,18,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6601,18,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6602,18,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6603,18,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6604,18,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6605,18,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6606,18,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6607,18,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6608,18,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6609,18,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6610,18,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6611,18,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6612,18,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6613,18,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6614,18,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6615,18,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6616,18,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6617,18,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6618,18,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6619,18,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6620,18,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6621,18,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6622,18,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6623,18,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6624,18,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6625,18,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6626,18,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6627,18,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6628,18,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6629,18,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6630,18,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6631,18,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6632,18,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6633,18,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6634,18,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6635,18,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6636,18,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6637,18,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6638,18,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6639,18,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6640,18,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6641,18,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6642,18,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6643,18,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6644,18,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6645,18,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6646,18,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6647,18,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6648,18,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6649,18,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6650,18,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6651,18,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6652,18,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6653,18,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6654,18,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6655,18,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6656,18,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6657,18,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6658,18,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6659,18,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6660,18,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6661,18,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6662,18,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6663,18,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6664,18,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6665,18,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6666,18,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6667,18,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6668,18,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6669,18,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6670,18,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6671,18,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6672,18,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6673,18,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6674,18,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6675,18,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6676,18,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6677,18,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6678,18,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6679,18,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6680,18,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6681,18,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6682,18,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6683,18,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6684,18,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6685,18,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6686,18,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6687,18,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6688,18,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6689,18,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6690,18,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6691,18,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6692,18,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6693,18,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6694,18,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6695,18,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6696,18,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6697,18,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6698,18,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6699,18,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6700,18,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6701,18,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6702,18,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6703,18,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6704,18,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6705,18,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6706,18,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6707,18,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6708,18,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6709,18,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6710,18,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6711,18,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6712,18,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6713,18,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6714,18,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6715,18,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6716,18,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6717,18,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6718,18,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6719,18,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6720,18,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6721,18,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6722,18,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6723,18,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6724,18,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6725,18,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6726,18,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6727,18,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6728,18,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6729,18,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6730,18,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6731,18,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6732,18,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6733,18,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6734,18,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6735,18,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6736,18,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6737,18,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6738,18,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6739,18,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6740,18,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6741,18,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6742,18,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6743,18,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6744,18,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6745,18,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6746,18,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6747,18,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6748,18,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6749,18,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6750,18,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6751,18,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6752,18,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6753,18,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6754,18,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6755,18,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6756,18,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6757,18,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6758,18,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6759,18,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6760,18,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6761,18,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6762,18,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6763,18,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6764,18,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6765,18,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6766,18,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6767,18,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6768,18,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6769,18,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6770,18,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6771,18,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6772,18,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6773,18,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6774,18,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6775,18,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6776,18,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6777,18,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6778,18,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6779,18,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6780,18,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6781,18,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6782,18,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6783,18,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6784,18,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6785,18,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6786,18,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6787,18,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6788,18,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6789,18,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6790,18,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6791,18,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6792,18,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6793,18,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6794,18,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6795,18,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6796,18,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6797,18,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6798,18,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6799,18,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6800,18,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6801,18,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6802,18,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6803,18,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6804,18,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6805,18,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6806,18,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6807,18,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6808,18,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6809,18,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6810,18,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6811,18,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6812,18,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6813,18,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6814,18,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6815,18,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6816,18,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6817,18,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6818,18,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6819,18,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6820,18,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6821,18,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6822,18,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6823,18,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6824,18,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6825,18,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6826,18,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6827,18,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6828,18,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6829,18,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6830,18,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6831,18,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6832,18,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6833,18,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6834,18,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6835,18,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6836,18,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6837,18,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6838,18,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6839,18,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6840,18,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6841,18,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6842,18,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6843,18,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6844,18,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6845,18,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6846,18,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6847,18,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6848,18,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6849,18,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6850,18,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6851,18,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6852,18,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6853,18,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6854,18,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6855,18,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6856,18,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6857,18,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6858,18,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6859,18,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6860,18,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6861,18,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6862,18,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6863,18,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6864,18,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6865,18,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6866,18,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6867,18,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6868,18,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6869,18,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6870,18,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6871,18,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6872,18,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6873,18,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6874,18,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6875,18,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6876,18,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6877,18,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6878,18,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6879,18,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6880,18,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6881,18,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6882,18,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6883,18,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6884,18,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6885,18,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6886,18,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6887,18,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6888,18,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6889,18,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6890,18,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6891,18,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6892,18,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6893,18,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6894,18,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6895,18,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6896,18,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6897,18,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6898,18,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6899,18,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6900,18,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6901,18,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6902,18,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6903,18,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6904,18,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6905,18,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6906,18,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6907,18,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6908,18,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6909,18,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6910,18,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6911,19,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6912,19,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6913,19,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6914,19,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6915,19,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6916,19,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6917,19,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6918,19,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6919,19,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6920,19,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6921,19,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6922,19,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6923,19,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6924,19,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6925,19,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6926,19,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6927,19,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6928,19,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6929,19,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6930,19,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6931,19,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6932,19,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6933,19,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6934,19,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6935,19,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6936,19,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6937,19,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6938,19,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6939,19,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6940,19,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6941,19,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6942,19,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6943,19,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6944,19,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6945,19,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6946,19,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6947,19,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6948,19,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6949,19,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6950,19,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6951,19,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6952,19,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6953,19,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6954,19,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6955,19,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6956,19,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6957,19,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6958,19,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6959,19,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6960,19,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6961,19,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6962,19,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6963,19,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6964,19,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6965,19,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6966,19,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6967,19,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6968,19,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6969,19,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6970,19,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6971,19,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6972,19,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6973,19,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6974,19,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6975,19,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6976,19,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6977,19,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6978,19,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6979,19,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6980,19,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6981,19,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6982,19,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6983,19,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6984,19,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6985,19,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6986,19,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6987,19,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6988,19,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6989,19,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6990,19,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6991,19,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6992,19,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6993,19,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6994,19,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6995,19,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6996,19,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6997,19,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6998,19,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6999,19,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7000,19,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7001,19,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7002,19,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7003,19,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7004,19,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7005,19,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7006,19,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7007,19,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7008,19,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7009,19,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7010,19,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7011,19,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7012,19,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7013,19,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7014,19,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7015,19,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7016,19,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7017,19,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7018,19,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7019,19,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7020,19,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7021,19,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7022,19,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7023,19,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7024,19,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7025,19,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7026,19,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7027,19,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7028,19,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7029,19,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7030,19,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7031,19,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7032,19,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7033,19,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7034,19,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7035,19,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7036,19,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7037,19,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7038,19,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7039,19,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7040,19,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7041,19,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7042,19,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7043,19,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7044,19,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7045,19,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7046,19,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7047,19,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7048,19,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7049,19,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7050,19,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7051,19,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7052,19,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7053,19,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7054,19,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7055,19,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7056,19,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7057,19,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7058,19,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7059,19,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7060,19,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7061,19,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7062,19,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7063,19,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7064,19,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7065,19,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7066,19,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7067,19,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7068,19,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7069,19,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7070,19,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7071,19,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7072,19,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7073,19,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7074,19,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7075,19,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7076,19,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7077,19,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7078,19,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7079,19,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7080,19,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7081,19,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7082,19,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7083,19,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7084,19,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7085,19,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7086,19,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7087,19,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7088,19,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7089,19,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7090,19,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7091,19,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7092,19,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7093,19,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7094,19,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7095,19,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7096,19,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7097,19,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7098,19,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7099,19,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7100,19,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7101,19,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7102,19,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7103,19,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7104,19,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7105,19,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7106,19,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7107,19,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7108,19,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7109,19,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7110,19,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7111,19,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7112,19,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7113,19,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7114,19,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7115,19,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7116,19,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7117,19,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7118,19,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7119,19,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7120,19,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7121,19,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7122,19,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7123,19,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7124,19,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7125,19,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7126,19,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7127,19,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7128,19,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7129,19,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7130,19,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7131,19,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7132,19,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7133,19,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7134,19,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7135,19,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7136,19,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7137,19,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7138,19,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7139,19,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7140,19,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7141,19,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7142,19,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7143,19,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7144,19,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7145,19,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7146,19,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7147,19,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7148,19,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7149,19,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7150,19,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7151,19,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7152,19,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7153,19,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7154,19,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7155,19,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7156,19,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7157,19,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7158,19,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7159,19,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7160,19,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7161,19,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7162,19,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7163,19,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7164,19,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7165,19,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7166,19,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7167,19,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7168,19,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7169,19,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7170,19,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7171,19,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7172,19,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7173,19,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7174,19,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7175,19,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7176,19,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7177,19,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7178,19,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7179,19,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7180,19,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7181,19,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7182,19,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7183,19,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7184,19,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7185,19,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7186,19,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7187,19,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7188,19,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7189,19,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7190,19,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7191,19,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7192,19,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7193,19,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7194,19,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7195,19,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7196,19,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7197,19,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7198,19,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7199,19,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7200,19,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7201,19,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7202,19,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7203,19,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7204,19,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7205,19,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7206,19,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7207,19,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7208,19,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7209,19,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7210,19,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7211,19,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7212,19,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7213,19,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7214,19,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7215,19,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7216,19,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7217,19,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7218,19,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7219,19,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7220,19,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7221,19,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7222,19,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7223,19,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7224,19,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7225,19,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7226,19,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7227,19,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7228,19,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7229,19,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7230,19,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7231,19,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7232,19,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7233,19,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7234,19,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7235,19,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7236,19,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7237,19,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7238,19,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7239,19,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7240,19,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7241,19,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7242,19,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7243,19,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7244,19,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7245,19,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (7246,19,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7247,19,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7248,19,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7249,19,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7250,19,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7251,19,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7252,19,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7253,19,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7254,19,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7255,19,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7256,19,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7257,19,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7258,19,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7259,19,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7260,19,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7261,19,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7262,19,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7263,19,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7264,19,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7265,19,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7266,19,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7267,19,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7268,19,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7269,19,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7270,19,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7271,19,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7272,19,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7273,19,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7274,19,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7275,19,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7276,19,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7277,19,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7278,19,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7279,19,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7280,19,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7281,19,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7282,19,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7283,19,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7284,19,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7285,19,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7286,19,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7287,19,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7288,19,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7289,19,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7290,19,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7291,19,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7292,19,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7293,19,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7294,19,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7295,19,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7296,19,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7297,19,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7298,19,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7299,19,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7300,19,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7301,19,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7302,19,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7303,19,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7304,19,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7305,19,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7306,19,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7307,19,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7308,19,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7309,19,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7310,19,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7311,19,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7312,19,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7313,19,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7314,19,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7315,19,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7316,19,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7317,19,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7318,19,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7319,19,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7320,19,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7321,19,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7322,19,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7323,19,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7324,19,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7325,19,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7326,19,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7327,19,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7328,19,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7329,19,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7330,19,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7331,19,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7332,19,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7333,19,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7334,19,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7335,19,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7336,19,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7337,19,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7338,19,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7339,19,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7340,19,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7341,19,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7342,19,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7343,19,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7344,19,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7345,19,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7346,19,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7347,19,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7348,19,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7349,19,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7350,19,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7351,19,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7352,19,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7353,19,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7354,19,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7355,19,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7356,19,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7357,19,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7358,19,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7359,19,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7360,19,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7361,19,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7362,19,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7363,19,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7364,19,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7365,19,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7366,19,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7367,19,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7368,19,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7369,19,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7370,19,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7371,19,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7372,19,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7373,19,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7374,19,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7375,19,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7376,19,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7377,19,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7378,19,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7379,19,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7380,19,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7381,19,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7382,19,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7383,19,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7384,19,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7385,19,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7386,19,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7387,19,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7388,19,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7389,19,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7390,19,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7391,19,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7392,19,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7393,19,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7394,19,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7395,19,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7396,19,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7397,19,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7398,19,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7399,19,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7400,19,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7401,19,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7402,19,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7403,19,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7404,19,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7405,19,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7406,19,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7407,19,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7408,19,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7409,19,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7410,19,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7411,19,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7412,19,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7413,19,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7414,19,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7415,19,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7416,19,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7417,19,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7418,19,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7419,19,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7420,19,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7421,19,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7422,19,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7423,19,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7424,19,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7425,19,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7426,19,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7427,19,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7428,19,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7429,19,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7430,19,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7431,19,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7432,19,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7433,19,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7434,19,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7435,19,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7436,19,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7437,19,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7438,19,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7439,19,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7440,19,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7441,19,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7442,19,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7443,19,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7444,19,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7445,19,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7446,19,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7447,19,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7448,19,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7449,19,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7450,19,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7451,19,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7452,19,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7453,19,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7454,19,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7455,19,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7456,19,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7457,19,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7458,19,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7459,19,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7460,19,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7461,19,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7462,19,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7463,19,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7464,19,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7465,19,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7466,19,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7467,19,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7468,19,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7469,19,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7470,19,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7471,19,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7472,19,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7473,19,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7474,19,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7475,19,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7476,19,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7477,19,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7478,19,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7479,19,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7480,19,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7481,19,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7482,19,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7483,19,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7484,19,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7485,19,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7486,19,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7487,19,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7488,19,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7489,19,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7490,19,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7491,19,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7492,19,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7493,19,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7494,19,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7495,19,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7496,19,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7497,19,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7498,19,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7499,19,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7500,19,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7501,19,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7502,19,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7503,19,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7504,19,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7505,19,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7506,19,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7507,19,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7508,19,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7509,19,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7510,19,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7511,19,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7512,19,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7513,19,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7514,19,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7515,19,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7516,19,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7517,19,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7518,19,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7519,19,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7520,19,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7521,19,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7522,19,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7523,19,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7524,19,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7525,19,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7526,19,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7527,19,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7528,19,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7529,19,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7530,19,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7531,19,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7532,19,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7533,19,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7534,19,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7535,19,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7536,19,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7537,19,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7538,19,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7539,19,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7540,19,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7541,19,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7542,19,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7543,19,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7544,19,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7545,19,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7546,19,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7547,19,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7548,19,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7549,19,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7550,19,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7551,19,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7552,19,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7553,19,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7554,19,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7555,19,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7556,19,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7557,19,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7558,19,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7559,19,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7560,19,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7561,19,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7562,19,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7563,19,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7564,19,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7565,19,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7566,19,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7567,19,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7568,19,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7569,19,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7570,19,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7571,19,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7572,19,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7573,19,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7574,19,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7575,19,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7576,19,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7577,19,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7578,19,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7579,19,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7580,19,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7581,19,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7582,19,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7583,19,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7584,19,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7585,19,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7586,19,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7587,19,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7588,19,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7589,19,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7590,19,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7591,19,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7592,19,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7593,19,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7594,19,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7595,19,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7596,19,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7597,19,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7598,19,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7599,19,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7600,19,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7601,19,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7602,19,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7603,19,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7604,19,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7605,19,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7606,19,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7607,19,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7608,19,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7609,19,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7610,19,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7611,19,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7612,19,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7613,19,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7614,19,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7615,19,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7616,19,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7617,19,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7618,19,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7619,19,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7620,19,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7621,19,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7622,19,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7623,19,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7624,19,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7625,19,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7626,19,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7627,19,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7628,19,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7629,19,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7630,19,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7631,19,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7632,19,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7633,19,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7634,19,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7635,19,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7636,19,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7637,19,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7638,19,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7639,19,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7640,19,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7641,19,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7642,19,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7643,19,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7644,19,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7645,19,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7646,19,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7647,19,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7648,19,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7649,19,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7650,19,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7651,19,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7652,19,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7653,19,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7654,19,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7655,19,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7656,19,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7657,19,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7658,19,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7659,19,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7660,19,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7661,19,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7662,19,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7663,19,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7664,19,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7665,19,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7666,19,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7667,19,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7668,19,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7669,19,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7670,19,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7671,19,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7672,19,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7673,19,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7674,19,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7675,19,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7676,19,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7677,19,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7678,19,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7679,19,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7680,19,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7681,20,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7682,20,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7683,20,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7684,20,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7685,20,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7686,20,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7687,20,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7688,20,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7689,20,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7690,20,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7691,20,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7692,20,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7693,20,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7694,20,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7695,20,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7696,20,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7697,20,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7698,20,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7699,20,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7700,20,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7701,20,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7702,20,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7703,20,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7704,20,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7705,20,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7706,20,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7707,20,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7708,20,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7709,20,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7710,20,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7711,20,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7712,20,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7713,20,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7714,20,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7715,20,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7716,20,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7717,20,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7718,20,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7719,20,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7720,20,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7721,20,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7722,20,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7723,20,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7724,20,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7725,20,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7726,20,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7727,20,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7728,20,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7729,20,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7730,20,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7731,20,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7732,20,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7733,20,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7734,20,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7735,20,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7736,20,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7737,20,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7738,20,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7739,20,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7740,20,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7741,20,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7742,20,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7743,20,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7744,20,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7745,20,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7746,20,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7747,20,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7748,20,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7749,20,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7750,20,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7751,20,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7752,20,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7753,20,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7754,20,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7755,20,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7756,20,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7757,20,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7758,20,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7759,20,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7760,20,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7761,20,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7762,20,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7763,20,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7764,20,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7765,20,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7766,20,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7767,20,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7768,20,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7769,20,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7770,20,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7771,20,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7772,20,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7773,20,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7774,20,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7775,20,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7776,20,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7777,20,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7778,20,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7779,20,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7780,20,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7781,20,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7782,20,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7783,20,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7784,20,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7785,20,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7786,20,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7787,20,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7788,20,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7789,20,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7790,20,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7791,20,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7792,20,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7793,20,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7794,20,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7795,20,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7796,20,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7797,20,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7798,20,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7799,20,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7800,20,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7801,20,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7802,20,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7803,20,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7804,20,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7805,20,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7806,20,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7807,20,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7808,20,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7809,20,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7810,20,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7811,20,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7812,20,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7813,20,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7814,20,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7815,20,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7816,20,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7817,20,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7818,20,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7819,20,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7820,20,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7821,20,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7822,20,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7823,20,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7824,20,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7825,20,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7826,20,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7827,20,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7828,20,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7829,20,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7830,20,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7831,20,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7832,20,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7833,20,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7834,20,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7835,20,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7836,20,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7837,20,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7838,20,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7839,20,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7840,20,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7841,20,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7842,20,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7843,20,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7844,20,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7845,20,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7846,20,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7847,20,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7848,20,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7849,20,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7850,20,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7851,20,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7852,20,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7853,20,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7854,20,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7855,20,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7856,20,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7857,20,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7858,20,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7859,20,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7860,20,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7861,20,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7862,20,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7863,20,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7864,20,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7865,20,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7866,20,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7867,20,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7868,20,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7869,20,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7870,20,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7871,20,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7872,20,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7873,20,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7874,20,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7875,20,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7876,20,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7877,20,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7878,20,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7879,20,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7880,20,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7881,20,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7882,20,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7883,20,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7884,20,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7885,20,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7886,20,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7887,20,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7888,20,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7889,20,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7890,20,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7891,20,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7892,20,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7893,20,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7894,20,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7895,20,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7896,20,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7897,20,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7898,20,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7899,20,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7900,20,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7901,20,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7902,20,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7903,20,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7904,20,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7905,20,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7906,20,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7907,20,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7908,20,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7909,20,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7910,20,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7911,20,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7912,20,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7913,20,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7914,20,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7915,20,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7916,20,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7917,20,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7918,20,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7919,20,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7920,20,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7921,20,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7922,20,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7923,20,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7924,20,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7925,20,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7926,20,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7927,20,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7928,20,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7929,20,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7930,20,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7931,20,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7932,20,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7933,20,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7934,20,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7935,20,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7936,20,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7937,20,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7938,20,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7939,20,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7940,20,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7941,20,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7942,20,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7943,20,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7944,20,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7945,20,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7946,20,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7947,20,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7948,20,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7949,20,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7950,20,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7951,20,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7952,20,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7953,20,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7954,20,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7955,20,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7956,20,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7957,20,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7958,20,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7959,20,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7960,20,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7961,20,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7962,20,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7963,20,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7964,20,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7965,20,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7966,20,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7967,20,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7968,20,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7969,20,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7970,20,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7971,20,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7972,20,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7973,20,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7974,20,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7975,20,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7976,20,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7977,20,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7978,20,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7979,20,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7980,20,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7981,20,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7982,20,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7983,20,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7984,20,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7985,20,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7986,20,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7987,20,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7988,20,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7989,20,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7990,20,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7991,20,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7992,20,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7993,20,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7994,20,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7995,20,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7996,20,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7997,20,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7998,20,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7999,20,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8000,20,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8001,20,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8002,20,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8003,20,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8004,20,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8005,20,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8006,20,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8007,20,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8008,20,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8009,20,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8010,20,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8011,20,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8012,20,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8013,20,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8014,20,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8015,20,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8016,20,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8017,20,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8018,20,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8019,20,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8020,20,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8021,20,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8022,20,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8023,20,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8024,20,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8025,20,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8026,20,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8027,20,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8028,20,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8029,20,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8030,20,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8031,20,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8032,20,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8033,20,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8034,20,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8035,20,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8036,20,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8037,20,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8038,20,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8039,20,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8040,20,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8041,20,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8042,20,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8043,20,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8044,20,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8045,20,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8046,20,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8047,20,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8048,20,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8049,20,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8050,20,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8051,20,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8052,20,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8053,20,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8054,20,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8055,20,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8056,20,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8057,20,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8058,20,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8059,20,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8060,20,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8061,20,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8062,20,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8063,20,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8064,20,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8065,20,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8066,20,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8067,20,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8068,20,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8069,20,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8070,20,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8071,20,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8072,20,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8073,20,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8074,20,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8075,20,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8076,20,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8077,20,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8078,20,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8079,20,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8080,20,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8081,20,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8082,20,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8083,20,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8084,20,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8085,20,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8086,20,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8087,20,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8088,20,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8089,20,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8090,20,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8091,20,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8092,20,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8093,20,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8094,20,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8095,20,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8096,20,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8097,20,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8098,20,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8099,20,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8100,20,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8101,20,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8102,20,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8103,20,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8104,20,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8105,20,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8106,20,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8107,20,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8108,20,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8109,20,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8110,20,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8111,20,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8112,20,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8113,20,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8114,20,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8115,20,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8116,20,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8117,20,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8118,20,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8119,20,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8120,20,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8121,20,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8122,20,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8123,20,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8124,20,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8125,20,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8126,20,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8127,20,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8128,20,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8129,20,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8130,20,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8131,20,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8132,20,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8133,20,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8134,20,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8135,20,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8136,20,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8137,20,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8138,20,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8139,20,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8140,20,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8141,20,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8142,20,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8143,20,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8144,20,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8145,20,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8146,20,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8147,20,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8148,20,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8149,20,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8150,20,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8151,20,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8152,20,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8153,20,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8154,20,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8155,20,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8156,20,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8157,20,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8158,20,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8159,20,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8160,20,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8161,20,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8162,20,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8163,20,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8164,20,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8165,20,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8166,20,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8167,20,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8168,20,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8169,20,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8170,20,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8171,20,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8172,20,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8173,20,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8174,20,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8175,20,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8176,20,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8177,20,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8178,20,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8179,20,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8180,20,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8181,20,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8182,20,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8183,20,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8184,20,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8185,20,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8186,20,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8187,20,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8188,20,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8189,20,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8190,20,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8191,20,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8192,20,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8193,20,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8194,20,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8195,20,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8196,20,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8197,20,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8198,20,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8199,20,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8200,20,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8201,20,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8202,20,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8203,20,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8204,20,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8205,20,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8206,20,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8207,20,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8208,20,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8209,20,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8210,20,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8211,20,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8212,20,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8213,20,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8214,20,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8215,20,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8216,20,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8217,20,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8218,20,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8219,20,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8220,20,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8221,20,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8222,20,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8223,20,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8224,20,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8225,20,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8226,20,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8227,20,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8228,20,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8229,20,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8230,20,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8231,20,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8232,20,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8233,20,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8234,20,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8235,20,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8236,20,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8237,20,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8238,20,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8239,20,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8240,20,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8241,20,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8242,20,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8243,20,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8244,20,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8245,20,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8246,20,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8247,20,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8248,20,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8249,20,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8250,20,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8251,20,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8252,20,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8253,20,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8254,20,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8255,20,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8256,20,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8257,20,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8258,20,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8259,20,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8260,20,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8261,20,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8262,20,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8263,20,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8264,20,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8265,20,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8266,20,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8267,20,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8268,20,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8269,20,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8270,20,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8271,20,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8272,20,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8273,20,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8274,20,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (8275,20,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8276,20,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8277,20,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8278,20,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8279,20,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8280,20,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8281,20,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8282,20,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8283,20,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8284,20,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8285,20,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8286,20,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8287,20,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8288,20,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8289,20,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8290,20,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8291,20,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8292,20,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8293,20,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8294,20,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8295,20,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8296,20,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8297,20,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8298,20,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8299,20,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8300,20,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8301,20,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8302,20,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8303,20,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8304,20,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8305,20,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8306,20,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8307,20,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8308,20,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8309,20,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8310,20,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8311,20,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8312,20,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8313,20,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8314,20,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8315,20,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8316,20,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8317,20,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8318,20,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8319,20,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8320,20,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8321,20,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8322,20,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8323,20,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8324,20,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8325,20,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8326,20,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8327,20,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8328,20,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8329,20,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8330,20,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8331,20,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8332,20,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8333,20,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8334,20,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8335,20,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8336,20,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8337,20,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8338,20,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8339,20,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8340,20,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8341,20,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8342,20,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8343,20,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8344,20,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8345,20,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8346,20,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8347,20,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8348,20,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8349,20,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8350,20,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8351,20,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8352,20,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8353,20,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8354,20,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8355,20,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8356,20,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8357,20,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8358,20,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8359,20,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8360,20,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8361,20,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8362,20,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8363,20,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8364,20,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8365,20,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8366,20,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8367,20,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8368,20,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8369,20,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8370,20,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8371,20,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8372,20,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8373,20,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8374,20,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8375,20,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8376,20,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8377,20,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8378,20,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8379,20,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8380,20,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8381,20,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8382,20,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8383,20,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8384,20,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8385,20,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8386,20,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8387,20,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8388,20,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8389,20,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8390,20,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8391,20,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8392,20,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8393,20,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8394,20,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8395,20,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8396,20,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8397,20,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8398,20,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8399,20,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8400,20,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8401,20,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8402,20,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8403,20,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8404,20,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8405,20,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8406,20,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8407,20,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8408,20,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8409,20,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8410,20,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8411,20,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8412,20,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8413,20,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8414,20,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8415,20,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8416,20,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8417,20,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8418,20,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8419,20,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8420,20,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8421,20,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8422,20,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8423,20,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8424,20,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8425,20,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8426,20,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8427,20,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8428,20,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8429,20,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8430,20,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8431,20,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8432,20,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8433,20,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8434,20,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8435,20,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8436,20,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8437,20,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8438,20,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8439,20,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8440,20,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8441,20,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8442,20,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8443,20,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8444,20,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8445,20,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8446,20,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8447,20,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8448,20,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8449,20,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8450,20,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-07-14 18:31:43',60,1,'30.00',1,0),
 (2,2,2,1,'2024-07-14 18:31:43',60,1,'30.00',1,0),
 (3,3,3,1,'2024-07-14 18:31:44',60,1,'30.00',1,0),
 (4,4,4,1,'2024-07-14 18:31:44',60,1,'30.00',1,0),
 (5,5,5,1,'2024-07-14 18:31:44',60,1,'30.00',1,0),
 (6,6,6,1,'2024-07-14 18:31:45',60,1,'30.00',1,0),
 (7,7,7,1,'2024-07-14 18:31:45',60,1,'30.00',1,0),
 (8,8,8,1,'2024-07-14 18:31:46',60,1,'30.00',1,0),
 (9,9,9,1,'2024-07-14 18:31:46',60,1,'30.00',1,0),
 (10,10,10,1,'2024-07-14 18:31:47',60,1,'30.00',1,0),
 (11,1,1,1,'2024-07-14 18:31:47',60,1,'30.00',1,0),
 (12,2,2,1,'2024-07-14 18:31:52',60,1,'30.00',1,0),
 (13,3,3,1,'2024-07-14 18:31:56',60,1,'30.00',1,0),
 (14,4,4,1,'2024-07-14 18:32:01',60,1,'30.00',1,0),
 (15,5,5,1,'2024-07-14 18:32:05',60,1,'30.00',1,0),
 (16,6,6,1,'2024-07-14 18:32:10',60,1,'30.00',1,0),
 (17,7,7,1,'2024-07-14 18:32:15',60,1,'30.00',1,0),
 (18,8,8,1,'2024-07-14 18:32:19',60,1,'30.00',1,0),
 (19,9,9,1,'2024-07-14 18:32:24',60,1,'30.00',1,0),
 (20,10,10,1,'2024-07-14 18:32:28',60,1,'30.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #007'),
 (2,'Assessment Test #008'),
 (3,'Assessment Test #009'),
 (4,'Assessment Test #010'),
 (5,'Assessment Test #011'),
 (6,'Assessment Test #012'),
 (7,'Assessment Test #013'),
 (8,'Assessment Test #014'),
 (9,'Assessment Test #015'),
 (10,'Assessment Test #016');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=301 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-07-14 18:31:31'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-07-14 18:31:31'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-07-14 18:31:31'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-07-14 18:31:31'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-07-14 18:31:31'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-07-14 18:31:31'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-07-14 18:31:31'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-07-14 18:31:31'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-07-14 18:31:31'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-07-14 18:31:31'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-07-14 18:31:31'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-07-14 18:31:31'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-07-14 18:31:31'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-07-14 18:31:31'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-07-14 18:31:31'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-07-14 18:31:31'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-07-14 18:31:31'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-07-14 18:31:31'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-07-14 18:31:31'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-07-14 18:31:31'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-07-14 18:31:31'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-07-14 18:31:31'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-07-14 18:31:31'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-07-14 18:31:31'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-07-14 18:31:31'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-07-14 18:31:31'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-07-14 18:31:31'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-07-14 18:31:31'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-07-14 18:31:31'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-07-14 18:31:31'),
 (31,'',0,'0',NULL,NULL,31,0,NULL,'2024-07-14 18:31:32'),
 (32,'',0,'0',NULL,NULL,32,0,NULL,'2024-07-14 18:31:32'),
 (33,'',0,'0',NULL,NULL,33,0,NULL,'2024-07-14 18:31:32'),
 (34,'',0,'0',NULL,NULL,34,0,NULL,'2024-07-14 18:31:32'),
 (35,'',0,'0',NULL,NULL,35,0,NULL,'2024-07-14 18:31:32'),
 (36,'',0,'0',NULL,NULL,36,0,NULL,'2024-07-14 18:31:32'),
 (37,'',0,'0',NULL,NULL,37,0,NULL,'2024-07-14 18:31:32'),
 (38,'',0,'0',NULL,NULL,38,0,NULL,'2024-07-14 18:31:32'),
 (39,'',0,'0',NULL,NULL,39,0,NULL,'2024-07-14 18:31:32'),
 (40,'',0,'0',NULL,NULL,40,0,NULL,'2024-07-14 18:31:32'),
 (41,'',0,'0',NULL,NULL,41,0,NULL,'2024-07-14 18:31:32'),
 (42,'',0,'0',NULL,NULL,42,0,NULL,'2024-07-14 18:31:32'),
 (43,'',0,'0',NULL,NULL,43,0,NULL,'2024-07-14 18:31:32'),
 (44,'',0,'0',NULL,NULL,44,0,NULL,'2024-07-14 18:31:32'),
 (45,'',0,'0',NULL,NULL,45,0,NULL,'2024-07-14 18:31:32'),
 (46,'',0,'0',NULL,NULL,46,0,NULL,'2024-07-14 18:31:32'),
 (47,'',0,'0',NULL,NULL,47,0,NULL,'2024-07-14 18:31:32'),
 (48,'',0,'0',NULL,NULL,48,0,NULL,'2024-07-14 18:31:32'),
 (49,'',0,'0',NULL,NULL,49,0,NULL,'2024-07-14 18:31:32'),
 (50,'',0,'0',NULL,NULL,50,0,NULL,'2024-07-14 18:31:32'),
 (51,'',0,'0',NULL,NULL,51,0,NULL,'2024-07-14 18:31:32'),
 (52,'',0,'0',NULL,NULL,52,0,NULL,'2024-07-14 18:31:32'),
 (53,'',0,'0',NULL,NULL,53,0,NULL,'2024-07-14 18:31:32'),
 (54,'',0,'0',NULL,NULL,54,0,NULL,'2024-07-14 18:31:32'),
 (55,'',0,'0',NULL,NULL,55,0,NULL,'2024-07-14 18:31:32'),
 (56,'',0,'0',NULL,NULL,56,0,NULL,'2024-07-14 18:31:32'),
 (57,'',0,'0',NULL,NULL,57,0,NULL,'2024-07-14 18:31:32'),
 (58,'',0,'0',NULL,NULL,58,0,NULL,'2024-07-14 18:31:32'),
 (59,'',0,'0',NULL,NULL,59,0,NULL,'2024-07-14 18:31:32'),
 (60,'',0,'0',NULL,NULL,60,0,NULL,'2024-07-14 18:31:32'),
 (61,'',0,'0',NULL,NULL,61,0,NULL,'2024-07-14 18:31:33'),
 (62,'',0,'0',NULL,NULL,62,0,NULL,'2024-07-14 18:31:33'),
 (63,'',0,'0',NULL,NULL,63,0,NULL,'2024-07-14 18:31:33'),
 (64,'',0,'0',NULL,NULL,64,0,NULL,'2024-07-14 18:31:33'),
 (65,'',0,'0',NULL,NULL,65,0,NULL,'2024-07-14 18:31:33'),
 (66,'',0,'0',NULL,NULL,66,0,NULL,'2024-07-14 18:31:33'),
 (67,'',0,'0',NULL,NULL,67,0,NULL,'2024-07-14 18:31:33'),
 (68,'',0,'0',NULL,NULL,68,0,NULL,'2024-07-14 18:31:33'),
 (69,'',0,'0',NULL,NULL,69,0,NULL,'2024-07-14 18:31:33'),
 (70,'',0,'0',NULL,NULL,70,0,NULL,'2024-07-14 18:31:33'),
 (71,'',0,'0',NULL,NULL,71,0,NULL,'2024-07-14 18:31:33'),
 (72,'',0,'0',NULL,NULL,72,0,NULL,'2024-07-14 18:31:33'),
 (73,'',0,'0',NULL,NULL,73,0,NULL,'2024-07-14 18:31:33'),
 (74,'',0,'0',NULL,NULL,74,0,NULL,'2024-07-14 18:31:33'),
 (75,'',0,'0',NULL,NULL,75,0,NULL,'2024-07-14 18:31:33'),
 (76,'',0,'0',NULL,NULL,76,0,NULL,'2024-07-14 18:31:33'),
 (77,'',0,'0',NULL,NULL,77,0,NULL,'2024-07-14 18:31:33'),
 (78,'',0,'0',NULL,NULL,78,0,NULL,'2024-07-14 18:31:34'),
 (79,'',0,'0',NULL,NULL,79,0,NULL,'2024-07-14 18:31:34'),
 (80,'',0,'0',NULL,NULL,80,0,NULL,'2024-07-14 18:31:34'),
 (81,'',0,'0',NULL,NULL,81,0,NULL,'2024-07-14 18:31:34'),
 (82,'',0,'0',NULL,NULL,82,0,NULL,'2024-07-14 18:31:34'),
 (83,'',0,'0',NULL,NULL,83,0,NULL,'2024-07-14 18:31:34'),
 (84,'',0,'0',NULL,NULL,84,0,NULL,'2024-07-14 18:31:34'),
 (85,'',0,'0',NULL,NULL,85,0,NULL,'2024-07-14 18:31:34'),
 (86,'',0,'0',NULL,NULL,86,0,NULL,'2024-07-14 18:31:34'),
 (87,'',0,'0',NULL,NULL,87,0,NULL,'2024-07-14 18:31:34'),
 (88,'',0,'0',NULL,NULL,88,0,NULL,'2024-07-14 18:31:34'),
 (89,'',0,'0',NULL,NULL,89,0,NULL,'2024-07-14 18:31:34'),
 (90,'',0,'0',NULL,NULL,90,0,NULL,'2024-07-14 18:31:34'),
 (91,'',0,'0',NULL,NULL,91,0,NULL,'2024-07-14 18:31:34'),
 (92,'',0,'0',NULL,NULL,92,0,NULL,'2024-07-14 18:31:34'),
 (93,'',0,'0',NULL,NULL,93,0,NULL,'2024-07-14 18:31:34'),
 (94,'',0,'0',NULL,NULL,94,0,NULL,'2024-07-14 18:31:34'),
 (95,'',0,'0',NULL,NULL,95,0,NULL,'2024-07-14 18:31:34'),
 (96,'',0,'0',NULL,NULL,96,0,NULL,'2024-07-14 18:31:34'),
 (97,'',0,'0',NULL,NULL,97,0,NULL,'2024-07-14 18:31:34'),
 (98,'',0,'0',NULL,NULL,98,0,NULL,'2024-07-14 18:31:34'),
 (99,'',0,'0',NULL,NULL,99,0,NULL,'2024-07-14 18:31:34'),
 (100,'',0,'0',NULL,NULL,100,0,NULL,'2024-07-14 18:31:34'),
 (101,'',0,'0',NULL,NULL,101,0,NULL,'2024-07-14 18:31:35'),
 (102,'',0,'0',NULL,NULL,102,0,NULL,'2024-07-14 18:31:35'),
 (103,'',0,'0',NULL,NULL,103,0,NULL,'2024-07-14 18:31:35'),
 (104,'',0,'0',NULL,NULL,104,0,NULL,'2024-07-14 18:31:35'),
 (105,'',0,'0',NULL,NULL,105,0,NULL,'2024-07-14 18:31:35'),
 (106,'',0,'0',NULL,NULL,106,0,NULL,'2024-07-14 18:31:35'),
 (107,'',0,'0',NULL,NULL,107,0,NULL,'2024-07-14 18:31:35'),
 (108,'',0,'0',NULL,NULL,108,0,NULL,'2024-07-14 18:31:35'),
 (109,'',0,'0',NULL,NULL,109,0,NULL,'2024-07-14 18:31:35'),
 (110,'',0,'0',NULL,NULL,110,0,NULL,'2024-07-14 18:31:35'),
 (111,'',0,'0',NULL,NULL,111,0,NULL,'2024-07-14 18:31:35'),
 (112,'',0,'0',NULL,NULL,112,0,NULL,'2024-07-14 18:31:35'),
 (113,'',0,'0',NULL,NULL,113,0,NULL,'2024-07-14 18:31:35'),
 (114,'',0,'0',NULL,NULL,114,0,NULL,'2024-07-14 18:31:35'),
 (115,'',0,'0',NULL,NULL,115,0,NULL,'2024-07-14 18:31:35'),
 (116,'',0,'0',NULL,NULL,116,0,NULL,'2024-07-14 18:31:35'),
 (117,'',0,'0',NULL,NULL,117,0,NULL,'2024-07-14 18:31:35'),
 (118,'',0,'0',NULL,NULL,118,0,NULL,'2024-07-14 18:31:35'),
 (119,'',0,'0',NULL,NULL,119,0,NULL,'2024-07-14 18:31:35'),
 (120,'',0,'0',NULL,NULL,120,0,NULL,'2024-07-14 18:31:35'),
 (121,'',0,'0',NULL,NULL,121,0,NULL,'2024-07-14 18:31:36'),
 (122,'',0,'0',NULL,NULL,122,0,NULL,'2024-07-14 18:31:36'),
 (123,'',0,'0',NULL,NULL,123,0,NULL,'2024-07-14 18:31:36'),
 (124,'',0,'0',NULL,NULL,124,0,NULL,'2024-07-14 18:31:36'),
 (125,'',0,'0',NULL,NULL,125,0,NULL,'2024-07-14 18:31:36'),
 (126,'',0,'0',NULL,NULL,126,0,NULL,'2024-07-14 18:31:36'),
 (127,'',0,'0',NULL,NULL,127,0,NULL,'2024-07-14 18:31:36'),
 (128,'',0,'0',NULL,NULL,128,0,NULL,'2024-07-14 18:31:36'),
 (129,'',0,'0',NULL,NULL,129,0,NULL,'2024-07-14 18:31:36'),
 (130,'',0,'0',NULL,NULL,130,0,NULL,'2024-07-14 18:31:36'),
 (131,'',0,'0',NULL,NULL,131,0,NULL,'2024-07-14 18:31:36'),
 (132,'',0,'0',NULL,NULL,132,0,NULL,'2024-07-14 18:31:36'),
 (133,'',0,'0',NULL,NULL,133,0,NULL,'2024-07-14 18:31:36'),
 (134,'',0,'0',NULL,NULL,134,0,NULL,'2024-07-14 18:31:36'),
 (135,'',0,'0',NULL,NULL,135,0,NULL,'2024-07-14 18:31:36'),
 (136,'',0,'0',NULL,NULL,136,0,NULL,'2024-07-14 18:31:36'),
 (137,'',0,'0',NULL,NULL,137,0,NULL,'2024-07-14 18:31:36'),
 (138,'',0,'0',NULL,NULL,138,0,NULL,'2024-07-14 18:31:36'),
 (139,'',0,'0',NULL,NULL,139,0,NULL,'2024-07-14 18:31:36'),
 (140,'',0,'0',NULL,NULL,140,0,NULL,'2024-07-14 18:31:36'),
 (141,'',0,'0',NULL,NULL,141,0,NULL,'2024-07-14 18:31:36'),
 (142,'',0,'0',NULL,NULL,142,0,NULL,'2024-07-14 18:31:36'),
 (143,'',0,'0',NULL,NULL,143,0,NULL,'2024-07-14 18:31:36'),
 (144,'',0,'0',NULL,NULL,144,0,NULL,'2024-07-14 18:31:36'),
 (145,'',0,'0',NULL,NULL,145,0,NULL,'2024-07-14 18:31:36'),
 (146,'',0,'0',NULL,NULL,146,0,NULL,'2024-07-14 18:31:36'),
 (147,'',0,'0',NULL,NULL,147,0,NULL,'2024-07-14 18:31:36'),
 (148,'',0,'0',NULL,NULL,148,0,NULL,'2024-07-14 18:31:36'),
 (149,'',0,'0',NULL,NULL,149,0,NULL,'2024-07-14 18:31:36'),
 (150,'',0,'0',NULL,NULL,150,0,NULL,'2024-07-14 18:31:36'),
 (151,'',0,'0',NULL,NULL,151,0,NULL,'2024-07-14 18:31:37'),
 (152,'',0,'0',NULL,NULL,152,0,NULL,'2024-07-14 18:31:37'),
 (153,'',0,'0',NULL,NULL,153,0,NULL,'2024-07-14 18:31:37'),
 (154,'',0,'0',NULL,NULL,154,0,NULL,'2024-07-14 18:31:37'),
 (155,'',0,'0',NULL,NULL,155,0,NULL,'2024-07-14 18:31:37'),
 (156,'',0,'0',NULL,NULL,156,0,NULL,'2024-07-14 18:31:37'),
 (157,'',0,'0',NULL,NULL,157,0,NULL,'2024-07-14 18:31:37'),
 (158,'',0,'0',NULL,NULL,158,0,NULL,'2024-07-14 18:31:37'),
 (159,'',0,'0',NULL,NULL,159,0,NULL,'2024-07-14 18:31:37'),
 (160,'',0,'0',NULL,NULL,160,0,NULL,'2024-07-14 18:31:37'),
 (161,'',0,'0',NULL,NULL,161,0,NULL,'2024-07-14 18:31:37'),
 (162,'',0,'0',NULL,NULL,162,0,NULL,'2024-07-14 18:31:37'),
 (163,'',0,'0',NULL,NULL,163,0,NULL,'2024-07-14 18:31:37'),
 (164,'',0,'0',NULL,NULL,164,0,NULL,'2024-07-14 18:31:37'),
 (165,'',0,'0',NULL,NULL,165,0,NULL,'2024-07-14 18:31:37'),
 (166,'',0,'0',NULL,NULL,166,0,NULL,'2024-07-14 18:31:37'),
 (167,'',0,'0',NULL,NULL,167,0,NULL,'2024-07-14 18:31:37'),
 (168,'',0,'0',NULL,NULL,168,0,NULL,'2024-07-14 18:31:37'),
 (169,'',0,'0',NULL,NULL,169,0,NULL,'2024-07-14 18:31:37'),
 (170,'',0,'0',NULL,NULL,170,0,NULL,'2024-07-14 18:31:37'),
 (171,'',0,'0',NULL,NULL,171,0,NULL,'2024-07-14 18:31:37'),
 (172,'',0,'0',NULL,NULL,172,0,NULL,'2024-07-14 18:31:37'),
 (173,'',0,'0',NULL,NULL,173,0,NULL,'2024-07-14 18:31:37'),
 (174,'',0,'0',NULL,NULL,174,0,NULL,'2024-07-14 18:31:37'),
 (175,'',0,'0',NULL,NULL,175,0,NULL,'2024-07-14 18:31:37'),
 (176,'',0,'0',NULL,NULL,176,0,NULL,'2024-07-14 18:31:37'),
 (177,'',0,'0',NULL,NULL,177,0,NULL,'2024-07-14 18:31:37'),
 (178,'',0,'0',NULL,NULL,178,0,NULL,'2024-07-14 18:31:37'),
 (179,'',0,'0',NULL,NULL,179,0,NULL,'2024-07-14 18:31:37'),
 (180,'',0,'0',NULL,NULL,180,0,NULL,'2024-07-14 18:31:37'),
 (181,'',0,'0',NULL,NULL,181,0,NULL,'2024-07-14 18:31:38'),
 (182,'',0,'0',NULL,NULL,182,0,NULL,'2024-07-14 18:31:38'),
 (183,'',0,'0',NULL,NULL,183,0,NULL,'2024-07-14 18:31:38'),
 (184,'',0,'0',NULL,NULL,184,0,NULL,'2024-07-14 18:31:38'),
 (185,'',0,'0',NULL,NULL,185,0,NULL,'2024-07-14 18:31:38'),
 (186,'',0,'0',NULL,NULL,186,0,NULL,'2024-07-14 18:31:38'),
 (187,'',0,'0',NULL,NULL,187,0,NULL,'2024-07-14 18:31:38'),
 (188,'',0,'0',NULL,NULL,188,0,NULL,'2024-07-14 18:31:38'),
 (189,'',0,'0',NULL,NULL,189,0,NULL,'2024-07-14 18:31:38'),
 (190,'',0,'0',NULL,NULL,190,0,NULL,'2024-07-14 18:31:39'),
 (191,'',0,'0',NULL,NULL,191,0,NULL,'2024-07-14 18:31:39'),
 (192,'',0,'0',NULL,NULL,192,0,NULL,'2024-07-14 18:31:39'),
 (193,'',0,'0',NULL,NULL,193,0,NULL,'2024-07-14 18:31:39'),
 (194,'',0,'0',NULL,NULL,194,0,NULL,'2024-07-14 18:31:39'),
 (195,'',0,'0',NULL,NULL,195,0,NULL,'2024-07-14 18:31:39'),
 (196,'',0,'0',NULL,NULL,196,0,NULL,'2024-07-14 18:31:39'),
 (197,'',0,'0',NULL,NULL,197,0,NULL,'2024-07-14 18:31:39'),
 (198,'',0,'0',NULL,NULL,198,0,NULL,'2024-07-14 18:31:39'),
 (199,'',0,'0',NULL,NULL,199,0,NULL,'2024-07-14 18:31:39'),
 (200,'',0,'0',NULL,NULL,200,0,NULL,'2024-07-14 18:31:39'),
 (201,'',0,'0',NULL,NULL,201,0,NULL,'2024-07-14 18:31:39'),
 (202,'',0,'0',NULL,NULL,202,0,NULL,'2024-07-14 18:31:39'),
 (203,'',0,'0',NULL,NULL,203,0,NULL,'2024-07-14 18:31:39'),
 (204,'',0,'0',NULL,NULL,204,0,NULL,'2024-07-14 18:31:39'),
 (205,'',0,'0',NULL,NULL,205,0,NULL,'2024-07-14 18:31:39'),
 (206,'',0,'0',NULL,NULL,206,0,NULL,'2024-07-14 18:31:39'),
 (207,'',0,'0',NULL,NULL,207,0,NULL,'2024-07-14 18:31:39'),
 (208,'',0,'0',NULL,NULL,208,0,NULL,'2024-07-14 18:31:39'),
 (209,'',0,'0',NULL,NULL,209,0,NULL,'2024-07-14 18:31:39'),
 (210,'',0,'0',NULL,NULL,210,0,NULL,'2024-07-14 18:31:39'),
 (211,'',0,'0',NULL,NULL,211,0,NULL,'2024-07-14 18:31:40'),
 (212,'',0,'0',NULL,NULL,212,0,NULL,'2024-07-14 18:31:40'),
 (213,'',0,'0',NULL,NULL,213,0,NULL,'2024-07-14 18:31:40'),
 (214,'',0,'0',NULL,NULL,214,0,NULL,'2024-07-14 18:31:40'),
 (215,'',0,'0',NULL,NULL,215,0,NULL,'2024-07-14 18:31:40'),
 (216,'',0,'0',NULL,NULL,216,0,NULL,'2024-07-14 18:31:40'),
 (217,'',0,'0',NULL,NULL,217,0,NULL,'2024-07-14 18:31:40'),
 (218,'',0,'0',NULL,NULL,218,0,NULL,'2024-07-14 18:31:40'),
 (219,'',0,'0',NULL,NULL,219,0,NULL,'2024-07-14 18:31:40'),
 (220,'',0,'0',NULL,NULL,220,0,NULL,'2024-07-14 18:31:40'),
 (221,'',0,'0',NULL,NULL,221,0,NULL,'2024-07-14 18:31:40'),
 (222,'',0,'0',NULL,NULL,222,0,NULL,'2024-07-14 18:31:40'),
 (223,'',0,'0',NULL,NULL,223,0,NULL,'2024-07-14 18:31:40'),
 (224,'',0,'0',NULL,NULL,224,0,NULL,'2024-07-14 18:31:40'),
 (225,'',0,'0',NULL,NULL,225,0,NULL,'2024-07-14 18:31:40'),
 (226,'',0,'0',NULL,NULL,226,0,NULL,'2024-07-14 18:31:40'),
 (227,'',0,'0',NULL,NULL,227,0,NULL,'2024-07-14 18:31:40'),
 (228,'',0,'0',NULL,NULL,228,0,NULL,'2024-07-14 18:31:40'),
 (229,'',0,'0',NULL,NULL,229,0,NULL,'2024-07-14 18:31:40'),
 (230,'',0,'0',NULL,NULL,230,0,NULL,'2024-07-14 18:31:40'),
 (231,'',0,'0',NULL,NULL,231,0,NULL,'2024-07-14 18:31:40'),
 (232,'',0,'0',NULL,NULL,232,0,NULL,'2024-07-14 18:31:40'),
 (233,'',0,'0',NULL,NULL,233,0,NULL,'2024-07-14 18:31:40'),
 (234,'',0,'0',NULL,NULL,234,0,NULL,'2024-07-14 18:31:40'),
 (235,'',0,'0',NULL,NULL,235,0,NULL,'2024-07-14 18:31:40'),
 (236,'',0,'0',NULL,NULL,236,0,NULL,'2024-07-14 18:31:40'),
 (237,'',0,'0',NULL,NULL,237,0,NULL,'2024-07-14 18:31:40'),
 (238,'',0,'0',NULL,NULL,238,0,NULL,'2024-07-14 18:31:40'),
 (239,'',0,'0',NULL,NULL,239,0,NULL,'2024-07-14 18:31:40'),
 (240,'',0,'0',NULL,NULL,240,0,NULL,'2024-07-14 18:31:40'),
 (241,'',0,'0',NULL,NULL,241,0,NULL,'2024-07-14 18:31:41'),
 (242,'',0,'0',NULL,NULL,242,0,NULL,'2024-07-14 18:31:41'),
 (243,'',0,'0',NULL,NULL,243,0,NULL,'2024-07-14 18:31:41'),
 (244,'',0,'0',NULL,NULL,244,0,NULL,'2024-07-14 18:31:41'),
 (245,'',0,'0',NULL,NULL,245,0,NULL,'2024-07-14 18:31:41'),
 (246,'',0,'0',NULL,NULL,246,0,NULL,'2024-07-14 18:31:41'),
 (247,'',0,'0',NULL,NULL,247,0,NULL,'2024-07-14 18:31:41'),
 (248,'',0,'0',NULL,NULL,248,0,NULL,'2024-07-14 18:31:41'),
 (249,'',0,'0',NULL,NULL,249,0,NULL,'2024-07-14 18:31:41'),
 (250,'',0,'0',NULL,NULL,250,0,NULL,'2024-07-14 18:31:41'),
 (251,'',0,'0',NULL,NULL,251,0,NULL,'2024-07-14 18:31:41'),
 (252,'',0,'0',NULL,NULL,252,0,NULL,'2024-07-14 18:31:41'),
 (253,'',0,'0',NULL,NULL,253,0,NULL,'2024-07-14 18:31:41'),
 (254,'',0,'0',NULL,NULL,254,0,NULL,'2024-07-14 18:31:41'),
 (255,'',0,'0',NULL,NULL,255,0,NULL,'2024-07-14 18:31:41'),
 (256,'',0,'0',NULL,NULL,256,0,NULL,'2024-07-14 18:31:41'),
 (257,'',0,'0',NULL,NULL,257,0,NULL,'2024-07-14 18:31:41'),
 (258,'',0,'0',NULL,NULL,258,0,NULL,'2024-07-14 18:31:41'),
 (259,'',0,'0',NULL,NULL,259,0,NULL,'2024-07-14 18:31:41'),
 (260,'',0,'0',NULL,NULL,260,0,NULL,'2024-07-14 18:31:41'),
 (261,'',0,'0',NULL,NULL,261,0,NULL,'2024-07-14 18:31:41'),
 (262,'',0,'0',NULL,NULL,262,0,NULL,'2024-07-14 18:31:41'),
 (263,'',0,'0',NULL,NULL,263,0,NULL,'2024-07-14 18:31:41'),
 (264,'',0,'0',NULL,NULL,264,0,NULL,'2024-07-14 18:31:41'),
 (265,'',0,'0',NULL,NULL,265,0,NULL,'2024-07-14 18:31:41'),
 (266,'',0,'0',NULL,NULL,266,0,NULL,'2024-07-14 18:31:41'),
 (267,'',0,'0',NULL,NULL,267,0,NULL,'2024-07-14 18:31:41'),
 (268,'',0,'0',NULL,NULL,268,0,NULL,'2024-07-14 18:31:41'),
 (269,'',0,'0',NULL,NULL,269,0,NULL,'2024-07-14 18:31:41'),
 (270,'',0,'0',NULL,NULL,270,0,NULL,'2024-07-14 18:31:41'),
 (271,'',0,'0',NULL,NULL,271,0,NULL,'2024-07-14 18:31:42'),
 (272,'',0,'0',NULL,NULL,272,0,NULL,'2024-07-14 18:31:42'),
 (273,'',0,'0',NULL,NULL,273,0,NULL,'2024-07-14 18:31:42'),
 (274,'',0,'0',NULL,NULL,274,0,NULL,'2024-07-14 18:31:42'),
 (275,'',0,'0',NULL,NULL,275,0,NULL,'2024-07-14 18:31:42'),
 (276,'',0,'0',NULL,NULL,276,0,NULL,'2024-07-14 18:31:42'),
 (277,'',0,'0',NULL,NULL,277,0,NULL,'2024-07-14 18:31:42'),
 (278,'',0,'0',NULL,NULL,278,0,NULL,'2024-07-14 18:31:42'),
 (279,'',0,'0',NULL,NULL,279,0,NULL,'2024-07-14 18:31:42'),
 (280,'',0,'0',NULL,NULL,280,0,NULL,'2024-07-14 18:31:42'),
 (281,'',0,'0',NULL,NULL,281,0,NULL,'2024-07-14 18:31:42'),
 (282,'',0,'0',NULL,NULL,282,0,NULL,'2024-07-14 18:31:42'),
 (283,'',0,'0',NULL,NULL,283,0,NULL,'2024-07-14 18:31:42'),
 (284,'',0,'0',NULL,NULL,284,0,NULL,'2024-07-14 18:31:42'),
 (285,'',0,'0',NULL,NULL,285,0,NULL,'2024-07-14 18:31:42'),
 (286,'',0,'0',NULL,NULL,286,0,NULL,'2024-07-14 18:31:42'),
 (287,'',0,'0',NULL,NULL,287,0,NULL,'2024-07-14 18:31:42'),
 (288,'',0,'0',NULL,NULL,288,0,NULL,'2024-07-14 18:31:42'),
 (289,'',0,'0',NULL,NULL,289,0,NULL,'2024-07-14 18:31:42'),
 (290,'',0,'0',NULL,NULL,290,0,NULL,'2024-07-14 18:31:42'),
 (291,'',0,'0',NULL,NULL,291,0,NULL,'2024-07-14 18:31:42'),
 (292,'',0,'0',NULL,NULL,292,0,NULL,'2024-07-14 18:31:42'),
 (293,'',0,'0',NULL,NULL,293,0,NULL,'2024-07-14 18:31:42'),
 (294,'',0,'0',NULL,NULL,294,0,NULL,'2024-07-14 18:31:42'),
 (295,'',0,'0',NULL,NULL,295,0,NULL,'2024-07-14 18:31:42'),
 (296,'',0,'0',NULL,NULL,296,0,NULL,'2024-07-14 18:31:42'),
 (297,'',0,'0',NULL,NULL,297,0,NULL,'2024-07-14 18:31:42'),
 (298,'',0,'0',NULL,NULL,298,0,NULL,'2024-07-14 18:31:42'),
 (299,'',0,'0',NULL,NULL,299,0,NULL,'2024-07-14 18:31:42'),
 (300,'',0,'0',NULL,NULL,300,0,NULL,'2024-07-14 18:31:42');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=301 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Out of 7 consonants and 4 vowels, how many words of 3 consonants and 2 vowels can be formed?</div>\n',1,1,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a group of 6 boys and 4 girls, four children are to be selected. In how many different ways, can they be selected such that at least one boy should be there?</div>\n',1,2,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">From a group of 7 men and 6 women, five persons are to be selected to form a committee, so that at least 3 men are there in the committee. In how many ways can it be done?</div>\n',1,3,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In how many different ways, can the letters of the word \'OPTICAL\' be arranged so that, the vowels always come together?</div>\n',1,4,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In how many different ways, can the letters of the word \'CORPORATION\' be arranged so that, the vowels always come together?</div>\n',1,5,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In how many ways, can a group of 5 men and 2 women be made out of a total of 7 men and 3 women?</div>\n',1,6,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In how many different ways can the letters of the word \'MATHEMATICS\' be arranged such that, the vowels must always come together?</div>\n',1,7,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">There are 8 men and 10 women and you need to form a committee of 5 men and 6 women. In how many ways can the committee be formed?</div>\n',1,8,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">How many 3-letter words with or without meaning, can be formed out of the letters of the word, \'LOGARITHMS\', if repetition of letters is not allowed?</div>\n',1,9,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In how many different ways can the letters of the word \'LEADING\' be arranged such that, the vowels should always come together?</div>\n',1,10,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div>Study the following information carefully and answer the given question:</div>\n<div>The following table shows the total number of Professionals from different departments in different years in a certain city and the percentage of female among them.</div>\n<div><img src=\"../static/img/questions/509-01.png\"></div>\nFind the difference between the number of male engineering professionals in the year 2015 to that of number of female Law professionals in the year 2013?',1,11,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div>Study the following information carefully and answer the given question:</div>\n<div>The following table shows the total number of Professionals from different departments in different years in a certain city and the percentage of female among them.</div>\n<div><img src=\"../static/img/questions/509-01.png\"></div>\nFind the ratio between the number of male medical professionals in the year 2014 to that of number of female engineering professional in the year 2013?',1,12,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div>Study the following information carefully and answer the given question:</div>\n<div>The following table shows the total number of Professionals from different departments in different years in a certain city and the percentage of female among them.</div>\n<div><img src=\"../static/img/questions/509-01.png\"></div>\nWhat is the difference between the total number of engineering professionals and total number of medical professionals in all the given years together?',1,13,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div>Study the following information carefully and answer the given question:</div>\n<div>The following table shows the total number of Professionals from different departments in different years in a certain city and the percentage of female among them.</div>\n<div><img src=\"../static/img/questions/509-01.png\"></div>\nFind the average number of male law professionals in the year 2013, 2015 and 2017 together?',1,14,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div>Study the following information carefully and answer the given question:</div>\n<div>The following table shows the total number of Professionals from different departments in different years in a certain city and the percentage of female among them.</div>\n<div><img src=\"../static/img/questions/509-01.png\"></div>\nNumber of medical professionals in the year 2014 is approximately what percentage the number of engineering male professionals in the year 2016?',1,15,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div>Study the following information carefully and answer the given question: </div><div style=\"font-weight:normal;\"><div>The following pie chart shows the total population in 5 different cities in a certain state and the table shows the ratio of male and female among them.</div>\n<div><img src=\"../static/img/questions/509-06.png\"></div>\n<div><img src=\"../static/img/questions/509-06-02.png\"></div>\n<div></div>\n<div></div>\n</div>Total male population of city &ldquo;P&rdquo; is what percentage of total female population of city &ldquo;R&rdquo;?',1,16,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div>Study the following information carefully and answer the given question: </div><div style=\"font-weight:normal;\"><div>The following pie chart shows the total population in 5 different cities in a certain state and the table shows the ratio of male and female among them.</div>\n<div><img src=\"../static/img/questions/509-06.png\"></div>\n<div><img src=\"../static/img/questions/509-06-02.png\"></div>\n<div></div>\n<div></div>\n</div>Find the difference between the total male population of city &ldquo;Q&rdquo; to that of total female population of city &ldquo;S&rdquo;?',1,17,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div>Study the following information carefully and answer the given question: </div><div style=\"font-weight:normal;\"><div>The following pie chart shows the total population in 5 different cities in a certain state and the table shows the ratio of male and female among them.</div>\n<div><img src=\"../static/img/questions/509-06.png\"></div>\n<div><img src=\"../static/img/questions/509-06-02.png\"></div>\n<div></div>\n<div></div>\n</div>Find the average female population in city &ldquo;P&rdquo;, &ldquo;Q&rdquo; and &ldquo;S&rdquo; together?',1,18,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div>Study the following information carefully and answer the given question: </div><div style=\"font-weight:normal;\"><div>The following pie chart shows the total population in 5 different cities in a certain state and the table shows the ratio of male and female among them.</div>\n<div><img src=\"../static/img/questions/509-06.png\"></div>\n<div><img src=\"../static/img/questions/509-06-02.png\"></div>\n<div></div>\n<div></div>\n</div>Find the ratio between the total population in city &ldquo;T&rdquo; to that of total male population in city &ldquo;U&rdquo;?',1,19,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div>Study the following information carefully and answer the given question: </div><div style=\"font-weight:normal;\"><div>The following pie chart shows the total population in 5 different cities in a certain state and the table shows the ratio of male and female among them.</div>\n<div><img src=\"../static/img/questions/509-06.png\"></div>\n<div><img src=\"../static/img/questions/509-06-02.png\"></div>\n<div></div>\n<div></div>\n</div>Find the central angle of city &ldquo;Q&rdquo;?',1,20,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	It is written in The Gita (a)/ that God incarnates (b)/ himself (c)/ in times of trouble. (d)/ No error (e)</div>',1,21,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	It is being rainy day, (a)/ we decided not to go out (b)/ but to stay at home (c)/ and watch a movie. (d)/ No error (e).</div>',1,22,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	The blind (a)/ deserving(b)/ our sympathy. (c)/ No error (d).</div>',1,23,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	Concurrent with his programme, (a)/ educational institutions may be urged (b)/ to inculcate patriotism (c)/ in each and every one of its pupils. (d)/ No error (e).</div>',1,24,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	She had shifted her residence (a)/ to this city to be (b)/ close with the child (c)/ she had wanted to adopt. (d)/ No error (e).</div>',1,25,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	The author&rsquo;s vision, (a)/ suffused by an innocence and warmth, (b)/ may not correspond (c)/ to the country as it is today. (d)/ No error (e).</div>',1,26,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	And though one did not (a)/ quite believe his claim, (b)/ one saw no harm (c)/ in granting him permission. (d)/ No error (e).</div>',1,27,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	When he went out (a)/ he left the radio on (b)/ so that his parents shall thought (c)/ that he was still in the house. (d)/ No error (e).</div>',1,28,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	More leisure, as well as an abundance of goods, (a)/ are attainable (b)/ through automation. (c)/ No error (d).</div>',1,29,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div>\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div>\r\n	If only (a) / did he marry her, (b) / but also he (c) / took care of her well. (d) / No error (e)</div>',1,30,1,'1','2024-07-14 18:31:31',0,NULL,NULL,'','',NULL,NULL),
 (31,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A number exceeds 20% of itself by 40. The number is ____?</div>\n',1,1,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (32,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The number exceeds its four - seventh by 18. What&rsquo;s the number?</div>\n',1,2,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (33,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A number is as much greater than 36 as is less than 86. The no. is ____?</div>\n',1,3,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (34,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Two different natural numbers are such that their product is less that their sum. One of the numbers must be ___?</div>\n',1,4,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (35,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The difference between the squares of 2 consecutive numbers is 35, the smaller number is _____?</div>\n',1,5,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (36,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The sum of the squares of three consecutive odd-numbers is 251. The numbers are __, ____, ___?</div>\n',1,6,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (37,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Three numbers are in the ratio of 4:  5: 6 & their average is 25. The largest of these numbers is _____?</div>\n',1,7,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (38,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The sum of three numbers is 136. If the ratio between first & second is 2:3 & that between second & third is 5:3, then the second number is _______?</div>\n',1,8,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (39,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The difference between a two digit number & the number obtained by interchanging the digits is 27. What&rsquo;s the diff. between the digits of the number? 	</div>\n',1,9,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (40,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a two-digit number, the sum of the digits is 15. If 9 is added to the number, the digits are reversed. The numbers are ____, _____?</div>\n',1,10,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (41,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">Find the value of (x + 2)<sup>2</sup>?</div>\n<div style=\"font-weight:bold;\">Statement I : x<sup>2</sup> - 4 = 8</div>\n<div style=\"font-weight:bold;\">Statement II : The average of 5 numbers (8, 6, 4, 3x and x-4) is 6</div>\n',1,11,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (42,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">What is the present age of A?</div>\n<div style=\"font-weight:bold;\">Statement I: The ratio of the present age of A and B is 2 : 3. After 10 years the ratio of the ages of B and C is 2:1.</div>\n<div style=\"font-weight:bold;\">Statement II: 5 years ago the average age of A, B and C is 11 years and after 3 years the average age of B and C is 18 years.</div>\n',1,12,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (43,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">What is the total investment made by three partners: A, B and C?</div>\n<div style=\"font-weight:bold;\">Statement I: A invested Rs 2000. The Ratio of time period for A, B and C is 1:2:3.</div>\n<div style=\"font-weight:bold;\">Statement II: The total profit is Rs 6000.</div>\n',1,13,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (44,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">Find the rate of interest?</div>\n<div style=\"font-weight:bold;\">Statement I: The difference between the simple interest and compound interest for 2 years is Rs.800.</div>\n<div style=\"font-weight:bold;\">Statement II: The simple interest accrued on the amount Rs3000 is Rs500.</div>\n',1,14,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (45,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">What is the three digit number?</div>\n<div style=\"font-weight:bold;\">Statement I: The three digit number is an exact multiple of 8.</div>\n<div style=\"font-weight:bold;\">Statement II: The first and third digits are 2.</div>\n',1,15,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (46,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">What is Prabu&rsquo;s present age?</div>\n<div style=\"font-weight:bold;\">Statement I: The ratio of the present age of Prabhu and his sister Vanitha&rsquo;s present age is 2:3</div>\n<div style=\"font-weight:bold;\">Statement II: Prabhu&rsquo;s present age is double the age of his Son Mani. Four years hence, the ratio of Vanitha&rsquo;s age to Mani&rsquo;s will be 24:13.</div>\n',1,16,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (47,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">What is the rate of interest per annum?</div>\n<div style=\"font-weight:bold;\">Statement I: The difference between the compound interest and the simple interest on an amount of Rs 32000 in two years is Rs 320.</div>\n<div style=\"font-weight:bold;\">Statement II: An amount triples itself at simple interest in 14 years.</div>\n',1,17,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (48,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">In what time the boat cover a distance of 120kms upstream?</div>\n<div style=\"font-weight:bold;\">Statement I: A boat covers 24kms downstream in 3 hours.</div>\n<div style=\"font-weight:bold;\">Statement II: The speed of the current is 25% of its downstream speed.</div>\n',1,18,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (49,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">What is the number of students in the class, if the number of students in the class cannot be more than 85?</div>\n<div style=\"font-weight:bold;\">Statement I: When students are divided in a group of 12 only 8 students are left, but when divided in a group of 5 no student is left.</div>\n<div style=\"font-weight:bold;\">Statement II: When the students are divided in a group of 3, only two students are left, but were divided in a group of 7, only three students are left.</div>\n',1,19,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (50,'<div style=\"font-weight:bold;\">Use the data of those statements and then determine which of the following statements is necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">A) Statement I is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">B) Statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">C) Either Statement I or statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">D) Neither Statement I nor statement II is sufficient to answer the question.</div>\n<div style=\"font-weight:bold;\">E) Both Statements I and II are necessary to answer the question.</div>\n<div style=\"font-weight:bold;\">What is the ratio of speed of the boat in still water and speed of the stream?</div>\n<div style=\"font-weight:bold;\">Statement I: The boat takes 3 hours to travel 51 kms downstream</div>\n<div style=\"font-weight:bold;\">Statement II: The ratio of downstream and upstream speeds is 6:5</div>\n',1,20,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (51,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	WORD : CHARADE</div>',1,21,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (52,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	LINEAGE : PERSON</div>',1,22,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (53,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	SCURRY : MOVE</div>',1,23,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (54,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	JOY : ECSTASY</div>',1,24,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (55,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	GLOSSARY : WORDS</div>',1,25,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (56,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	ADULATION : FLATTERY</div>',1,26,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (57,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	OPEN : SECRETIVE</div>',1,27,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (58,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	GERM : DISEASE</div>',1,28,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (59,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	EPAULETTE : SHOULDER</div>',1,29,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (60,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	MODERATOR : DEBATE</div>',1,30,2,'1','2024-07-14 18:31:32',0,NULL,NULL,'','',NULL,NULL),
 (61,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The average of first five multiples of 3 is ______?</div>\n',1,1,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (62,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The average of the first 50 whole number is _______?</div>\n',1,2,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (63,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The average of 7 consecutive numbers is 33, the largest of these numbers is _______?</div>\n',1,3,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (64,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The average height of 30 boys out of a class of 50 is 160 cms. If the average height of the remaining boys is 165 cms, the average height of the whole class is _______ cms?</div>\n',1,4,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (65,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The average of 5 results is 46 and that of the first 4 is 45. The fifth result is _______?</div>\n',1,5,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (66,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The average of ten numbers is 7. If each number is multiplied by 12, then the average is _____?</div>\n',1,6,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (67,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The average of 50 numbers is 38. If two numbers, namely 45 and 55 are discarded, the average of the remaining number is _______?</div>\n',1,7,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (68,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The mean of 100 observations was calculated as 40. It was found later on that one of the observations was misread as 83 instead of 53. The correct mean is _______?</div>\n',1,8,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (69,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The average of six numbers is 30. If the average of first four is 25 and that of last three is 35, the fourth number is _______?</div>\n',1,9,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (70,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Out of four numbers, the average of first three is 16 and that of the last three is 15. If the last number is 18, the first number is _______?</div>\n',1,10,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (71,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only Yellow are red.</div>\n<div>Few Yellow are Pink.</div>\n<div>All pink are green.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. Some Green are Yellow.</div>\n<div>II. All Pink can never be red.</div>\n</div>',1,11,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (72,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only a few Rat is Cat.</div>\n<div>Some rat are Ant.</div>\n<div>All Cat are Mat.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. All Cat are Rat.</div>\n<div>II. All Mat can be Rat.</div>\n</div>',1,12,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (73,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only a few Milk are Coffee.</div>\n<div>All Milk are Tea.</div>\n<div>Some Coffee are Pure.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. Some Pure is Milk.</div>\n<div>II. No Pure is Milk.</div>\n</div>',1,13,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (74,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only Banana are Apple.</div>\n<div>Only a few Banana are Orange.</div>\n<div>Some orange are Grapes.</div>\n<div>All Grapes are Pineapple.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. All bananas can never be Grapes.</div>\n<div>II. All Apple can never be Pineapple.</div>\n</div>',1,14,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (75,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only a few Google are Yahoo</div>\n<div>No Google is Gmail.</div>\n<div>No yahoo is Email.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. No Gmail is Yahoo.</div>\n<div>II. No Email is Google.</div>\n</div>',1,15,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (76,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only a few Tamil are English.</div>\n<div>All Hindi are English.</div>\n<div>Some English are Marathi.</div>\n<div>No Tamil is Marathi.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. Some Hindi can be Tamil.</div>\n<div>II. Some Marathi can be Hindi.</div>\n</div>',1,16,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (77,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only a few Cup are Plates.</div>\n<div>Some Plates are Bottles.</div>\n<div>No bottle is Jug.</div>\n<div>All Jugs are Water.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. Few Bottles are Cup.</div>\n<div>II. Some Bottles are Water.</div>\n</div>',1,17,3,'1','2024-07-14 18:31:33',0,NULL,NULL,'','',NULL,NULL),
 (78,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>All Bike are Motor.</div>\n<div>Some Bike are Cycle.</div>\n<div>No Cycle is Car.</div>\n<div>Some Car are Bus.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. Some Car are not Bike.</div>\n<div>II. No Bus is Motor</div>\n</div>',1,18,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (79,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only a few Engineers are Doctors.</div>\n<div>Some Engineers are Nurses.</div>\n<div>Some Doctors are Chemists.</div>\n<div>No Nurses are Chemists.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. Some Nurses are not Doctors.</div>\n<div>II. Some Chemists are not Engineers.</div>\n</div>',1,19,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (80,'<div><div style=\"font-weight:bold;\">Read the conclusions and then decide which of the given conclusions logically follows from the given statements, disregarding commonly known facts.</div>\n<div style=\"font-weight:bold;\">Give answer:</div>\n</div><div style=\"font-weight:normal;\"><div>(A) If only conclusion I follows</div>\n<div>(B) If only conclusion II follows</div>\n<div>(C) If either conclusion I or II follows</div>\n<div>(D) If neither conclusion I nor II follows</div>\n<div>(E) If both conclusion I and II follow</div>\n</div><div><div style=\"font-weight:bold;\">Statements:</div>\n</div><div style=\"font-weight:normal;\"><div>Only Palaces are Building.</div>\n<div>Some Palaces are Houses.</div>\n<div>Some Houses are Owners.</div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:bold;\">Conclusions:</div>\n</div><div style=\"font-weight:normal;\"><div>I. Some Owners can never be Building.</div>\n<div>II. Some Houses can be Building.</div>\n</div>',1,20,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (81,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The sun had set but there was still some light in the sky. Martin <u><strong>(1)</strong></u> on his elbow and looked <u><strong>(2)</strong></u> through the leaves. In the waters of the lake, close to the shore, he saw a <u><strong>(3) </strong></u>of alligators floating quietly. One of the creatures, <u><strong>(4)</strong></u> huge one, was lying on a high <u><strong>(5)</strong></u> of sand, a few yard from the water.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(1)</strong></div>',1,21,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (82,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The sun had set but there was still some light in the sky. Martin&nbsp;<u><strong>(1)</strong></u>&nbsp;on his elbow and looked&nbsp;<u><strong>(2)</strong></u>&nbsp;through the leaves. In the waters of the lake, close to the shore, he saw a&nbsp;<u><strong>(3)&nbsp;</strong></u>of alligators floating quietly. One of the creatures,&nbsp;<u><strong>(4)</strong></u>&nbsp;huge one, was lying on a high&nbsp;<u><strong>(5)</strong></u>&nbsp;of sand, a few yard from the water.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(2)</strong></div>',1,22,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (83,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The sun had set but there was still some light in the sky. Martin&nbsp;<u><strong>(1)</strong></u>&nbsp;on his elbow and looked&nbsp;<u><strong>(2)</strong></u>&nbsp;through the leaves. In the waters of the lake, close to the shore, he saw a&nbsp;<u><strong>(3)&nbsp;</strong></u>of alligators floating quietly. One of the creatures,&nbsp;<u><strong>(4)</strong></u>&nbsp;huge one, was lying on a high&nbsp;<u><strong>(5)</strong></u>&nbsp;of sand, a few yard from the water.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(3)</strong></div>',1,23,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (84,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The sun had set but there was still some light in the sky. Martin&nbsp;<u><strong>(1)</strong></u>&nbsp;on his elbow and looked&nbsp;<u><strong>(2)</strong></u>&nbsp;through the leaves. In the waters of the lake, close to the shore, he saw a&nbsp;<u><strong>(3)&nbsp;</strong></u>of alligators floating quietly. One of the creatures,&nbsp;<u><strong>(4)</strong></u>&nbsp;huge one, was lying on a high&nbsp;<u><strong>(5)</strong></u>&nbsp;of sand, a few yard from the water.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(4)</strong></div>',1,24,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (85,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The sun had set but there was still some light in the sky. Martin&nbsp;<u><strong>(1)</strong></u>&nbsp;on his elbow and looked&nbsp;<u><strong>(2)</strong></u>&nbsp;through the leaves. In the waters of the lake, close to the shore, he saw a&nbsp;<u><strong>(3)&nbsp;</strong></u>of alligators floating quietly. One of the creatures,&nbsp;<u><strong>(4)</strong></u>&nbsp;huge one, was lying on a high&nbsp;<u><strong>(5)</strong></u>&nbsp;of sand, a few yard from the water.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(5)</strong></div>',1,25,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (86,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The <u><strong>(1)</strong></u> of Bengal tigers left in the world has <u><strong>(2)</strong></u> from 100,000 to 4,000 over the last century. The main threats are <u><strong>(3)</strong></u> of habitat, poaching and the trade in tiger parts for Eastern medicines. Most Bengal tigers live in protected areas of India. Anti-poaching task-forces have been <u><strong>(4)</strong></u> up and there is also a trade <u><strong>(5)</strong></u> on tiger products in many countries, as a measure to save this rare species.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(1)</strong></div>',1,26,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (87,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The&nbsp;<u><strong>(1)</strong></u>&nbsp;of Bengal tigers left in the world has&nbsp;<u><strong>(2)</strong></u>&nbsp;from 100,000 to 4,000 over the last century. The main threats are&nbsp;<u><strong>(3)</strong></u>&nbsp;of habitat, poaching and the trade in tiger parts for Eastern medicines. Most Bengal tigers live in protected areas of India. Anti-poaching task-forces have been&nbsp;<u><strong>(4)</strong></u>&nbsp;up and there is also a trade&nbsp;<u><strong>(5)</strong></u>&nbsp;on tiger products in many countries, as a measure to save this rare species.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(2)</strong></div>',1,27,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (88,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The&nbsp;<u><strong>(1)</strong></u>&nbsp;of Bengal tigers left in the world has&nbsp;<u><strong>(2)</strong></u>&nbsp;from 100,000 to 4,000 over the last century. The main threats are&nbsp;<u><strong>(3)</strong></u>&nbsp;of habitat, poaching and the trade in tiger parts for Eastern medicines. Most Bengal tigers live in protected areas of India. Anti-poaching task-forces have been&nbsp;<u><strong>(4)</strong></u>&nbsp;up and there is also a trade&nbsp;<u><strong>(5)</strong></u>&nbsp;on tiger products in many countries, as a measure to save this rare species.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(3)</strong></div>',1,28,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (89,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The&nbsp;<u><strong>(1)</strong></u>&nbsp;of Bengal tigers left in the world has&nbsp;<u><strong>(2)</strong></u>&nbsp;from 100,000 to 4,000 over the last century. The main threats are&nbsp;<u><strong>(3)</strong></u>&nbsp;of habitat, poaching and the trade in tiger parts for Eastern medicines. Most Bengal tigers live in protected areas of India. Anti-poaching task-forces have been&nbsp;<u><strong>(4)</strong></u>&nbsp;up and there is also a trade&nbsp;<u><strong>(5)</strong></u>&nbsp;on tiger products in many countries, as a measure to save this rare species.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(4)</strong></div>',1,29,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (90,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	The&nbsp;<u><strong>(1)</strong></u>&nbsp;of Bengal tigers left in the world has&nbsp;<u><strong>(2)</strong></u>&nbsp;from 100,000 to 4,000 over the last century. The main threats are&nbsp;<u><strong>(3)</strong></u>&nbsp;of habitat, poaching and the trade in tiger parts for Eastern medicines. Most Bengal tigers live in protected areas of India. Anti-poaching task-forces have been&nbsp;<u><strong>(4)</strong></u>&nbsp;up and there is also a trade&nbsp;<u><strong>(5)</strong></u>&nbsp;on tiger products in many countries, as a measure to save this rare species.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(5)</strong></div>',1,30,3,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (91,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">It was Sunday on Jan 1, 2006. What was the day of the week Jan 1, 2010?</div>\n',1,1,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (92,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Today is Monday. After 61 days, it will be ________?</div>\n',1,2,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (93,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What will be the day of the week 15th August, 2010?</div>\n',1,3,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (94,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	What was the day of the week on 17th June, 1998?</div>',1,4,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (95,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What was the day of the week on 28th May, 2006?</div>\n',1,5,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (96,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">January 1, 2007 was Monday. What day of the week lies on January 1, 2008?</div>\n',1,6,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (97,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A wall clock loses 10 minutes every 1 hour. In 1 hour by the wall clock, a table clock gets 10 minutes ahead of it. In 1 hour by the table clock an alarm clock falls 5 minutes behind it. In 1 hour of the alarm clock, a wristwatch gets 5 minutes ahead it. At noon, all 4 timepieces were set correctly. To the nearest minutes, what time will the wrist show, when the correct time is 6 p.m. on the same day?</div>\n',1,7,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (98,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	On 8th Dec, 2007 Saturday falls. What day of the week was it on 8th Dec, 2006?</div>',1,8,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (99,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is not a leap year?</div>\n',1,9,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (100,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The calendar for the year 2007 will be the same for the year _______?</div>\n',1,10,4,'1','2024-07-14 18:31:34',0,NULL,NULL,'','',NULL,NULL),
 (101,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Why don\'t you go to the court, if the employer does not pay you the Provident Fund contribution?</div>\n<div style=\"font-weight:bold;\">Assumptions:</div>\n<div style=\"font-weight:bold;\">1. Courts can intervene in matters of dispute between employer and employees.</div>\n<div style=\"font-weight:bold;\">2. It is obligatory for the employer to pay the Provident Fund contribution to the employees.</div>\n',1,11,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (102,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">You know that your suit is excellent, when people ask about your tailor who tailored the suit.</div>\n<div style=\"font-weight:bold;\">Assumptions:</div>\n<div style=\"font-weight:bold;\">1. People do not ask about your tailor, if your suit is not good.</div>\n<div style=\"font-weight:bold;\">2. The people want to know the criterion of an excellent suit.</div>\n',1,12,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (103,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Should there be small states formed out of the larger states in India?</div>\n<div style=\"font-weight:bold;\">Arguments: </div>\n<div style=\"font-weight:bold;\">I: No, this will allow the danger to national integration.</div>\n<div style=\"font-weight:bold;\">II: Yes, this will result in administrative convenience.</div>\n',1,13,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (104,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Should all the unauthorized structures in the city be demolished?</div>\n<div style=\"font-weight:bold;\">Arguments:</div>\n<div style=\"font-weight:bold;\">1. No. Where will the people residing in such houses live?</div>\n<div style=\"font-weight:bold;\">2. Yes. This will give a clear message to general public and they will refrain from constructing unauthorized buildings.</div>\n',1,14,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (105,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Should there be a maximum limit for the number of ministers in the Central Government?</div>\n<div style=\"font-weight:bold;\">Arguments:</div>\n<div style=\"font-weight:bold;\">1. No. The political party in power should have the freedom to decide the number of ministers to be appointed.</div>\n<div style=\"font-weight:bold;\">2. Yes. The number of ministers should be restricted to a certain percentage of the total number of seats in the parliament to avoid unnecessary expenditure.</div>\n',1,15,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (106,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Is buying things on instalments profitable to the customer?</div>\n<div style=\"font-weight:bold;\">Arguments:</div>\n<div style=\"font-weight:bold;\">1. Yes. He has to pay less.</div>\n<div style=\"font-weight:bold;\">2. No, paying instalments upsets the family budget.</div>\n',1,16,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (107,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Should foreign films be banned in India?</div>\n<div style=\"font-weight:bold;\">Arguments:</div>\n<div style=\"font-weight:bold;\">1. Yes. They depict an alien culture which adversely affects our values.</div>\n<div style=\"font-weight:bold;\">2. No. Foreign films are of a high artistic standard.</div>\n',1,17,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (108,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Should the railways in India be privatized in a phased manner like other public sector enterprises?</div>\n<div style=\"font-weight:bold;\">Arguments:</div>\n<div style=\"font-weight:bold;\">1. Yes. This is the only way to bring in competitiveness and provide better services to the public.</div>\n<div style=\"font-weight:bold;\">2. No. This will pose a threat to the national security of our country as multinationals will enter into the fray.</div>\n',1,18,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (109,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Should cottage industries be encouraged in rural areas?</div>\n<div style=\"font-weight:bold;\">Arguments:</div>\n<div style=\"font-weight:bold;\">1. Yes. Rural people are creative.</div>\n<div style=\"font-weight:bold;\">2. Yes. This would help to solve the problem of unemployment to some extent.</div>\n',1,19,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (110,'<div style=\"font-weight:bold;\">Statement: </div>\n<div style=\"font-weight:bold;\">Should India engage into a dialogue with neighbouring countries to stop cross border tension?</div>\n<div style=\"font-weight:bold;\">Arguments:</div>\n<div style=\"font-weight:bold;\">1. Yes. This is the only way to reduce the cross border terrorism and stop loss of innocent lives.</div>\n<div style=\"font-weight:bold;\">2. No. Neighbouring countries cannot be relied upon in such matters, they may still engage in subversive activities.</div>\n',1,20,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (111,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Every time we head towards an election, people have this question: can we sustain this growth? I was recently at an event in Mumbai and my answer to this question was to look at what is&nbsp;<u><strong>(1)</strong></u> our country&rsquo;s ambition and what we need to watch out for to sustain this growth rate and make 8% the new rate of&nbsp;<u><strong>(2)</strong></u>These words summarize India&rsquo;s evolving growth story. Today, India is probably one of the few large emerging economies where growth and development seem to be <u><strong>(3)</strong></u> along at the same pace, making it unique in many ways. Prudent monetary and fiscal policies, along with the implementation of several domestic structural reforms, have not only strengthened the macroeconomic fundamentals but also raised the reforms bar. The push towards accessibility and affordability has resulted in ground-level <u><strong>(4)&nbsp;</strong></u>of reforms. At its heart, there are three distinct factors that are propelling India&rsquo;s growth story. First, the impatience of the country&rsquo;s youth has put <u><strong>(5)&nbsp;</strong></u>pressure on the government to transform and perform, leading to greater accountability and quicker implementation of reform measures.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(1)</strong></div>',1,21,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (112,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Every time we head towards an election, people have this question: can we sustain this growth? I was recently at an event in Mumbai and my answer to this question was to look at what is&nbsp;<u><strong>(1)</strong></u>&nbsp;our country&rsquo;s ambition and what we need to watch out for to sustain this growth rate and make 8% the new rate of&nbsp;<u><strong>(2)</strong></u>These words summarize India&rsquo;s evolving growth story. Today, India is probably one of the few large emerging economies where growth and development seem to be&nbsp;<u><strong>(3)</strong></u>&nbsp;along at the same pace, making it unique in many ways. Prudent monetary and fiscal policies, along with the implementation of several domestic structural reforms, have not only strengthened the macroeconomic fundamentals but also raised the reforms bar. The push towards accessibility and affordability has resulted in ground-level&nbsp;<u><strong>(4)&nbsp;</strong></u>of reforms. At its heart, there are three distinct factors that are propelling India&rsquo;s growth story. First, the impatience of the country&rsquo;s youth has put&nbsp;<u><strong>(5)&nbsp;</strong></u>pressure on the government to transform and perform, leading to greater accountability and quicker implementation of reform measures.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(2)</strong></div>',1,22,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (113,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Every time we head towards an election, people have this question: can we sustain this growth? I was recently at an event in Mumbai and my answer to this question was to look at what is&nbsp;<u><strong>(1)</strong></u>&nbsp;our country&rsquo;s ambition and what we need to watch out for to sustain this growth rate and make 8% the new rate of&nbsp;<u><strong>(2)</strong></u>These words summarize India&rsquo;s evolving growth story. Today, India is probably one of the few large emerging economies where growth and development seem to be&nbsp;<u><strong>(3)</strong></u>&nbsp;along at the same pace, making it unique in many ways. Prudent monetary and fiscal policies, along with the implementation of several domestic structural reforms, have not only strengthened the macroeconomic fundamentals but also raised the reforms bar. The push towards accessibility and affordability has resulted in ground-level&nbsp;<u><strong>(4)&nbsp;</strong></u>of reforms. At its heart, there are three distinct factors that are propelling India&rsquo;s growth story. First, the impatience of the country&rsquo;s youth has put&nbsp;<u><strong>(5)&nbsp;</strong></u>pressure on the government to transform and perform, leading to greater accountability and quicker implementation of reform measures.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(3)</strong></div>',1,23,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (114,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Every time we head towards an election, people have this question: can we sustain this growth? I was recently at an event in Mumbai and my answer to this question was to look at what is&nbsp;<u><strong>(1)</strong></u>&nbsp;our country&rsquo;s ambition and what we need to watch out for to sustain this growth rate and make 8% the new rate of&nbsp;<u><strong>(2)</strong></u>These words summarize India&rsquo;s evolving growth story. Today, India is probably one of the few large emerging economies where growth and development seem to be&nbsp;<u><strong>(3)</strong></u>&nbsp;along at the same pace, making it unique in many ways. Prudent monetary and fiscal policies, along with the implementation of several domestic structural reforms, have not only strengthened the macroeconomic fundamentals but also raised the reforms bar. The push towards accessibility and affordability has resulted in ground-level&nbsp;<u><strong>(4)&nbsp;</strong></u>of reforms. At its heart, there are three distinct factors that are propelling India&rsquo;s growth story. First, the impatience of the country&rsquo;s youth has put&nbsp;<u><strong>(5)&nbsp;</strong></u>pressure on the government to transform and perform, leading to greater accountability and quicker implementation of reform measures.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(4)</strong></div>',1,24,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (115,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Every time we head towards an election, people have this question: can we sustain this growth? I was recently at an event in Mumbai and my answer to this question was to look at what is&nbsp;<u><strong>(1)</strong></u>&nbsp;our country&rsquo;s ambition and what we need to watch out for to sustain this growth rate and make 8% the new rate of&nbsp;<u><strong>(2)</strong></u>These words summarize India&rsquo;s evolving growth story. Today, India is probably one of the few large emerging economies where growth and development seem to be&nbsp;<u><strong>(3)</strong></u>&nbsp;along at the same pace, making it unique in many ways. Prudent monetary and fiscal policies, along with the implementation of several domestic structural reforms, have not only strengthened the macroeconomic fundamentals but also raised the reforms bar. The push towards accessibility and affordability has resulted in ground-level&nbsp;<u><strong>(4)&nbsp;</strong></u>of reforms. At its heart, there are three distinct factors that are propelling India&rsquo;s growth story. First, the impatience of the country&rsquo;s youth has put&nbsp;<u><strong>(5)&nbsp;</strong></u>pressure on the government to transform and perform, leading to greater accountability and quicker implementation of reform measures.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(5)</strong></div>',1,25,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL);
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (116,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<div>\r\n	We</div>\r\n<p>\r\n	(P) agreed with</p>\r\n<p>\r\n	(Q) the manner in which you said it</p>\r\n<p>\r\n	(S) what you said</p>',1,26,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (117,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<div>\r\n	<p>\r\n		(S1) I reasoned with him</p>\r\n	<p>\r\n		(P) but could not disabuse him</p>\r\n	<p>\r\n		(Q) that the lawyer</p>\r\n	<p>\r\n		(R) for an hour</p>\r\n	<p>\r\n		(S) of the nation</p>\r\n	(S6) who had his case in hand was incompetent.</div>\r\n<p>\r\n	&nbsp;</p>',1,27,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (118,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<div>\r\n	<p>\r\n		(P) as environmental tools</p>\r\n	<p>\r\n		(Q) for military purposes</p>\r\n	<p>\r\n		(R) are finding various new uses</p>\r\n	(S) the world&rsquo;s fastest computers initially conceived.</div>\r\n<p>\r\n	&nbsp;</p>',1,28,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (119,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<div>\r\n	<p>\r\n		(S1) The fact that</p>\r\n	<p>\r\n		(P) go to the police</p>\r\n	<p>\r\n		(Q) did not let him</p>\r\n	<p>\r\n		(R) to speak the truth</p>\r\n	<p>\r\n		(S) he was a murderer</p>\r\n	(S6) about the theft</div>\r\n<p>\r\n	&nbsp;</p>',1,29,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (120,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<p>\r\n	The U.S. Soyabean</p>\r\n<p>\r\n	(P) in the developing world</p>\r\n<p>\r\n	(Q) and when famine strikes</p>\r\n<p>\r\n	(R) is American&rsquo;s single most lucrative , export</p>\r\n<div>\r\n	(S) American soyabeans are a major source of high protein sustenance.</div>',1,30,4,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (121,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a kilometer race, &ldquo; A &rdquo; beats &ldquo; B &rdquo; by 50 meters or 10 seconds. What time does &ldquo; A &rdquo; take to complete the race_______?</div>\n',1,1,5,'1','2024-07-14 18:31:35',0,NULL,NULL,'','',NULL,NULL),
 (122,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Rashid can run 880 metres race in 2 minutes 24 seconds and Hamid in 2 minutes 40 seconds. How many metres start can Rashid give Hamid in a 880 metres race to make a dead heat ______?</div>\n',1,2,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (123,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a 300 metres race &ldquo;A&rdquo; beats &ldquo; B &rdquo; by 15 metres or 5 seconds. As time over the course is _______?</div>\n',1,3,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (124,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In 100 m race, &ldquo;A&rdquo; covers the distance in 36 seconds and &ldquo; B &rdquo; in 45 seconds. In this race &ldquo; A &rdquo; beats &ldquo; B &rdquo; by______?</div>\n',1,4,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (125,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&ldquo; A &rdquo; and &ldquo; B &rdquo; start running along a circular track from the same point at the same time in the same direction. To cover the whole track &ldquo;A&rdquo; needs 5 seconds less than &ldquo; B &rdquo;. They meet for the first time after 30 seconds. How many times will they meet in a minute if they run in opposite directions _______?</div>\n',1,5,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (126,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a game of 100 points, &ldquo; A &ldquo; can give &ldquo; B &ldquo; 20 points and &ldquo; C &ldquo; 28 points. Then, &ldquo; B &ldquo; can give &ldquo; C &ldquo;  is _____?</div>\n',1,6,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (127,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Raghu and Rajan runs at 4 kms on a course of 250 mts round. If their constant speeds be 5:4, how often does the winner passes the other?</div>\n',1,7,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (128,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Priyanka running at 10 km/hr in a 200 mts race giving Ritu a start of 32 metres, beats her by 12 seconds. At what speed Ritu is running?</div>\n',1,8,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (129,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A swimming pool is of 100 mts. &ldquo; P &ldquo; and &ldquo; Q &rdquo; enter a 400 m race starting simultaneously at one end of the poll at speeds of 4 m/s and 5 m/s. How many times will they meet while travelling in opposite directions before &ldquo; Q &rdquo; completes the race_______ ?</div>\n',1,9,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (130,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">At a game of billiards, &ldquo; A &ldquo; can give &ldquo; B &ldquo; 15 points in 60 and &ldquo; A &ldquo; can give &ldquo; C &ldquo; to 20 points in 60. How many points can &ldquo; B &ldquo; give &ldquo; C &ldquo; in a game of 90 ________?</div>\n',1,10,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (131,'<p>Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p><p><img alt=\"\" src=\"../static/img/questions/520-01.png\" /></p>',1,11,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (132,'<p>Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p><p><img alt=\"\" src=\"../static/img/questions/520-02.png\" /></p>',1,12,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (133,'<p>Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p><p><img alt=\"\" src=\"../static/img/questions/520-03.png\" /></p>',1,13,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (134,'<p>Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p><p><img alt=\"\" src=\"../static/img/questions/520-04.png\" /></p>',1,14,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (135,'<p>Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p><p><img alt=\"\" src=\"../static/img/questions/520-05.png\" /></p>',1,15,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (136,'<p>\r\n	Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p>\r\n<p>\r\n	<img alt=\"\" src=\"../static/img/questions/4012-15.png\" /></p>',1,16,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (137,'<p>\r\n	Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p>\r\n<p>\r\n	<img alt=\"\" src=\"../static/img/questions/4012-16.png\" /></p>',1,17,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (138,'<p>\r\n	Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p>\r\n<p>\r\n	<img alt=\"\" src=\"../static/img/questions/4012-17.png\" /></p>',1,18,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (139,'<p>\r\n	Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p>\r\n<p>\r\n	<img alt=\"\" src=\"../static/img/questions/4012-18.png\" /></p>',1,19,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (140,'<p>\r\n	Find the figure from the answer figure, that will replace the question mark (?) from the problem figure for questions below:</p>\r\n<p>\r\n	<img alt=\"\" src=\"../static/img/questions/4012-19.png\" /></p>',1,20,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (141,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<p>\r\n	Little</p>\r\n<p>\r\n	(P) that he had been let down</p>\r\n<p>\r\n	(Q) stood by all these years</p>\r\n<p>\r\n	(R) did he realise</p>\r\n<div>\r\n	(S) by a colleague whom he had.</div>',1,21,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (142,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<div>\r\n	<p>\r\n		Women</p>\r\n	<p>\r\n		(P) till the other day</p>\r\n	<p>\r\n		(Q) who were content being housewives</p>\r\n	<p>\r\n		(R) about spending their time cooking</p>\r\n	(S) now sound apologetic.</div>',1,22,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (143,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<p>\r\n	It has been established that</p>\r\n<p>\r\n	(P) Einstein was</p>\r\n<p>\r\n	(Q) although a great scientist</p>\r\n<p>\r\n	(R) weak in arithmetic</p>\r\n<div>\r\n	(S) right from his school days.</div>',1,23,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (144,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<div>\r\n	<p>\r\n		Without books</p>\r\n	<p>\r\n		(P) no cultured society is possible</p>\r\n	<p>\r\n		(Q) no fresh ideas are possible</p>\r\n	<p>\r\n		(R) and</p>\r\n	(S) without fresh ideas</div>\r\n<p>\r\n	&nbsp;</p>',1,24,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (145,'<div>\r\n	ORDERING OF SENTENCES:</div>\r\n<div>\r\n	<p>\r\n		(S1) Guru Nanak evolved</p>\r\n	<p>\r\n		(P) on omnipresence of god</p>\r\n	<p>\r\n		(Q) with his simple teachings</p>\r\n	<p>\r\n		(R) a new religious outlook</p>\r\n	<p>\r\n		(S) and removal of</p>\r\n	(S6) the evil religious practices</div>',1,25,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (146,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom: 7px; text-indent: 0.5in;\">\r\n	Our ancestors had great difficulty in getting books. Now, our difficulty is what to read. There are books and books but our hours of reading are very few. Therefore, choice becomes essential. We should be very careful about what we read. There are books which poison our lives by suggesting evils. We should keep them at arm&rsquo;s length.We should read only those books which have stood the test of time. Such books are our great classics like the Ramayana and the Gita. They contain the wisdom of our sages and saints. They have appealed mankind from generation to generation. Reading of such books has ennobling influence on our mind and character. It gives us spiritual enjoyment. These books give us instruction with entertainment. They represent our ancient culture. They set before us high ideals to follow. They are our best friends, best guides and the best treasure.</div>\r\n<p>\r\n	We should be selective because</p>',1,26,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (147,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Our ancestors had great difficulty in getting books. Now, our difficulty is what to read. There are books and books but our hours of reading are very few. Therefore, choice becomes essential. We should be very careful about what we read. There are books which poison our lives by suggesting evils. We should keep them at arm&rsquo;s length.We should read only those books which have stood the test of time. Such books are our great classics like the Ramayana and the Gita. They contain the wisdom of our sages and saints. They have appealed mankind from generation to generation. Reading of such books has ennobling influence on our mind and character. It gives us spiritual enjoyment. These books give us instruction with entertainment. They represent our ancient culture. They&nbsp;<span style=\"text-indent: 0.5in;\">set before us high ideals to follow. They are our best friends, best guides and the best treasure.</span></div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	We should avoid those books which</div>',1,27,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (148,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Our ancestors had great difficulty in getting books. Now, our difficulty is what to read. There are books and books but our hours of reading are very few. Therefore, choice becomes essential. We should be very careful about what we read. There are books which poison our lives by suggesting evils. We should keep them at arm&rsquo;s length.We should read only those books which have stood the test of time. Such books are our great classics like the Ramayana and the Gita. They contain the wisdom of our sages and saints. They have appealed mankind from generation to generation. Reading of such books has ennobling influence on our mind and character. It gives us spiritual enjoyment. These books give us instruction with entertainment. They represent our ancient culture. They set before us high ideals to follow. They are our best friends, best guides and the best treasure.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	The books which have stood the test of time are called.....</div>',1,28,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (149,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Our ancestors had great difficulty in getting books. Now, our difficulty is what to read. There are books and books but our hours of reading are very few. Therefore, choice becomes essential. We should be very careful about what we read. There are books which poison our lives by suggesting evils. We should keep them at arm&rsquo;s length.We should read only those books which have stood the test of time. Such books are our great classics like the Ramayana and the Gita. They contain the wisdom of our sages and saints. They have appealed mankind from generation to generation. Reading of such books has ennobling influence on our mind and character. It gives us spiritual enjoyment. These books give us instruction with entertainment. They represent our ancient culture. They set before us high ideals to follow. They are our best friends, best guides and the best treasure.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	What is special qualityof a classic?</div>',1,29,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (150,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	<p>\r\n		Our ancestors had great difficulty in getting books. Now, our difficulty is what to read. There are books and books but our hours of reading are very few. Therefore, choice becomes essential. We should be very careful about what we read. There are books which poison our lives by suggesting evils. We should keep them at arm&rsquo;s length.We should read only those books which have stood the test of time. Such books are our great classics like the Ramayana and the Gita. They contain the wisdom of our sages and saints. They have appealed mankind from generation to generation. Reading of such books has ennobling influence on our mind and character. It gives us spiritual enjoyment. These books give us instruction with entertainment. They represent our ancient culture. They set before us high ideals to follow. They are our best friends, best guides and the best treasure.</p>\r\n</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	An expression in the passage which means a good effect is</div>',1,30,5,'1','2024-07-14 18:31:36',0,NULL,NULL,'','',NULL,NULL),
 (151,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A man borrowed Rs7,000/- at the rate of 15% SIand lent the whole sum to another person at the rate of 20%, what will be the gain after 8 years?</div>\n',1,1,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (152,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Mr. Vikas got a loan at 12% p.a. SI after 7 years he returned the principal along with interest. If he returns in all Rs16, 560, what is the principal amount?</div>\n',1,2,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (153,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Rs4,500 amount to Rs5,850 in 3 years SI. If the rate of interest is increased by 7%, it would amount to how much?</div>\n',1,3,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (154,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A certain sum of money lent out of SI amount to Rs8,000/-in 6 years, Rs9,000/- in 8 yeaRs Find the sum and the rate of interest?</div>\n',1,4,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (155,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A certain sum give Rs8,000/- as SI for 8 years at the rate of 18%. What will be the SI on the same sum for 18 years at the rate of 8%?</div>\n',1,5,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (156,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Mr. Rajan gives Rs1,500/- to Mr. X for 4 years and Rs2,500/- to Mr. Y for 8 years. If the rate of interest is the same and Mr. Rajan received Rs2,080/- from both Mr. X and the Mr. Y. What is the rate of S.I.?</div>\n',1,6,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (157,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A sum of money becomes 8/5 of itself in 5 years at a certain rate of interest. What is the rate of interest?</div>\n',1,7,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (158,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the rate of interest reduced from 4% to 2%, a money lender loses Rs200. what is his capital?</div>\n',1,8,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (159,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The simple interest on a sum of money is 4/9 of the principal. Find the rate percent and time, if both are numerically equal. </div>\n',1,9,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (160,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What will be the ratio of simple interest earned by certain amount at the same rate of interest for 4 years and that for 12 years?</div>\n',1,10,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (161,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If KANSAS + OHIO = OREGON ? Then find the value of G + R + O + S + S? (Given Value of O = 5)</div>\n',1,11,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (162,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If TEE + LET = ALL, where E = 5. Find A + L + L?</div>\n',1,12,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (163,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If USA + USSR = PEACE, find P + E + A + C + E ?</div>\n',1,13,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (164,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">EAT +  EAT + EAT =  BEET, if T = 0, then what will the value of TEE + TEE ?</div>\n',1,14,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (165,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If CROSS + ROADS = DANGER, then D + A + N + G + E + R = ?</div>\n',1,15,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (166,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If FINE + NINE =  WIVES, then W+I+V+E+S=?</div>\n',1,16,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (167,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If POINT + ZERO = ENERGY, then E + N + E + R + G + Y = ?</div>\n',1,17,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (168,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If YOUR + YOU = HEART (Given O = 4). The value of Y + U + R + E is _____?</div>\n',1,18,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (169,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If MAC + MAAR = JOCKO, find value of 3A + 2M + 2C?</div>\n',1,19,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (170,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If NO + NO + GUN = HUNT, what is the value of HUNT?</div>\n',1,20,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (171,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	<p>\r\n		Some of the best known brands in the world belong to multinational companies. Generally speaking, a multinational company is one that operates in more than one country. Some economists, however, believe that a company has to operate in at least six countries to be called a multinational company. Whether these companies have helped or harmed the countries where they operate is debatable. Particularly in the third world, they are supposed to create jobs, bring in investments and facilitate technology transfer. But more often than not, their net effect is the exploitation of human and natural resources. They pay minimum wages to their employees and earn huge profits.</p>\r\n</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	The term &lsquo;natural resources&rsquo; used in the passage refers to</div>',1,21,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (172,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	<p>\r\n		Some of the best known brands in the world belong to multinational companies. Generally speaking, a multinational company is one that operates in more than one country. Some economists, however, believe that a company has to operate in at least six countries to be called a multinational company. Whether these companies have helped or harmed the countries where they operate is debatable. Particularly in the third world, they are supposed to create jobs, bring in investments and facilitate technology transfer. But more often than not, their net effect is the exploitation of human and natural resources. They pay minimum wages to their employees and earn huge profits.</p>\r\n</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	The poor countries do not gain from the presence of multinational companies because multinationals</div>',1,22,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (173,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	<p>\r\n		Some of the best known brands in the world belong to multinational companies. Generally speaking, a multinational company is one that operates in more than one country. Some economists, however, believe that a company has to operate in at least six countries to be called a multinational company. Whether these companies have helped or harmed the countries where they operate is debatable. Particularly in the third world, they are supposed to create jobs, bring in investments and facilitate technology transfer. But more often than not, their net effect is the exploitation of human and natural resources. They pay minimum wages to their employees and earn huge profits.</p>\r\n</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	According to the author, multinational companies</div>',1,23,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (174,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	<p>\r\n		Some of the best known brands in the world belong to multinational companies. Generally speaking, a multinational company is one that operates in more than one country. Some economists, however, believe that a company has to operate in at least six countries to be called a multinational company. Whether these companies have helped or harmed the countries where they operate is debatable. Particularly in the third world, they are supposed to create jobs, bring in investments and facilitate technology transfer. But more often than not, their net effect is the exploitation of human and natural resources. They pay minimum wages to their employees and earn huge profits.</p>\r\n</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	The author suggests that multinational companies</div>',1,24,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (175,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	<div>\r\n		Some of the best known brands in the world belong to multinational companies. Generally speaking, a multinational company is one that operates in more than one country. Some economists, however, believe that a company has to operate in at least six countries to be called a multinational company. Whether these companies have helped or harmed the countries where they operate is debatable. Particularly in the third world, they are supposed to create jobs, bring in investments and facilitate technology transfer. But more often than not, their net effect is the exploitation of human and natural resources. They pay minimum wages to their employees and earn huge profits.</div>\r\n	<div>\r\n		&nbsp;</div>\r\n</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	What does the term &lsquo;technology transfer&rsquo; mean?</div>',1,25,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (176,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	<div>\r\n		There are wild dogs and pet dogs. Pet dogs are helpers and friends to people. There were no pet dogs 15,000 years ago. Men and women learned how to work with dogs. Dogs helped humans travel from Asia to North America 10,000 years ago by pulling sledges in the snow. People say dogs are &ldquo;man&rsquo;s best friend.&rdquo; They help with farming. They help with hunting.They can pull things for people. They can help in many things. There are many colours of dogs. There are white dogs, grey dogs, black dogs, and brown dogs. A dog&rsquo;s fur can be short or long. Dogs have curly hair or straight fur. There are very small dogs. They are only 6-8 inches tall. There are very big dogs. They are about 3 feet tall. Some dogs can see well. Some dogs do not see very well. All dogs can hear well. They can hear sounds that people cannot hear. They can hear high sounds and low sounds. They can hear the sound very far away. All dogs can smell very well. They can smell 40 times better than humans! Dogs live 5 to 13 years, but some dogs live much longer. One dog lived to be 24 years old!</div>\r\n</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	Dogs helped people go to America by.....</div>',1,26,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (177,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	There are wild dogs and pet dogs. Pet dogs are helpers and friends to people. There were no pet dogs 15,000 years ago. Men and women learned how to work with dogs. Dogs helped humans travel from Asia to North America 10,000 years ago by pulling sledges in the snow. People say dogs are &ldquo;man&rsquo;s best friend.&rdquo; They help with farming. They help with hunting.They can pull things for people. They can help in many things. There are many colours of dogs. There are white dogs, grey dogs, black dogs, and brown dogs. A dog&rsquo;s fur can be short or long. Dogs have curly hair or straight fur. There are very small dogs. They are only 6-8 inches tall. There are very big dogs. They are about 3 feet tall. Some dogs can see well. Some dogs do not see very well. All dogs can hear well. They can hear sounds that people cannot hear. They can hear high sounds and low sounds. They can hear the sound very far away. All dogs can smell very well. They can smell 40 times better than humans! Dogs live 5 to 13 years, but some dogs live much longer. One dog lived to be 24 years old!</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	How tall are the smallest dogs?</div>',1,27,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (178,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	There are wild dogs and pet dogs. Pet dogs are helpers and friends to people. There were no pet dogs 15,000 years ago. Men and women learned how to work with dogs. Dogs helped humans travel from Asia to North America 10,000 years ago by pulling sledges in the snow. People say dogs are &ldquo;man&rsquo;s best friend.&rdquo; They help with farming. They help with hunting.They can pull things for people. They can help in many things. There are many colours of dogs. There are white dogs, grey dogs, black dogs, and brown dogs. A dog&rsquo;s fur can be short or long. Dogs have curly hair or straight fur. There are very small dogs. They are only 6-8 inches tall. There are very big dogs. They are about 3 feet tall. Some dogs can see well. Some dogs do not see very well. All dogs can hear well. They can hear sounds that people cannot hear. They can hear high sounds and low sounds. They can hear the sound very far away. All dogs can smell very well. They can smell 40 times better than humans! Dogs live 5 to 13 years, but some dogs live much longer. One dog lived to be 24 years old!</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	How tall are the biggest dogs?</div>',1,28,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (179,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	There are wild dogs and pet dogs. Pet dogs are helpers and friends to people. There were no pet dogs 15,000 years ago. Men and women learned how to work with dogs. Dogs helped humans travel from Asia to North America 10,000 years ago by pulling sledges in the snow. People say dogs are &ldquo;man&rsquo;s best friend.&rdquo; They help with farming. They help with hunting.They can pull things for people. They can help in many things. There are many colours of dogs. There are white dogs, grey dogs, black dogs, and brown dogs. A dog&rsquo;s fur can be short or long. Dogs have curly hair or straight fur. There are very small dogs. They are only 6-8 inches tall. There are very big dogs. They are about 3 feet tall. Some dogs can see well. Some dogs do not see very well. All dogs can hear well. They can hear sounds that people cannot hear. They can hear high sounds and low sounds. They can hear the sound very far away. All dogs can smell very well. They can smell 40 times better than humans! Dogs live 5 to 13 years, but some dogs live much longer. One dog lived to be 24 years old!</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	What can all dogs do well?</div>',1,29,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (180,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	READING COMPREHENSION:</div>\r\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Passage:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	There are wild dogs and pet dogs. Pet dogs are helpers and friends to people. There were no pet dogs 15,000 years ago. Men and women learned how to work with dogs. Dogs helped humans travel from Asia to North America 10,000 years ago by pulling sledges in the snow. People say dogs are &ldquo;man&rsquo;s best friend.&rdquo; They help with farming. They help with hunting.They can pull things for people. They can help in many things. There are many colours of dogs. There are white dogs, grey dogs, black dogs, and brown dogs. A dog&rsquo;s fur can be short or long. Dogs have curly hair or straight fur. There are very small dogs. They are only 6-8 inches tall. There are very big dogs. They are about 3 feet tall. Some dogs can see well. Some dogs do not see very well. All dogs can hear well. They can hear sounds that people cannot hear. They can hear high sounds and low sounds. They can hear the sound very far away. All dogs can smell very well. They can smell 40 times better than humans! Dogs live 5 to 13 years, but some dogs live much longer. One dog lived to be 24 years old!</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	How old was the oldest dog?</div>',1,30,6,'1','2024-07-14 18:31:37',0,NULL,NULL,'','',NULL,NULL),
 (181,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the sum of all 3 digit numbers that leave a remainder of 2, when divided by 3?</div>\n',1,1,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (182,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If Arithmetic Mean is 30 and Geometric Mean is 26 of two values, then find out the harmonic mean?</div>\n',1,2,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (183,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Geometric Mean of A is 20, Geometric Mean of B is 25. Find out the Geometric Mean of ab?</div>\n',1,3,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (184,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	For the elements 4 and 6, verify that A &ge; G &ge; H?</div>',1,4,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (185,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Find the sum of the series 32, 16, 8, 4 ... up to infinity?</div>',1,5,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (186,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The sum of three numbers in a GP is 26 and their product is 216. Find the numbers?</div>\n',1,6,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (187,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Find the 1st term of the AP, whose 7th and 11th terms are respectively 37 and 57?</div>\n',1,7,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (188,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A number 21 is divided into three parts which are in AP and sum of their squares is 155. Find the largest number?</div>\n',1,8,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (189,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">How many natural numbers between 200 to 500 which are multiples of 3?</div>\n',1,9,7,'1','2024-07-14 18:31:38',0,NULL,NULL,'','',NULL,NULL),
 (190,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The 8th term of a GP is 16 times the 4th term. What will be the first term, when its sixth term is 64?</div>\n',1,10,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (191,'<p>\r\n	If A + B means A is the brother of B; A / B means A is the father of B; A * B means A is the sister of B. Which of the following means that R is the uncle of S?</p>',1,11,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (192,'<p>\r\n	If P * Q means P is the sister of Q; P + Q means P is the father of Q; P - Q means P is the mother of Q. Which of the following means K is the aunt of A?</p>',1,12,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (193,'<p>\r\n	If P + Q means P is the brother of Q; P * Q means P is the father of Q; P - Q means P is the sister of Q. Which of the following means S is the niece of T?</p>',1,13,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (194,'<p>\r\n	If P + Q means P is the husband of Q; P / Q means P is the sister of Q; P * Q means P is the son of Q. Then, how will you represent A is the daughter of B?</p>',1,14,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (195,'<p>\r\n	If X - Z means X is the mother of Z; X * Z means X is the father of Z; X + Z means X is the daughter of Z. Now if M - N * T + Q, then which of the following is not true?</p>',1,15,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (196,'<div><div>Letters like A, B, C, D, E and F are to be arranged in sequence from left to right under the following conditions: </div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">Letters &ldquo;E&rdquo; and &ldquo;D&rdquo;  have to be placed adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the left of &ldquo;E&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;B&rdquo; and &ldquo;F&rdquo; shouldn\'t be adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the right of &ldquo;B&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;C&rdquo;  has to be placed to the immediate right of &ldquo;A&rdquo;</li></div>\n</div>Which of the following is a valid sequence? ',1,16,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (197,'<div><div>Letters like A, B, C, D, E and F are to be arranged in sequence from left to right under the following conditions: </div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">Letters &ldquo;E&rdquo; and &ldquo;D&rdquo;  have to be placed adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the left of &ldquo;E&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;B&rdquo; and &ldquo;F&rdquo; shouldn\'t be adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the right of &ldquo;B&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;C&rdquo;  has to be placed to the immediate right of &ldquo;A&rdquo;</li></div>\n</div>With the given statements, how many valid sequences are possible?',1,17,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (198,'<div><div>Letters like A, B, C, D, E and F are to be arranged in sequence from left to right under the following conditions: </div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">Letters &ldquo;E&rdquo; and &ldquo;D&rdquo;  have to be placed adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the left of &ldquo;E&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;B&rdquo; and &ldquo;F&rdquo; shouldn\'t be adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the right of &ldquo;B&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;C&rdquo;  has to be placed to the immediate right of &ldquo;A&rdquo;</li></div>\n</div>If letter A is placed to the third position from left, how many valid combinations are possible?  ',1,18,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (199,'<div><div>Letters like A, B, C, D, E and F are to be arranged in sequence from left to right under the following conditions: </div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">Letters &ldquo;E&rdquo; and &ldquo;D&rdquo;  have to be placed adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the left of &ldquo;E&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;B&rdquo; and &ldquo;F&rdquo; shouldn\'t be adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the right of &ldquo;B&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;C&rdquo;  has to be placed to the immediate right of &ldquo;A&rdquo;</li></div>\n</div>If letter C & D are placed adjacent to each other, how many valid sequences are possible?',1,19,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (200,'<div><div>Letters like A, B, C, D, E and F are to be arranged in sequence from left to right under the following conditions: </div>\n</div><div style=\"font-weight:normal;\"><div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">Letters &ldquo;E&rdquo; and &ldquo;D&rdquo;  have to be placed adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the left of &ldquo;E&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;B&rdquo; and &ldquo;F&rdquo; shouldn\'t be adjacent to each other</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;A&rdquo; has to be placed to the right of &ldquo;B&rdquo;</li></div>\n<div style=\"font-weight:normal;\"><li style=\"list-style-type:disc;\">&ldquo;C&rdquo;  has to be placed to the immediate right of &ldquo;A&rdquo;</li></div>\n</div>Which of the following is true?',1,20,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (201,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<p>\r\n		My manager is ____________ multifaceted personality. He was elected _____________ chairman of</p>\r\n	<p>\r\n		our board. I am sure he will be ________________ best chairman, for he is ______________ honest</p>\r\n	worker.</div>\r\n<p>\r\n	&nbsp;</p>',1,21,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (202,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	Give me _____________ one rupee note.</div>',1,22,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (203,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	______________ old man said to his daughter, &quot;If ____________ servant ends any money on____________&nbsp; floor when she cleans _____________ room, it is mine.&quot;</div>',1,23,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (204,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	_____________ poor always work hard.</div>',1,24,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (205,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	Man, thou art _____________ wonderful animal.</div>',1,25,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (206,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	Raju has not slept ______________ yesterday.</div>',1,26,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (207,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	His father shouted ___________ him when he came home late.</div>',1,27,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (208,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	There is a car park ___________.</div>',1,28,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (209,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	Priya worked ____________ midnight.</div>',1,29,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (210,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	FILL IN THE BLANKS:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	I will call ____________ your once some time ________ the evening.</div>',1,30,7,'1','2024-07-14 18:31:39',0,NULL,NULL,'','',NULL,NULL),
 (211,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Three partners A, B & C invests Rs 36000, Rs 45000 &Rs 54000 resp. in a business. Out of a total profit of Rs 37500, C&rsquo;s share is _______?</div>\n',1,1,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (212,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Nirmal&Kapil started a business by investing Rs 9000 &Rs 12000 resp. After 6 months, Kapil withdrew half of his investment. If after a year, the total profit was Rs 4600. What was Kapil&rsquo;s share in it?</div>\n',1,2,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (213,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&ldquo;A&rdquo;, &ldquo;B&rdquo; & &ldquo;C&rdquo; enter into a partnership. &ldquo;A&rdquo; initially invests Rs 25 Lakhs and adds another 10 Lakhs after 1 year. &ldquo;B&rdquo; initially invests Rs 35 Lakhs and withdraws Rs 10 Lakhs after 2 yrs, &&ldquo;C&rdquo; invests Rs 30 Lakhs. In what ratio should the profit be divided at the end of 3 yrs?</div>\n',1,3,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (214,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&ldquo;A&rdquo; & &ldquo;B&rdquo; entered into partnership investing Rs 16000 &Rs 12000 resp. After 3 months, &ldquo;A&rdquo; withdrew Rs 5000 while &ldquo;B&rdquo; invests Rs 5000 more. After 3 more months, &ldquo;C&rdquo; joins the business with a capital of Rs 21000. The share of &ldquo;B&rdquo; exceeds that of &ldquo;C&rdquo;, out of a total profit of Rs 26400 after one year by _____? </div>\n',1,4,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (215,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Manoj received Rs 6000 as his share out of the total profit of Rs 9000 which he and Ramesh earned at the end of 1 yr. If Manoj invested Rs 20000 for 6 months, whereas Ramesh invested his amount for the whole year, what was the amount invested by Ramesh?</div>\n',1,5,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (216,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 4 (A&rsquo;s  Capital) =  6 (B&rsquo;s  Capital) = 10 (C&rsquo;s  Capital).Then out of a profit of Rs 4650, &ldquo;C&rdquo; will receive?</div>\n',1,6,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (217,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A, B & C start a business jointly. &ldquo;A&rdquo; invests 3 times as much as B invests and &ldquo;B&rdquo; invests two-third of what &ldquo;C&rdquo; invests. At the end of the year, the profit earned is Rs 660. Out of this, B&rsquo;s share is _______?</div>\n',1,7,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (218,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&ldquo;A&rdquo;, &ldquo;B&rdquo; & &ldquo;C&rdquo; enter into a partnership. &ldquo;A&rdquo; invests some money at the beginning, &ldquo;B&rdquo; invests double the amt after 6 months & &ldquo;C&rdquo; invests thrice the amt after 8 months. If the annual profit is Rs 27000, then C&rsquo;s share is ______?</div>\n',1,8,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (219,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&ldquo;A&rdquo; and &ldquo;B&rdquo; start a business jointly. &ldquo;A&rdquo; invests Rs 16000 for 8 months & &ldquo;B&rdquo; remains in the business for 4 months. Out of the total profit &ldquo;B&rdquo; claims 2/7th of the profit. How much money was contributed by &ldquo;B&rdquo;? </div>\n',1,9,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (220,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&ldquo;A&rdquo; is a working partner & &ldquo;B&rdquo; is a sleeping partner in a business. &ldquo;A&rdquo; puts in Rs 12000 & &ldquo;B&rdquo; Rs 20000. A receives 10% of the profits for managing, the rest being divided in proportion to their capitals. Out of a total profit of Rs 9600, the money received by &ldquo;A&rdquo; is_______?</div>\n',1,10,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (221,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What decimal of an hour is a second?</div>\n',1,11,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (222,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Evaluate: (2.39)<sup>2</sup> - (1.61)<sup>2</sup> / (2.39 - 1.61)?</div>\n',1,12,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (223,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">2.205 divided by 0.3 gives ______?</div>\n',1,13,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (224,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If (204/12.75) = 16, then (2.04/1.275) = ?</div>\n',1,14,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (225,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">3889 + 12.952 - ? = 3854.002</div>\n',1,15,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (226,'<div style=\"font-weight:bold;\">(0.04 x 0.0162) is equal to ______?</div>\n<div style=\"font-weight:bold;\">a) 6.48 x 10-<sup>3</sup></div>\n<div style=\"font-weight:bold;\">b) 6.48 x 10-<sup>4</sup></div>\n<div style=\"font-weight:bold;\">c) 6.48 x 10-<sup>5</sup></div>\n<div style=\"font-weight:bold;\">d) 6.48 x 10-<sup>6</sup></div>\n<div style=\"font-weight:bold;\">e) 6.48 x 10-<sup>7</sup></div>\n',1,16,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (227,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Given that 268 * 74 = 19832, find the values of 2.68 * 0.74?</div>\n',1,17,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (228,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 2330.233 = 23.3x, what is the value of x?</div>\n',1,18,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (229,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">76.36 + 2984.317 + 39465.11 = ________?</div>\n',1,19,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (230,'<div style=\"font-weight:bold;\">Convert the following into proper fraction:</div>\n<div style=\"font-weight:bold;\">(i) 0.75                                       (ii) 3.004                         (iii) 0.0056</div>\n',1,20,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (231,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	CELEBRATE: MARIAGE</div>',1,21,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (232,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	GLAND :&nbsp; ENZYME</div>',1,22,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (233,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	STUTTER : SPEECH</div>',1,23,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (234,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	ASCETIC : LUXURY</div>',1,24,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (235,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	ASYLUM : REFUGEE</div>',1,25,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (236,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	CLAMOUR : NOISE</div>',1,26,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (237,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	ERRATIC : INCONSISTEMENT</div>',1,27,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (238,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	TETRAHEDRON : FOUR</div>',1,28,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (239,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	CIRCUMCIRCLE : CIRCUMSCRIBED</div>',1,29,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (240,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	ANALOGIES:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	DISPATCH : TARDINESS</div>',1,30,8,'1','2024-07-14 18:31:40',0,NULL,NULL,'','',NULL,NULL),
 (241,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	The value of<span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 107%; font-family: &quot;Arial Narrow&quot;, sans-serif; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">&nbsp;(&radic;8<b>)<sup>1/3</sup></b>&nbsp;</span>is _____?</div>',1,1,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (242,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	The value of (5)<sup>1/4</sup> * (125)<sup>0.25</sup> is _____?</div>',1,2,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (243,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	The value of (32/243)<sup>-4/5</sup> is _____?</div>',1,3,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (244,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	If a and b are whole numbers such that, a<sup>b</sup> = 121, then find the value of (a - 1)<sup>b + 1</sup>?</div>',1,4,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (245,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	(0.04)<sup>-2.5</sup> = ?</div>',1,5,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (246,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	If (6)<sup>6.5 </sup>x (36)<sup>4.5 </sup>&divide; (216)<sup>4.5 &nbsp;=</sup> (6<sup>x</sup>). Find &lsquo;x&rsquo;?</div>',1,6,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (247,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	(1/216)<sup>-2/3</sup> &divide; (1/27)<sup>-4/3&nbsp;</sup>&nbsp;is _______?</div>',1,7,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (248,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	If &radic;(3 + &sup3;&radic;x) = 2, then &lsquo;x&rsquo; is equal to_____?</div>',1,8,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (249,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	The unit digit in the product of (8267)<sup>153</sup> &times; (341)<sup>72</sup>&nbsp;is________?</div>',1,9,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (250,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	(132)<sup>7</sup> &times; (132)<sup>?</sup> = (132)<sup>11.5</sup></div>',1,10,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (251,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">AZ, GT, MN, SH, ____?</div>\n',1,11,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (252,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In the following number series, how many 8&rsquo;s are there which are immediately preceded by a number which does not divide it but followed by a number which divides it?</div>\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">2 8 2 8 3 8 5 8 8 5 3 2 8 2 3 8 4 7 1 5 8 3 8 2 8 6</div>\n',1,12,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (253,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">1, 2, 3, 5, 8, ____?</div>\n',1,13,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (254,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">1, 9, 17, 33, 49, 73, ____?</div>\n',1,14,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (255,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">3, 12, 27, 48, 75, 108, ____?</div>\n',1,15,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (256,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A, B, D, G, ____?</div>\n',1,16,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (257,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A, C, F, H, ____?, M</div>\n',1,17,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (258,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Z, L, X, J, V, H, T, F, ____?, ____?</div>\n',1,18,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (259,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Z, S, W, O, T, K, Q, G, ____?, ____?</div>\n',1,19,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (260,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Z, Y, X, U, T, S, P, O, N, K, ____?, ____?</div>\n',1,20,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (261,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	He says that (A) / he has a car (B) / besides a scooter (C) / no error (D).</div>',1,21,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (262,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	Mahatma Gandhi laboured (A) / to the good (B) / of humanity (C) / no error (D)</div>',1,22,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (263,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	The blind old man was (A) / knocked down by a car (B) / upon crossing the road (C) / no error (D)</div>',1,23,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (264,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	My answer (A) / is different (B) / from yours (C) /no error (D).</div>',1,24,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (265,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	All the players (A) / except Sam (B) / were presentin the playground (C) / no error (D).</div>',1,25,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (266,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	He is in the habit (A) / to going out (B) / for a morning walk regularly (C) / no error (D).</div>',1,26,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (267,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	The management did not (A) / select him as he was (B) / not eligible on the post (C) /no error (D).</div>',1,27,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (268,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	I am vexed (A) / at him about what (B) / he has done (C) / no error (D).</div>',1,28,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (269,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	Beside Chocolates, (A) / they also bought (B) / many, toys for the child. (C) / no error (D).</div>',1,29,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL);
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (270,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	The child freed himself (A) / from his father&rsquo;s hold (B) / and ran out on the road (C) / no error (D).</div>',1,30,9,'1','2024-07-14 18:31:41',0,NULL,NULL,'','',NULL,NULL),
 (271,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The Perimeter of a rectangular field is 480 mts & the ratio between the length & breadth is 5:3, the area of the field is ________ mts?</div>\n',1,1,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (272,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the length & breadth of a rectangle plot are increased by 50% and 20% resp, then the new area is how many times the original area?</div>\n',1,2,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (273,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The length of a rectangle is increased by 60%. By what percent would the width have to be decreased to maintain the same area?                           </div>\n',1,3,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (274,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A hall 20 mts long & 15 mts broad is surrounded by a verandah of uniform width of 2.5 mts. The cost of flooring the verandah at Rs 3.50 per sq.mts is ________?</div>\n',1,4,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (275,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The ratio of the area of a square to that of the square drawn on its diagonal is _______?</div>\n',1,5,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (276,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the ratio of the areas of two squares is 9: 1, the ratio of their perimeters is _____?</div>\n',1,6,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (277,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the diagonal of a rectangle is 17 cms long & the perimeter of the rectangle is 46 cms, then the area of the rectangle is _____ cm&sup2;?</div>\n',1,7,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (278,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the perimeter of a rectangle and a square, each is equal to 80 cms & the diff. of their areas is 100 sq.cm, the sides of the rectangle are: ______ & _______ cms? </div>\n',1,8,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (279,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A rectangular field has dimensions 25 mts by 15 mts. Two mutually perpendicular passage 2 m wide have been left in the central part. In the rest of the field, grass has been grown. The area under the grass is ________?</div>\n',1,9,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (280,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The length of a rectangle is doubled, while its breadth is halved. What is the change in area? </div>\n',1,10,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (281,'<div style=\"font-weight:bold;\">Find the missing number / odd man out in the series:</div>\n<div style=\"font-weight:bold;\">Chennai, Mumbai, Kochi  </div>\n',1,11,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (282,'<div style=\"font-weight:bold;\">Find the missing number / odd man out in the series:</div>\n<div style=\"font-weight:bold;\">Cheese, Curd, Butter</div>\n',1,12,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (283,'<div><div style=\"font-weight:bold;\">Find the missing number / odd man out in the series:</div>\n</div><div style=\"font-weight:normal;\"><div> </div>\n</div><img src=\"../static/img/questions/511-11.png\">\n',1,13,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (284,'<div><div style=\"font-weight:bold;\">Find the missing number / odd man out in the series:</div>\n</div><div style=\"font-weight:normal;\"><div> </div>\n</div>b  c  d  b  c  e  b  c  f  b  c  g  b  c  _____ ?',1,14,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (285,'<div><div style=\"font-weight:bold;\">Find the missing number / odd man out in the series:</div>\n</div><div style=\"font-weight:normal;\"><div> </div>\n</div><img src=\"../static/img/questions/511-13.png\">\n',1,15,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (286,'<div><div style=\"font-weight:bold;\">Find the missing number / odd man out in the series:</div>\n</div><div style=\"font-weight:normal;\"><div> </div>\n</div><img src=\"../static/img/questions/511-14.png\">\n',1,16,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (287,'<div style=\"font-weight:bold;\"></div>\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Find the odd one out the series:</div>\n<div style=\"margin-bottom:7px;font-weight:normal;\">2, 5, 10, 50, 500, 5000</div>\n',1,17,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (288,'<div style=\"font-weight:bold;\"></div>\n<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Find the odd one out the series:</div>\n<div style=\"margin-bottom:7px;font-weight:normal;\">19, 26, 33, 46, 59, 74, 91</div>\n',1,18,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (289,'<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">Pick the odd one out: </div>\n',1,19,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (290,'<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">Pick the odd one out: </div>\n',1,20,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (291,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	A <strong><u>(1) </u></strong>factor affecting the quality of primary education appears to be <strong><u>(2)</u></strong> levels of teacher motivation. In 2002-2003, 25% of primary - school teacher motivation. In 2002-2003, 25% of primary school teachers in rural India were absent on any given day. The impact of absenteeism is <strong><u>(3) </u></strong>by the fact that the average primary school in India has a workforce of no more than three teachers. The obvious reason &ndash; remuneration &ndash; does not appear to be a <strong><u>(4)</u></strong>. In fact, both education experts and ordinary citizens <strong><u>(5) </u></strong>that government - employed school teachers are paid relatively well. UNESCO surveys from as early as 2004 indicated that the annual statutory salary of primary school teachers in India with 15 years&rsquo; experience was more than $14,000.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(1)</strong></div>',1,21,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (292,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	A <strong><u>(1) </u></strong>factor affecting the quality of primary education appears to be <strong><u>(2)</u></strong> levels of teacher motivation. In 2002-2003, 25% of primary - school teacher motivation. In 2002-2003, 25% of primary school teachers in rural India were absent on any given day. The impact of absenteeism is <strong><u>(3) </u></strong>by the fact that the average primary school in India has a workforce of no more than three teachers. The obvious reason &ndash; remuneration &ndash; does not appear to be a <strong><u>(4)</u></strong>. In fact, both education experts and ordinary citizens <strong><u>(5) </u></strong>that government - employed school teachers are paid relatively well. UNESCO surveys from as early as 2004 indicated that the annual statutory salary of primary school teachers in India with 15 years&rsquo; experience was more than $14,000.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(2)</strong></div>',1,22,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (293,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	A <strong><u>(1) </u></strong>factor affecting the quality of primary education appears to be <strong><u>(2)</u></strong> levels of teacher motivation. In 2002-2003, 25% of primary - school teacher motivation. In 2002-2003, 25% of primary school teachers in rural India were absent on any given day. The impact of absenteeism is <strong><u>(3) </u></strong>by the fact that the average primary school in India has a workforce of no more than three teachers. The obvious reason &ndash; remuneration &ndash; does not appear to be a <strong><u>(4)</u></strong>. In fact, both education experts and ordinary citizens <strong><u>(5) </u></strong>that government - employed school teachers are paid relatively well. UNESCO surveys from as early as 2004 indicated that the annual statutory salary of primary school teachers in India with 15 years&rsquo; experience was more than $14,000.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(3)</strong></div>',1,23,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (294,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	A <strong><u>(1) </u></strong>factor affecting the quality of primary education appears to be <strong><u>(2)</u></strong> levels of teacher motivation. In 2002-2003, 25% of primary - school teacher motivation. In 2002-2003, 25% of primary school teachers in rural India were absent on any given day. The impact of absenteeism is <strong><u>(3) </u></strong>by the fact that the average primary school in India has a workforce of no more than three teachers. The obvious reason &ndash; remuneration &ndash; does not appear to be a <strong><u>(4)</u></strong>. In fact, both education experts and ordinary citizens <strong><u>(5) </u></strong>that government - employed school teachers are paid relatively well. UNESCO surveys from as early as 2004 indicated that the annual statutory salary of primary school teachers in India with 15 years&rsquo; experience was more than $14,000.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(4)</strong></div>',1,24,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (295,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	A <strong><u>(1) </u></strong>factor affecting the quality of primary education appears to be <strong><u>(2)</u></strong> levels of teacher motivation. In 2002-2003, 25% of primary - school teacher motivation. In 2002-2003, 25% of primary school teachers in rural India were absent on any given day. The impact of absenteeism is <strong><u>(3) </u></strong>by the fact that the average primary school in India has a workforce of no more than three teachers. The obvious reason &ndash; remuneration &ndash; does not appear to be a <strong><u>(4)</u></strong>. In fact, both education experts and ordinary citizens <strong><u>(5) </u></strong>that government - employed school teachers are paid relatively well. UNESCO surveys from as early as 2004 indicated that the annual statutory salary of primary school teachers in India with 15 years&rsquo; experience was more than $14,000.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(5)</strong></div>',1,25,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (296,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	India&rsquo;s private-schooled, English-speaking urban elite may attract global attention, but they are in the <strong><u>(1)</u></strong>. The vast majority of Indian children <strong><u>(2)</u></strong> government-run primary schools in rural areas.In 2007-2009, rural India <strong><u>(3)</u></strong> for more than 77% of India&rsquo;s primary-school students, of whom over 77% were enrolled in government-run schools. This is where we see some of the nation&rsquo;s <strong><u>(4) </u></strong>challenges. India&rsquo;s education system has not achieved strong learning outcomes for reasons that are as diverse and <strong><u>(5)</u></strong> as the country itself, Key among these reasons is poor teaching quality, which results from a multitude of factors.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(1)</strong></div>',1,26,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (297,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	India&rsquo;s private-schooled, English-speaking urban elite may attract global attention, but they are in the <strong><u>(1)</u></strong>. The vast majority of Indian children <strong><u>(2)</u></strong> government-run primary schools in rural areas.In 2007-2009, rural India <strong><u>(3)</u></strong> for more than 77% of India&rsquo;s primary-school students, of whom over 77% were enrolled in government-run schools. This is where we see some of the nation&rsquo;s <strong><u>(4) </u></strong>challenges. India&rsquo;s education system has not achieved strong learning outcomes for reasons that are as diverse and <strong><u>(5)</u></strong> as the country itself, Key among these reasons is poor teaching quality, which results from a multitude of factors.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(2)</strong></div>',1,27,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (298,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	India&rsquo;s private-schooled, English-speaking urban elite may attract global attention, but they are in the <strong><u>(1)</u></strong>. The vast majority of Indian children <strong><u>(2)</u></strong> government-run primary schools in rural areas.In 2007-2009, rural India <strong><u>(3)</u></strong> for more than 77% of India&rsquo;s primary-school students, of whom over 77% were enrolled in government-run schools. This is where we see some of the nation&rsquo;s <strong><u>(4) </u></strong>challenges. India&rsquo;s education system has not achieved strong learning outcomes for reasons that are as diverse and <strong><u>(5)</u></strong> as the country itself, Key among these reasons is poor teaching quality, which results from a multitude of factors.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(3)</strong></div>',1,28,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (299,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	India&rsquo;s private-schooled, English-speaking urban elite may attract global attention, but they are in the <strong><u>(1)</u></strong>. The vast majority of Indian children <strong><u>(2)</u></strong> government-run primary schools in rural areas.In 2007-2009, rural India <strong><u>(3)</u></strong> for more than 77% of India&rsquo;s primary-school students, of whom over 77% were enrolled in government-run schools. This is where we see some of the nation&rsquo;s <strong><u>(4) </u></strong>challenges. India&rsquo;s education system has not achieved strong learning outcomes for reasons that are as diverse and <strong><u>(5)</u></strong> as the country itself, Key among these reasons is poor teaching quality, which results from a multitude of factors.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(4)</strong></div>',1,29,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL),
 (300,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	India&rsquo;s private-schooled, English-speaking urban elite may attract global attention, but they are in the <strong><u>(1)</u></strong>. The vast majority of Indian children <strong><u>(2)</u></strong> government-run primary schools in rural areas.In 2007-2009, rural India <strong><u>(3)</u></strong> for more than 77% of India&rsquo;s primary-school students, of whom over 77% were enrolled in government-run schools. This is where we see some of the nation&rsquo;s <strong><u>(4) </u></strong>challenges. India&rsquo;s education system has not achieved strong learning outcomes for reasons that are as diverse and <strong><u>(5)</u></strong> as the country itself, Key among these reasons is poor teaching quality, which results from a multitude of factors.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(5)</strong></div>',1,30,10,'1','2024-07-14 18:31:42',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #007','Assessment Test #007','2024-07-14 18:31:31',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (2,2,'Assessment Test #008','Assessment Test #008','2024-07-14 18:31:32',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (3,3,'Assessment Test #009','Assessment Test #009','2024-07-14 18:31:33',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (4,4,'Assessment Test #010','Assessment Test #010','2024-07-14 18:31:34',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (5,5,'Assessment Test #011','Assessment Test #011','2024-07-14 18:31:35',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (6,6,'Assessment Test #012','Assessment Test #012','2024-07-14 18:31:37',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (7,7,'Assessment Test #013','Assessment Test #013','2024-07-14 18:31:38',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (8,8,'Assessment Test #014','Assessment Test #014','2024-07-14 18:31:40',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (9,9,'Assessment Test #015','Assessment Test #015','2024-07-14 18:31:41',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (10,10,'Assessment Test #016','Assessment Test #016','2024-07-14 18:31:42',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL DEFAULT '',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=847 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (1,'admin','baf71c021073a99609d073b6c7d2162a','admin','admin','2011-10-27 12:02:06',1,'admin'),
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','2024-07-14 18:31:25',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','2024-07-14 18:31:25',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','2024-07-14 18:31:25',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','2024-07-14 18:31:25',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','2024-07-14 18:31:25',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','2024-07-14 18:31:25',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','2024-07-14 18:31:25',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','2024-07-14 18:31:25',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','2024-07-14 18:31:25',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','2024-07-14 18:31:25',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','2024-07-14 18:31:25',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','2024-07-14 18:31:25',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','2024-07-14 18:31:25',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','2024-07-14 18:31:25',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','2024-07-14 18:31:25',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','2024-07-14 18:31:25',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','2024-07-14 18:31:25',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','2024-07-14 18:31:25',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','2024-07-14 18:31:25',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','2024-07-14 18:31:25',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','2024-07-14 18:31:25',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','2024-07-14 18:31:25',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','2024-07-14 18:31:26',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','2024-07-14 18:31:26',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','2024-07-14 18:31:26',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','2024-07-14 18:31:26',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','2024-07-14 18:31:26',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','2024-07-14 18:31:26',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','2024-07-14 18:31:26',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','2024-07-14 18:31:26',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','2024-07-14 18:31:26',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','2024-07-14 18:31:26',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','2024-07-14 18:31:26',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','2024-07-14 18:31:26',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','2024-07-14 18:31:26',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','2024-07-14 18:31:26',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','2024-07-14 18:31:26',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','2024-07-14 18:31:26',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','2024-07-14 18:31:26',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','2024-07-14 18:31:26',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','2024-07-14 18:31:26',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','2024-07-14 18:31:26',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','2024-07-14 18:31:26',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','2024-07-14 18:31:26',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','2024-07-14 18:31:26',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','2024-07-14 18:31:26',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','2024-07-14 18:31:26',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','2024-07-14 18:31:26',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','2024-07-14 18:31:26',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','2024-07-14 18:31:26',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','2024-07-14 18:31:26',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','2024-07-14 18:31:26',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','2024-07-14 18:31:26',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','2024-07-14 18:31:26',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','2024-07-14 18:31:26',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','2024-07-14 18:31:26',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','2024-07-14 18:31:26',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','2024-07-14 18:31:26',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','2024-07-14 18:31:26',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','2024-07-14 18:31:26',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','2024-07-14 18:31:26',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','2024-07-14 18:31:26',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','2024-07-14 18:31:26',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','2024-07-14 18:31:26',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','2024-07-14 18:31:26',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','2024-07-14 18:31:26',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','2024-07-14 18:31:26',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','2024-07-14 18:31:26',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','2024-07-14 18:31:26',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','2024-07-14 18:31:26',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','2024-07-14 18:31:26',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','2024-07-14 18:31:26',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','2024-07-14 18:31:26',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','2024-07-14 18:31:26',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','2024-07-14 18:31:26',NULL,NULL),
 (77,'TN301','dfc0b15615934055ec07230aadf8fb6e','TN301','','2024-07-14 18:31:26',NULL,NULL),
 (78,'TN302','37ebfeac1a9cfd846a61f6f0f4f5a91f','TN302','','2024-07-14 18:31:26',NULL,NULL),
 (79,'TN303','d7c07b4d25e8795e8893c9b986742b43','TN303','','2024-07-14 18:31:26',NULL,NULL),
 (80,'TN304','49c429d5b36cd3ad2edf05a3b6a7d40c','TN304','','2024-07-14 18:31:26',NULL,NULL),
 (81,'TN305','e7db86312115613fc4b88861fd8992df','TN305','','2024-07-14 18:31:26',NULL,NULL),
 (82,'TN306','c7c65d2205e15fcc6a52469df25207a4','TN306','','2024-07-14 18:31:26',NULL,NULL),
 (83,'TN307','9380371c65982c89e992dbb1777634c1','TN307','','2024-07-14 18:31:26',NULL,NULL),
 (84,'TN308','775f160ed73d4b0f080a1cedb589ce32','TN308','','2024-07-14 18:31:26',NULL,NULL),
 (85,'TN309','863721741cbfd3c141415811fceb74a1','TN309','','2024-07-14 18:31:26',NULL,NULL),
 (86,'TN310','4fce1ef08af5181d9b2681c87fcae24c','TN310','','2024-07-14 18:31:26',NULL,NULL),
 (87,'TN311','0f49a08ecec6333f40dd683d2d251d07','TN311','','2024-07-14 18:31:26',NULL,NULL),
 (88,'TN312','91166f8c2e4339749a9f7ab382202659','TN312','','2024-07-14 18:31:26',NULL,NULL),
 (89,'TN313','88430ef67a2f31b133561e746e7516bc','TN313','','2024-07-14 18:31:26',NULL,NULL),
 (90,'TN314','c83ead58bd59efbf78b4f0500aba2a17','TN314','','2024-07-14 18:31:26',NULL,NULL),
 (91,'TN315','5073e3894294c8a9cbdb4d1dde20e86a','TN315','','2024-07-14 18:31:26',NULL,NULL),
 (92,'TN316','17ebf2186b6437dec5f9f664ac971c02','TN316','','2024-07-14 18:31:26',NULL,NULL),
 (93,'TN317','085dce03a707d71beb5f6ebbf78f9059','TN317','','2024-07-14 18:31:26',NULL,NULL),
 (94,'TN318','8e98b9869351f857b78010a6a58f0dfe','TN318','','2024-07-14 18:31:26',NULL,NULL),
 (95,'TN319','53c2c6b90f7b0574f172db2fca73e3b2','TN319','','2024-07-14 18:31:26',NULL,NULL),
 (96,'TN320','2888ad51e2477f7f15ba9fd17dcbef62','TN320','','2024-07-14 18:31:26',NULL,NULL),
 (97,'TN321','2cc4b24d3b1e131cb169e4cb782b5f72','TN321','','2024-07-14 18:31:26',NULL,NULL),
 (98,'TN322','a9dda3c165919f32cb27b0ee2176f19f','TN322','','2024-07-14 18:31:26',NULL,NULL),
 (99,'TN323','615600f51fc8a8dc3065caac27ed1db9','TN323','','2024-07-14 18:31:26',NULL,NULL),
 (100,'TN324','6ede991de2ffecb4c31afe8021e91a61','TN324','','2024-07-14 18:31:26',NULL,NULL),
 (101,'TN325','6f7e4f7353b67ee001d439882ac38c49','TN325','','2024-07-14 18:31:26',NULL,NULL),
 (102,'TN326','3f773e65c4ad08706adcc094dee268a8','TN326','','2024-07-14 18:31:26',NULL,NULL),
 (103,'TN327','aea5e2601cf35618cb6994890121c82c','TN327','','2024-07-14 18:31:26',NULL,NULL),
 (104,'TN328','8a5b61e0381e20b469c5cf1fefe83c96','TN328','','2024-07-14 18:31:26',NULL,NULL),
 (105,'TN329','9083013da46a79fa078784099338722d','TN329','','2024-07-14 18:31:26',NULL,NULL),
 (106,'TN330','c13deb4ea24d297a98e0d1467048caee','TN330','','2024-07-14 18:31:26',NULL,NULL),
 (107,'TN331','08f7adac0f14cc9d84c444f0ffe29848','TN331','','2024-07-14 18:31:26',NULL,NULL),
 (108,'TN332','ed2c369e8a3143a41396050a39c790cf','TN332','','2024-07-14 18:31:26',NULL,NULL),
 (109,'TN333','cfa6b373db3a9a47d45a8ccc21ee8ff5','TN333','','2024-07-14 18:31:26',NULL,NULL),
 (110,'TN334','9b63ce9e94be5c729922aadab912ec3b','TN334','','2024-07-14 18:31:26',NULL,NULL),
 (111,'TN335','d4f67191702a3fa36dd8bc497d1b58e3','TN335','','2024-07-14 18:31:26',NULL,NULL),
 (112,'TN336','bd8a460d5a67f43b6c67590c34584067','TN336','','2024-07-14 18:31:26',NULL,NULL),
 (113,'TN337','ac8f8efc7972565e9576a2068e328786','TN337','','2024-07-14 18:31:26',NULL,NULL),
 (114,'TN338','0bbc5c6bf83fd4ef4772df4960b6cb7d','TN338','','2024-07-14 18:31:26',NULL,NULL),
 (115,'TN339','9b535bc0cc3bb15b6d73b7495ab7b877','TN339','','2024-07-14 18:31:26',NULL,NULL),
 (116,'TN340','66ce6d7fba196d13a900d842b2b30e4d','TN340','','2024-07-14 18:31:26',NULL,NULL),
 (117,'TN341','2038e928538cfa3026173fe3daccb251','TN341','','2024-07-14 18:31:26',NULL,NULL),
 (118,'TN342','e0367d7f49a738553af0ff45f2f22317','TN342','','2024-07-14 18:31:26',NULL,NULL),
 (119,'TN343','3df66df4bf75f5a1f8f8e69a12e2a6be','TN343','','2024-07-14 18:31:26',NULL,NULL),
 (120,'TN344','c8d340a2f59e63fc5d27dd3fac745296','TN344','','2024-07-14 18:31:26',NULL,NULL),
 (121,'TN345','09db8826edf0d1660c2b0fc2d84a7eec','TN345','','2024-07-14 18:31:26',NULL,NULL),
 (122,'TN346','afe947537332951ba273afd552b17c9a','TN346','','2024-07-14 18:31:26',NULL,NULL),
 (123,'TN347','8feb81023bcd9d972d3e18684de412ef','TN347','','2024-07-14 18:31:26',NULL,NULL),
 (124,'TN348','eb46a9b612cdb39ebe4681985992eefb','TN348','','2024-07-14 18:31:26',NULL,NULL),
 (125,'TN349','10a8c1b4c602d25c86655a0d18d589e6','TN349','','2024-07-14 18:31:26',NULL,NULL),
 (126,'TN350','265356ba15abd416298a6f65e887c9c3','TN350','','2024-07-14 18:31:26',NULL,NULL),
 (127,'TN351','912cc1cb1c0a6714e90d589bfcc53535','TN351','','2024-07-14 18:31:26',NULL,NULL),
 (128,'TN352','70c6a1f7a8d3e87a92cd15de99cc32ad','TN352','','2024-07-14 18:31:26',NULL,NULL),
 (129,'TN353','7c49388b789c3cc34afb8bb8a856ae1d','TN353','','2024-07-14 18:31:26',NULL,NULL),
 (130,'TN354','050f457fff146ab4ca818758a5ae6119','TN354','','2024-07-14 18:31:26',NULL,NULL),
 (131,'TN355','942c2d8e45f0ef4e678619c3ab3785f5','TN355','','2024-07-14 18:31:26',NULL,NULL),
 (132,'TN356','84fdb5ddaf9e94636a111f785c65afa6','TN356','','2024-07-14 18:31:26',NULL,NULL),
 (133,'TN357','442c324fb22d72672664314c25bdb652','TN357','','2024-07-14 18:31:26',NULL,NULL),
 (134,'TN358','bfa8df84b429545c8a32d08f29324dcb','TN358','','2024-07-14 18:31:26',NULL,NULL),
 (135,'TN359','2cd77c235da10bbdbe3e53074c401add','TN359','','2024-07-14 18:31:26',NULL,NULL),
 (136,'TN360','11b503258116eac5b10473c086c3f560','TN360','','2024-07-14 18:31:26',NULL,NULL),
 (137,'TN361','fc792a39f945a3c1d5f0c6ded97bb8fc','TN361','','2024-07-14 18:31:26',NULL,NULL),
 (138,'TN362','0a317f24a85c887410d929e2362d38bb','TN362','','2024-07-14 18:31:26',NULL,NULL),
 (139,'TN363','e279d6667dcff09daff94e2c06585251','TN363','','2024-07-14 18:31:26',NULL,NULL),
 (140,'TN364','a4d4cfd9e79920d58361195684e5d94d','TN364','','2024-07-14 18:31:26',NULL,NULL),
 (141,'TN365','bf4c4953712a46ae718f98f802aa7e20','TN365','','2024-07-14 18:31:26',NULL,NULL),
 (142,'TN366','e99816fd3329927bd18f95983d14f2c2','TN366','','2024-07-14 18:31:26',NULL,NULL),
 (143,'TN367','387a1a7b11354e650f0704bdf807fb3c','TN367','','2024-07-14 18:31:26',NULL,NULL),
 (144,'TN368','a07d5aff44e2a9ecb6fe9de5ab0e10e2','TN368','','2024-07-14 18:31:26',NULL,NULL),
 (145,'TN369','cf6b3be71fa9b6cfd010bf1fc305e68b','TN369','','2024-07-14 18:31:26',NULL,NULL),
 (146,'TN370','1c204c2905315f5b52a68707a44fa9a2','TN370','','2024-07-14 18:31:26',NULL,NULL),
 (147,'TN371','0dd363bffc121d07ceb49265ca100cd8','TN371','','2024-07-14 18:31:26',NULL,NULL),
 (148,'TN372','5ab8ab59a8fab6f76001f8b19d9252a1','TN372','','2024-07-14 18:31:26',NULL,NULL),
 (149,'TN373','3f6415f842177772b98530a7ea03a130','TN373','','2024-07-14 18:31:26',NULL,NULL),
 (150,'TN374','47ed0d60a7bfd8f21b5435b6b5353a50','TN374','','2024-07-14 18:31:26',NULL,NULL),
 (151,'TN375','a8cd174eaf8f25952c69cfb7f1d9a741','TN375','','2024-07-14 18:31:26',NULL,NULL),
 (152,'TN376','e94af6a99a4dbc74a5f243ca68792daa','TN376','','2024-07-14 18:31:26',NULL,NULL),
 (153,'TN377','9aca223e16483afb6b5dbba340934687','TN377','','2024-07-14 18:31:26',NULL,NULL),
 (154,'TN378','a59f9a37ebefaae6f6994af702b79b45','TN378','','2024-07-14 18:31:26',NULL,NULL),
 (155,'TN379','b27c12be9a14fc1dc7d60016288dfbe2','TN379','','2024-07-14 18:31:26',NULL,NULL),
 (156,'TN380','2a5a82682c0218e9790e43afe47b3f35','TN380','','2024-07-14 18:31:26',NULL,NULL),
 (157,'TN381','71f52397f204a9d0ffa6e0176fb07dcd','TN381','','2024-07-14 18:31:26',NULL,NULL),
 (158,'TN382','5a1c1107814fa39db4108bbce2aa35b4','TN382','','2024-07-14 18:31:26',NULL,NULL),
 (159,'TN383','21343080bec6e2875013d7c962f5eb06','TN383','','2024-07-14 18:31:26',NULL,NULL),
 (160,'TN384','7bf998ec689acaef6a360c729b43b960','TN384','','2024-07-14 18:31:26',NULL,NULL),
 (161,'TN385','fb275e9263b55fbd8d746aa3d6c87b12','TN385','','2024-07-14 18:31:26',NULL,NULL),
 (162,'TN386','de026db7cd75d1e3622f3d1baddfc8b4','TN386','','2024-07-14 18:31:26',NULL,NULL),
 (163,'TN387','4d088cf810a3cb338e624400d84f68c6','TN387','','2024-07-14 18:31:26',NULL,NULL),
 (164,'TN388','44e221fcbb66db5e4681c5a4eef681e3','TN388','','2024-07-14 18:31:26',NULL,NULL),
 (165,'TN389','51f67f6012f01bd50a2aeb46d4eab853','TN389','','2024-07-14 18:31:26',NULL,NULL),
 (166,'TN390','8c09a1e71c06e74e613d864b9cf30f77','TN390','','2024-07-14 18:31:26',NULL,NULL),
 (167,'TN391','9d88becb3f59b73e85b08d0d317b2114','TN391','','2024-07-14 18:31:26',NULL,NULL),
 (168,'TN392','5be371a0c510ed7e72d6ab80b7d88c2c','TN392','','2024-07-14 18:31:26',NULL,NULL),
 (169,'TN393','0f5453f90f5a3557fab19f27df34797e','TN393','','2024-07-14 18:31:26',NULL,NULL),
 (170,'TN394','5d0e2dbaf7bd786cbfca783e195324fc','TN394','','2024-07-14 18:31:26',NULL,NULL),
 (171,'TN395','835bd4aae728da78dc6cdd7491cec6e1','TN395','','2024-07-14 18:31:26',NULL,NULL),
 (172,'TN396','fe6660d197075e0bf955b96d37784ff5','TN396','','2024-07-14 18:31:26',NULL,NULL),
 (173,'TN397','c1d744be6f905cd7dffd2d839b199216','TN397','','2024-07-14 18:31:26',NULL,NULL),
 (174,'TN398','23f518b78e6a0d1a3f4d361cfb517a7c','TN398','','2024-07-14 18:31:26',NULL,NULL),
 (175,'TN399','937cb2d08799fb61988d8d76f6843bcf','TN399','','2024-07-14 18:31:26',NULL,NULL),
 (176,'TN400','d1d084e2f83c562c06098759148bf897','TN400','','2024-07-14 18:31:27',NULL,NULL),
 (177,'B1','2c9b6ae0498dbaa600f784752ea18559','Praditha vaka','','2024-07-14 18:31:27',NULL,NULL),
 (178,'B2','b4901682890ab7593c8a36d1daee1466','Kaviyasri M','','2024-07-14 18:31:27',NULL,NULL),
 (179,'B3','fb0eb8390bb229fea99b26314ff71d0f','PAVITHRA J','','2024-07-14 18:31:27',NULL,NULL),
 (180,'B4','2235aa017e1dd74a58d8862997628a0a','KABILAN P','','2024-07-14 18:31:27',NULL,NULL),
 (181,'B5','7fbe4c5fb25a326ea1695fc1b1cfb053','Vishnupriya S','','2024-07-14 18:31:27',NULL,NULL),
 (182,'B6','a007296839b545dc60eac396a05635df','Shaik jasmine','','2024-07-14 18:31:27',NULL,NULL),
 (183,'B7','014cbcbd3ad1883b14e1adc2ac3ec526','NITHESH S','','2024-07-14 18:31:27',NULL,NULL),
 (184,'B8','5f8d8a320452e8eca09fbe0e5c0cfc54','Natesh Prabhu N','','2024-07-14 18:31:27',NULL,NULL),
 (185,'B9','668159bde2e6d9861f779e74575ec26e','PAVITHRA D','','2024-07-14 18:31:27',NULL,NULL),
 (186,'B10','9edc65e329f5ddc2ca75727d9f6c2b2a','AMRESH A','','2024-07-14 18:31:27',NULL,NULL),
 (187,'B11','4ed3701f3884b89bd4b2746869db31a0','PAVITHRA J','','2024-07-14 18:31:27',NULL,NULL),
 (188,'B12','43a235d32dc133e40312c2276bb4f626','YOKESH.U','','2024-07-14 18:31:27',NULL,NULL),
 (189,'B13','f19bc9b0898708a641fbb20cd2dbe131','Madhan Kumar V','','2024-07-14 18:31:27',NULL,NULL),
 (190,'B14','c6364a1347e6a8a850a1e836c98d59cb','Elavarasan P','','2024-07-14 18:31:27',NULL,NULL),
 (191,'B15','6f2fca896f78dd4bf766f00e2cbfa276','Anand M','','2024-07-14 18:31:27',NULL,NULL),
 (192,'B16','100a0909dbbfef31f8dedf352ae26f26','VAAGAIARASU S S','','2024-07-14 18:31:27',NULL,NULL),
 (193,'B17','14c6937e0f50436ec2c252434dd5065a','POLI SAINATH REDDY','','2024-07-14 18:31:27',NULL,NULL),
 (194,'B18','c655bd017f1fda3957178d1b97308563','SARATHI V M','','2024-07-14 18:31:27',NULL,NULL),
 (195,'B19','b3e1a25fc961ebc5256e3d5ce6e92677','IRSHATH KHAN S','','2024-07-14 18:31:27',NULL,NULL),
 (196,'B20','3577ea97e3c36c58bf4a646526ab660f','Vasanthan','','2024-07-14 18:31:27',NULL,NULL),
 (197,'B21','93a7af74aaf281cb75c44b89acbd260c','CHILUKURI SAI KUMAR','','2024-07-14 18:31:27',NULL,NULL),
 (198,'B22','4c5c6cc4dfca39999665450b3ca06b48','GANDHI S','','2024-07-14 18:31:27',NULL,NULL),
 (199,'B23','2536346ff3ce9a3d4b259d5cedf98dca','S.PRAGATHEES','','2024-07-14 18:31:27',NULL,NULL),
 (200,'B24','c4ba71fbb7d805ad8ab8c4fc5e57e4e0','KAMALESH B','','2024-07-14 18:31:27',NULL,NULL),
 (201,'B25','58e00440b16361b988637b4ae910946c','SHRIHARI S','','2024-07-14 18:31:27',NULL,NULL),
 (202,'B26','d762e77b24c81625ab38f642ea2c9338','Athesh Pargau R','','2024-07-14 18:31:27',NULL,NULL),
 (203,'B27','4216d7410dc089f7dccb5c8b11bd9d6f','Bharathiraja P','','2024-07-14 18:31:27',NULL,NULL),
 (204,'B28','48a9201069e9483a4cad7074032ec129','BHADRINATHAN S B','','2024-07-14 18:31:27',NULL,NULL),
 (205,'B29','ee6320b0023a3f2d8f189a0bef9d000a','D.Kaviya Sri','','2024-07-14 18:31:27',NULL,NULL),
 (206,'B30','7e994c91eb114ca79d14ab3ca7a332e4','AjayKumar R','','2024-07-14 18:31:27',NULL,NULL),
 (207,'B31','7174774ef64995fd60de20b83ca31647','Kaviya.s','','2024-07-14 18:31:27',NULL,NULL),
 (208,'B32','700b2dc768ce6ead1b74e500791469df','ATCHAYA S','','2024-07-14 18:31:27',NULL,NULL),
 (209,'B33','e1192887fc1bbfe650d40e696c28fb58','HARIHARAN V','','2024-07-14 18:31:27',NULL,NULL),
 (210,'B34','a930c6561d4360639915e314f5701f9c','Vinodhini D','','2024-07-14 18:31:27',NULL,NULL),
 (211,'B35','2838b642005d913881d2ad1a9b664c42','SABARIVASAN.P.T','','2024-07-14 18:31:27',NULL,NULL),
 (212,'B36','2505e321339ee899817bdf8dcbb4fa3d','Sabarish D','','2024-07-14 18:31:27',NULL,NULL),
 (213,'B37','937f5a89d0061fb651a0d718b1b40a43','GOKUL M','','2024-07-14 18:31:27',NULL,NULL),
 (214,'B38','fd3b0c1bb82aae5d0f4622f85a7eaf55','Guna M','','2024-07-14 18:31:27',NULL,NULL),
 (215,'B39','717c58d8979e947355f4528a0c3254f7','Jefinson. J','','2024-07-14 18:31:27',NULL,NULL),
 (216,'B40','9f78531d7361e912cf5438e8197ce3fd','S.cheran','','2024-07-14 18:31:27',NULL,NULL),
 (217,'B41','ab3761cabecbbf331c814f150edd447e','Revathi V','','2024-07-14 18:31:27',NULL,NULL),
 (218,'B42','de8f48a198dba58d78abf0bb65688d9a','NIGASH M','','2024-07-14 18:31:27',NULL,NULL),
 (219,'B43','87a54c1c3d981d980ae2f33ceec1f8e9','Chandru M','','2024-07-14 18:31:27',NULL,NULL),
 (220,'B44','f1d143a3821bb9185b22f2b7158c41c6','GOWSIK.S','','2024-07-14 18:31:27',NULL,NULL),
 (221,'B45','040fcf50b78ec7cfdf1b2832810e4d23','JAYABHARATHI N','','2024-07-14 18:31:27',NULL,NULL),
 (222,'B46','e1d5b3b6f389221aa3442ebe88729c4b','Dharshini v','','2024-07-14 18:31:27',NULL,NULL),
 (223,'B47','c8b121e543fc4a3299da709d733bb538','Shanmugapriya T','','2024-07-14 18:31:27',NULL,NULL),
 (224,'B48','231062168385ef23aa1febf5c91108db','Aravindh.s','','2024-07-14 18:31:27',NULL,NULL),
 (225,'B49','90c6637cc8da822151835ce324442c24','Pavithra s','','2024-07-14 18:31:27',NULL,NULL),
 (226,'B50','8100215493594b2657824bb71d13b1f6','T.Nandhini','','2024-07-14 18:31:27',NULL,NULL),
 (227,'B51','48eb8168f5da77614e3c368689a14620','Pava Shree. P','','2024-07-14 18:31:27',NULL,NULL),
 (228,'B52','721e1cf5a0d952c2a74b2a8f4bab64ff','Kalli Sai Meghana','','2024-07-14 18:31:27',NULL,NULL),
 (229,'B53','b8204a6223131fa8512a6834555d588d','B.Elakshmi Prabaa','','2024-07-14 18:31:27',NULL,NULL),
 (230,'B54','5563ab6b2166128680eebd27019381f7','ASTIN R','','2024-07-14 18:31:27',NULL,NULL),
 (231,'B55','3271be7718ee6359d44b9e63678960c0','C ARUNKUMAR','','2024-07-14 18:31:27',NULL,NULL),
 (232,'B56','9879bc1eae88ba8ada0f3c9e69803b5d','G.Mukesh','','2024-07-14 18:31:27',NULL,NULL),
 (233,'B57','a036d2b12e686e0fb439367e12a78443','Sumathi P','','2024-07-14 18:31:27',NULL,NULL),
 (234,'B58','ea502df7b7b14e3caa3adccd3d84b424','Anthony Irudhaya Aakash A','','2024-07-14 18:31:27',NULL,NULL),
 (235,'B59','6eed908e0385b44b9a396657fda350a0','Raju.P','','2024-07-14 18:31:27',NULL,NULL),
 (236,'B60','0b60bc242f8a129d978a81324958d985','Ravibalan R','','2024-07-14 18:31:27',NULL,NULL),
 (237,'B61','53900fc9d30ae6fcd7c6d929b6f322c7','Vignesh M','','2024-07-14 18:31:27',NULL,NULL),
 (238,'B62','b504af8d68fbd9cb8502302d9fc62932','Kaviyarasan V','','2024-07-14 18:31:27',NULL,NULL),
 (239,'B63','1b2e67af274e421003b81fea4f1203ad','SABARINATHAN E','','2024-07-14 18:31:27',NULL,NULL),
 (240,'B64','0b3ec33c4dfcd79e4ae2540c9c48ac1c','V VIGNESHWAR','','2024-07-14 18:31:27',NULL,NULL),
 (241,'B65','b441c578597ffc8f384587b921b85715','G Raja','','2024-07-14 18:31:27',NULL,NULL),
 (242,'B66','53195c32a2199b462e5d430354f95c17','KATHIRAVAN P','','2024-07-14 18:31:27',NULL,NULL),
 (243,'B67','a9e8899a6c1bb7a6c7ddb003fb7cc256','Akshaya.E','','2024-07-14 18:31:27',NULL,NULL),
 (244,'B68','ae272c59250a4c1a73335b3ae4a9c8e2','SUDHARSAN S','','2024-07-14 18:31:27',NULL,NULL),
 (245,'B69','759bf5a7bfbb6a1071c020a609cc24c8','SARANRAJ.R','','2024-07-14 18:31:27',NULL,NULL),
 (246,'B70','404ffe9289925fb64185511cf64df1bd','Dhanush.L','','2024-07-14 18:31:27',NULL,NULL),
 (247,'B71','c72fed74bce7640b1dfe7e023f4c84a7','Karthick raj. L','','2024-07-14 18:31:27',NULL,NULL),
 (248,'B72','5b0618237700420cfa710644e8af2804','MOHAMMED FAIZULLA B','','2024-07-14 18:31:27',NULL,NULL),
 (249,'B73','bb6353c401a225d2d937ddc7b718adab','Sriganth C','','2024-07-14 18:31:27',NULL,NULL),
 (250,'B74','6cc338d51150f739b936450e2fb554dc','Dineshkumar J','','2024-07-14 18:31:27',NULL,NULL),
 (251,'B75','842f1395e786624cde73e2a2025171ee','SRIRAM RK','','2024-07-14 18:31:27',NULL,NULL),
 (252,'B76','2f04dee03b52d029e13cbf391d87d89f','Amul sughirtha A','','2024-07-14 18:31:27',NULL,NULL),
 (253,'B77','b845e82e29577c053cf69d66c542a700','ANBARASAN S','','2024-07-14 18:31:27',NULL,NULL),
 (254,'B78','cac1287f043ad342d32b9138f5af1e70','Lavanya. R','','2024-07-14 18:31:27',NULL,NULL),
 (255,'B79','c33f3d0ef803579c5ffa9298f83777b4','A.RAMNARAIANAN','','2024-07-14 18:31:27',NULL,NULL),
 (256,'B80','f0d60f6f06390ff87cdd340557021bb5','NIRMALRAJ P','','2024-07-14 18:31:27',NULL,NULL),
 (257,'B81','345c5fd21e4de45b3090750d6582e083','DEEPAK Y','','2024-07-14 18:31:27',NULL,NULL),
 (258,'B82','0347b8780a817622929aec3d4490c66c','KUMARAKRISHNAN.R .C','','2024-07-14 18:31:27',NULL,NULL),
 (259,'B83','346ee7c63874d3d39cea1e616c24e32e','Lavanya. R','','2024-07-14 18:31:27',NULL,NULL),
 (260,'B84','3fa0b6422a180c237bfb0c4e1bd47bb9','R.savitha','','2024-07-14 18:31:27',NULL,NULL),
 (261,'B85','dc2fda3d2471f4421b11c47e787a35f6','DEVARAJ.A','','2024-07-14 18:31:27',NULL,NULL),
 (262,'B86','69e9328049c70b9f2ebc8fbf18070f0c','R.RAM KUMAR','','2024-07-14 18:31:27',NULL,NULL),
 (263,'B87','06551ccdd70474dbb2e21e1394ef223b','RABINRAJ G','','2024-07-14 18:31:27',NULL,NULL),
 (264,'B88','1573367d63d6dd837728ac5fa71563ec','Monisha D','','2024-07-14 18:31:27',NULL,NULL),
 (265,'B89','1b32dbeee7e44cc12bc682f507adcdf0','MANNEPALLI DEEKSHITH KUMAR','','2024-07-14 18:31:27',NULL,NULL),
 (266,'B90','cca9d97e37a6c2a37f569b467fa462d3','Gokul.S','','2024-07-14 18:31:27',NULL,NULL),
 (267,'B91','7c47a11b70b7244f7765e80c9e4e8298','MARIDHU NARENDRA','','2024-07-14 18:31:27',NULL,NULL),
 (268,'B92','1f6721f3be62c2a697ba809e10a02dad','DHANUSH A','','2024-07-14 18:31:27',NULL,NULL),
 (269,'B93','e11b35300af17caa58d7ab93f5c3cdf9','KARTHE.A.S','','2024-07-14 18:31:27',NULL,NULL),
 (270,'B94','8337bb414d0f61e5bcc208bdb1a63f7b','Shagibalan P','','2024-07-14 18:31:27',NULL,NULL),
 (271,'B95','aedc2f4fc1c517051a7b7957640bc8b2','Sai krishnan.s','','2024-07-14 18:31:27',NULL,NULL),
 (272,'B96','6cc9e4019fe928dbe7618effbcf9bdc6','PONNER. B','','2024-07-14 18:31:27',NULL,NULL),
 (273,'B97','793a9594c9700a2ec7fcf44deae5a137','Ravi Shankar.M','','2024-07-14 18:31:27',NULL,NULL),
 (274,'B98','e65ece0ef8e39aad815056d7c7649a54','SREERAM K','','2024-07-14 18:31:27',NULL,NULL),
 (275,'B99','418aa2541d8baa7f8e16ecae955b9610','YUVANESH KUMAR V','','2024-07-14 18:31:27',NULL,NULL),
 (276,'B100','57812d1ddb3f65c5808ca1e591fb3035','RAKESH S','','2024-07-14 18:31:27',NULL,NULL),
 (277,'B101','2ce01788c13d2a7784b8db4fb01ce23a','ASHWIN A','','2024-07-14 18:31:27',NULL,NULL),
 (278,'B102','a9cd0675709779055997a4750aaa88f5','ROOPARAJ B','','2024-07-14 18:31:27',NULL,NULL),
 (279,'B103','01e2f24c0a6863a84dcd595bc247040c','MARUTHU D','','2024-07-14 18:31:27',NULL,NULL),
 (280,'B104','f31a9b0b179e7b57b6c7958ec9fef2b4','PRAVEEN KUMAR M','','2024-07-14 18:31:27',NULL,NULL),
 (281,'B105','df2043b8dae8586fcca41a425e1172ae','Thiru malesh k','','2024-07-14 18:31:27',NULL,NULL),
 (282,'B106','8f6bb9e63e8e6836f1f2ee17f7ce4d46','GOWRISANKAR.S','','2024-07-14 18:31:27',NULL,NULL),
 (283,'B107','4dc58dff848538fc267a9d86cecbc190','Surya C','','2024-07-14 18:31:27',NULL,NULL),
 (284,'B108','7a53d206a1bbd0f2cb80b1a541b35037','AROKIYA MELVIN RAJ A','','2024-07-14 18:31:27',NULL,NULL),
 (285,'B109','345c9704201696e2fd08b3ba8ea03397','Yendrapati.Sumjana','','2024-07-14 18:31:27',NULL,NULL),
 (286,'B110','48f6d16ef447cc00a613c5cab26b5291','Sridhar T','','2024-07-14 18:31:27',NULL,NULL),
 (287,'B111','2d8f690850824684130bf94f9f61bf76','Sarmila S','','2024-07-14 18:31:27',NULL,NULL),
 (288,'B112','080f611cbf65179768bf62ce3f54335d','V Tamilselvan','','2024-07-14 18:31:27',NULL,NULL),
 (289,'B113','c7888901b1af3909153bf57e21d5f472','Kabilan S','','2024-07-14 18:31:27',NULL,NULL),
 (290,'B114','b0e1d1da8328a0a8090fac4436dabcb4','VIJAY P','','2024-07-14 18:31:27',NULL,NULL),
 (291,'B115','0e07fe03d76e2383c4dfcbc3f58ab046','DILIP R','','2024-07-14 18:31:27',NULL,NULL),
 (292,'B116','300fcf1315065b2d1ac17d58662384fc','SRI HARIPRIYAN S','','2024-07-14 18:31:27',NULL,NULL),
 (293,'B117','e16af43bd630041bc13bc3128c8360ff','Mohammed ashik.R','','2024-07-14 18:31:27',NULL,NULL),
 (294,'B118','94002e0d048b51055e311150c01ac652','Srinithi kumar','','2024-07-14 18:31:27',NULL,NULL),
 (295,'B119','6a1183f750050e0d5130601e74c252a7','Kamepalli Maheswari','','2024-07-14 18:31:27',NULL,NULL),
 (296,'B120','6c6f25c0797ceabe00cc117cc2deb832','Aishwariya','','2024-07-14 18:31:27',NULL,NULL),
 (297,'B121','62da6fc75a57c6784eede8a101a54436','Nithishkumar N','','2024-07-14 18:31:27',NULL,NULL),
 (298,'B122','d79b3a88dd4016b295783d0b10162b43','G.AKSHAYA','','2024-07-14 18:31:27',NULL,NULL),
 (299,'B123','c12974226e164b4f49946493d5516cb6','Parameshvaran.s','','2024-07-14 18:31:27',NULL,NULL),
 (300,'B124','694645ff15a802620de393d01d1be3ee','GOWSIKA T K','','2024-07-14 18:31:27',NULL,NULL),
 (301,'B125','237249c460b8c78249d5dc0704dcde9b','HARIHARAN V','','2024-07-14 18:31:27',NULL,NULL),
 (302,'B126','bec53d0b58f26568f2dab3543d7e6419','KEERTHI.M','','2024-07-14 18:31:27',NULL,NULL),
 (303,'B127','363669c67a371fb571e4a1d8297e5208','JEEVA S','','2024-07-14 18:31:27',NULL,NULL),
 (304,'B128','e4449bb4fdcfd92b9eca3b475bfc2ea0','Hariprasath R','','2024-07-14 18:31:27',NULL,NULL),
 (305,'B129','6c914aaa595a2f04285c4deebc7408ef','Christober S','','2024-07-14 18:31:27',NULL,NULL),
 (306,'B130','23eafd98cf50da548f1b8d20468fa100','Palanivel P','','2024-07-14 18:31:27',NULL,NULL),
 (307,'B131','b8bf0e246a344c8d1ebe01e000d30570','MANORANJAN S','','2024-07-14 18:31:27',NULL,NULL),
 (308,'B132','051ba08ab80654f4bb1e26381e747447','Harini S','','2024-07-14 18:31:27',NULL,NULL),
 (309,'B133','00408f4a2b59227b4b65500a46582f44','Bodapati Hima Bindu','','2024-07-14 18:31:27',NULL,NULL),
 (310,'B134','32547516bd5d5f32d156bce289840a8d','VINOTHINI S','','2024-07-14 18:31:27',NULL,NULL),
 (311,'B135','d3382dafa52c22cc074a0ba547879c24','SANTHOSH R','','2024-07-14 18:31:27',NULL,NULL),
 (312,'B136','ef2f54e24289ec53f42a05226c9951e2','SANTHOSH G','','2024-07-14 18:31:27',NULL,NULL),
 (313,'B137','dfb5bdc599c2ec660e486acf2f9054dc','AROCKIYA ASWIN S','','2024-07-14 18:31:27',NULL,NULL),
 (314,'B138','eea4380bbfa7b063742ab19c59e6ff60','JAYAKUMAR M','','2024-07-14 18:31:27',NULL,NULL),
 (315,'B139','3c4c5e8e9f300e9a14b3d94415ced058','Gokulmani','','2024-07-14 18:31:27',NULL,NULL),
 (316,'B140','4efaa2c87d0135ed5b403c676ee0a07c','Afzal Ahamed.M','','2024-07-14 18:31:27',NULL,NULL),
 (317,'B141','9640cfee205c9f19870bb827e47ccfda','gokul k','','2024-07-14 18:31:27',NULL,NULL),
 (318,'B142','7b2779d9a9399a5891b0d094f7a08ed1','DESIKAN S','','2024-07-14 18:31:27',NULL,NULL),
 (319,'B143','d479e7f9377d2edc65370115cd3da9ba','KARTHIKEYAN M','','2024-07-14 18:31:27',NULL,NULL),
 (320,'B144','4b813be64bebe31e5b869dabcb753d73','SATHISH S','','2024-07-14 18:31:27',NULL,NULL),
 (321,'B145','b30ccf1fd3fb3d22cf329a25726a3e46','PRAGADHEESH P','','2024-07-14 18:31:27',NULL,NULL),
 (322,'B146','87ef563ca894b27e3aebe59e191482de','Dhanush','','2024-07-14 18:31:27',NULL,NULL),
 (323,'B147','e0fe57ee4b232387c205e6f048d9e3d2','NANDHINI R','','2024-07-14 18:31:27',NULL,NULL),
 (324,'B148','c6d3f12266db1c20044c5388a19841f6','Gowri C','','2024-07-14 18:31:27',NULL,NULL),
 (325,'B149','1524280e1b8406d4ac1da5b508af208f','K.VAITHEESH','','2024-07-14 18:31:27',NULL,NULL),
 (326,'B150','39a4c06ad6afef6c13f0a57ff0cd2007','J Jayamathi','','2024-07-14 18:31:27',NULL,NULL),
 (327,'B151','112267da35b9127e6299b99196a0380f','G. Madhumitha','','2024-07-14 18:31:27',NULL,NULL),
 (328,'B152','3b2bc6d642fd12640b36040774446a30','Nakshitha B','','2024-07-14 18:31:27',NULL,NULL),
 (329,'B153','8a586549e31778ed85347b83b7f10085','Pavithra N','','2024-07-14 18:31:27',NULL,NULL),
 (330,'B154','2409e0f3058c16cf707b30aa2da2877a','Vishnupriya S','','2024-07-14 18:31:27',NULL,NULL),
 (331,'B155','d402ac2c218476e8d38383f3fda1d233','M.PRADEESH KUMAR','','2024-07-14 18:31:27',NULL,NULL),
 (332,'B156','d33653c36dea75685ea30dd008b2993a','B.Maivizhi','','2024-07-14 18:31:27',NULL,NULL),
 (333,'B157','f7c404d255e5da7e6626c691335a5dba','Narasimman M','','2024-07-14 18:31:27',NULL,NULL),
 (334,'B158','92a04e8f1edb391645cb10ee75264c46','R.Karthika','','2024-07-14 18:31:27',NULL,NULL),
 (335,'B159','a50e1214c32bac5fd26d74516ed019f5','Harini Tamilvanan','','2024-07-14 18:31:27',NULL,NULL),
 (336,'B160','3f0a64433fb40b3a232a84a26ab2a083','Bharatha Vinnarasi P','','2024-07-14 18:31:27',NULL,NULL),
 (337,'B161','10aa8063ddb41931b5d67f045eac4396','K.Kaviya','','2024-07-14 18:31:27',NULL,NULL),
 (338,'B162','ae62b9e8e2c1ef3ed299e55faf39d21c','A.Durgadevi','','2024-07-14 18:31:27',NULL,NULL),
 (339,'B163','df97a1b716b6950d18977b81e1bbf0ae','A.Asha','','2024-07-14 18:31:27',NULL,NULL),
 (340,'B164','8d5972e3190081dc45fb8778b6d0e00d','Malini.M','','2024-07-14 18:31:27',NULL,NULL),
 (341,'B165','2bea169ccc281917b5a8e4e4673a1962','R Dhivya','','2024-07-14 18:31:27',NULL,NULL),
 (342,'B166','db8b206d0146eccb6e1bcf09d628634e','C.poonkuzhali','','2024-07-14 18:31:27',NULL,NULL),
 (343,'B167','243b02c77d168a892935f95a41e8a516','A.ABIRAMI','','2024-07-14 18:31:27',NULL,NULL),
 (344,'B168','5f1b9f6fdcb94b6e566e45a4a1f6e62a','Ramya R','','2024-07-14 18:31:27',NULL,NULL),
 (345,'B169','655d2297d674b48f3ddd094b10a081da','Aarthi Priya M','','2024-07-14 18:31:27',NULL,NULL),
 (346,'B170','9804d5853d3e154b1e6fbee29f564705','S.KEERTHIKA','','2024-07-14 18:31:27',NULL,NULL),
 (347,'B171','b21d65fe2ec06f6063cc5c9df3506906','Jasmine L','','2024-07-14 18:31:27',NULL,NULL),
 (348,'B172','8471d43e79584a510a54cf0ed0536f48','Vignesh A','','2024-07-14 18:31:27',NULL,NULL),
 (349,'B173','30e9425cebf2fd265f49bd6d89b191bd','Harini Tamilvanan','','2024-07-14 18:31:27',NULL,NULL),
 (350,'B174','41d318a7b531b133f25b006d8879beaa','A.Jenefa','','2024-07-14 18:31:27',NULL,NULL),
 (351,'B175','83dcab7182f0c0e89ae464d06b204bb1','Nakshitha B','','2024-07-14 18:31:27',NULL,NULL),
 (352,'B176','4040e87c10471b82c65d6b3966c6a269','Sahana S','','2024-07-14 18:31:27',NULL,NULL),
 (353,'B177','bb3f5f8f2b229cf073a09fec76a1e379','Shalini S','','2024-07-14 18:31:27',NULL,NULL),
 (354,'B178','652cdd5d35ff772297c38662842c1b69','Suji K','','2024-07-14 18:31:27',NULL,NULL),
 (355,'B179','ccd26d70eabb5a8d4648596060b6e0a1','M.Krithikadevi','','2024-07-14 18:31:27',NULL,NULL),
 (356,'B180','03258d9afe7d1926604b4279ce9a604f','MOHANAPRIYA. G','','2024-07-14 18:31:27',NULL,NULL),
 (357,'B181','bae167e40527082f41bc6fd3f056ffc5','Priyadharshini.N','','2024-07-14 18:31:27',NULL,NULL),
 (358,'B182','830af146533ec5e7ea0e3a14e4bd19e4','S.vidhya','','2024-07-14 18:31:27',NULL,NULL),
 (359,'B183','5d5109e63b95245ee782e904b60ba1fe','Bosha velantine L','','2024-07-14 18:31:27',NULL,NULL),
 (360,'B184','5535c8d59a854142ecdb0317f0bef7e2','J.Reshma','','2024-07-14 18:31:27',NULL,NULL),
 (361,'B185','4a5a6a585da794de02a8b76768461803','Keerthana G','','2024-07-14 18:31:27',NULL,NULL),
 (362,'B186','554fd857722437e35a260429d3a4e190','Iswariyalakshmi.S','','2024-07-14 18:31:27',NULL,NULL),
 (363,'B187','f220f08f2ab366a81119338f7bf9f6d7','N. Lisa','','2024-07-14 18:31:27',NULL,NULL),
 (364,'B188','94845e8f675f7cb61de3b2cf38474fab','Umamaheswari','','2024-07-14 18:31:27',NULL,NULL),
 (365,'B189','a5223fa5bc8df471907b9f090e3fffb4','Nithyasri. M','','2024-07-14 18:31:27',NULL,NULL),
 (366,'B190','b139bfcce95c1aeaef8698dfd80ccf9d','Saraswathi S','','2024-07-14 18:31:27',NULL,NULL),
 (367,'B191','011f89748ad800e54f7a15b09e4231f5','JamunaDevi R.V','','2024-07-14 18:31:27',NULL,NULL),
 (368,'B192','777b0b8f54e95bcaf4abff27750f0197','Hemavarshini.J','','2024-07-14 18:31:27',NULL,NULL),
 (369,'B193','267ac9cf2a2575ffb7b2c41a883a3a1f','KrishnaRaj M','','2024-07-14 18:31:28',NULL,NULL),
 (370,'B194','8a2dfd415333354103b43a0446b926ea','Gowtham C','','2024-07-14 18:31:28',NULL,NULL),
 (371,'B195','5ff55d13d0aa4328692328a06a702489','S. Prijitha Rebik','','2024-07-14 18:31:28',NULL,NULL),
 (372,'B196','266b14fe288e3e946ebe518483e08747','SANDEPOGU YOGANANDHA','','2024-07-14 18:31:28',NULL,NULL),
 (373,'B197','3669238c070cb5531ade4f42990bd2ac','V Surya','','2024-07-14 18:31:28',NULL,NULL),
 (374,'B198','93d69e36a322292c957290f37ab88cdb','Elayaraja M','','2024-07-14 18:31:28',NULL,NULL),
 (375,'B199','ea1e6c58a73daf7c5d266e360f293219','Gowtham P','','2024-07-14 18:31:28',NULL,NULL),
 (376,'B200','fcd6bb4cbeadd27044159753d9d7e787','S. Dineshkumar','','2024-07-14 18:31:28',NULL,NULL),
 (377,'B201','22eecd546861c618e3be914841c5dccd','Nagaarjunan T','','2024-07-14 18:31:28',NULL,NULL),
 (378,'B202','460a5d2bbf989af0d504f03373b11b62','VINUKONDA SUSMITHASEN','','2024-07-14 18:31:28',NULL,NULL),
 (379,'B203','cadf5ea8780233a13caf173073ddcc3e','logeshwar.s','','2024-07-14 18:31:28',NULL,NULL),
 (380,'B204','15ed07b6a80de0bb10c64524fe433b50','ARAVINDH E','','2024-07-14 18:31:28',NULL,NULL),
 (381,'B205','ac40c7c96687796adfb42bbd2f5ee612','Santhosh S','','2024-07-14 18:31:28',NULL,NULL),
 (382,'B206','cd12309d2321169f2b5db42d651462df','K. SANGAVI','','2024-07-14 18:31:28',NULL,NULL),
 (383,'B207','1e4d396db0397a8bc71940651abf7076','Magesh.S.R','','2024-07-14 18:31:28',NULL,NULL),
 (384,'B208','03749739d70b54dd3dcbf40a514c7a28','svarjitanil10@gmail.com','','2024-07-14 18:31:28',NULL,NULL),
 (385,'B209','0318af1679c7559ed4e26d8cb82e1de5','K. SANGAVI','','2024-07-14 18:31:28',NULL,NULL),
 (386,'B210','b416b159a706898d624cbac6f09f7e62','Rajadurai.P','','2024-07-14 18:31:28',NULL,NULL),
 (387,'B211','237f74c1e76fb461c400c33ab050941b','Nebu C Thomas','','2024-07-14 18:31:28',NULL,NULL),
 (388,'B212','1bb669ecc0048e09f08db90578439575','Dareddy Swathi','','2024-07-14 18:31:28',NULL,NULL),
 (389,'B213','0a88a8b4adea667557b18f93c183962b','M.Boobalan','','2024-07-14 18:31:28',NULL,NULL),
 (390,'B214','853075a2e0105007e4833559df7ff2da','MANIVANNAN P','','2024-07-14 18:31:28',NULL,NULL),
 (391,'B215','03c306d1c9bee70d501df216670a2707','KAVIDHARSHINI D','','2024-07-14 18:31:28',NULL,NULL),
 (392,'B216','9000867db58dd05ea54932628f197e8c','Abinaya S','','2024-07-14 18:31:28',NULL,NULL),
 (393,'B217','f6f960d257bbd748d92fe418b1185b2e','SANJAI M','','2024-07-14 18:31:28',NULL,NULL),
 (394,'B218','041d0cfab9c2eb6bb998469ea2f99294','Kavipriya S','','2024-07-14 18:31:28',NULL,NULL),
 (395,'B219','82a39fc5c88125b1cc06ecd391ed308f','RAVIKIRAN S','','2024-07-14 18:31:28',NULL,NULL),
 (396,'B220','43e6951aa12b2aea7c04e616c51484b8','V.Dharshini','','2024-07-14 18:31:28',NULL,NULL),
 (397,'B221','1e01b22f43ee7a5c17ebe0c66f4d35e5','P sangeetha','','2024-07-14 18:31:28',NULL,NULL),
 (398,'B222','065ffed861027a6f80f7d37a0726302a','KAVIRAJ S','','2024-07-14 18:31:28',NULL,NULL),
 (399,'B223','27890496832dbc3e2906e1044f9ccb31','VIGNESH G V','','2024-07-14 18:31:28',NULL,NULL),
 (400,'B224','3a6d6b651123f38a958fe107b84e2455','Dhamayanthi S','','2024-07-14 18:31:28',NULL,NULL),
 (401,'B225','80f13c21ff3398b91cfa05c8ebed65df','VIMAL L','','2024-07-14 18:31:28',NULL,NULL),
 (402,'B226','17ebaaf26e0024566b65f894da835030','KAVIYA SREE P','','2024-07-14 18:31:28',NULL,NULL),
 (403,'B227','f6981d9df0f0168f6046efcb35cd541c','SURYA S B','','2024-07-14 18:31:28',NULL,NULL),
 (404,'B228','8fb4b085118a800a966e8d0231d5356c','ARUL MURUGAN N','','2024-07-14 18:31:28',NULL,NULL),
 (405,'B229','6eeb7dfca5841994190bb86c0e10b5e6','Kantu Nivedha','','2024-07-14 18:31:28',NULL,NULL),
 (406,'B230','bd3a1156df0dde6ab44bd09062c4cf07','Theja Ashwin H','','2024-07-14 18:31:28',NULL,NULL),
 (407,'B231','cd94a192b595c60cfe4a5492a01f24d0','Pravin M','','2024-07-14 18:31:28',NULL,NULL),
 (408,'B232','aac99f8fef2577f62e30579ab394b161','Dilipan Prabha','','2024-07-14 18:31:28',NULL,NULL),
 (409,'B233','eb0925540e366af63fc28a8b48de61af','BADAPU','','2024-07-14 18:31:28',NULL,NULL),
 (410,'B234','308cd6aecfff38c896cb2596b6a16ae4','Jyothika Sujith','','2024-07-14 18:31:28',NULL,NULL),
 (411,'B235','4d49f49e4027c550c748ee6470537a90','Kantu Nivedha','','2024-07-14 18:31:28',NULL,NULL),
 (412,'B236','ba6adbfabb332de4e2f35ac94881837a','SERAN P','','2024-07-14 18:31:28',NULL,NULL),
 (413,'B237','b28b942c345b1b05a02ddca5b45f4595','AMBATI HARI KRISHNA','','2024-07-14 18:31:28',NULL,NULL),
 (414,'B238','a2381a6cd703d64b1898cd684ca3bd7e','PRABAHARAN S','','2024-07-14 18:31:28',NULL,NULL),
 (415,'B239','745dcdbff04be699e8d27d75fbff4516','SOWDESHWARI B','','2024-07-14 18:31:28',NULL,NULL),
 (416,'B240','ae268877463fa43659476df46156d8b9','ABISHEK P','','2024-07-14 18:31:28',NULL,NULL),
 (417,'B241','dad6fa9c452e6db95d3355bb5acf4c12','BARERA AYMAN A','','2024-07-14 18:31:28',NULL,NULL),
 (418,'B242','81561f7a059526b7db637f5084d5fe2f','Nandhini S','','2024-07-14 18:31:28',NULL,NULL),
 (419,'B243','381f8045de7c892399c1a7a8d4ef0e8c','PAVITHRA B','','2024-07-14 18:31:28',NULL,NULL),
 (420,'B244','7e5697aab7dc71150035d2559c077d6c','PRASANTH P','','2024-07-14 18:31:28',NULL,NULL),
 (421,'B245','6f31e987d38618eaa80993f050351343','KARTHIK PRASANTH B','','2024-07-14 18:31:28',NULL,NULL),
 (422,'B246','4b63f86431c4f19331c909b408010a22','Monica R','','2024-07-14 18:31:28',NULL,NULL),
 (423,'B247','67e2c0794bb8f8406d47761e516703f8','PARASURAMAN.S','','2024-07-14 18:31:28',NULL,NULL),
 (424,'B248','831e206b6885799a0e3c462136b2411a','JANSITHA M','','2024-07-14 18:31:28',NULL,NULL),
 (425,'B249','f2ecb70453cd55914388a3793b54006c','VINITHA.V','','2024-07-14 18:31:28',NULL,NULL),
 (426,'B250','c450b5653aef8abff05734bd225fcd26','VARSHINI S','','2024-07-14 18:31:28',NULL,NULL),
 (427,'B251','d1dba3eebc732f1a5832bf89641ccdc9','Yalamandala vinod','','2024-07-14 18:31:28',NULL,NULL),
 (428,'B252','5495b3817b20f56839afbc9df9ee65df','Jayaprakash M','','2024-07-14 18:31:28',NULL,NULL),
 (429,'B253','d9405ca90b6846574060dba7da12fb1f','Komathi A','','2024-07-14 18:31:28',NULL,NULL),
 (430,'B254','dcc19c6cc68164780fc6d246920de2ec','Kaviraj S M G','','2024-07-14 18:31:28',NULL,NULL),
 (431,'B255','f77722d8c8072487dd6dacdaa5966f7b','AATHIRAMILAKI S','','2024-07-14 18:31:28',NULL,NULL),
 (432,'B256','c0ecb6869fb9a0c322f28b228b43d22a','GOWTHAM K','','2024-07-14 18:31:28',NULL,NULL),
 (433,'B257','3df0eb63fde304804ec02b447ce23e48','DHARANEEDHARAN V','','2024-07-14 18:31:28',NULL,NULL),
 (434,'B258','e762926b619f033ee6c803c14fbb6900','Harinishree','','2024-07-14 18:31:28',NULL,NULL),
 (435,'B259','5a4f13be716f42f0d92439acd0b4fb3d','Jorige Sai Venkata Ganesh','','2024-07-14 18:31:28',NULL,NULL),
 (436,'B260','c62d5b75c6c85a306ec0040d91d58a06','M.soundharya','','2024-07-14 18:31:28',NULL,NULL),
 (437,'B261','8b02ef9b128a60fa5ab260a9d89fb6a7','Bejagam ramarao','','2024-07-14 18:31:28',NULL,NULL),
 (438,'B262','4d1d8840c767274436c892645807ca3a','Aarthi V','','2024-07-14 18:31:28',NULL,NULL),
 (439,'B263','290d4b81f4e2b47d86fd1b0170e9aab7','s.santhosh kumar','','2024-07-14 18:31:28',NULL,NULL),
 (440,'B264','ca008935b81e0aecf6e4e6cb8c12d3c6','K.Logapriya','','2024-07-14 18:31:28',NULL,NULL),
 (441,'B265','514d648241fee6469880486d094a6c46','PRAVIN KUMAR P','','2024-07-14 18:31:28',NULL,NULL),
 (442,'B266','446ad951acee793ee712fc3f5b194cc0','SIVARANJANI A','','2024-07-14 18:31:28',NULL,NULL),
 (443,'B267','7dcc4db4a5b8e58286f7c314c21ddfc5','Vichu B','','2024-07-14 18:31:28',NULL,NULL),
 (444,'B268','a03d055a81bd37cb3598ada5b4fa29b3','LAKSHANA M','','2024-07-14 18:31:28',NULL,NULL),
 (445,'B269','7b142b863f22064bf659759469ef8668','THIRUPORSELVAN M','','2024-07-14 18:31:28',NULL,NULL),
 (446,'B270','a028084a407a2e581cad9ea79d0476d6','S. Renuka','','2024-07-14 18:31:28',NULL,NULL),
 (447,'B271','2c49362b73f45855e5c5aa69a0d0d2ed','Mugil Shabareeshwaran M','','2024-07-14 18:31:28',NULL,NULL),
 (448,'B272','13a75d7f3fb0dc5cccdaf8798e243d98','Bhogyam manohar','','2024-07-14 18:31:28',NULL,NULL),
 (449,'B273','86e85ea292f95c8aba1eb6503d2431ba','PAVITHRA R','','2024-07-14 18:31:28',NULL,NULL),
 (450,'B274','338b7c2591d326d51c380f21999063b2','PAVITHRA R','','2024-07-14 18:31:28',NULL,NULL),
 (451,'B275','bbbf586a99cb4ac27d1a4f789c335eb6','KEREN JR','','2024-07-14 18:31:28',NULL,NULL),
 (452,'B276','b636e322af1ae3335ada6b5f9519ba48','Priyadharshini. G','','2024-07-14 18:31:28',NULL,NULL),
 (453,'B277','1ac3bde8f978e9305e5ffce345cc0b90','LOGESHWARAN. M','','2024-07-14 18:31:28',NULL,NULL),
 (454,'B278','7db824b44973b6516da16d8b8ad5c92a','Prasath B','','2024-07-14 18:31:28',NULL,NULL),
 (455,'B279','1b9cef60af2f4edea069decd66c5dea1','Muhammed Ajmal P N','','2024-07-14 18:31:28',NULL,NULL),
 (456,'B280','602876685a8eb2965518b5cf28b1791d','RAGHULKUMAR K S','','2024-07-14 18:31:28',NULL,NULL),
 (457,'B281','2312996a778ad5e489a9bd0faa156755','PULLAMSETTY LAKSHMI SOWJANYA','','2024-07-14 18:31:28',NULL,NULL),
 (458,'B282','6a0b70e844cfc4288cf2222b7087c82b','Krishna.V','','2024-07-14 18:31:28',NULL,NULL),
 (459,'B283','b3e5c67b19730934170efd29dfeb73b5','THAMIZHMANI V','','2024-07-14 18:31:28',NULL,NULL),
 (460,'B284','13752fca13ce8c637b3efbb9959eb7dc','Elanchezhiyan. B','','2024-07-14 18:31:28',NULL,NULL),
 (461,'B285','d46395c7196ee3216d6f79f75cb2955d','Swedha devi.S','','2024-07-14 18:31:28',NULL,NULL),
 (462,'B286','8ef6fff94766a53b0c87a6bb7cb44382','Ravivarma P','','2024-07-14 18:31:28',NULL,NULL),
 (463,'B287','3d3650fa0631b94cca4da8db05ceb9d3','PRAVEENKUMAR A','','2024-07-14 18:31:28',NULL,NULL),
 (464,'B288','e0b2ea777cc9b9dfcf4977e596d9ad00','Mythili V','','2024-07-14 18:31:28',NULL,NULL),
 (465,'B289','3232a6c32bab0a409e8384d9f471de8a','Ramya R','','2024-07-14 18:31:28',NULL,NULL),
 (466,'B290','c75c608c01e0f0f5c615cc8b7feacbbc','TAMIL SELVAN M','','2024-07-14 18:31:28',NULL,NULL),
 (467,'B291','5cb84452c2928864f9826b433be3ebdf','Preethi R','','2024-07-14 18:31:28',NULL,NULL),
 (468,'B292','5ca9ce9fc925701b162c091fa25086f3','Mohanraj S','','2024-07-14 18:31:28',NULL,NULL),
 (469,'B293','ba602fd437d40c77b4920da605832a72','MOHAMED ALTHAF M','','2024-07-14 18:31:28',NULL,NULL),
 (470,'B294','2c295f4174543b45d39d7343357a87d0','Gowri.M','','2024-07-14 18:31:28',NULL,NULL),
 (471,'B295','6453b2e5ff00f91b3147fce078feffd0','SANTHOSH M','','2024-07-14 18:31:28',NULL,NULL),
 (472,'B296','d8c79691487652549bb68826bc456601','Kaviyasri M','','2024-07-14 18:31:28',NULL,NULL),
 (473,'B297','393f02219b8876eea70a797399c734d7','APJITH M','','2024-07-14 18:31:28',NULL,NULL),
 (474,'B298','7ecc862d4c55ba6d94b256cee276ac1c','Ramya R','','2024-07-14 18:31:28',NULL,NULL),
 (475,'B299','c0b9f4b8e0e7ec5812c350c2ac32c132','Akilan G','','2024-07-14 18:31:28',NULL,NULL),
 (476,'B300','4bce4e31702841966137590d3a2dd506','RAVI BALA K','','2024-07-14 18:31:28',NULL,NULL),
 (477,'B301','a5574408f3abf209e405323c2337a6cd','Santhosh kumar D','','2024-07-14 18:31:28',NULL,NULL),
 (478,'B302','81901b1727b9c1d0e234d5c1a383cf6b','Kesavprabu S','','2024-07-14 18:31:28',NULL,NULL),
 (479,'B303','08d867ff214ecccc3f6b97446aaf58d6','Mohamed Thanveer. M','','2024-07-14 18:31:28',NULL,NULL),
 (480,'B304','79105c107a22f74763c301fcf26cc39e','Kishore S','','2024-07-14 18:31:28',NULL,NULL),
 (481,'B305','905019c43ca6733d9a0059386ac89eb6','DESIKAN S','','2024-07-14 18:31:28',NULL,NULL),
 (482,'B306','18beeb13b03e982b641c01ebbf2a7c23','RAGHUNATH P','','2024-07-14 18:31:28',NULL,NULL),
 (483,'B307','8701f0824c60d641249b21fe5fe67db7','Sathasri S','','2024-07-14 18:31:28',NULL,NULL),
 (484,'B308','6c6009127b60282481f8ae8687d8cc74','THORLIKONDA SUDHEER','','2024-07-14 18:31:28',NULL,NULL),
 (485,'B309','679488b9dd05859c9b544e4aed42af41','SAKTHIVEL M','','2024-07-14 18:31:28',NULL,NULL),
 (486,'B310','913d90bbd3c2df07a0507fe7054177cf','Niveena. R','','2024-07-14 18:31:28',NULL,NULL),
 (487,'B311','962893adac653840297258539df58487','BIJO D S','','2024-07-14 18:31:28',NULL,NULL),
 (488,'B312','49f41c14288a2d771e737211f6188d6d','Tamilselvan M','','2024-07-14 18:31:28',NULL,NULL),
 (489,'B313','26539cd1e4fce7ae10b2f195f194d8ea','Gopinath C','','2024-07-14 18:31:28',NULL,NULL),
 (490,'B314','1cee9757cdb80b80c330e7d5b72b690d','Shrine tes A','','2024-07-14 18:31:28',NULL,NULL),
 (491,'B315','2730938ec1ee94287db262f92d170fd4','Stalin N','','2024-07-14 18:31:28',NULL,NULL),
 (492,'B316','571a328d0d7bf0bfe7b50739b641f107','J.HEMAVARSHINI','','2024-07-14 18:31:28',NULL,NULL),
 (493,'B317','97203f17103ed826cfc52c0a3b68348b','Sithdesh C S','','2024-07-14 18:31:28',NULL,NULL),
 (494,'B318','5b4daab6fbe197bd56c24ecd84b01986','SANTHOSH K','','2024-07-14 18:31:28',NULL,NULL),
 (495,'B319','212b1a35e093fda301f9defafcf1d966','Rajeswari R','','2024-07-14 18:31:28',NULL,NULL),
 (496,'B320','6a588a55b1ec4cc7cd3c2c2d8e7dd838','VENKATESH R','','2024-07-14 18:31:28',NULL,NULL),
 (497,'B321','9b7fd52688853441e41fc5e507356dcb','TAMIZH SELVAN S','','2024-07-14 18:31:28',NULL,NULL),
 (498,'B322','e826eaacb5f0519220d4af4fa83358e0','Muthukumar A','','2024-07-14 18:31:28',NULL,NULL),
 (499,'B323','8933802e38615923a52201213aa8ed1b','VISHWA P','','2024-07-14 18:31:28',NULL,NULL),
 (500,'B324','0dc1b877aaa5183468895db2dffb9917','MANISH SJ','','2024-07-14 18:31:28',NULL,NULL),
 (501,'B325','fd4ac6c9f084ababf8677701a796ea2c','Kavya SP','','2024-07-14 18:31:28',NULL,NULL),
 (502,'B326','39e8fe2d711f632fe86758a4d859b9de','Lathika.D','','2024-07-14 18:31:28',NULL,NULL),
 (503,'B327','f269f952fe7003535aead5c4a7f8451d','Udhaya Bharathi T','','2024-07-14 18:31:28',NULL,NULL),
 (504,'B328','72bf4a59c70f0cadc4f517b27af0324c','Sri Varsan N S','','2024-07-14 18:31:28',NULL,NULL),
 (505,'B329','48d42c9ef555471e273d2817347f15ce','Lavanya.V','','2024-07-14 18:31:28',NULL,NULL),
 (506,'B330','fce7a32ccfb822062cbeaf201009d19d','KRISHNA KUMAR R','','2024-07-14 18:31:28',NULL,NULL),
 (507,'B331','ad60c74d34b2aa2af3fbfae18fb7dfd0','PRAVIN B','','2024-07-14 18:31:28',NULL,NULL),
 (508,'B332','592f5451fa8109b46c64ee2923dd4370','Keerthini V','','2024-07-14 18:31:28',NULL,NULL),
 (509,'B333','643199af93d76a2c86e5dce5ecec5f40','SIVASAKTHI V','','2024-07-14 18:31:28',NULL,NULL),
 (510,'B334','4f6b0d922d5fb4de4b6ad6c5c1cdaab7','T. Uma bharathi','','2024-07-14 18:31:28',NULL,NULL),
 (511,'B335','87c86895af57aaf4cbe76cdcfd056124','RAJKUMAR J','','2024-07-14 18:31:28',NULL,NULL),
 (512,'B336','83b6822e2756cfda07708aba4170d1a7','RENUKA S','','2024-07-14 18:31:28',NULL,NULL),
 (513,'B337','2026fa7a9120d3dd6502f72df0da85ee','LAVANYA N M','','2024-07-14 18:31:28',NULL,NULL),
 (514,'B338','f5214406c49c77a778237a9a2f124e28','M.TANU RANI SINGH','','2024-07-14 18:31:28',NULL,NULL),
 (515,'B339','0998d9fe1bbd48b5f5d554cc322db7da','PRIYADHARSHINI J','','2024-07-14 18:31:28',NULL,NULL),
 (516,'B340','51d40bbc6ba72152f6fa213d000f9c6e','KAVIYASRI P','','2024-07-14 18:31:28',NULL,NULL),
 (517,'B341','6b7d60c136151064cf473ec49a9e2da4','Haran N','','2024-07-14 18:31:28',NULL,NULL),
 (518,'B342','e90cb0290f6cf24bfb8e9b310f8f5d2a','RAHUMAN KHAN K','','2024-07-14 18:31:28',NULL,NULL),
 (519,'B343','b2998dd6b22c92074036e37144aafb79','RAJAVEL P','','2024-07-14 18:31:28',NULL,NULL),
 (520,'B344','ade1eb7ce784ced331dcb554ae66840f','RAMYA V','','2024-07-14 18:31:28',NULL,NULL),
 (521,'B345','186a437ab62766b1ba2e17bcb6e89c1c','MOULIESWARAN V','','2024-07-14 18:31:28',NULL,NULL),
 (522,'B346','b387fa34d696c84e385428128d513a4f','CHANDOLU CHANDRA SHEKAR','','2024-07-14 18:31:28',NULL,NULL),
 (523,'B347','04e3b776f916f9140ef5e2a8a1dd6f3d','Monisha.R','','2024-07-14 18:31:28',NULL,NULL),
 (524,'B348','ca982816aabfb8d40e17507e631c7e4a','YAZHINI S','','2024-07-14 18:31:28',NULL,NULL),
 (525,'B349','126326f1d321d837876f27fcc0537c76','Sathiyashri S','','2024-07-14 18:31:28',NULL,NULL),
 (526,'B350','ba26e6163807059ff544b58b25ecbe78','SHONA.S','','2024-07-14 18:31:28',NULL,NULL),
 (527,'B351','4b780237aeab9f07fe089f95ee0f0ab9','JAGATHI S','','2024-07-14 18:31:28',NULL,NULL),
 (528,'B352','42bbe794344f3bdd8850bb9d2818c4c1','PRITHIVIRAJ R','','2024-07-14 18:31:28',NULL,NULL),
 (529,'B353','bd18ebf05c62228af49b8a840a39e4de','Keertheeswaran','','2024-07-14 18:31:28',NULL,NULL),
 (530,'B354','15526ba8d1ded6684b0269bf69af3b42','Kavin M','','2024-07-14 18:31:28',NULL,NULL),
 (531,'B355','a7524a4b3ce453d573d758c120e30663','Yellanti chanukya','','2024-07-14 18:31:28',NULL,NULL),
 (532,'B356','79dcb06cdbec4c9f2e53325f0b1ab982','Shanmugaguru G','','2024-07-14 18:31:28',NULL,NULL),
 (533,'B357','cf64417ec5a62147aa0c63ac6372371a','Atchaya C','','2024-07-14 18:31:28',NULL,NULL),
 (534,'B358','14d6279806e8e22e089d39762ff31c45','Rishitharun A','','2024-07-14 18:31:28',NULL,NULL),
 (535,'B359','b9030bac9328def69dba341b333d745e','Kavin M','','2024-07-14 18:31:28',NULL,NULL),
 (536,'B360','711a69e4cbbb87ee77308d0929794dab','Swathi K','','2024-07-14 18:31:28',NULL,NULL),
 (537,'B361','7873b1c6968984ec5faac4b31dee3686','PRASANNA.S','','2024-07-14 18:31:28',NULL,NULL),
 (538,'B362','53209a519fe9eb555b70f36b6b79792a','M.Sarathiprakash','','2024-07-14 18:31:28',NULL,NULL),
 (539,'B363','83a658ab3ea51151f93c32b2ed54a0cd','Thuraka Anil','','2024-07-14 18:31:28',NULL,NULL),
 (540,'B364','cd8379ee7ee07d00e5f66a9597c79412','MALLE SRIHARI','','2024-07-14 18:31:28',NULL,NULL),
 (541,'B365','babc6be5c5a011c25dcc0b3fb058fdb5','Madhavan K','','2024-07-14 18:31:28',NULL,NULL),
 (542,'B366','ba048379bcce9615bb9fd4b553453df6','Saladi Raghavendra Sai','','2024-07-14 18:31:28',NULL,NULL),
 (543,'B367','9d7fea43fb41008c6ed41bfe16b5c9ae','A.TAMILARASI','','2024-07-14 18:31:28',NULL,NULL),
 (544,'B368','1c11ef4cc79797fa130c231f4fd8a625','TAMILARASAN G','','2024-07-14 18:31:28',NULL,NULL),
 (545,'B369','72ed3ebdf32f1684d625deff39787dc2','Ragul prasanth R','','2024-07-14 18:31:28',NULL,NULL),
 (546,'B370','02ea74956197b41b649433b011e16b09','Christina.j','','2024-07-14 18:31:28',NULL,NULL),
 (547,'B371','6e15b00adc14411943e6e2051f8e81e3','RAGUL G','','2024-07-14 18:31:28',NULL,NULL),
 (548,'B372','3b175644457dbc3f5fd9da6904f5bce9','Bavanya. V','','2024-07-14 18:31:28',NULL,NULL),
 (549,'B373','030f1e9b686f7ef91c1263986eb8a1b5','Thamizh Amudhan K','','2024-07-14 18:31:28',NULL,NULL),
 (550,'B374','55da44cff8539ec262b57080ae916ff5','Lokesh vasan. S','','2024-07-14 18:31:28',NULL,NULL),
 (551,'B375','6b304356e52008c9b754db64f5e1931f','LATHIKA P','','2024-07-14 18:31:28',NULL,NULL),
 (552,'B376','0cf043393a48d1e8fafa5a2c3f3537fb','Atchaya C','','2024-07-14 18:31:28',NULL,NULL),
 (553,'B377','645c519ec8d55237a5ed835ca5cf5848','Dhinesh T','','2024-07-14 18:31:28',NULL,NULL),
 (554,'B378','cf01bbc74d44a49a14b65d6030931f54','VENKATESH K','','2024-07-14 18:31:28',NULL,NULL),
 (555,'B379','ba175183b9a39c27277bb1935bdb985a','RITHIKA MURUGAN','','2024-07-14 18:31:28',NULL,NULL),
 (556,'B380','39158f2c375f4cdbef725ec5ea3e5d76','S. BABYSHALINI','','2024-07-14 18:31:28',NULL,NULL),
 (557,'B381','1f74297b1fef135c0d5d79398b183e22','GOKUL S','','2024-07-14 18:31:28',NULL,NULL),
 (558,'B382','898a2f02d691592e43d7422e4ea38de0','Surya.k','','2024-07-14 18:31:28',NULL,NULL),
 (559,'B383','ac18795681c9c461f52a449be49d2b05','VELMURUGAN M','','2024-07-14 18:31:28',NULL,NULL),
 (560,'B384','a7336f6dae70333ce1371e3bbc4d9dd2','Inbakumar G','','2024-07-14 18:31:28',NULL,NULL),
 (561,'B385','eb7489b249e9b44e65135d2aa2bff0ad','SIVAKUMAR.R','','2024-07-14 18:31:29',NULL,NULL),
 (562,'B386','1a966b4713ea7cd1df37aef920bedfd8','Jeevanantham','','2024-07-14 18:31:29',NULL,NULL),
 (563,'B387','8e232ab00b96091f261b4eaa588d48b9','Saranya S','','2024-07-14 18:31:29',NULL,NULL),
 (564,'B388','d1cd4a973cede1b0a987c83d39712f80','Kavya vasanth','','2024-07-14 18:31:29',NULL,NULL),
 (565,'B389','9cab5c8bd9b0f4d926fb79aed7cc408a','Sharmila. A','','2024-07-14 18:31:29',NULL,NULL),
 (566,'B390','036f66df993b9eedf02d1d5bdb58516f','PAUL RICHARDSON S','','2024-07-14 18:31:29',NULL,NULL),
 (567,'B391','50a271ae07b384742b8c00f751dc98a4','Md Ashraf Ali','','2024-07-14 18:31:29',NULL,NULL),
 (568,'B392','f2fa17dac79d34c1ce918c029b801a2d','MOHAMED FAGATH M','','2024-07-14 18:31:29',NULL,NULL),
 (569,'B393','b538ed1a77fb97b3b5f6afc44515165b','SANTHOSH KUMAR N.R','','2024-07-14 18:31:29',NULL,NULL),
 (570,'B394','0650c78b06ff21b080f9e32c8051aa43','MUKKESH S','','2024-07-14 18:31:29',NULL,NULL),
 (571,'B395','25ce673d8098c8848b9ee4e05d644130','Navin J','','2024-07-14 18:31:29',NULL,NULL),
 (572,'B396','67889a940a418b2bb8638ad1b8b1f08f','BOOPATHI.J','','2024-07-14 18:31:29',NULL,NULL),
 (573,'B397','ca59382f1068d16722f1e7d02415c902','Gunduboina.Mahendra','','2024-07-14 18:31:29',NULL,NULL),
 (574,'B398','12b152f2f422fbc9e2fbcfbc89b3d4b7','KAMALAKANNAN A','','2024-07-14 18:31:29',NULL,NULL),
 (575,'B399','d178c35b36931e9bb868142109f12a96','SANJAYKUMAR S','','2024-07-14 18:31:29',NULL,NULL),
 (576,'B400','6600bef56b76fdc341b099bb87ee3fdc','R. Priyadharshini','','2024-07-14 18:31:29',NULL,NULL),
 (577,'B401','733dc17cd44e4b0303626bdfeec56521','MANOJ C S','','2024-07-14 18:31:29',NULL,NULL),
 (578,'B402','952181cfa44b47798c78ba814270de46','SANTHOSH M','','2024-07-14 18:31:29',NULL,NULL),
 (579,'B403','0a6cee543f4f3281e70be293d23c86e0','Rithin S Sundar','','2024-07-14 18:31:29',NULL,NULL),
 (580,'B404','b679eb06f5ec9f4a7ce21bb2a590ae89','SIVANAVEEN L.','','2024-07-14 18:31:29',NULL,NULL),
 (581,'B405','edf52377a54f5fc84eaa009b4e9493ee','KIRUTHIKA S','','2024-07-14 18:31:29',NULL,NULL),
 (582,'B406','a7933ecebeb842761a03d2cf4a42171b','Monishwar D K','','2024-07-14 18:31:29',NULL,NULL),
 (583,'B407','2e901579c1c8ea70d59c775ddecb3934','RAMU A','','2024-07-14 18:31:29',NULL,NULL),
 (584,'B408','84f23dfda6837bac063c0beb9b3cd458','SANGAMITHRA.A','','2024-07-14 18:31:29',NULL,NULL),
 (585,'B409','f174bf908f7cd1edf641f86c7d534ae7','M.LAVANYA','','2024-07-14 18:31:29',NULL,NULL),
 (586,'B410','169cb3cb567fa057684a67d33c1ab38c','M.LAVANYA','','2024-07-14 18:31:29',NULL,NULL),
 (587,'B411','1e6330426246f56bd1de73f031874eed','Vimala v','','2024-07-14 18:31:29',NULL,NULL),
 (588,'B412','9ef4d299f88dbaaa3dbde1e36e1c4da5','SIVASHANKAR. R','','2024-07-14 18:31:29',NULL,NULL),
 (589,'B413','5d073fd20260afd6a277a94102b958c4','Sabasti Princiya S','','2024-07-14 18:31:29',NULL,NULL),
 (590,'B414','a77d93c048364619ed7e7331a7e448ed','Nivetha .S','','2024-07-14 18:31:29',NULL,NULL),
 (591,'B415','6ecaa2dc58ac4749bd83f182e0fee2d4','Sandhiya s','','2024-07-14 18:31:29',NULL,NULL),
 (592,'B416','16f7d0d0057c8559770c36ddc3d66289','Mano B','','2024-07-14 18:31:29',NULL,NULL),
 (593,'B417','94c25cdf7dc53a503c2c5fb14579bcd3','Shivanesh J','','2024-07-14 18:31:29',NULL,NULL),
 (594,'B418','29f677a80855341d31e97b07bc2a1615','VIGNESHWARAN B','','2024-07-14 18:31:29',NULL,NULL),
 (595,'B419','e860225effd3e1ce1f346e6c80363280','S Kathiravan','','2024-07-14 18:31:29',NULL,NULL),
 (596,'B420','b9d742268d3c778a49419a1476119034','INIYAVAL T','','2024-07-14 18:31:29',NULL,NULL),
 (597,'B421','3ab871b0e75e5b52b1067afc12a5ba07','RITHIKA D R','','2024-07-14 18:31:29',NULL,NULL),
 (598,'B422','722db405042592625ac4b5a3242ee15e','Tamil Vani J','','2024-07-14 18:31:29',NULL,NULL),
 (599,'B423','df5d0e1dbe4cdd7bf5acdabc912a6bd9','Srinivasha prasath M','','2024-07-14 18:31:29',NULL,NULL),
 (600,'B424','0c172606544e55db6945456fcae80616','VIMAL RAJ P','','2024-07-14 18:31:29',NULL,NULL),
 (601,'B425','089318c417f031a0801a79b3a9380813','PRABHA A','','2024-07-14 18:31:29',NULL,NULL),
 (602,'B426','ac97085d8e7c20d6d811ddada1f6bde2','Shreeram J','','2024-07-14 18:31:29',NULL,NULL),
 (603,'B427','a298429978884f03ff9d33e4b00a91fd','Vasanthi M','','2024-07-14 18:31:29',NULL,NULL),
 (604,'B428','23ac967eb7eb786970d5feb04fec3c1c','LAKSHMANAN R','','2024-07-14 18:31:29',NULL,NULL),
 (605,'B429','80767f7f7934a7bae13479e681299d80','NISHANTH BABU','','2024-07-14 18:31:29',NULL,NULL),
 (606,'B430','fd737c8d4e36f2954294177e4451d2fd','R.HARITHA','','2024-07-14 18:31:29',NULL,NULL),
 (607,'B431','6fff88078f4d5cd25b1350d77bd39978','P.ILAYATHARANI','','2024-07-14 18:31:29',NULL,NULL),
 (608,'B432','9f6d5f15fc5dfdf001c6a3fbe87a222c','PRAVEEN KANTH R','','2024-07-14 18:31:29',NULL,NULL),
 (609,'B433','d52bd097dbe73be9291785265862b856','THARA R','','2024-07-14 18:31:29',NULL,NULL),
 (610,'B434','c11aacd3c4275def4799358b66a74547','Munagala Navadeep Reddy','','2024-07-14 18:31:29',NULL,NULL),
 (611,'B435','c8edce7792a05cb15f00b1821f3e888d','KAMESHWARAN S','','2024-07-14 18:31:29',NULL,NULL),
 (612,'B436','7b67d2eea6465a2153fab4a2e6acace1','Vasanth Kumar P','','2024-07-14 18:31:29',NULL,NULL),
 (613,'B437','7b6db26cd7351a1d41dd1c6f66fbdb20','LOGESHWARAN. M','','2024-07-14 18:31:29',NULL,NULL),
 (614,'B438','268c6c191634ceecb651e1b30ba2dd0c','BALA P','','2024-07-14 18:31:29',NULL,NULL),
 (615,'B439','19de064795161f9e626079171906f44f','VARSHA R','','2024-07-14 18:31:29',NULL,NULL),
 (616,'B440','5eee63d04f7d056048bc8844f62df6ba','VIGNESHWARAN S','','2024-07-14 18:31:29',NULL,NULL),
 (617,'B441','c7e73189561aa545677826560c4096c2','Meiyarasan M','','2024-07-14 18:31:29',NULL,NULL),
 (618,'B442','8b8142b3ad6e1f6075a9c0430c3eddd1','Saranraj K','','2024-07-14 18:31:29',NULL,NULL),
 (619,'B443','f968a0935a8db6270a4160c75ce09a8e','Sivathulasimani M','','2024-07-14 18:31:29',NULL,NULL),
 (620,'B444','476ac5fe29c06ec0702b7c42baf7de9e','Komathi  A','','2024-07-14 18:31:29',NULL,NULL),
 (621,'B445','de47c943efab0e46a5e71d2f438c4509','Lavanya V','','2024-07-14 18:31:29',NULL,NULL),
 (622,'B446','4e429bfdd5d95fe2efc8b42879057955','YOGESH. S','','2024-07-14 18:31:29',NULL,NULL),
 (623,'B447','e2b3e93e4f4dea63810ea8e9342611db','ATCHAYA S','','2024-07-14 18:31:29',NULL,NULL),
 (624,'B448','797a979046fd73b7f3c3271e6426595e','LATHIKA P','','2024-07-14 18:31:29',NULL,NULL),
 (625,'B449','76d58303cbaf45702158b5a7af2fe91a','JEEVANANTHAM N','','2024-07-14 18:31:29',NULL,NULL),
 (626,'B450','022d6ad5da5895f8ade09bf54aaa0ad0','Amul Sughirtha. A','','2024-07-14 18:31:29',NULL,NULL),
 (627,'B451','736e22595d209dc1f480d699ae2c7248','S.MADHUMITHA','','2024-07-14 18:31:29',NULL,NULL),
 (628,'B452','042e6c85bd5cbb5a05a2a22f6d620fa3','Praveen S','','2024-07-14 18:31:29',NULL,NULL),
 (629,'B453','60bd19f44afb7aaf77fae839dd9fd44a','Jeena vincent','','2024-07-14 18:31:29',NULL,NULL),
 (630,'B454','d69f721ec50a51349db13d34cddfd9e1','Swathi K','','2024-07-14 18:31:29',NULL,NULL),
 (631,'B455','6a1a6f02f834d83922ae3edfc0d44173','Elayaraja M','','2024-07-14 18:31:29',NULL,NULL),
 (632,'B456','afdd2f56d9f57f18184cd4f57d8682df','Lakshmi','','2024-07-14 18:31:29',NULL,NULL),
 (633,'B457','550641cc23da41b866f1d4b7463454ac','Abinaya R','','2024-07-14 18:31:29',NULL,NULL),
 (634,'B458','a503a14711afaf47248b89b7ab914c3a','ANBARASI E','','2024-07-14 18:31:29',NULL,NULL),
 (635,'B459','93d717453a999b360aa60afbb84ab653','GANDHI  S','','2024-07-14 18:31:29',NULL,NULL),
 (636,'B460','b490a6ab0d70026774be8bc4d9e79f21','Amul Sughirtha. A','','2024-07-14 18:31:29',NULL,NULL),
 (637,'B461','fde76f20109c39aa37930b645723a5a2','Komathi A','','2024-07-14 18:31:29',NULL,NULL),
 (638,'B462','d36bc2c3105ef66f37c32779c474a286','MANOJ KANNAN S','','2024-07-14 18:31:29',NULL,NULL),
 (639,'B463','cef7d935862600df8837ce5328e8b155','Niveena. R','','2024-07-14 18:31:29',NULL,NULL),
 (640,'B464','cd8b14376efaef02122da083f1c33559','KAVIYASRI P','','2024-07-14 18:31:29',NULL,NULL),
 (641,'B465','b7f0e1fb7437e9dd60f4c1fb4a343ec3','Turimella Ajay','','2024-07-14 18:31:29',NULL,NULL),
 (642,'B466','5c4fb70fc3a8ba074c9ba51b7febbeb8','ARIVARASAN S','','2024-07-14 18:31:29',NULL,NULL),
 (643,'B467','c3ab061a3e351152cf8aba6d88742c8b','THAMARAI SELVI S','','2024-07-14 18:31:29',NULL,NULL),
 (644,'B468','af584e8926af1a3c931755acbe955347','S.Sountharya','','2024-07-14 18:31:29',NULL,NULL),
 (645,'B469','edc8792a82b7dec1e9667adfda7cbe28','AARTHI K','','2024-07-14 18:31:29',NULL,NULL),
 (646,'B470','c149394495ddd8867c3540e8874a7bb2','VEERAKUMAR V','','2024-07-14 18:31:29',NULL,NULL),
 (647,'B471','8aaf1094c3424b756c8da0892a84ed4e','AKSHAYA S','','2024-07-14 18:31:29',NULL,NULL),
 (648,'B472','70bd875459c91eb85b1c4d26dbcd9c28','Sivaneshwari R','','2024-07-14 18:31:29',NULL,NULL),
 (649,'B473','62bcb9a0a7760fffb201387bd4986d5b','Rajkumar P','','2024-07-14 18:31:29',NULL,NULL),
 (650,'B474','11096217dcc1b8b882d6e4286794e457','S.karkuzhali','','2024-07-14 18:31:29',NULL,NULL);
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (651,'B475','825bc85136253e6d4fa89df00c618460','Kowsalya S','','2024-07-14 18:31:29',NULL,NULL),
 (652,'B476','1b40242ad5c40f50de3ce5b38e653c31','RITHIKA S','','2024-07-14 18:31:29',NULL,NULL),
 (653,'B477','2cf491329f447eafccc753c48c4a99cf','BOOPATHIRAJA M','','2024-07-14 18:31:29',NULL,NULL),
 (654,'B478','36276bf5c77bc5fdc965ed24c6b5b678','Vasumitha M','','2024-07-14 18:31:29',NULL,NULL),
 (655,'B479','838321026d2f460a5a4758dbf3d492a3','K.ASHOK','','2024-07-14 18:31:29',NULL,NULL),
 (656,'B480','caca4072694c082a23fb1c300396db33','Surya S','','2024-07-14 18:31:29',NULL,NULL),
 (657,'B481','24879d54b9204362bb5906e4b788f683','SUSMITHA M','','2024-07-14 18:31:29',NULL,NULL),
 (658,'B482','a3429143d778e7936f9382716fe5424a','Sudharshanan S','','2024-07-14 18:31:29',NULL,NULL),
 (659,'B483','e07a7075ae014bcd6a0a881188635122','THARANISHWARAN S','','2024-07-14 18:31:29',NULL,NULL),
 (660,'B484','e01aa7232ca605671e375ac08b44cb72','AISHWARYA M','','2024-07-14 18:31:29',NULL,NULL),
 (661,'B485','e3f22c408cc5ffe2bd39d1c4c400b050','Dharani v','','2024-07-14 18:31:29',NULL,NULL),
 (662,'B486','2c99865067f9d250f92b2d8573e9a4ea','AISHWARYA M','','2024-07-14 18:31:29',NULL,NULL),
 (663,'B487','605a40bba4086bb79855c4f582f7c2ef','GUNA R','','2024-07-14 18:31:29',NULL,NULL),
 (664,'B488','b5ef5b5ea521ffda6f29bc00e49144d5','Billgates S','','2024-07-14 18:31:29',NULL,NULL),
 (665,'B489','e2b01f387b03ed31f3554bcb8c899e66','SANJAI.C','','2024-07-14 18:31:29',NULL,NULL),
 (666,'B490','ec9810e75e9c233494b6150728c65983','SERAN M','','2024-07-14 18:31:29',NULL,NULL),
 (667,'B491','8a78c36da547b6662f5c35a6f729353e','Prithiviraj B','','2024-07-14 18:31:29',NULL,NULL),
 (668,'B492','751dab805e1edb5e08fc469350de41d8','YUGAN V','','2024-07-14 18:31:29',NULL,NULL),
 (669,'B493','31efc4e272875dfb5c30166f94eef941','KRISHNA KUMAR S','','2024-07-14 18:31:29',NULL,NULL),
 (670,'B494','59a12a32f2bf22f4d9ce8b50d2bd5b8e','IRSHATH KHAN S','','2024-07-14 18:31:29',NULL,NULL),
 (671,'B495','00ebb12855de54244cf3ee574304dc9d','PRIYADHARSHINI V','','2024-07-14 18:31:29',NULL,NULL),
 (672,'B496','6dd71856e7263141dcc9d09f2f2fc881','Vennila M','','2024-07-14 18:31:29',NULL,NULL),
 (673,'B497','5787c92985290da8ab63f93e7e04214b','Thirumal C','','2024-07-14 18:31:29',NULL,NULL),
 (674,'B498','9f42ae4bef53b8add8ebd2787b96438d','Arunkumar.A','','2024-07-14 18:31:29',NULL,NULL),
 (675,'B499','303c87a355276dfde6cc75b54a582c3d','Manoguru  s','','2024-07-14 18:31:29',NULL,NULL),
 (676,'B500','c960d0c653f11ce25c838453bc2b7079','VEERAJAYASHURIYA S','','2024-07-14 18:31:29',NULL,NULL),
 (677,'B501','7e9ced8dd14f17478edb84ca8b228ea4','Aravindhan. K','','2024-07-14 18:31:29',NULL,NULL),
 (678,'B502','aaa88e2fce232e0e772f4b0826dab10e','Srinivasha prasath M','','2024-07-14 18:31:29',NULL,NULL),
 (679,'B503','0acaba96aa6121b80f8c1e794dafd789','NAGARAJAN P','','2024-07-14 18:31:29',NULL,NULL),
 (680,'B504','dd1b4f0f87369d40d9bcfcee8b4a31a7','SAISNEKA K','','2024-07-14 18:31:29',NULL,NULL),
 (681,'B505','718a18016750083f06b25ac0f0cbc583','Dhanush.S','','2024-07-14 18:31:29',NULL,NULL),
 (682,'B506','e1e2a125e0e8b717cda04cba621968cf','Gokul S','','2024-07-14 18:31:29',NULL,NULL),
 (683,'B507','80903b25c43c9e70f7d72193280c4c68','Nithya A','','2024-07-14 18:31:29',NULL,NULL),
 (684,'B508','b771472d7712286446792ffceb860f2e','Nithisan K','','2024-07-14 18:31:29',NULL,NULL),
 (685,'B509','9b5967cf9ce8c3f6c8e46b6d5ec2e036','IMARA RAGAVI R','','2024-07-14 18:31:29',NULL,NULL),
 (686,'B510','d26062d8a6a1bc89cdaaa24046f0559e','Karthikesh.J.B','','2024-07-14 18:31:29',NULL,NULL),
 (687,'B511','015d2620be413d44ae0f2f4f3d00c502','Dhanusha N','','2024-07-14 18:31:29',NULL,NULL),
 (688,'B512','a8051c031e7f66f59f8334f086e90806','MATHIOLI.G','','2024-07-14 18:31:29',NULL,NULL),
 (689,'B513','ba5aa027ca35a99808ed82b2037f9100','A.Bhavani','','2024-07-14 18:31:29',NULL,NULL),
 (690,'B514','5dc29bfee29830e42d9baf46828f39cf','S.Swathi','','2024-07-14 18:31:29',NULL,NULL),
 (691,'B515','71452f4b4b8f8b0a1b6735a07abfbcb6','S MITHRAA RAM','','2024-07-14 18:31:29',NULL,NULL),
 (692,'B516','15d09077ef5bc1970945a717dba7c01d','Gowsalya S','','2024-07-14 18:31:29',NULL,NULL),
 (693,'B517','1a5455be2bb0d2054afff7a85290d6e6','LIGEETHA S','','2024-07-14 18:31:29',NULL,NULL),
 (694,'B518','5cbdba3fca999c55b3311f44e932c120','Guruprakash Y','','2024-07-14 18:31:29',NULL,NULL),
 (695,'B519','ad0c4813c386cdcfd4feffd433b0a1ec','MONISHA.P','','2024-07-14 18:31:29',NULL,NULL),
 (696,'B520','fca602a2c26ba91ddbee5b96a3aaa27c','JAYANTHAN N','','2024-07-14 18:31:29',NULL,NULL),
 (697,'B521','ba834bb4c04c958549761e76f44aacc5','Balasubramanian K','','2024-07-14 18:31:29',NULL,NULL),
 (698,'B522','74cb3b0785a4d5ff32ee82d4f9e8284d','VISHNUPRIYA S','','2024-07-14 18:31:29',NULL,NULL),
 (699,'B523','79af7a14fd302038c1136b7463760519','VASEEKARAN M','','2024-07-14 18:31:29',NULL,NULL),
 (700,'B524','fe5f6e3f3f00189356d6f9605e4e306b','JAYAKUMAR S','','2024-07-14 18:31:29',NULL,NULL),
 (701,'B525','de1cf1c55c297c0c71149c050a61824f','Vishnupriya R','','2024-07-14 18:31:29',NULL,NULL),
 (702,'B526','029581b0510050dadbd020a35271247e','Dishwak I','','2024-07-14 18:31:29',NULL,NULL),
 (703,'B527','f93a43702b8227fd2720770b5378191f','SWEATHI S','','2024-07-14 18:31:29',NULL,NULL),
 (704,'B528','458a7f7ee7e772325c64846e771936cb','GURU DIVYA.L','','2024-07-14 18:31:29',NULL,NULL),
 (705,'B529','bdf38556430d2ffa9298989902b1d512','NIVETHA S','','2024-07-14 18:31:29',NULL,NULL),
 (706,'B530','c092c5db931e8428ac119843e5c6d78e','GUNASANKARI  P.T','','2024-07-14 18:31:29',NULL,NULL),
 (707,'B531','b44491d45caa1d84ec8f43a425af762a','logeshwar.s','','2024-07-14 18:31:29',NULL,NULL),
 (708,'B532','656b8c0a1584dd027f7ad5931c42f85d','NISHA S','','2024-07-14 18:31:29',NULL,NULL),
 (709,'B533','35cdb8c72698431a645ce682adb2c528','Giri S','','2024-07-14 18:31:29',NULL,NULL),
 (710,'B534','caac1ee1c9284179e870277e83111130','PRAVEEN S','','2024-07-14 18:31:29',NULL,NULL),
 (711,'B535','6b13706db1e31e882a700e8a65523629','Bavya Sri.V','','2024-07-14 18:31:29',NULL,NULL),
 (712,'B536','a6897fc1de94dc7fd346e0924e7c3ad1','KAVYASRI R.R','','2024-07-14 18:31:29',NULL,NULL),
 (713,'B537','29813306efb8d91288f9979ba4945920','PARTHASARATHI B','','2024-07-14 18:31:29',NULL,NULL),
 (714,'B538','ab507f06e4226f343d4284346a4a836b','KATHIRAVAN R','','2024-07-14 18:31:29',NULL,NULL),
 (715,'B539','00c51e44c73b7ad4473d7ed660a188cc','SATHISHKUMAR R','','2024-07-14 18:31:29',NULL,NULL),
 (716,'B540','94dfc01fb9dcb628bb3010932ca38a8b','JEGADEESH.S','','2024-07-14 18:31:29',NULL,NULL),
 (717,'B541','a0242374fcba63d151e68aa80e6d6d4e','Mathan K','','2024-07-14 18:31:29',NULL,NULL),
 (718,'B542','11f71c6fbae2e28ece6fdcb9af152c4b','Prakashraji. K','','2024-07-14 18:31:29',NULL,NULL),
 (719,'B543','7c37d089082b405461af99125f174576','VENKATESAN P','','2024-07-14 18:31:29',NULL,NULL),
 (720,'B544','2464d8d1ae2dcb8afbbada04382e5b5b','Sudha Kasireddy','','2024-07-14 18:31:29',NULL,NULL),
 (721,'B545','e2cee6d16e8bfbe5ad4f0234ac1def35','DINESH RAJA M','','2024-07-14 18:31:29',NULL,NULL),
 (722,'B546','9057ef3e26f30408b3edcac069872ad9','Sudha Kasireddy','','2024-07-14 18:31:29',NULL,NULL),
 (723,'B547','0042d910975da0b926866bea51cfc754','T. Ayyappa','','2024-07-14 18:31:29',NULL,NULL),
 (724,'B548','31f407bd361b7bf429f303e73701520d','MEEJOHN S','','2024-07-14 18:31:29',NULL,NULL),
 (725,'B549','0b2a9e7f16c3c78bd94cb3573c24436a','RAHUL.R.S','','2024-07-14 18:31:29',NULL,NULL),
 (726,'B550','ca512735ffdd17a6faca7a73909eb5da','DHARUNKUMAR M','','2024-07-14 18:31:29',NULL,NULL),
 (727,'B551','6297531b3ef828de735e1d18f3ed8da8','Bavithra.R','','2024-07-14 18:31:29',NULL,NULL),
 (728,'B552','41e1b345295a5e6d0a766e573cde1da6','DINS MILTON J','','2024-07-14 18:31:29',NULL,NULL),
 (729,'B553','a7a50677b9af5a32daff63e8b40a2fa4','K. Manjusri','','2024-07-14 18:31:29',NULL,NULL),
 (730,'B554','fa89bd6cceb9c0d9a19f7e47aa75c1f5','LOGANAYAGI T','','2024-07-14 18:31:29',NULL,NULL),
 (731,'B555','18000bfcbfb0fb65f65ccbdfc71794a8','M.Keerthana','','2024-07-14 18:31:29',NULL,NULL),
 (732,'B556','169c48758de46d8fcd45147c6191fcce','K MANORANJITHAM','','2024-07-14 18:31:29',NULL,NULL),
 (733,'B557','07204076531010cc35d903ea8395fc64','DIVYA R','','2024-07-14 18:31:29',NULL,NULL),
 (734,'B558','12686bbc917df0c8fa4f3fb2905ea737','Ajitha. K','','2024-07-14 18:31:29',NULL,NULL),
 (735,'B559','045a3f47fab0b0ac294b0aa8e29eb0fc','ELANTHAMILAN S','','2024-07-14 18:31:29',NULL,NULL),
 (736,'B560','9a638d415b2aadb6d66ee1db27d6c564','Naveenasri A','','2024-07-14 18:31:30',NULL,NULL),
 (737,'B561','a330d06115f7fd41e0e0abfebd03586e','Bavanya. V','','2024-07-14 18:31:30',NULL,NULL),
 (738,'B562','dec776dfff5fdf1189e2dbad317b3a76','C KAVI PRIYA','','2024-07-14 18:31:30',NULL,NULL),
 (739,'B563','7a0d3c0b95b9452b45f69a6f1f00c177','NITHIKA.M','','2024-07-14 18:31:30',NULL,NULL),
 (740,'B564','8855b3f8365682703f6d719836cc31c6','R.Jeeva','','2024-07-14 18:31:30',NULL,NULL),
 (741,'B565','e52b8022babfe8269986bad9b6dd56de','R.Jeeva','','2024-07-14 18:31:30',NULL,NULL),
 (742,'B566','6faae43d506a230beedcdbff231b478e','R. NETHRA','','2024-07-14 18:31:30',NULL,NULL),
 (743,'B567','3ecddbcea40e0815209a9b26c82b821a','R.Jeeva','','2024-07-14 18:31:30',NULL,NULL),
 (744,'B568','1e5caba5d0ab2607ca81e5b4b332c005','SNEKA .V','','2024-07-14 18:31:30',NULL,NULL),
 (745,'B569','2381e484ecdd486b6917d0641820ad4c','SUBALAKSHMI S','','2024-07-14 18:31:30',NULL,NULL),
 (746,'B570','8a99f32f034f525a95b7df835080a0c4','Hari Prakash R','','2024-07-14 18:31:30',NULL,NULL),
 (747,'B571','171e204094b07232182ce58d64497bce','Gayathri G','','2024-07-14 18:31:30',NULL,NULL),
 (748,'B572','84634e5a099d06efa1d9a1141a94154f','ARIKATLA BALAGURUNATHREDDY','','2024-07-14 18:31:30',NULL,NULL),
 (749,'B573','88de577478d2505fe1b7ee476750d8f7','VIMALRAJ M','','2024-07-14 18:31:30',NULL,NULL),
 (750,'B574','758ae5c7a57160c1a21da919622e992b','POOJA K','','2024-07-14 18:31:30',NULL,NULL),
 (751,'B575','cc60e15f0ae212fa111bc0829ba3b921','B.NITHYA','','2024-07-14 18:31:30',NULL,NULL),
 (752,'B576','0145e21f0eaebef6b2652778bfe9b141','SHARMILA S','','2024-07-14 18:31:30',NULL,NULL),
 (753,'B577','106bf1bf5a75bb21b8e46c4f82bccaae','SHARMILA S','','2024-07-14 18:31:30',NULL,NULL),
 (754,'B578','a28c19febabe54de4d8c5c2a5564923a','KABILAN P','','2024-07-14 18:31:30',NULL,NULL),
 (755,'B579','43dffe0b5d80b31cc2f4b357e2ca5989','LAVANYA.T','','2024-07-14 18:31:30',NULL,NULL),
 (756,'B580','ff65afb4a85584e3b2f3f08807933b88','RUBINI.B','','2024-07-14 18:31:30',NULL,NULL),
 (757,'B581','b1ee62c41ab9775db385655a9aecf9b3','Anuvarshini K','','2024-07-14 18:31:30',NULL,NULL),
 (758,'B582','dfeb7691223cc403d0d10b39a819e70e','Gera Kiran Babu','','2024-07-14 18:31:30',NULL,NULL),
 (759,'B583','c46839a59affab7403bf31b9fe3aafbd','Praditha vaka','','2024-07-14 18:31:30',NULL,NULL),
 (760,'B584','bf201eb26ccedaa1045be7a503f5976c','SARAVANAN S','','2024-07-14 18:31:30',NULL,NULL),
 (761,'B585','c72f8f52bd29970bf036e8f2a978920b','Divya P','','2024-07-14 18:31:30',NULL,NULL),
 (762,'B586','33feb0634dcf181f59f3d56ef381c4f1','VIGNESHWARAN S','','2024-07-14 18:31:30',NULL,NULL),
 (763,'B587','b377cf69b0de9a9e5bfaca5dc17d863e','TAMILARASAN R','','2024-07-14 18:31:30',NULL,NULL),
 (764,'B588','6f1dc88f5f79775faaa384f33fc730b6','PRABHU M','','2024-07-14 18:31:30',NULL,NULL),
 (765,'B589','bf70eca5cfdc646f3be30d055f6156d4','AKASH P','','2024-07-14 18:31:30',NULL,NULL),
 (766,'B590','e45ab0b0f68c31121b9ad0e39988ee72','SOUNDHARYA S','','2024-07-14 18:31:30',NULL,NULL),
 (767,'B591','aae5cf1782ef4b798f796ac0543bb26a','ANAND J','','2024-07-14 18:31:30',NULL,NULL),
 (768,'B592','2709b56410a9652829a14bdcd4e67a1c','Akash.A','','2024-07-14 18:31:30',NULL,NULL),
 (769,'B593','4e18b2ecd94787761dd4f586555fb129','Ragavan E','','2024-07-14 18:31:30',NULL,NULL),
 (770,'B594','aa3e12b6c96543387d7586b494075e82','GUNAL R','','2024-07-14 18:31:30',NULL,NULL),
 (771,'B595','b76987f5932c5d678e3a1cccfc5324a7','AJAY OTHAYOTH.A','','2024-07-14 18:31:30',NULL,NULL),
 (772,'B596','de57f69ffd88b583699576be73e66f2b','Rishi Kumar.S','','2024-07-14 18:31:30',NULL,NULL),
 (773,'B597','f4b7e673d1018831ada526d60bd8a06b','M.Darshan','','2024-07-14 18:31:30',NULL,NULL),
 (774,'B598','e6798ae82d3d7b509abe60f42d21e3b7','Logesh Perumal.C','','2024-07-14 18:31:30',NULL,NULL),
 (775,'B599','96d2089a844030fb1b06e04c572ffcc7','VIMAL RAJ P','','2024-07-14 18:31:30',NULL,NULL),
 (776,'B600','c98af9bb8cd4dd1a68306853738bc60a','Poli SainathReddy','','2024-07-14 18:31:30',NULL,NULL),
 (777,'B601','7a8f5c9aa4af22956703ff8ee0d68b09','Sathish K','','2024-07-14 18:31:30',NULL,NULL),
 (778,'B602','6c7d0f20688adf6e301559568bd67574','RISHIHARAN K','','2024-07-14 18:31:30',NULL,NULL),
 (779,'B603','b8b92daf03ced60a9cf04985acb02145','SRIHARI B K','','2024-07-14 18:31:30',NULL,NULL),
 (780,'B604','76b90084f02e4c1c0acb509d80c5683f','THOKAVI. A R','','2024-07-14 18:31:30',NULL,NULL),
 (781,'B605','341a90a857126891f7507a94dd6495e1','THIRISHADHARSHINI M','','2024-07-14 18:31:30',NULL,NULL),
 (782,'B606','43587f0e2865885e5292c73971b435c1','Vasantha kumar S','','2024-07-14 18:31:30',NULL,NULL),
 (783,'B607','fac45b43e169b615a63f514a9312ad8c','GOWTHAM G','','2024-07-14 18:31:30',NULL,NULL),
 (784,'B608','3e370b03dab751cf0b8f32e022e5f5c3','GOBIKAA R','','2024-07-14 18:31:30',NULL,NULL),
 (785,'B609','4cba1ed32b13e94fac04fc922174c4ec','MARIDHU NARENDRA','','2024-07-14 18:31:30',NULL,NULL),
 (786,'B610','e34a0e2b1ec506d2164759a3dc9df1ff','Kalaivani S','','2024-07-14 18:31:30',NULL,NULL),
 (787,'B611','87053162e66807f160bcce9893482311','Vignesh Kumar M','','2024-07-14 18:31:30',NULL,NULL),
 (788,'B612','0d9eaf791249b4ad485ebe937b44980d','S.jothika','','2024-07-14 18:31:30',NULL,NULL),
 (789,'B613','f04aee91f24ed09badbd566f47504359','Balaji S','','2024-07-14 18:31:30',NULL,NULL),
 (790,'B614','f2b9328e27d45c3492b2993d40fd0149','LAVANYA GS','','2024-07-14 18:31:30',NULL,NULL),
 (791,'B615','73dd25dbfb806d14032f24d0fa605cc5','Maheshwari C','','2024-07-14 18:31:30',NULL,NULL),
 (792,'B616','22077c585c027bd4fcf19123f4661079','VASANTHAKUMAR.R','','2024-07-14 18:31:30',NULL,NULL),
 (793,'B617','5a9e6a70f07d19cc8a90977ddae0e1de','Samuel D','','2024-07-14 18:31:30',NULL,NULL),
 (794,'B618','c992d81e540b61a1cada12590c7d7715','Shahul Hameed T T','','2024-07-14 18:31:30',NULL,NULL),
 (795,'B619','00e61ae1b94b25bfc441a2d706819d3a','DHANUSU. S','','2024-07-14 18:31:30',NULL,NULL),
 (796,'B620','b92a3b81ec19630ebbfe156775f30955','Sharath A','','2024-07-14 18:31:30',NULL,NULL),
 (797,'B621','44352ab90af7cbf5570bf33f86e26474','C.NAVEEN','','2024-07-14 18:31:30',NULL,NULL),
 (798,'B622','40c12b28a0cd9629ba98b07945dcfee1','JAYAKUMAR M','','2024-07-14 18:31:30',NULL,NULL),
 (799,'B623','f3dac14f2f17ca716179e3a3c7ef3986','Vairaveshwaran P','','2024-07-14 18:31:30',NULL,NULL),
 (800,'B624','25ef7c950df66a5c37a65080c7279003','SURYA S','','2024-07-14 18:31:30',NULL,NULL),
 (801,'B625','df5c75af2d45c480551a12b076e65c61','GOPIKA P','','2024-07-14 18:31:30',NULL,NULL),
 (802,'B626','5870178ce86b49624bd10c85c9ee1d6e','Selvarathinam','','2024-07-14 18:31:30',NULL,NULL),
 (803,'B627','eeaa0495ef50e4d69d4da93ec391ffed','KABILESHWARAN S','','2024-07-14 18:31:30',NULL,NULL),
 (804,'B628','2b82202058fd3db260b36fd3c9f346d2','DHANUSH.P','','2024-07-14 18:31:30',NULL,NULL),
 (805,'B629','490ee9087aa9173ca696902b099ec3f7','SOWDEESWARI T','','2024-07-14 18:31:30',NULL,NULL),
 (806,'B630','4320f5de4dc1ff1b9d0150340a8adfce','SRIKANTH.M','','2024-07-14 18:31:30',NULL,NULL),
 (807,'B631','85f4e7b1d9525a34f0584ee22c10e6b0','KALEESHWARAN P','','2024-07-14 18:31:30',NULL,NULL),
 (808,'B632','d8473052b6db2f2baa0b95d3ed24b851','SELVABHRATHI M','','2024-07-14 18:31:30',NULL,NULL),
 (809,'B633','de6b6b5cec263fb712cbb16ae6b28eb2','RITHIKSHA V','','2024-07-14 18:31:30',NULL,NULL),
 (810,'B634','3062feaf908f730907db7b7d7a005f72','Ameyan P','','2024-07-14 18:31:30',NULL,NULL),
 (811,'B635','4345130a685f693d19353482acb8ca76','G.vimaladevi','','2024-07-14 18:31:30',NULL,NULL),
 (812,'B636','8ac5943891a9e751c615953b2153b557','THILAKAVATHI M','','2024-07-14 18:31:30',NULL,NULL),
 (813,'B637','0fc4571af25a91aa4c55db9c2162728c','DINESH. S','','2024-07-14 18:31:30',NULL,NULL),
 (814,'B638','1c27aeb38073a15d4dd9b64ca2cb0083','MOHAMED FAROOK M','','2024-07-14 18:31:30',NULL,NULL),
 (815,'B639','503cf7babcc9e8a92763e2a73215c500','V.HEMA','','2024-07-14 18:31:30',NULL,NULL),
 (816,'B640','7d0edff76c778b8f35977df7e86221bc','Abinaya','','2024-07-14 18:31:30',NULL,NULL),
 (817,'B641','d99fcb9e2b5127c935eecda69fd09abf','JEYARAJ P','','2024-07-14 18:31:30',NULL,NULL),
 (818,'B642','5a28198044098a9f8ce68f6006984dfe','RUTHRADEVI C','','2024-07-14 18:31:30',NULL,NULL),
 (819,'B643','4f582bc7ee0d849b03b26295cd6af446','Arikrishnan k','','2024-07-14 18:31:30',NULL,NULL),
 (820,'B644','db46b330886bd686190d089cbaf61f0f','GOKULRAJ. K','','2024-07-14 18:31:30',NULL,NULL),
 (821,'B645','bb849000fe65873e85309a1de92812c4','Rishi Kumar.S','','2024-07-14 18:31:30',NULL,NULL),
 (822,'B646','3747adb44397c1130584d6e6148b1e3a','Mohamed riyas A','','2024-07-14 18:31:30',NULL,NULL),
 (823,'B647','e4303cd27168bb898a771053c53715fa','Dharnish . R','','2024-07-14 18:31:30',NULL,NULL),
 (824,'B648','b53c4a5a817ac1d9884ad08abcd2ad9b','Hariharan A','','2024-07-14 18:31:30',NULL,NULL),
 (825,'B649','b6dc664a6d93bc3785eb331abc5c0022','PANUKU SAI KIRAN','','2024-07-14 18:31:30',NULL,NULL),
 (826,'B650','8b2b0535ed6a9371eb4292fbb20ce999','P.JOTHI','','2024-07-14 18:31:30',NULL,NULL),
 (827,'B651','a0e8cf33742135a931fcc76f7066ba74','NIVASAN S','','2024-07-14 18:31:30',NULL,NULL),
 (828,'B652','76469170d907f270b166ce2ee27f5bcb','Namitha A','','2024-07-14 18:31:30',NULL,NULL),
 (829,'B653','02b81d1d968c0bd3a49d8a3fbe92450e','Selvamanikandan. R','','2024-07-14 18:31:30',NULL,NULL),
 (830,'B654','d9523dc88c1b35a8d14a1d63b47acd0c','Monisha A','','2024-07-14 18:31:30',NULL,NULL),
 (831,'B655','a8f39d236eb3a655f8257da6e36cbcfd','Sathya G','','2024-07-14 18:31:30',NULL,NULL),
 (832,'B656','8d9164392ca6467b1f62641daa932fab','JAGADEESH K','','2024-07-14 18:31:30',NULL,NULL),
 (833,'B657','20f95818ede192172df6ed757f658ca9','Anisha A','','2024-07-14 18:31:30',NULL,NULL),
 (834,'B658','f7cab6a6c2195ccd08c8c8a8d50d68dc','HARAN N','','2024-07-14 18:31:30',NULL,NULL),
 (835,'B659','c8cef8f515edfa76fc482b450fb98d6e','SRINATH R','','2024-07-14 18:31:30',NULL,NULL),
 (836,'B660','df5c7f3bdf69821808e2f5906939ceca','V. Arthi','','2024-07-14 18:31:30',NULL,NULL),
 (837,'B661','f071be434ef0a59ff4243492d40499ae','MOHAN KUMAR M','','2024-07-14 18:31:30',NULL,NULL),
 (838,'B662','e7def02f881cf87b892bd8989c3acc23','Suabsh M','','2024-07-14 18:31:30',NULL,NULL),
 (839,'B663','78a7cec787d429fe2c5c51fc14da91e0','NIVETHA M','','2024-07-14 18:31:30',NULL,NULL),
 (840,'B664','1ae569ac2255da6b401e05da7fbff0c0','Vengadapathi.P','','2024-07-14 18:31:30',NULL,NULL),
 (841,'B665','8cafc545a6a0950ad3b11f211927eddc','S. Suriyanathan','','2024-07-14 18:31:30',NULL,NULL),
 (842,'B666','e44eea79a906fd9ea8d8177c04002db9','Kalaiselvan K','','2024-07-14 18:31:30',NULL,NULL),
 (843,'B667','1e44d03cf9c937fc509351fa0921165a','Vishnu R','','2024-07-14 18:31:30',NULL,NULL),
 (844,'B668','d26922d0379187d5a42bb277d931ec50','Tanga Siva Shankar','','2024-07-14 18:31:30',NULL,NULL),
 (845,'B669','17643e4bae7cfb0574a76b5634420451','S.Santhosh','','2024-07-14 18:31:30',NULL,NULL),
 (846,'B670','5802c6a2d78551450e223f35fb647557','V.SIVA SAI LAKSHMI','','2024-07-14 18:31:30',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;

--
-- Create schema aptonlinefour
--

CREATE DATABASE IF NOT EXISTS aptonlinefour;
USE aptonlinefour;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,2);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=401 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'java.util',NULL,0,0,'',0,0,NULL,1,0,''),
 (2,1,'java.lang',NULL,1,0,'',0,0,NULL,1,0,''),
 (3,1,'java.string',NULL,0,0,'',0,0,NULL,1,0,''),
 (4,1,'java.io',NULL,0,0,'',0,0,NULL,1,0,''),
 (5,1,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (6,2,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (7,2,'void',NULL,0,0,'',0,0,NULL,1,0,''),
 (8,2,'null',NULL,1,0,'',0,0,NULL,1,0,''),
 (9,2,'\"\"',NULL,0,0,'',0,0,NULL,1,0,''),
 (10,2,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'val=str.length() ;',NULL,1,0,'',0,0,NULL,1,0,''),
 (12,3,'val=length.str() ;',NULL,0,0,'',0,0,NULL,1,0,''),
 (13,3,'val =length().str ;',NULL,0,0,'',0,0,NULL,1,0,''),
 (14,3,'val = length( str ) ;',NULL,0,0,'',0,0,NULL,1,0,''),
 (15,3,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'null',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,4,'String reference',NULL,1,0,'',0,0,NULL,1,0,''),
 (18,4,'empty reference',NULL,0,0,'',0,0,NULL,1,0,''),
 (19,4,'character reference',NULL,0,0,'',0,0,NULL,1,0,''),
 (20,4,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,5,'charat()',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,5,'CHARAT()',NULL,0,0,'',0,0,NULL,1,0,''),
 (23,5,'Charat()',NULL,0,0,'',0,0,NULL,1,0,''),
 (24,5,'CharAt()',NULL,0,0,'',0,0,NULL,1,0,''),
 (25,5,'charAt()',NULL,1,0,'',0,0,NULL,1,0,''),
 (26,6,'A String shortcut',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,6,'A String literal',NULL,1,0,'',0,0,NULL,1,0,''),
 (28,6,'A quoted String',NULL,0,0,'',0,0,NULL,1,0,''),
 (29,6,'An optimized String',NULL,0,0,'',0,0,NULL,1,0,''),
 (30,6,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (31,7,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,7,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,7,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (34,7,'D only',NULL,1,0,'',0,0,NULL,1,0,''),
 (35,7,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (36,8,'string',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,8,'reference to string',NULL,1,0,'',0,0,NULL,1,0,''),
 (38,8,'null',NULL,0,0,'',0,0,NULL,1,0,''),
 (39,8,'object',NULL,0,0,'',0,0,NULL,1,0,''),
 (40,8,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,9,'concat()',NULL,0,0,'',0,0,NULL,1,0,''),
 (42,9,'append()',NULL,1,0,'',0,0,NULL,1,0,''),
 (43,9,'concatenate()',NULL,0,0,'',0,0,NULL,1,0,''),
 (44,9,'join()',NULL,0,0,'',0,0,NULL,1,0,''),
 (45,9,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (46,10,'String()',NULL,0,0,'',0,0,NULL,1,0,''),
 (47,10,'string()',NULL,0,0,'',0,0,NULL,1,0,''),
 (48,10,'Stringbuffer()',NULL,0,0,'',0,0,NULL,1,0,''),
 (49,10,'StringBuffer()',NULL,1,0,'',0,0,NULL,1,0,''),
 (50,10,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (51,11,'A only',NULL,1,0,'',0,0,NULL,1,0,''),
 (52,11,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (53,11,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (54,11,'D only',NULL,0,0,'',0,0,NULL,1,0,''),
 (55,11,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (56,12,'strrev()',NULL,0,0,'',0,0,NULL,1,0,''),
 (57,12,'stringreverse()',NULL,0,0,'',0,0,NULL,1,0,''),
 (58,12,'reverse()',NULL,1,0,'',0,0,NULL,1,0,''),
 (59,12,'reverseall()',NULL,0,0,'',0,0,NULL,1,0,''),
 (60,12,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (61,13,'capacity()',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,13,'length()',NULL,1,0,'',0,0,NULL,1,0,''),
 (63,13,'Length()',NULL,0,0,'',0,0,NULL,1,0,''),
 (64,13,'Capacity()',NULL,0,0,'',0,0,NULL,1,0,''),
 (65,13,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (66,14,'Hell',NULL,0,0,'',0,0,NULL,1,0,''),
 (67,14,'ello',NULL,1,0,'',0,0,NULL,1,0,''),
 (68,14,'Hel',NULL,0,0,'',0,0,NULL,1,0,''),
 (69,14,'elo',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,14,'llo',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,15,'\"WildIrishRose\"',NULL,0,0,'',0,0,NULL,1,0,''),
 (72,15,'\" Wild Irish Rose \"',NULL,0,0,'',0,0,NULL,1,0,''),
 (73,15,'\"Wild Irish Rose\"',NULL,1,0,'',0,0,NULL,1,0,''),
 (74,15,'\"Wild  Irish  Rose\"',NULL,0,0,'',0,0,NULL,1,0,''),
 (75,15,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (76,16,'substr()',NULL,0,0,'',0,0,NULL,1,0,''),
 (77,16,'substring()',NULL,1,0,'',0,0,NULL,1,0,''),
 (78,16,'Substring()',NULL,0,0,'',0,0,NULL,1,0,''),
 (79,16,'SubString()',NULL,0,0,'',0,0,NULL,1,0,''),
 (80,16,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (81,17,'A only',NULL,1,0,'',0,0,NULL,1,0,''),
 (82,17,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (83,17,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (84,17,'D only',NULL,0,0,'',0,0,NULL,1,0,''),
 (85,17,'None of thes',NULL,0,0,'',0,0,NULL,1,0,''),
 (86,18,'one',NULL,0,0,'',0,0,NULL,1,0,''),
 (87,18,'two',NULL,0,0,'',0,0,NULL,1,0,''),
 (88,18,'twoone',NULL,0,0,'',0,0,NULL,1,0,''),
 (89,18,'one two',NULL,0,0,'',0,0,NULL,1,0,''),
 (90,18,'onetwo',NULL,1,0,'',0,0,NULL,1,0,''),
 (91,19,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (92,19,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,19,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (94,19,'D only',NULL,1,0,'',0,0,NULL,1,0,''),
 (95,19,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,20,'true',NULL,0,0,'',0,0,NULL,1,0,''),
 (97,20,'false',NULL,1,0,'',0,0,NULL,1,0,''),
 (98,20,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (99,20,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (100,20,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (101,21,'java.applet',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,21,'java.awt',NULL,1,0,'',0,0,NULL,1,0,''),
 (103,21,'java.awt.image',NULL,0,0,'',0,0,NULL,1,0,''),
 (104,21,'java.io',NULL,0,0,'',0,0,NULL,1,0,''),
 (105,21,'java.lang',NULL,0,0,'',0,0,NULL,1,0,''),
 (106,22,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (107,22,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (108,22,'Conly',NULL,0,0,'',0,0,NULL,1,0,''),
 (109,22,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (110,22,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (111,23,'java.applet',NULL,0,0,'',0,0,NULL,1,0,''),
 (112,23,'java.awt',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,23,'java.io',NULL,0,0,'',0,0,NULL,1,0,''),
 (114,23,'java.lang.reflect',NULL,1,0,'',0,0,NULL,1,0,''),
 (115,23,'java.java',NULL,0,0,'',0,0,NULL,1,0,''),
 (116,24,'java.applet',NULL,0,0,'',0,0,NULL,1,0,''),
 (117,24,'java.awt',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,24,'java.awt.image',NULL,0,0,'',0,0,NULL,1,0,''),
 (119,24,'java.io',NULL,0,0,'',0,0,NULL,1,0,''),
 (120,24,'java.lang',NULL,1,0,'',0,0,NULL,1,0,''),
 (121,25,'java.security',NULL,1,0,'',0,0,NULL,1,0,''),
 (122,25,'java.lang.security',NULL,0,0,'',0,0,NULL,1,0,''),
 (123,25,'java.awt.image',NULL,0,0,'',0,0,NULL,1,0,''),
 (124,25,'java.io.security',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,25,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (126,26,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (127,26,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (128,26,'Conly',NULL,0,0,'',0,0,NULL,1,0,''),
 (129,26,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (130,26,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,27,'java.rmi',NULL,1,0,'',0,0,NULL,1,0,''),
 (132,27,'java.awt',NULL,0,0,'',0,0,NULL,1,0,''),
 (133,27,'java.util',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,27,'java.applet',NULL,0,0,'',0,0,NULL,1,0,''),
 (135,27,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (136,28,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,28,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (138,28,'Conly',NULL,0,0,'',0,0,NULL,1,0,''),
 (139,28,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (140,28,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (141,29,'$ (dollar)',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,29,'# (Hash)',NULL,0,0,'',0,0,NULL,1,0,''),
 (143,29,'.(dot)',NULL,1,0,'',0,0,NULL,1,0,''),
 (144,29,',(comma)',NULL,0,0,'',0,0,NULL,1,0,''),
 (145,29,':(colon)',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,30,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,30,'B only',NULL,1,0,'',0,0,NULL,1,0,''),
 (148,30,'Conly',NULL,0,0,'',0,0,NULL,1,0,''),
 (149,30,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,30,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (151,31,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (152,31,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (153,31,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (154,31,'D only',NULL,1,0,'',0,0,NULL,1,0,''),
 (155,31,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (156,32,'util',NULL,0,0,'',0,0,NULL,1,0,''),
 (157,32,'io',NULL,0,0,'',0,0,NULL,1,0,''),
 (158,32,'lang',NULL,0,0,'',0,0,NULL,1,0,''),
 (159,32,'date',NULL,0,0,'',0,0,NULL,1,0,''),
 (160,32,'java',NULL,1,0,'',0,0,NULL,1,0,''),
 (161,33,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (162,33,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (163,33,'C only',NULL,1,0,'',0,0,NULL,1,0,''),
 (164,33,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (165,33,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (166,34,'True, False',NULL,0,0,'',0,0,NULL,1,0,''),
 (167,34,'False, True',NULL,1,0,'',0,0,NULL,1,0,''),
 (168,34,'True, True',NULL,0,0,'',0,0,NULL,1,0,''),
 (169,34,'False, False',NULL,0,0,'',0,0,NULL,1,0,''),
 (170,34,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (171,35,'private',NULL,0,0,'',0,0,NULL,1,0,''),
 (172,35,'protected',NULL,0,0,'',0,0,NULL,1,0,''),
 (173,35,'public',NULL,1,0,'',0,0,NULL,1,0,''),
 (174,35,'no modifier',NULL,0,0,'',0,0,NULL,1,0,''),
 (175,35,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (176,36,'import pkg',NULL,0,0,'',0,0,NULL,1,0,''),
 (177,36,'Import pkg',NULL,0,0,'',0,0,NULL,1,0,''),
 (178,36,'import pkg.*',NULL,1,0,'',0,0,NULL,1,0,''),
 (179,36,'Import pkg.*',NULL,0,0,'',0,0,NULL,1,0,''),
 (180,36,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (181,37,'random number',NULL,1,0,'',0,0,NULL,1,0,''),
 (182,37,'no output',NULL,0,0,'',0,0,NULL,1,0,''),
 (183,37,'compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (184,37,'runtime error',NULL,0,0,'',0,0,NULL,1,0,''),
 (185,37,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (186,38,'java.io',NULL,0,0,'',0,0,NULL,1,0,''),
 (187,38,'java.awt',NULL,0,0,'',0,0,NULL,1,0,''),
 (188,38,'java.lang',NULL,0,0,'',0,0,NULL,1,0,''),
 (189,38,'java.net',NULL,0,0,'',0,0,NULL,1,0,''),
 (190,38,'None of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (191,39,'protected',NULL,0,0,'',0,0,NULL,1,0,''),
 (192,39,'public',NULL,0,0,'',0,0,NULL,1,0,''),
 (193,39,'no specifier',NULL,0,0,'',0,0,NULL,1,0,''),
 (194,39,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (195,39,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (196,40,'i and ii only',NULL,1,0,'',0,0,NULL,1,0,''),
 (197,40,'ii and iii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (198,40,'iii and iv only',NULL,0,0,'',0,0,NULL,1,0,''),
 (199,40,'i and iv only',NULL,0,0,'',0,0,NULL,1,0,''),
 (200,40,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (201,41,'A Only',NULL,0,0,'',0,0,NULL,1,0,''),
 (202,41,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (203,41,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (204,41,'D only',NULL,1,0,'',0,0,NULL,1,0,''),
 (205,41,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (206,42,'A Only',NULL,0,0,'',0,0,NULL,1,0,''),
 (207,42,'B only',NULL,1,0,'',0,0,NULL,1,0,''),
 (208,42,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (209,42,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (210,42,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (211,43,'3  3',NULL,0,0,'',0,0,NULL,1,0,''),
 (212,43,'3  10',NULL,0,0,'',0,0,NULL,1,0,''),
 (213,43,'10  3',NULL,1,0,'',0,0,NULL,1,0,''),
 (214,43,'10  10',NULL,0,0,'',0,0,NULL,1,0,''),
 (215,43,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (216,44,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (217,44,'8',NULL,0,0,'',0,0,NULL,1,0,''),
 (218,44,'16',NULL,0,0,'',0,0,NULL,1,0,''),
 (219,44,'32',NULL,0,0,'',0,0,NULL,1,0,''),
 (220,44,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (221,45,'show()',NULL,0,0,'',0,0,NULL,1,0,''),
 (222,45,'main()',NULL,1,0,'',0,0,NULL,1,0,''),
 (223,45,'display()',NULL,0,0,'',0,0,NULL,1,0,''),
 (224,45,'print()',NULL,0,0,'',0,0,NULL,1,0,''),
 (225,45,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (226,46,'Eve',NULL,0,0,'',0,0,NULL,1,0,''),
 (227,46,'Andy',NULL,0,0,'',0,0,NULL,1,0,''),
 (228,46,'Bart',NULL,1,0,'',0,0,NULL,1,0,''),
 (229,46,'Carl',NULL,0,0,'',0,0,NULL,1,0,''),
 (230,46,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (231,47,'list.add( 3, \"Oscar\" ) ;',NULL,0,0,'',0,0,NULL,1,0,''),
 (232,47,'list.set( 3, \"Oscar\" ) ;',NULL,0,0,'',0,0,NULL,1,0,''),
 (233,47,'list.add( 4, \"Oscar\" ) ;',NULL,1,0,'',0,0,NULL,1,0,''),
 (234,47,'list.set( 4, \"Oscar\" ) ;',NULL,0,0,'',0,0,NULL,1,0,''),
 (235,47,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (236,48,'javac',NULL,0,0,'',0,0,NULL,1,0,''),
 (237,48,'java',NULL,0,0,'',0,0,NULL,1,0,''),
 (238,48,'javap',NULL,0,0,'',0,0,NULL,1,0,''),
 (239,48,'javaw',NULL,0,0,'',0,0,NULL,1,0,''),
 (240,48,'b and d',NULL,1,0,'',0,0,NULL,1,0,''),
 (241,49,'list[2] = \"Zoltan\" ;',NULL,0,0,'',0,0,NULL,1,0,''),
 (242,49,'list.set( \"Zoltan\", \"Carl\" );',NULL,0,0,'',0,0,NULL,1,0,''),
 (243,49,'list.add( \"Zoltan\", list.indexOf(\"Carl\") );',NULL,0,0,'',0,0,NULL,1,0,''),
 (244,49,'list.set( list.indexOf(\"Carl\"), \"Zoltan\" );',NULL,1,0,'',0,0,NULL,1,0,''),
 (245,49,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (246,50,'Integer[]',NULL,0,0,'',0,0,NULL,1,0,''),
 (247,50,'Float[]',NULL,0,0,'',0,0,NULL,1,0,''),
 (248,50,'String[]',NULL,1,0,'',0,0,NULL,1,0,''),
 (249,50,'char[]',NULL,0,0,'',0,0,NULL,1,0,''),
 (250,50,'Double[]',NULL,0,0,'',0,0,NULL,1,0,''),
 (251,51,'list.remove( 3 );',NULL,0,0,'',0,0,NULL,1,0,''),
 (252,51,'list.remove(2 );',NULL,1,0,'',0,0,NULL,1,0,''),
 (253,51,'list.add(null,2)',NULL,0,0,'',0,0,NULL,1,0,''),
 (254,51,'list.add(null,3)',NULL,0,0,'',0,0,NULL,1,0,''),
 (255,51,'list.set( list.indexOf( \"Carl\" ), \"Doug\" );',NULL,0,0,'',0,0,NULL,1,0,''),
 (256,52,'semicolon',NULL,0,0,'',0,0,NULL,1,0,''),
 (257,52,'colon',NULL,0,0,'',0,0,NULL,1,0,''),
 (258,52,'space',NULL,1,0,'',0,0,NULL,1,0,''),
 (259,52,'comma',NULL,0,0,'',0,0,NULL,1,0,''),
 (260,52,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (261,53,'list.remove( list.size()-1 );',NULL,1,0,'',0,0,NULL,1,0,''),
 (262,53,'list.remove( list.size() );',NULL,0,0,'',0,0,NULL,1,0,''),
 (263,53,'list.remove( 5 );',NULL,0,0,'',0,0,NULL,1,0,''),
 (264,53,'list.clear( \"Elmo\" );',NULL,0,0,'',0,0,NULL,1,0,''),
 (265,53,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (266,54,'car brake horn',NULL,0,0,'',0,0,NULL,1,0,''),
 (267,54,'car brake horn',NULL,1,0,'',0,0,NULL,1,0,''),
 (268,54,'horn brake car',NULL,0,0,'',0,0,NULL,1,0,''),
 (269,54,'horn brake car',NULL,0,0,'',0,0,NULL,1,0,''),
 (270,54,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (271,55,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (272,55,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (273,55,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (274,55,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (275,55,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (276,56,'A Only',NULL,0,0,'',0,0,NULL,1,0,''),
 (277,56,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (278,56,'C only',NULL,1,0,'',0,0,NULL,1,0,''),
 (279,56,'D only',NULL,0,0,'',0,0,NULL,1,0,''),
 (280,56,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (281,57,'A only',NULL,0,0,'',0,0,NULL,1,0,''),
 (282,57,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (283,57,'C only',NULL,1,0,'',0,0,NULL,1,0,''),
 (284,57,'D only',NULL,0,0,'',0,0,NULL,1,0,''),
 (285,57,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (286,58,'integer array',NULL,0,0,'',0,0,NULL,1,0,''),
 (287,58,'character array',NULL,0,0,'',0,0,NULL,1,0,''),
 (288,58,'string array',NULL,1,0,'',0,0,NULL,1,0,''),
 (289,58,'float array',NULL,0,0,'',0,0,NULL,1,0,''),
 (290,58,'long array',NULL,0,0,'',0,0,NULL,1,0,''),
 (291,59,'A Only',NULL,1,0,'',0,0,NULL,1,0,''),
 (292,59,'B only',NULL,0,0,'',0,0,NULL,1,0,''),
 (293,59,'C only',NULL,0,0,'',0,0,NULL,1,0,''),
 (294,59,'D only',NULL,0,0,'',0,0,NULL,1,0,''),
 (295,59,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (296,60,'TIGER',NULL,0,0,'',0,0,NULL,1,0,''),
 (297,60,'Garbage',NULL,0,0,'',0,0,NULL,1,0,''),
 (298,60,'Compile Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (299,60,'Runtime error',NULL,0,0,'',0,0,NULL,1,0,''),
 (300,60,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (301,61,'Mutable',NULL,0,0,'',0,0,NULL,1,0,''),
 (302,61,'Abstract',NULL,0,0,'',0,0,NULL,1,0,''),
 (303,61,'wrapper',NULL,0,0,'',0,0,NULL,1,0,''),
 (304,61,'immutable',NULL,1,0,'',0,0,NULL,1,0,''),
 (305,61,'static',NULL,0,0,'',0,0,NULL,1,0,''),
 (306,62,'-2',NULL,0,0,'',0,0,NULL,1,0,''),
 (307,62,'-1',NULL,0,0,'',0,0,NULL,1,0,''),
 (308,62,'0',NULL,1,0,'',0,0,NULL,1,0,''),
 (309,62,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (310,62,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (311,63,'ArrayList',NULL,0,0,'',0,0,NULL,1,0,''),
 (312,63,'Map',NULL,0,0,'',0,0,NULL,1,0,''),
 (313,63,'Vector',NULL,0,0,'',0,0,NULL,1,0,''),
 (314,63,'a and b',NULL,0,0,'',0,0,NULL,1,0,''),
 (315,63,'a and c',NULL,1,0,'',0,0,NULL,1,0,''),
 (316,64,'i, ii and iv only',NULL,0,0,'',0,0,NULL,1,0,''),
 (317,64,'ii, iii and v only',NULL,0,0,'',0,0,NULL,1,0,''),
 (318,64,'ii, iv and v only',NULL,1,0,'',0,0,NULL,1,0,''),
 (319,64,'i, ii and iii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (320,64,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (321,65,'parsing methods',NULL,0,0,'',0,0,NULL,1,0,''),
 (322,65,'wrapper classes',NULL,1,0,'',0,0,NULL,1,0,''),
 (323,65,'constructor methods',NULL,0,0,'',0,0,NULL,1,0,''),
 (324,65,'abstract classes',NULL,0,0,'',0,0,NULL,1,0,''),
 (325,65,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (326,66,'String()',NULL,0,0,'',0,0,NULL,1,0,''),
 (327,66,'valueOf()',NULL,1,0,'',0,0,NULL,1,0,''),
 (328,66,'typeValue()',NULL,0,0,'',0,0,NULL,1,0,''),
 (329,66,'getValue()',NULL,0,0,'',0,0,NULL,1,0,''),
 (330,66,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (331,67,'normal',NULL,0,0,'',0,0,NULL,1,0,''),
 (332,67,'central',NULL,0,0,'',0,0,NULL,1,0,''),
 (333,67,'primitive',NULL,1,0,'',0,0,NULL,1,0,''),
 (334,67,'concrete',NULL,0,0,'',0,0,NULL,1,0,''),
 (335,67,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (336,68,'Parsing Method',NULL,0,0,'',0,0,NULL,1,0,''),
 (337,68,'typeValue() Method',NULL,0,0,'',0,0,NULL,1,0,''),
 (338,68,'String() Method',NULL,0,0,'',0,0,NULL,1,0,''),
 (339,68,'Constructor Methods',NULL,1,0,'',0,0,NULL,1,0,''),
 (340,68,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (341,69,'Random',NULL,0,0,'',0,0,NULL,1,0,''),
 (342,69,'Byte',NULL,1,0,'',0,0,NULL,1,0,''),
 (343,69,'Vector',NULL,0,0,'',0,0,NULL,1,0,''),
 (344,69,'String',NULL,0,0,'',0,0,NULL,1,0,''),
 (345,69,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (346,70,'length',NULL,0,0,'',0,0,NULL,1,0,''),
 (347,70,'elementCount',NULL,1,0,'',0,0,NULL,1,0,''),
 (348,70,'elements',NULL,0,0,'',0,0,NULL,1,0,''),
 (349,70,'capacity',NULL,0,0,'',0,0,NULL,1,0,''),
 (350,70,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (351,71,'Constructor',NULL,0,0,'',0,0,NULL,1,0,''),
 (352,71,'String()',NULL,0,0,'',0,0,NULL,1,0,''),
 (353,71,'typeValue()',NULL,1,0,'',0,0,NULL,1,0,''),
 (354,71,'Parsing',NULL,0,0,'',0,0,NULL,1,0,''),
 (355,71,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (356,72,'toNumber()',NULL,0,0,'',0,0,NULL,1,0,''),
 (357,72,'conString()',NULL,0,0,'',0,0,NULL,1,0,''),
 (358,72,'valueOf()',NULL,1,0,'',0,0,NULL,1,0,''),
 (359,72,'toString()',NULL,0,0,'',0,0,NULL,1,0,''),
 (360,72,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (361,73,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (362,73,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (363,73,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (364,73,'4',NULL,1,0,'',0,0,NULL,1,0,''),
 (365,73,'7',NULL,0,0,'',0,0,NULL,1,0,''),
 (366,74,'addElement()',NULL,1,0,'',0,0,NULL,1,0,''),
 (367,74,'AddElement()',NULL,0,0,'',0,0,NULL,1,0,''),
 (368,74,'set()',NULL,0,0,'',0,0,NULL,1,0,''),
 (369,74,'add()',NULL,0,0,'',0,0,NULL,1,0,''),
 (370,74,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (371,75,'7',NULL,0,0,'',0,0,NULL,1,0,''),
 (372,75,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (373,75,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (374,75,'5',NULL,1,0,'',0,0,NULL,1,0,''),
 (375,75,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (376,76,'i and ii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (377,76,'ii and iii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (378,76,'i and iii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (379,76,'All i, ii and iii',NULL,1,0,'',0,0,NULL,1,0,''),
 (380,76,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (381,77,'Class',NULL,0,0,'',0,0,NULL,1,0,''),
 (382,77,'Object',NULL,0,0,'',0,0,NULL,1,0,''),
 (383,77,'Abstraction',NULL,0,0,'',0,0,NULL,1,0,''),
 (384,77,'Encapsulation',NULL,0,0,'',0,0,NULL,1,0,''),
 (385,77,'-1',NULL,1,0,'',0,0,NULL,1,0,''),
 (386,78,'i only',NULL,0,0,'',0,0,NULL,1,0,''),
 (387,78,'ii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (388,78,'iii only',NULL,0,0,'',0,0,NULL,1,0,''),
 (389,78,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (390,78,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (391,79,'5,3',NULL,0,0,'',0,0,NULL,1,0,''),
 (392,79,'3,5',NULL,1,0,'',0,0,NULL,1,0,''),
 (393,79,'5,2',NULL,0,0,'',0,0,NULL,1,0,''),
 (394,79,'3,3',NULL,0,0,'',0,0,NULL,1,0,''),
 (395,79,'5,5',NULL,0,0,'',0,0,NULL,1,0,''),
 (396,80,'5,8',NULL,1,0,'',0,0,NULL,1,0,''),
 (397,80,'5,5',NULL,0,0,'',0,0,NULL,1,0,''),
 (398,80,'5,2',NULL,0,0,'',0,0,NULL,1,0,''),
 (399,80,'2,5',NULL,0,0,'',0,0,NULL,1,0,''),
 (400,80,'Compile Error',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
INSERT INTO `apt_tp_rule` (`tp_id`,`rule`) VALUES 
 (1,''),
 (2,''),
 (3,''),
 (4,''),
 (5,''),
 (6,''),
 (7,''),
 (8,''),
 (9,''),
 (10,''),
 (11,''),
 (12,''),
 (13,''),
 (14,''),
 (15,''),
 (16,''),
 (17,''),
 (18,''),
 (19,''),
 (20,'');
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1929 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,3,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,3,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,3,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,3,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,3,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,3,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,3,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,3,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,3,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,3,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,3,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,3,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,3,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,3,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,3,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,3,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,3,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,3,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,3,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,3,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,3,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,3,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,3,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,3,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,3,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,3,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,3,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,3,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,3,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,3,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,3,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,3,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,3,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,3,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,3,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,3,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,3,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,3,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,3,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,3,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,3,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,3,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,3,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,3,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,3,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,3,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,3,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,3,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,3,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,3,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,3,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,3,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,3,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,3,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,3,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,3,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,3,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,3,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,3,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,3,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,3,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,3,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,3,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,3,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,3,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,3,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,3,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,3,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,3,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,3,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,3,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,3,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,3,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,3,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,3,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,4,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,4,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,4,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,4,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,4,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,4,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,4,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,4,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,4,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,4,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,4,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,4,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,4,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,4,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,4,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,4,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,4,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,4,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,4,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,4,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,4,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,4,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,4,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,4,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,4,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,4,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,4,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,4,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,4,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,4,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,4,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,4,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,4,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,4,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,4,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,4,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,4,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,4,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,4,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,4,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,4,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,4,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,4,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,4,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,4,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,4,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,4,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,4,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,4,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,4,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,4,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,4,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,4,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,4,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,4,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,4,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,4,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,4,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,4,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,4,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,4,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,4,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,4,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,4,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,4,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,4,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,4,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,4,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,4,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,4,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,4,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,4,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,4,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,4,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,4,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,5,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,5,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,5,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,5,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,5,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,5,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,5,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,5,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,5,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,5,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (311,5,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (312,5,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (313,5,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (314,5,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (315,5,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (316,5,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (317,5,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (318,5,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (319,5,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (320,5,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (321,5,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (322,5,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (323,5,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (324,5,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (325,5,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (326,5,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (327,5,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (328,5,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (329,5,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (330,5,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (331,5,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (332,5,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (333,5,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (334,5,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (335,5,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (336,5,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (337,5,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (338,5,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (339,5,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (340,5,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (341,5,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (342,5,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (343,5,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (344,5,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (345,5,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (346,5,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (347,5,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (348,5,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (349,5,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (350,5,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (351,5,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (352,5,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (353,5,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (354,5,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (355,5,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (356,5,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (357,5,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (358,5,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (359,5,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (360,5,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (361,5,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (362,5,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (363,5,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (364,5,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (365,5,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (366,5,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (367,5,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (368,5,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (369,5,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (370,5,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (371,5,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (372,5,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (373,5,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (374,5,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (375,5,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (376,5,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (377,5,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (378,5,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (379,5,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (380,5,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (381,5,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (382,5,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (383,5,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (384,5,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (385,5,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (386,5,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (387,5,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (388,5,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (389,5,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (390,5,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (391,5,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (392,5,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (393,5,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (394,5,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (395,5,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (396,5,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (397,5,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (398,5,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (399,5,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (400,5,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (401,5,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (402,5,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (403,5,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (404,5,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (405,5,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (406,5,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (407,5,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (408,5,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (409,5,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (410,5,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (411,5,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (412,5,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (413,5,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (414,5,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (415,5,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (416,5,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (417,5,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (418,5,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (419,5,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (420,5,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (421,5,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (422,5,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (423,5,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (424,5,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (425,5,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (426,5,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (427,5,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (428,5,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (429,5,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (430,5,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (431,5,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (432,5,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (433,5,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (434,5,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (435,5,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (436,5,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (437,5,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (438,5,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (439,5,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (440,5,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (441,5,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (442,5,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (443,5,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (444,5,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (445,5,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (446,5,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (447,5,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (448,5,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (449,5,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (450,5,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (451,5,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (452,5,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (453,5,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (454,5,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (455,5,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (456,5,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (457,5,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (458,5,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (459,5,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (460,5,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (461,5,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (462,5,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (463,5,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (464,5,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (465,5,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (466,5,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (467,5,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (468,5,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (469,5,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (470,5,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (471,5,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (472,5,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (473,5,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (474,5,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (475,5,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (476,5,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (477,5,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (478,5,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (479,5,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (480,5,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (481,5,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (482,5,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (483,5,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (484,5,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (485,5,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (486,5,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (487,5,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (488,5,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (489,5,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (490,5,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (491,5,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (492,5,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (493,5,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (494,5,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (495,5,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (496,5,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (497,5,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (498,5,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (499,5,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (500,5,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (501,5,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (502,5,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (503,5,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (504,5,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (505,5,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (506,5,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (507,5,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (508,5,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (509,5,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (510,5,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (511,5,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (512,5,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (513,5,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (514,5,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (515,5,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (516,5,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (517,5,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (518,5,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (519,5,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (520,5,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (521,5,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (522,5,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (523,5,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (524,5,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (525,5,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (526,5,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (527,5,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (528,5,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (529,5,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (530,5,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (531,5,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (532,5,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (533,5,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (534,5,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (535,5,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (536,5,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (537,5,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (538,5,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (539,5,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (540,5,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (541,5,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (542,5,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (543,5,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (544,5,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (545,5,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (546,5,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (547,5,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (548,5,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (549,5,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (550,5,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (551,5,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (552,5,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (553,5,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (554,5,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (555,5,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (556,5,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (557,5,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (558,5,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (559,5,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (560,5,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (561,5,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (562,5,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (563,5,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (564,5,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (565,5,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (566,5,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (567,5,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (568,5,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (569,5,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (570,5,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (571,5,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (572,5,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (573,5,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (574,5,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (575,5,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (576,5,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (577,5,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (578,5,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (579,5,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (580,5,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (581,5,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (582,5,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (583,5,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (584,5,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (585,5,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (586,5,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (587,5,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (588,5,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (589,5,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (590,5,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (591,5,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (592,5,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (593,5,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (594,5,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (595,5,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (596,5,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (597,5,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (598,5,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (599,5,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (600,5,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (601,5,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (602,5,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (603,5,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (604,5,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (605,5,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (606,5,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (607,5,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (608,5,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (609,5,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (610,5,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (611,5,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (612,5,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (613,5,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (614,5,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (615,5,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (616,5,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (617,5,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (618,5,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (619,5,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (620,5,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (621,5,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (622,5,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (623,5,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (624,5,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (625,5,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (626,5,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (627,5,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (628,5,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (629,5,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (630,5,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (631,5,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (632,5,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (633,5,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (634,5,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (635,5,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (636,5,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (637,5,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (638,5,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (639,5,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (640,5,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (641,5,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (642,5,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (643,5,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (644,5,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (645,5,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (646,5,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (647,5,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (648,5,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (649,5,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (650,5,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (651,5,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (652,5,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (653,5,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (654,5,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (655,5,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (656,5,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (657,5,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (658,5,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (659,5,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (660,5,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (661,5,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (662,5,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (663,5,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (664,5,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (665,5,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (666,5,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (667,5,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (668,5,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (669,5,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (670,5,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (671,5,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (672,5,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (673,5,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (674,5,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (675,5,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (676,5,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (677,5,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (678,5,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (679,5,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (680,5,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (681,5,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (682,5,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (683,5,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (684,5,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (685,5,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (686,5,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (687,5,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (688,5,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (689,5,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (690,5,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (691,5,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (692,5,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (693,5,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (694,5,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (695,5,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (696,5,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (697,5,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (698,5,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (699,5,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (700,5,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (701,5,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (702,5,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (703,5,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (704,5,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (705,5,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (706,5,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (707,5,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (708,6,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (709,6,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (710,6,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (711,6,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (712,6,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (713,6,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (714,6,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (715,6,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (716,6,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (717,6,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (718,6,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (719,6,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (720,6,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (721,6,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (722,6,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (723,6,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (724,6,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (725,6,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (726,6,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (727,6,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (728,6,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (729,6,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (730,6,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (731,6,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (732,6,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (733,6,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (734,6,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (735,6,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (736,6,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (737,6,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (738,6,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (739,6,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (740,6,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (741,6,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (742,6,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (743,6,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (744,6,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (745,6,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (746,6,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (747,6,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (748,6,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (749,6,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (750,6,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (751,6,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (752,6,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (753,6,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (754,6,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (755,6,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (756,6,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (757,6,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (758,6,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (759,6,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (760,6,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (761,6,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (762,6,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (763,6,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (764,6,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (765,6,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (766,6,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (767,6,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (768,6,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (769,6,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (770,6,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (771,6,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (772,6,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (773,6,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (774,6,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (775,6,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (776,6,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (777,6,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (778,6,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (779,6,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (780,6,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (781,6,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (782,6,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (783,6,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (784,6,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (785,6,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (786,6,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (787,6,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (788,6,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (789,6,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (790,6,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (791,6,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (792,6,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (793,6,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (794,6,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (795,6,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (796,6,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (797,6,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (798,6,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (799,6,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (800,6,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (801,6,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (802,6,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (803,6,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (804,6,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (805,6,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (806,6,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (807,6,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (808,6,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (809,6,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (810,6,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (811,6,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (812,6,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (813,6,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (814,6,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (815,6,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (816,6,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (817,6,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (818,6,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (819,6,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (820,6,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (821,6,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (822,6,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (823,6,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (824,6,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (825,6,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (826,6,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (827,6,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (828,6,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (829,6,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (830,6,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (831,6,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (832,6,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (833,6,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (834,6,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (835,6,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (836,6,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (837,6,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (838,6,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (839,6,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (840,6,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (841,6,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (842,6,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (843,6,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (844,6,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (845,6,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (846,6,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (847,6,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (848,6,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (849,6,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (850,6,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (851,6,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (852,6,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (853,6,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (854,6,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (855,6,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (856,6,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (857,6,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (858,6,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (859,6,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (860,6,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (861,6,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (862,6,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (863,6,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (864,6,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (865,6,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (866,6,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (867,6,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (868,6,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (869,6,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (870,6,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (871,6,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (872,6,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (873,6,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (874,6,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (875,6,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (876,6,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (877,6,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (878,6,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (879,6,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (880,6,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (881,6,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (882,6,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (883,6,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (884,6,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (885,6,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (886,6,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (887,6,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (888,6,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (889,6,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (890,6,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (891,6,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (892,6,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (893,6,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (894,6,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (895,6,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (896,6,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (897,6,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (898,6,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (899,6,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (900,6,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (901,6,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (902,6,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (903,6,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (904,6,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (905,6,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (906,6,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (907,6,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (908,6,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (909,6,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (910,6,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (911,6,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (912,6,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (913,6,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (914,6,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (915,6,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (916,6,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (917,6,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (918,6,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (919,6,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (920,6,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (921,6,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (922,6,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (923,6,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (924,6,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (925,6,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (926,6,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (927,6,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (928,6,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (929,6,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (930,6,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (931,6,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (932,6,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (933,6,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (934,6,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (935,6,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (936,6,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (937,6,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (938,6,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (939,6,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (940,6,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (941,6,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (942,6,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (943,6,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (944,6,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (945,6,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (946,6,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (947,6,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (948,6,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (949,6,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (950,6,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (951,6,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (952,6,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (953,6,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (954,6,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (955,6,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (956,6,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (957,6,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (958,6,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (959,6,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (960,6,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (961,6,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (962,6,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (963,6,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (964,6,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (965,6,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (966,6,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (967,6,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (968,6,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (969,6,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (970,6,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (971,6,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (972,6,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (973,6,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (974,6,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (975,6,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (976,6,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (977,6,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (978,6,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (979,6,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (980,6,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (981,6,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (982,6,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (983,6,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (984,6,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (985,6,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (986,6,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (987,6,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (988,6,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (989,6,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (990,6,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (991,6,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (992,6,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (993,6,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (994,6,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (995,6,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (996,6,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (997,6,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (998,6,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (999,6,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1000,6,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1001,6,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1002,6,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1003,6,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1004,6,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1005,6,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1006,6,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1007,6,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1008,6,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1009,6,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1010,6,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1011,6,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1012,6,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1013,6,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1014,6,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1015,6,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1016,6,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1017,6,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1018,6,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1019,6,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1020,6,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1021,6,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1022,6,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1023,6,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1024,6,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1025,6,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1026,6,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1027,6,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1028,6,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1029,6,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1030,6,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1031,6,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1032,6,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1033,6,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1034,6,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1035,6,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1036,6,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1037,6,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1038,6,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1039,6,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1040,6,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1041,6,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1042,6,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1043,6,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1044,6,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1045,6,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1046,6,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1047,6,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1048,6,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1049,6,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1050,6,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1051,6,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1052,6,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1053,6,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1054,6,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1055,6,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1056,6,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1057,6,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1058,6,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1059,6,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1060,6,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1061,6,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1062,6,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1063,6,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1064,6,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1065,6,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1066,6,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1067,6,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1068,6,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1069,6,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1070,6,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1071,6,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1072,6,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1073,6,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1074,6,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1075,6,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1076,6,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1077,6,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1078,6,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1079,6,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1080,6,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1081,6,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1082,6,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1083,6,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1084,6,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1085,6,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1086,6,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1087,6,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1088,6,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1089,6,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1090,6,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1091,6,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1092,6,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1093,6,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1094,6,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1095,6,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1096,6,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1097,6,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1098,6,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1099,6,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1100,6,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1101,6,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1102,6,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1103,6,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1104,6,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1105,6,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1106,6,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1107,6,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1108,6,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1109,6,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1110,6,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1111,6,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1112,6,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1113,6,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1114,6,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1115,7,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1116,7,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1117,7,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1118,7,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1119,7,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1120,7,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1121,7,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1122,7,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1123,7,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1124,7,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1125,7,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1126,7,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1127,7,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1128,7,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1129,7,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1130,7,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1131,7,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1132,7,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1133,7,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1134,7,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1135,7,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1136,7,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1137,7,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1138,7,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1139,7,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1140,7,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1141,7,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1142,7,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1143,7,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1144,7,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1145,7,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1146,7,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1147,7,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1148,7,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1149,7,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1150,7,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1151,7,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1152,7,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1153,7,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1154,7,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1155,7,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1156,7,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1157,7,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1158,7,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1159,7,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1160,7,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1161,7,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1162,7,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1163,7,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1164,7,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1165,7,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1166,7,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1167,7,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1168,7,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1169,7,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1170,7,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1171,7,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1172,7,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1173,7,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1174,7,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1175,7,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1176,7,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1177,7,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1178,7,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1179,7,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1180,7,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1181,7,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1182,7,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1183,7,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1184,7,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1185,7,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1186,7,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1187,7,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1188,7,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1189,7,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1190,7,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1191,7,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1192,7,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1193,7,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1194,7,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1195,7,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1196,7,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1197,7,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1198,7,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1199,7,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1200,7,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1201,7,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1202,7,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1203,7,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1204,7,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1205,7,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1206,7,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1207,7,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1208,7,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1209,7,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1210,7,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1211,7,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1212,7,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1213,7,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1214,7,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1215,7,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1216,7,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1217,7,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1218,7,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1219,7,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1220,7,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1221,7,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1222,7,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1223,7,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1224,7,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1225,7,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1226,7,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1227,7,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1228,7,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1229,7,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1230,7,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1231,7,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1232,7,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1233,7,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1234,7,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1235,7,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1236,7,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1237,7,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1238,7,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1239,7,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1240,7,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1241,7,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1242,7,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1243,7,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1244,7,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1245,7,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1246,7,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1247,7,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1248,7,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1249,7,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1250,7,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1251,7,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1252,7,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1253,7,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1254,7,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1255,7,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1256,7,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1257,7,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1258,7,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1259,7,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1260,7,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1261,7,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1262,7,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1263,7,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1264,7,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1265,7,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1266,7,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1267,7,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1268,7,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1269,7,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1270,7,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1271,7,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1272,7,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1273,7,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1274,7,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1275,7,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1276,7,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1277,7,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1278,7,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1279,7,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1280,7,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1281,7,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1282,7,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1283,7,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1284,7,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1285,7,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1286,7,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1287,7,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1288,7,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1289,7,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1290,7,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1291,7,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1292,7,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1293,7,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1294,7,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1295,7,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1296,7,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1297,7,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1298,7,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1299,7,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1300,7,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1301,7,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1302,7,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1303,7,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1304,7,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1305,7,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1306,7,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1307,7,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1308,7,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1309,7,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1310,7,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1311,7,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1312,7,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1313,7,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1314,7,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1315,7,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1316,7,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1317,7,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1318,7,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1319,7,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1320,7,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1321,7,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1322,7,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1323,7,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1324,7,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1325,7,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1326,7,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1327,7,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1328,7,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1329,7,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1330,7,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1331,7,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1332,7,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1333,7,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1334,7,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1335,7,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1336,7,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1337,7,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1338,7,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1339,7,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1340,7,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1341,7,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1342,7,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1343,7,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1344,7,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1345,7,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1346,7,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1347,7,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1348,7,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1349,7,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1350,7,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1351,7,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1352,7,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1353,7,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1354,7,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1355,7,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1356,7,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1357,7,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1358,7,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1359,7,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1360,7,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1361,7,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1362,7,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1363,7,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1364,7,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1365,7,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1366,7,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1367,7,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1368,7,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1369,7,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1370,7,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1371,7,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1372,7,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1373,7,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1374,7,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1375,7,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1376,7,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1377,7,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1378,7,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1379,7,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1380,7,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1381,7,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1382,7,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1383,7,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1384,7,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1385,7,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1386,7,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1387,7,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1388,7,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1389,7,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1390,7,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1391,7,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1392,7,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1393,7,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1394,7,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1395,7,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1396,7,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1397,7,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1398,7,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1399,7,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1400,7,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1401,7,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1402,7,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1403,7,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1404,7,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1405,7,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1406,7,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1407,7,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1408,7,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1409,7,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1410,7,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1411,7,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1412,7,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1413,7,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1414,7,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1415,7,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1416,7,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1417,7,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1418,7,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1419,7,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1420,7,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1421,7,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1422,7,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1423,7,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1424,7,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1425,7,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1426,7,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1427,7,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1428,7,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1429,7,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1430,7,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1431,7,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1432,7,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1433,7,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1434,7,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1435,7,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1436,7,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1437,7,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1438,7,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1439,7,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1440,7,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1441,7,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1442,7,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1443,7,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1444,7,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1445,7,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1446,7,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1447,7,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1448,7,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1449,7,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1450,7,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1451,7,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1452,7,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1453,7,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1454,7,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1455,7,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1456,7,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1457,7,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1458,7,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1459,7,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1460,7,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1461,7,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1462,7,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1463,7,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1464,7,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1465,7,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1466,7,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1467,7,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1468,7,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1469,7,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1470,7,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1471,7,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1472,7,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1473,7,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1474,7,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1475,7,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1476,7,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1477,7,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1478,7,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1479,7,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1480,7,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1481,7,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1482,7,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1483,7,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1484,7,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1485,7,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1486,7,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1487,7,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1488,7,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1489,7,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1490,7,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1491,7,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1492,7,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1493,7,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1494,7,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1495,7,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1496,7,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1497,7,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1498,7,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1499,7,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1500,7,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1501,7,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1502,7,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1503,7,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1504,7,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1505,7,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1506,7,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1507,7,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1508,7,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1509,7,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1510,7,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1511,7,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1512,7,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1513,7,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1514,7,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1515,7,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1516,7,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1517,7,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1518,7,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1519,7,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1520,7,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1521,7,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1522,8,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1523,8,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1524,8,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1525,8,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1526,8,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1527,8,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1528,8,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1529,8,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1530,8,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1531,8,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1532,8,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1533,8,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1534,8,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1535,8,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1536,8,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1537,8,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1538,8,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1539,8,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1540,8,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1541,8,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1542,8,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1543,8,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1544,8,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1545,8,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1546,8,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1547,8,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1548,8,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1549,8,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1550,8,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1551,8,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1552,8,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1553,8,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1554,8,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1555,8,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1556,8,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1557,8,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1558,8,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1559,8,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1560,8,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1561,8,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1562,8,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1563,8,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1564,8,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1565,8,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1566,8,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1567,8,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1568,8,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1569,8,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1570,8,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1571,8,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1572,8,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1573,8,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1574,8,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1575,8,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1576,8,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1577,8,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1578,8,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1579,8,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1580,8,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1581,8,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1582,8,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1583,8,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1584,8,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1585,8,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1586,8,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1587,8,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1588,8,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1589,8,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1590,8,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1591,8,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1592,8,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1593,8,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1594,8,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1595,8,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1596,8,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1597,8,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1598,8,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1599,8,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1600,8,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1601,8,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1602,8,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1603,8,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1604,8,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1605,8,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1606,8,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1607,8,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1608,8,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1609,8,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1610,8,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1611,8,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1612,8,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1613,8,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1614,8,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1615,8,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1616,8,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1617,8,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1618,8,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1619,8,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1620,8,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1621,8,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1622,8,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1623,8,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1624,8,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1625,8,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1626,8,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1627,8,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1628,8,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1629,8,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1630,8,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1631,8,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1632,8,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1633,8,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1634,8,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1635,8,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1636,8,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1637,8,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1638,8,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1639,8,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1640,8,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1641,8,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1642,8,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1643,8,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1644,8,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1645,8,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1646,8,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1647,8,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1648,8,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1649,8,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1650,8,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1651,8,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1652,8,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1653,8,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1654,8,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1655,8,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1656,8,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1657,8,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1658,8,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1659,8,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1660,8,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1661,8,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1662,8,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1663,8,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1664,8,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1665,8,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1666,8,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1667,8,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1668,8,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1669,8,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1670,8,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1671,8,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1672,8,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1673,8,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1674,8,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1675,8,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1676,8,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1677,8,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1678,8,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1679,8,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1680,8,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1681,8,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1682,8,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1683,8,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1684,8,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1685,8,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1686,8,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1687,8,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1688,8,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1689,8,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1690,8,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1691,8,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1692,8,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1693,8,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1694,8,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1695,8,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1696,8,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1697,8,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1698,8,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1699,8,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1700,8,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1701,8,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1702,8,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1703,8,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1704,8,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1705,8,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1706,8,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1707,8,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1708,8,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1709,8,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1710,8,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1711,8,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1712,8,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1713,8,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1714,8,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1715,8,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1716,8,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1717,8,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1718,8,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1719,8,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1720,8,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1721,8,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1722,8,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1723,8,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1724,8,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1725,8,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1726,8,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1727,8,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1728,8,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1729,8,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1730,8,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1731,8,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1732,8,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1733,8,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1734,8,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1735,8,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1736,8,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1737,8,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1738,8,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1739,8,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1740,8,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1741,8,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1742,8,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1743,8,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1744,8,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1745,8,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1746,8,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1747,8,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1748,8,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1749,8,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1750,8,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1751,8,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1752,8,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1753,8,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1754,8,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1755,8,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1756,8,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1757,8,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1758,8,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1759,8,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1760,8,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1761,8,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1762,8,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1763,8,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1764,8,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1765,8,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1766,8,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1767,8,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1768,8,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1769,8,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1770,8,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1771,8,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1772,8,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1773,8,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1774,8,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1775,8,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1776,8,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1777,8,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1778,8,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1779,8,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1780,8,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1781,8,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1782,8,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1783,8,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1784,8,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1785,8,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1786,8,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1787,8,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1788,8,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1789,8,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1790,8,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1791,8,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1792,8,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1793,8,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1794,8,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1795,8,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1796,8,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1797,8,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1798,8,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1799,8,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1800,8,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1801,8,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1802,8,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1803,8,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1804,8,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1805,8,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1806,8,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1807,8,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1808,8,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1809,8,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1810,8,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1811,8,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1812,8,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1813,8,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1814,8,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1815,8,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1816,8,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1817,8,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1818,8,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1819,8,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1820,8,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1821,8,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1822,8,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1823,8,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1824,8,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1825,8,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1826,8,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1827,8,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1828,8,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1829,8,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1830,8,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1831,8,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1832,8,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1833,8,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1834,8,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1835,8,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1836,8,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1837,8,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1838,8,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1839,8,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1840,8,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1841,8,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1842,8,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1843,8,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1844,8,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1845,8,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1846,8,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1847,8,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1848,8,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1849,8,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1850,8,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1851,8,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1852,8,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1853,8,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1854,8,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1855,8,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1856,8,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1857,8,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1858,8,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1859,8,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1860,8,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1861,8,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1862,8,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1863,8,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1864,8,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1865,8,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1866,8,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1867,8,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1868,8,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1869,8,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1870,8,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1871,8,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1872,8,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1873,8,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1874,8,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1875,8,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1876,8,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1877,8,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1878,8,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1879,8,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1880,8,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1881,8,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1882,8,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1883,8,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1884,8,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1885,8,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1886,8,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1887,8,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1888,8,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1889,8,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1890,8,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1891,8,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1892,8,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1893,8,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1894,8,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1895,8,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1896,8,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1897,8,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1898,8,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1899,8,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1900,8,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1901,8,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1902,8,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1903,8,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1904,8,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1905,8,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1906,8,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1907,8,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1908,8,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1909,8,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1910,8,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1911,8,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1912,8,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1913,8,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1914,8,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1915,8,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1916,8,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1917,8,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1918,8,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1919,8,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1920,8,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1921,8,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1922,8,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1923,8,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1924,8,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1925,8,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1926,8,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1927,8,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1928,8,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-07-14 18:39:25',60,1,'20.00',1,0),
 (2,2,2,1,'2024-07-14 18:39:25',60,1,'20.00',1,0),
 (3,3,3,1,'2024-07-14 18:39:26',60,1,'20.00',1,0),
 (4,4,4,1,'2024-07-14 18:39:26',60,1,'20.00',1,0),
 (5,1,1,1,'2024-07-14 18:39:27',60,1,'20.00',1,0),
 (6,2,2,1,'2024-07-14 18:39:29',60,1,'20.00',1,0),
 (7,3,3,1,'2024-07-14 18:39:31',60,1,'20.00',1,0),
 (8,4,4,1,'2024-07-14 18:39:33',60,1,'20.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #012'),
 (2,'Assessment Test #013'),
 (3,'Assessment Test #014'),
 (4,'Assessment Test #015');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-07-14 18:39:22'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-07-14 18:39:22'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-07-14 18:39:22'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-07-14 18:39:22'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-07-14 18:39:22'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-07-14 18:39:22'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-07-14 18:39:22'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-07-14 18:39:22'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-07-14 18:39:22'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-07-14 18:39:22'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-07-14 18:39:22'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-07-14 18:39:22'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-07-14 18:39:22'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-07-14 18:39:22'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-07-14 18:39:22'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-07-14 18:39:22'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-07-14 18:39:22'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-07-14 18:39:22'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-07-14 18:39:22'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-07-14 18:39:22'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-07-14 18:39:23'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-07-14 18:39:23'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-07-14 18:39:23'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-07-14 18:39:23'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-07-14 18:39:23'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-07-14 18:39:23'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-07-14 18:39:23'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-07-14 18:39:23'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-07-14 18:39:23'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-07-14 18:39:23'),
 (31,'',0,'0',NULL,NULL,31,0,NULL,'2024-07-14 18:39:23'),
 (32,'',0,'0',NULL,NULL,32,0,NULL,'2024-07-14 18:39:23'),
 (33,'',0,'0',NULL,NULL,33,0,NULL,'2024-07-14 18:39:23'),
 (34,'',0,'0',NULL,NULL,34,0,NULL,'2024-07-14 18:39:23'),
 (35,'',0,'0',NULL,NULL,35,0,NULL,'2024-07-14 18:39:23'),
 (36,'',0,'0',NULL,NULL,36,0,NULL,'2024-07-14 18:39:23'),
 (37,'',0,'0',NULL,NULL,37,0,NULL,'2024-07-14 18:39:23'),
 (38,'',0,'0',NULL,NULL,38,0,NULL,'2024-07-14 18:39:23'),
 (39,'',0,'0',NULL,NULL,39,0,NULL,'2024-07-14 18:39:23'),
 (40,'',0,'0',NULL,NULL,40,0,NULL,'2024-07-14 18:39:23'),
 (41,'',0,'0',NULL,NULL,41,0,NULL,'2024-07-14 18:39:23'),
 (42,'',0,'0',NULL,NULL,42,0,NULL,'2024-07-14 18:39:23'),
 (43,'',0,'0',NULL,NULL,43,0,NULL,'2024-07-14 18:39:23'),
 (44,'',0,'0',NULL,NULL,44,0,NULL,'2024-07-14 18:39:23'),
 (45,'',0,'0',NULL,NULL,45,0,NULL,'2024-07-14 18:39:23'),
 (46,'',0,'0',NULL,NULL,46,0,NULL,'2024-07-14 18:39:23'),
 (47,'',0,'0',NULL,NULL,47,0,NULL,'2024-07-14 18:39:23'),
 (48,'',0,'0',NULL,NULL,48,0,NULL,'2024-07-14 18:39:23'),
 (49,'',0,'0',NULL,NULL,49,0,NULL,'2024-07-14 18:39:23'),
 (50,'',0,'0',NULL,NULL,50,0,NULL,'2024-07-14 18:39:23'),
 (51,'',0,'0',NULL,NULL,51,0,NULL,'2024-07-14 18:39:23'),
 (52,'',0,'0',NULL,NULL,52,0,NULL,'2024-07-14 18:39:23'),
 (53,'',0,'0',NULL,NULL,53,0,NULL,'2024-07-14 18:39:23'),
 (54,'',0,'0',NULL,NULL,54,0,NULL,'2024-07-14 18:39:24'),
 (55,'',0,'0',NULL,NULL,55,0,NULL,'2024-07-14 18:39:24'),
 (56,'',0,'0',NULL,NULL,56,0,NULL,'2024-07-14 18:39:24'),
 (57,'',0,'0',NULL,NULL,57,0,NULL,'2024-07-14 18:39:24'),
 (58,'',0,'0',NULL,NULL,58,0,NULL,'2024-07-14 18:39:24'),
 (59,'',0,'0',NULL,NULL,59,0,NULL,'2024-07-14 18:39:24'),
 (60,'',0,'0',NULL,NULL,60,0,NULL,'2024-07-14 18:39:24'),
 (61,'',0,'0',NULL,NULL,61,0,NULL,'2024-07-14 18:39:24'),
 (62,'',0,'0',NULL,NULL,62,0,NULL,'2024-07-14 18:39:24'),
 (63,'',0,'0',NULL,NULL,63,0,NULL,'2024-07-14 18:39:24'),
 (64,'',0,'0',NULL,NULL,64,0,NULL,'2024-07-14 18:39:24'),
 (65,'',0,'0',NULL,NULL,65,0,NULL,'2024-07-14 18:39:24'),
 (66,'',0,'0',NULL,NULL,66,0,NULL,'2024-07-14 18:39:24'),
 (67,'',0,'0',NULL,NULL,67,0,NULL,'2024-07-14 18:39:24'),
 (68,'',0,'0',NULL,NULL,68,0,NULL,'2024-07-14 18:39:24'),
 (69,'',0,'0',NULL,NULL,69,0,NULL,'2024-07-14 18:39:24'),
 (70,'',0,'0',NULL,NULL,70,0,NULL,'2024-07-14 18:39:24'),
 (71,'',0,'0',NULL,NULL,71,0,NULL,'2024-07-14 18:39:24'),
 (72,'',0,'0',NULL,NULL,72,0,NULL,'2024-07-14 18:39:24'),
 (73,'',0,'0',NULL,NULL,73,0,NULL,'2024-07-14 18:39:24'),
 (74,'',0,'0',NULL,NULL,74,0,NULL,'2024-07-14 18:39:25'),
 (75,'',0,'0',NULL,NULL,75,0,NULL,'2024-07-14 18:39:25'),
 (76,'',0,'0',NULL,NULL,76,0,NULL,'2024-07-14 18:39:25'),
 (77,'',0,'0',NULL,NULL,77,0,NULL,'2024-07-14 18:39:25'),
 (78,'',0,'0',NULL,NULL,78,0,NULL,'2024-07-14 18:39:25'),
 (79,'',0,'0',NULL,NULL,79,0,NULL,'2024-07-14 18:39:25'),
 (80,'',0,'0',NULL,NULL,80,0,NULL,'2024-07-14 18:39:25');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these class is superclass of String and String Buffer class?</div>\n',1,1,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What value is assigned to a reference variable to show that there is no object?</div>\n',1,2,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following invokes the method length() of the object str and stores the result in val?</div>\n',1,3,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"font-weight:bold;\">Examine this code:</div>\n<div style=\"font-weight:bold;\">String myString = \"\";</div>\n<div style=\"font-weight:bold;\">What value is contained in myString?</div>\n',1,4,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these method of class String is used to extract a single character from a String object?</div>\n',1,5,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"font-weight:bold;\">What sort of thing is \"Nothing New\" as in the following:</div>\n<div style=\"font-weight:bold;\">String str = \"Nothing New\";</div>\n',1,6,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"font-weight:bold;\">Which of the following is correct?</div>\n<div style=\"font-weight:bold;\"> A.    String alpha(\"Hello Quiz!\") ;</div>\n<div style=\"font-weight:bold;\"> B.    String = \"Hello Quiz!\" ;</div>\n<div style=\"font-weight:bold;\"> C.    String alpha = new \"Hello Quiz!\" ;</div>\n<div style=\"font-weight:bold;\"> D.    String alpha = \"Hello Quiz!\" ;</div>\n',1,7,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"font-weight:bold;\">Examine this code:</div>\n<div style=\"font-weight:bold;\">String myString;</div>\n<div style=\"font-weight:bold;\">What is the data type of myString?</div>\n',1,8,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these method of class StringBuffer is used to concatenate the string representation to the end of invoking string?</div>\n',1,9,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these class is used to create an object whose character sequence is mutable?</div>\n',1,10,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div style=\"font-weight:bold;\">Which of the following puts a reference to \"Wild Irish Rose\" in result?</div>\n<div style=\"font-weight:bold;\"> A.    result = stringA.concat( stringB.concat( stringC ) );</div>\n<div style=\"font-weight:bold;\"> B.    result.concat( stringA, stringB, stringC );</div>\n<div style=\"font-weight:bold;\"> C.    result+stringA+stringB+stringC;</div>\n<div style=\"font-weight:bold;\"> D.    result = concat(StringA).concat(StringB).concat(StringC)</div>\n',1,11,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these method of class StringBuffer is used to reverse sequence of characters?</div>\n',1,12,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these method of class StringBuffer is used to get the length of sequence of characters?</div>\n',1,13,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div style=\"font-weight:bold;\">What is the string contained in s after following lines of code?</div>\n<div style=\"font-weight:bold;\"> StringBuffer s new StringBuffer(&ldquo;Hello&rdquo;);</div>\n<div style=\"font-weight:bold;\"> s.deleteCharAt(0);</div>\n',1,14,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div style=\"font-weight:bold;\">What is the result of the following:</div>\n<div style=\"font-weight:bold;\">String stringA = \" Wild \" ;</div>\n<div style=\"font-weight:bold;\">String stringB = \" Irish \";</div>\n<div style=\"font-weight:bold;\">String stringC = \" Rose \";</div>\n<div style=\"font-weight:bold;\">String result  = stringA.trim() + stringB + stringC.trim();</div>\n',1,15,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these method of class StringBuffer is used to extract a substring from a String object?</div>\n',1,16,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div style=\"font-weight:bold;\">Which of the following statement is correct in strings?</div>\n<div style=\"font-weight:bold;\">A. reverse() method reverses all characters.</div>\n<div style=\"font-weight:bold;\">B. reverseall() method reverses all characters.</div>\n<div style=\"font-weight:bold;\">C. replace() method replaces first occurrence of a character in invoking string with another character.</div>\n<div style=\"font-weight:bold;\">D. replace() method replaces last occurrence of a character in invoking string with another character</div>\n',1,17,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div style=\"font-weight:bold;\">What will s2 contain after following lines of code?</div>\n<div style=\"font-weight:bold;\"> StringBuffer s1 = &ldquo;one&rdquo;;</div>\n<div style=\"font-weight:bold;\"> StringBuffer s2 = s1.append(&ldquo;two&rdquo;)</div>\n',1,18,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div style=\"font-weight:bold;\">Which of the following are incorrect form of StringBuffer class constructor?</div>\n<div style=\"font-weight:bold;\">A. StringBuffer()</div>\n<div style=\"font-weight:bold;\">B. StringBuffer(int size)</div>\n<div style=\"font-weight:bold;\">C. StringBuffer(String str)</div>\n<div style=\"font-weight:bold;\">D. StringBuffer(int size , String str)</div>\n',1,19,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div style=\"font-weight:bold;\">What will be the output of the following program code?</div>\n<div style=\"font-weight:bold;\">class LogicalCompare{</div>\n<div style=\"font-weight:bold;\">public static void main(String args[]){</div>\n<div style=\"font-weight:bold;\">String str1 = new String(\"OKAY\");</div>\n<div style=\"font-weight:bold;\">String str2 = new String(str1);</div>\n<div style=\"font-weight:bold;\">System.out.println(str1 == str2);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,20,1,'1','2024-07-14 18:39:22',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these package is used for graphical user interface?</div>\n',1,1,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div style=\"font-weight:bold;\">What is a package in Java?</div>\n<div style=\"font-weight:bold;\">A) A Package is a collection of files of type Java Class, Interfaces, or Abstract Class</div>\n<div style=\"font-weight:bold;\">B) A Package is simply a Directory or Folder with Java Classes</div>\n<div style=\"font-weight:bold;\">C) A Package usually contains Java Classes written for a specific purpose or problem</div>\n',1,2,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of this package is used for analyzing code during run- time?</div>\n',1,3,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which is the default Java package that will be auto included (imported) in the classpath while Compiling and Running a Java program?</div>\n',1,4,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of this package is used for handling security related issues in a program?</div>\n',1,5,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div style=\"font-weight:bold;\">What are the popular Classes or Interfaces inside a Java Language Pack (java.lang)?</div>\n<div style=\"font-weight:bold;\">A) Byte, Character, Short, Integer, Float, Long, Number</div>\n<div style=\"font-weight:bold;\">B) Math, String, StringBuffer, StringBuilder</div>\n<div style=\"font-weight:bold;\">C) Thread, Throwable, Exception, Error</div>\n',1,6,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of this package is used for invoking a method remotely?</div>\n',1,7,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div style=\"font-weight:bold;\">The name of a package is the name of the ___ in Java.</div>\n<div style=\"font-weight:bold;\">A) folder</div>\n<div style=\"font-weight:bold;\">B) All parent folders separated by DOT symbols</div>\n<div style=\"font-weight:bold;\">C) All parent packages separated by DOT symbols</div>\n',1,8,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which is the symbol used to separate a super-package and a sub-package at the time of declaring or importing in a Java program?</div>\n',1,9,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div style=\"font-weight:bold;\">Choose a correct statement about using the classes or interfaces or abstract classes inside the packages in our Java program.</div>\n<div style=\"font-weight:bold;\">A) You cant extend the class imported from the package.</div>\n<div style=\"font-weight:bold;\">B) You can implement the interfaces imported from the package.</div>\n<div style=\"font-weight:bold;\">C) You cant extend the abstract classes imported from the package.</div>\n',1,10,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (31,'<div style=\"font-weight:bold;\">Which of the following is incorrect statement about packages?</div>\n<div style=\"font-weight:bold;\">A. Package defines a namespace in which classes are stored.</div>\n<div style=\"font-weight:bold;\">B. A package can contain other package within it.</div>\n<div style=\"font-weight:bold;\">C. Java uses file system directories to store packages.</div>\n<div style=\"font-weight:bold;\">D. A package can be renamed without renaming the directory in which the classes are stored.</div>\n',1,11,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (32,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following package stores all the standard java classes?</div>\n',1,12,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (33,'<div style=\"font-weight:bold;\">Which of the following is false statement about package in java?</div>\n<div style=\"font-weight:bold;\">A. Packages are used for preventing naming conflicts</div>\n<div style=\"font-weight:bold;\">B. Providing controlled access: protected and default have package level access control.</div>\n<div style=\"font-weight:bold;\">C. Packages cannot be considered as data encapsulation</div>\n',1,13,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (34,'<div style=\"font-weight:bold;\">4. State whether the following statements about the advantages of organizing classes into packages are True or False.</div>\n<div style=\"font-weight:bold;\">i) Two classes in two different packages can not have the same name.</div>\n<div style=\"font-weight:bold;\">ii) The classes contained in the packages of other programs can be easily reused.</div>\n',1,14,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (35,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these access specifiers can be used for a class so that it&rsquo;s members can be accessed by a different class in the different package?</div>\n',1,15,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (36,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is correct way of importing an entire package &lsquo;pkg&rsquo;?</div>\n',1,16,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (37,'<div style=\"font-weight:bold;\">What is the output of the below Java program with packages?</div>\n<div style=\"font-weight:bold;\">//MathClass.java</div>\n<div style=\"font-weight:bold;\">package package1;</div>\n<div style=\"font-weight:bold;\">public class MathClass</div>\n<div style=\"font-weight:bold;\">{   public static int getRandom()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">//returns a random number from 0 to 999</div>\n<div style=\"font-weight:bold;\">return ((int) (Math.random() * 1000)); </div>\n<div style=\"font-weight:bold;\">}  }</div>\n<div style=\"font-weight:bold;\">//PackageTest3.java</div>\n<div style=\"font-weight:bold;\">import package1.*;</div>\n<div style=\"font-weight:bold;\">public class PackageTest3</div>\n<div style=\"font-weight:bold;\">{     public static void main(String[] args)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">System.out.print(MathClass.getRandom());</div>\n<div style=\"font-weight:bold;\">}  }</div>\n',1,17,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (38,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The Date class includes within__________ package.</div>\n',1,18,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (39,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of this access specifies can be used for a class so that its members can be accessed by a different class in the same package?</div>\n',1,19,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (40,'<div style=\"font-weight:bold;\">Which of the following classes are included in java.awt package.</div>\n<div style=\"font-weight:bold;\">i) Font                 ii) Frame             iii) Float                 iv) File</div>\n',1,20,2,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (41,'<div style=\"font-weight:bold;\">Declare and construct an ArrayList with an initial capacity of 20 references to Object.</div>\n<div style=\"font-weight:bold;\"> A.Object list(20) = new ArrayList() ;</div>\n<div style=\"font-weight:bold;\"> B.ArrayList list[20] = new ArrayList() ;</div>\n<div style=\"font-weight:bold;\"> C.ArrayList[Object] list = new ArrayList(20) ;</div>\n<div style=\"font-weight:bold;\"> D.ArrayList<Object> list = new ArrayList<Object>(20) ;</div>\n',1,1,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (42,'<div style=\"font-weight:bold;\">The command-line arguments are passes at ____.</div>\n<div style=\"font-weight:bold;\">A) Runtime</div>\n<div style=\"font-weight:bold;\">B) the time of executing a Java program.</div>\n<div style=\"font-weight:bold;\">C) the time of compiling a Java program.</div>\n',1,2,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (43,'<div style=\"font-weight:bold;\">Examine the following code:</div>\n<div style=\"font-weight:bold;\">ArrayList<String> list = new ArrayList<String>(10) ;</div>\n<div style=\"font-weight:bold;\">list.add( \"Ann\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Bob\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Eve\" );</div>\n<div style=\"font-weight:bold;\">After the code has executed, what is the capacity of list? What is its size?</div>\n',1,3,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (44,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">When a Java program is executed once, how many times can you pass data using the Command-line arguments?</div>\n',1,4,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (45,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which is the method that accepts data passed in the form of command-line arguments in Java?</div>\n',1,5,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (46,'<div style=\"font-weight:bold;\">Examine the following code:</div>\n<div style=\"font-weight:bold;\">ArrayList<String> list = new ArrayList<String>(10) ;</div>\n<div style=\"font-weight:bold;\">list.add( \"Andy\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Bart\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Carl\" );</div>\n<div style=\"font-weight:bold;\">list.add( 0, \"Eve\" );</div>\n<div style=\"font-weight:bold;\">What element will be at index 2 of the list?</div>\n',1,6,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (47,'<div style=\"font-weight:bold;\">Examine the following code:</div>\n<div style=\"font-weight:bold;\">ArrayList<String> list = new ArrayList<String>() ;</div>\n<div style=\"font-weight:bold;\">list.add( \"Andy\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Bart\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Carl\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Doug\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Elmo\" );</div>\n<div style=\"font-weight:bold;\">Which of the following will change the list so that it looks like:</div>\n<div style=\"font-weight:bold;\">Andy</div>\n<div style=\"font-weight:bold;\">Bart</div>\n<div style=\"font-weight:bold;\">Carl</div>\n<div style=\"font-weight:bold;\">Doug</div>\n<div style=\"font-weight:bold;\">Oscar</div>\n<div style=\"font-weight:bold;\">Elmo</div>\n',1,7,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (48,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The command-line arguments in Java are used along with a ____ command.</div>\n',1,8,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (49,'<div style=\"font-weight:bold;\">Examine the following code:</div>\n<div style=\"font-weight:bold;\">ArrayList<String> list = new ArrayList<String>() ;</div>\n<div style=\"font-weight:bold;\">list.add( \"Andy\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Bart\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Carl\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Doug\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Elmo\" );</div>\n<div style=\"font-weight:bold;\">Which of the following will replace the element \"Carl\" with \"Zoltan\" ?</div>\n',1,9,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (50,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The type of Arguments the MAIN method accepts is ___.</div>\n',1,10,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (51,'<div style=\"font-weight:bold;\">Examine the following code:</div>\n<div style=\"font-weight:bold;\">ArrayList<String> list = new ArrayList<String>() ;</div>\n<div style=\"font-weight:bold;\">list.add( \"Andy\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Bart\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Carl\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Doug\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Elmo\" );</div>\n<div style=\"font-weight:bold;\">Which of the following will change the list so that it looks like:</div>\n<div style=\"font-weight:bold;\">Andy</div>\n<div style=\"font-weight:bold;\">Bart</div>\n<div style=\"font-weight:bold;\">Doug</div>\n<div style=\"font-weight:bold;\">Elmo</div>\n',1,11,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (52,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The delimiter used to separate command-line arguments in Java is ____.</div>\n',1,12,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (53,'<div style=\"font-weight:bold;\">Examine the following code:</div>\n<div style=\"font-weight:bold;\">ArrayList<String> list = new ArrayList<String>() ;</div>\n<div style=\"font-weight:bold;\">list.add( \"Andy\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Bart\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Carl\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Doug\" );</div>\n<div style=\"font-weight:bold;\">list.add( \"Elmo\" );</div>\n<div style=\"font-weight:bold;\">Which of the following will change the list so that it looks like:</div>\n<div style=\"font-weight:bold;\">Andy</div>\n<div style=\"font-weight:bold;\">Bart</div>\n<div style=\"font-weight:bold;\">Carl</div>\n<div style=\"font-weight:bold;\">Doug</div>\n',1,13,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (54,'<div style=\"font-weight:bold;\">\r\n	What is the output of the below Java program with command-line arguments?</div>\r\n<div style=\"font-weight:bold;\">\r\n	public class CommandLineArgs1</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	public static void main(String[] args)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(String str: args)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	System.out.println(str);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(args.length == 0)</div>\r\n<div style=\"font-weight:bold;\">\r\n	System.out.println(&quot;No arguments passed&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	c:\\folder&gt;java CommandLineArgs1 car brake horn</div>',1,14,3,'1','2024-07-14 18:39:23',0,NULL,NULL,'','',NULL,NULL),
 (55,'<div style=\"font-weight:bold;\">Choose the correct way of receiving command-line arguments with in the MAIN method in Java?</div>\n<div style=\"font-weight:bold;\">public static void main(String[] args)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">public static void main(String args[])</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">public static void main(String anyName[])</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,15,3,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (56,'<div style=\"font-weight:bold;\">which of the following declarations would be appropriate for a list that is expected to contain integers?</div>\n<div style=\"font-weight:bold;\"> A.    ArrayList<String> list = new ArrayList<String>() ;</div>\n<div style=\"font-weight:bold;\"> B.    ArrayList<int> list = new ArrayList<int>() ;</div>\n<div style=\"font-weight:bold;\"> C.    ArrayList<Integer> list = new ArrayList<Integer>() ;</div>\n<div style=\"font-weight:bold;\"> D.    ArrayList list = new ArrayList() ;</div>\n',1,16,3,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (57,'<div style=\"font-weight:bold;\">Which is the exception or error that is thrown if a non-existing command-line argument is referred to in a Java program?</div>\n<div style=\"font-weight:bold;\">A) StackOverflowError</div>\n<div style=\"font-weight:bold;\">B) IndexOutOfBoundsException</div>\n<div style=\"font-weight:bold;\">C) ArrayIndexOutOfBoundsException</div>\n<div style=\"font-weight:bold;\">D) ArithmeticException</div>\n',1,17,3,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (58,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The data that is passed at the time of running a Java program as command-line arguments are converted into ___ data type.</div>\n',1,18,3,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (59,'<div style=\"font-weight:bold;\">What equals() method must you override when defining a class of objects you expect to hold in a ArrayList ?</div>\n<div style=\"font-weight:bold;\"> A.    public boolean equals( Object )</div>\n<div style=\"font-weight:bold;\"> B.    public boolean equals( ArrayList )</div>\n<div style=\"font-weight:bold;\"> C.    boolean equals( Object )</div>\n<div style=\"font-weight:bold;\"> D.    private int equals( Object )</div>\n',1,19,3,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (60,'<div style=\"font-weight:bold;\">What is the output of the below Java program with command-line arguments?</div>\n<div style=\"font-weight:bold;\">public class CommandLineArguments2</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">public static void main(String[] args)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">System.out.println(args[1]);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">C:\\folder>java CommandLineArguments2 TIGER</div>\n',1,20,3,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (61,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Encapsulation helps in writing ___________ classes in java.</div>\n',1,1,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (62,'<div style=\"font-weight:bold;\">Int x=0, y=0,z=0;</div>\n<div style=\"font-weight:bold;\">x= (++x + y--) * z++;</div>\n<div style=\"font-weight:bold;\">What will be the value of x after execution?</div>\n',1,2,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (63,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these class object can be used to form a dynamic array?</div>\n',1,3,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (64,'<div style=\"font-weight:bold;\">2. Which of the following are the wrapper classes?</div>\n<div style=\"font-weight:bold;\">i) Random           ii) Byte                iii) Vector            iv) Integer           v) Short</div>\n',1,4,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (65,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Primitive data types may be converted into object types by using the container in the java.lang types by using the ________ contained in the java.lang package.</div>\n',1,5,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (66,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">You can convert sting objects to numeric objects using the static method ________?</div>\n',1,6,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (67,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Wrapper class is a wrapper around a ________ data type.</div>\n',1,7,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (68,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">_________ in wrapper classes are used to convert primitive numbers to object numbers.</div>\n',1,8,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (69,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">_______ is the wrapper class.</div>\n',1,9,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (70,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the name of a data member of class Vector which is used to store a number of elements in the vector?</div>\n',1,10,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (71,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The ___________ method is used to convert object numbers to primitive numbers.</div>\n',1,11,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (72,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the function is used to convert string to Number in java program?</div>\n',1,12,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (73,'<div style=\"font-weight:bold;\">What is the output of this program?</div>\n<div style=\"font-weight:bold;\">Vector v = new Vector(5,2);</div>\n<div style=\"font-weight:bold;\">v.add(7);</div>\n<div style=\"font-weight:bold;\">v.add(4);</div>\n<div style=\"font-weight:bold;\">v.add(6);</div>\n<div style=\"font-weight:bold;\">System.out.println(v.elementAt(1));</div>\n',1,13,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (74,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of these methods is used to add elements in vector at specific location?</div>\n',1,14,4,'1','2024-07-14 18:39:24',0,NULL,NULL,'','',NULL,NULL),
 (75,'<div style=\"font-weight:bold;\">What is the output of this program?</div>\n<div style=\"font-weight:bold;\">Vector v = new Vector(5,2);</div>\n<div style=\"font-weight:bold;\">v.add(7);</div>\n<div style=\"font-weight:bold;\">v.add(4);</div>\n<div style=\"font-weight:bold;\">v.add(6);</div>\n<div style=\"font-weight:bold;\">System.out.println(v.capacity());</div>\n',1,15,4,'1','2024-07-14 18:39:25',0,NULL,NULL,'','',NULL,NULL),
 (76,'<div style=\"font-weight:bold;\">Which of the following is/are the advantages over arrays?</div>\n<div style=\"font-weight:bold;\">i) It is convenient to use vectors to store objects</div>\n<div style=\"font-weight:bold;\">ii) A vector can be used to store a list of objects that may vary in size</div>\n<div style=\"font-weight:bold;\">iii) We can add and delete objects from the list as and when required</div>\n',1,16,4,'1','2024-07-14 18:39:25',0,NULL,NULL,'','',NULL,NULL),
 (77,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">Vector v = new Vector(30);</div>\n<div style=\"font-weight:bold;\">v.addElement(\"Object\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"Class\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"Abstraction\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"Encapsulation\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"class\");</div>\n<div style=\"font-weight:bold;\">System.out.println(v.indexOf(\"Class+\", 2));</div>\n',1,17,4,'1','2024-07-14 18:39:25',0,NULL,NULL,'','',NULL,NULL),
 (78,'<div style=\"font-weight:bold;\">Java compiler provides restrictions to perform which of the following conversions.</div>\n<div style=\"font-weight:bold;\">i) Convert from null type to any primitive type</div>\n<div style=\"font-weight:bold;\">ii) Convert to the null type other than the identity conversion.</div>\n<div style=\"font-weight:bold;\">iii) Convert from any class type C to any array type if C does not object.</div>\n',1,18,4,'1','2024-07-14 18:39:25',0,NULL,NULL,'','',NULL,NULL),
 (79,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">Vector v = new Vector(5,2);</div>\n<div style=\"font-weight:bold;\">v.addElement(\"Java\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"Python\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"C++\");</div>\n<div style=\"font-weight:bold;\">System.out.println(v.size());</div>\n<div style=\"font-weight:bold;\">System.out.println(v.capacity());    }</div>\n',1,19,4,'1','2024-07-14 18:39:25',0,NULL,NULL,'','',NULL,NULL),
 (80,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">Vector v = new Vector(2);</div>\n<div style=\"font-weight:bold;\">v.addElement(\"C\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"C++\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"Java\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"Python\");</div>\n<div style=\"font-weight:bold;\">v.addElement(\"C#\");</div>\n<div style=\"font-weight:bold;\">System.out.println(v.size());</div>\n<div style=\"font-weight:bold;\">System.out.println(v.capacity());</div>\n',1,20,4,'1','2024-07-14 18:39:25',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #012','Assessment Test #012','2024-07-14 18:39:22',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (2,2,'Assessment Test #013','Assessment Test #013','2024-07-14 18:39:23',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (3,3,'Assessment Test #014','Assessment Test #014','2024-07-14 18:39:23',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (4,4,'Assessment Test #015','Assessment Test #015','2024-07-14 18:39:24',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL DEFAULT '',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=484 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (1,'admin','baf71c021073a99609d073b6c7d2162a','admin','admin','2011-10-27 12:02:06',1,'admin'),
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','2024-07-14 18:39:19',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','2024-07-14 18:39:19',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','2024-07-14 18:39:19',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','2024-07-14 18:39:19',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','2024-07-14 18:39:19',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','2024-07-14 18:39:19',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','2024-07-14 18:39:19',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','2024-07-14 18:39:19',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','2024-07-14 18:39:19',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','2024-07-14 18:39:19',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','2024-07-14 18:39:19',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','2024-07-14 18:39:19',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','2024-07-14 18:39:19',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','2024-07-14 18:39:19',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','2024-07-14 18:39:19',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','2024-07-14 18:39:19',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','2024-07-14 18:39:19',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','2024-07-14 18:39:19',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','2024-07-14 18:39:19',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','2024-07-14 18:39:19',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','2024-07-14 18:39:19',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','2024-07-14 18:39:19',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','2024-07-14 18:39:19',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','2024-07-14 18:39:19',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','2024-07-14 18:39:19',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','2024-07-14 18:39:19',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','2024-07-14 18:39:19',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','2024-07-14 18:39:19',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','2024-07-14 18:39:19',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','2024-07-14 18:39:19',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','2024-07-14 18:39:19',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','2024-07-14 18:39:19',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','2024-07-14 18:39:19',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','2024-07-14 18:39:19',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','2024-07-14 18:39:19',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','2024-07-14 18:39:19',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','2024-07-14 18:39:19',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','2024-07-14 18:39:19',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','2024-07-14 18:39:19',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','2024-07-14 18:39:19',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','2024-07-14 18:39:19',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','2024-07-14 18:39:19',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','2024-07-14 18:39:19',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','2024-07-14 18:39:19',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','2024-07-14 18:39:19',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','2024-07-14 18:39:19',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','2024-07-14 18:39:19',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','2024-07-14 18:39:19',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','2024-07-14 18:39:19',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','2024-07-14 18:39:19',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','2024-07-14 18:39:19',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','2024-07-14 18:39:19',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','2024-07-14 18:39:19',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','2024-07-14 18:39:19',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','2024-07-14 18:39:19',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','2024-07-14 18:39:19',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','2024-07-14 18:39:19',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','2024-07-14 18:39:19',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','2024-07-14 18:39:19',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','2024-07-14 18:39:19',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','2024-07-14 18:39:19',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','2024-07-14 18:39:19',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','2024-07-14 18:39:19',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','2024-07-14 18:39:19',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','2024-07-14 18:39:19',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','2024-07-14 18:39:19',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','2024-07-14 18:39:19',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','2024-07-14 18:39:19',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','2024-07-14 18:39:19',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','2024-07-14 18:39:19',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','2024-07-14 18:39:19',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','2024-07-14 18:39:19',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','2024-07-14 18:39:19',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','2024-07-14 18:39:19',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','2024-07-14 18:39:19',NULL,NULL),
 (77,'TN301','c5bbe6f5b03cca08a4727253674728db','TN301','','2024-07-14 18:39:19',NULL,NULL),
 (78,'TN302','a678c10bcebf18e71b5dfb4082de9839','TN302','','2024-07-14 18:39:19',NULL,NULL),
 (79,'TN303','f3101397e9e1acb2b4b0af706e5bb17d','TN303','','2024-07-14 18:39:19',NULL,NULL),
 (80,'TN304','2e99cf4775923d6dad45a5856474238e','TN304','','2024-07-14 18:39:19',NULL,NULL),
 (81,'TN305','015d2620be413d44ae0f2f4f3d00c502','TN305','','2024-07-14 18:39:19',NULL,NULL),
 (82,'TN306','c930a5f4f6a1f44adbe0b8eb0b1d8864','TN306','','2024-07-14 18:39:19',NULL,NULL),
 (83,'TN307','d8c1ec749db964edc554ed2c5cdc6055','TN307','','2024-07-14 18:39:19',NULL,NULL),
 (84,'TN308','f263ea13b7938716cd1bb5a69b72a617','TN308','','2024-07-14 18:39:19',NULL,NULL),
 (85,'TN309','ac0ffb281aebbcd6064d8724fc3b7f88','TN309','','2024-07-14 18:39:19',NULL,NULL),
 (86,'TN310','aa3a8f689af4a72d06ce6a30f9cdacc8','TN310','','2024-07-14 18:39:19',NULL,NULL),
 (87,'TN311','a86b8d7682ff0fed07e62de27ed00c6f','TN311','','2024-07-14 18:39:19',NULL,NULL),
 (88,'TN312','77105912597cc4b6d6a918f6632097e8','TN312','','2024-07-14 18:39:19',NULL,NULL),
 (89,'TN313','26a832d89b0395802aed8166b411df64','TN313','','2024-07-14 18:39:19',NULL,NULL),
 (90,'TN314','ab094c4a6951c0dacee022340644c846','TN314','','2024-07-14 18:39:19',NULL,NULL),
 (91,'TN315','ef98c9c89bf39e18ddfeb8487843cc5b','TN315','','2024-07-14 18:39:19',NULL,NULL),
 (92,'TN316','ef0d6ca036685183019757cfb8a76010','TN316','','2024-07-14 18:39:19',NULL,NULL),
 (93,'TN317','87ced4889bc4fb8f2e159b9fd7d46176','TN317','','2024-07-14 18:39:19',NULL,NULL),
 (94,'TN318','b6d4904435812cad89955fc851879a04','TN318','','2024-07-14 18:39:19',NULL,NULL),
 (95,'TN319','0c3dba7ed9cf37caeda7b6ff004b324e','TN319','','2024-07-14 18:39:19',NULL,NULL),
 (96,'TN320','24dd05123184254cb2229123b7024dcf','TN320','','2024-07-14 18:39:19',NULL,NULL),
 (97,'TN321','0241e1d4fa09b28461d2a7115bc77f31','TN321','','2024-07-14 18:39:19',NULL,NULL),
 (98,'TN322','c805af2a1027df86da6dafc8dd231983','TN322','','2024-07-14 18:39:19',NULL,NULL),
 (99,'TN323','83311d7f4da3273903cf0757ed2aa882','TN323','','2024-07-14 18:39:19',NULL,NULL),
 (100,'TN324','f4f930ca865e2c0466361f1ade0fbb42','TN324','','2024-07-14 18:39:20',NULL,NULL),
 (101,'TN325','cf3b66cd7961f1a2775ac7a0b387d2da','TN325','','2024-07-14 18:39:20',NULL,NULL),
 (102,'TN326','2f0c1150c566ef56aeb5f6941ed7966a','TN326','','2024-07-14 18:39:20',NULL,NULL),
 (103,'TN327','f5d1d5bd70e8b5e80a5e6d6cf0ac4bf8','TN327','','2024-07-14 18:39:20',NULL,NULL),
 (104,'TN328','be943268027f0f5cead6e266713a0f01','TN328','','2024-07-14 18:39:20',NULL,NULL),
 (105,'TN329','1c4afa823d84836fb20be7cec381ed26','TN329','','2024-07-14 18:39:20',NULL,NULL),
 (106,'TN330','5ac5b962671e8546be235cab536aa4df','TN330','','2024-07-14 18:39:20',NULL,NULL),
 (107,'TN331','174f1de90e1f4915975140f29fc60606','TN331','','2024-07-14 18:39:20',NULL,NULL),
 (108,'TN332','7c6855999ae8a4bc80c364f5716089b7','TN332','','2024-07-14 18:39:20',NULL,NULL),
 (109,'TN333','0cf07c89ab04e4f13edf8bfc853c0b84','TN333','','2024-07-14 18:39:20',NULL,NULL),
 (110,'TN334','e868b8e75aec821a6df9a2be0bd7f067','TN334','','2024-07-14 18:39:20',NULL,NULL),
 (111,'TN335','a329bee8b83c8c760607fd8dab5c791e','TN335','','2024-07-14 18:39:20',NULL,NULL),
 (112,'TN336','ecf25013e5b2a4e1efe2f38a0855bea4','TN336','','2024-07-14 18:39:20',NULL,NULL),
 (113,'TN337','66685a2d4284ba9314f4f3bddbc73a03','TN337','','2024-07-14 18:39:20',NULL,NULL),
 (114,'TN338','f9fc400c73b071de79466768a6f652c6','TN338','','2024-07-14 18:39:20',NULL,NULL),
 (115,'TN339','2dca827f0a961a34c8106aded9de62fd','TN339','','2024-07-14 18:39:20',NULL,NULL),
 (116,'TN340','2d465654aebfae6cada88fc9b278531b','TN340','','2024-07-14 18:39:20',NULL,NULL),
 (117,'TN341','222d22b7b70f91ceb4558319eddada75','TN341','','2024-07-14 18:39:20',NULL,NULL),
 (118,'TN342','b71291f131ea541db0fae089621ac752','TN342','','2024-07-14 18:39:20',NULL,NULL),
 (119,'TN343','aa241c8d0653e584c290f1c903e0649b','TN343','','2024-07-14 18:39:20',NULL,NULL),
 (120,'TN344','48aae65be9c914b32c627581a459744e','TN344','','2024-07-14 18:39:20',NULL,NULL),
 (121,'TN345','aa4dab8b22526552e7ecf0f5bc8e8563','TN345','','2024-07-14 18:39:20',NULL,NULL),
 (122,'TN346','87372a2f2c1d63ea196941a195c09d08','TN346','','2024-07-14 18:39:20',NULL,NULL),
 (123,'TN347','05b0a0b00f6025e1e59e95e0a6db74e9','TN347','','2024-07-14 18:39:20',NULL,NULL),
 (124,'TN348','f728b9dc6063ef81af8781ed2d3abe4b','TN348','','2024-07-14 18:39:20',NULL,NULL),
 (125,'TN349','1757382459d2c401b619c3cbf4e26d01','TN349','','2024-07-14 18:39:20',NULL,NULL),
 (126,'TN350','5cfd3f76367ba4cdef17a01a000ce305','TN350','','2024-07-14 18:39:20',NULL,NULL),
 (127,'TN351','7cfc977a56a115567a689c522902c052','TN351','','2024-07-14 18:39:20',NULL,NULL),
 (128,'TN352','9513b77a92b410661efc77a567fbc1a6','TN352','','2024-07-14 18:39:20',NULL,NULL),
 (129,'TN353','931ad4a73d71cbefd5ba5ec348a53c59','TN353','','2024-07-14 18:39:20',NULL,NULL),
 (130,'TN354','36515399e682133aaa2d9d56a44ff89d','TN354','','2024-07-14 18:39:20',NULL,NULL),
 (131,'TN355','fefbc515236bcef4652ed487b1d55286','TN355','','2024-07-14 18:39:20',NULL,NULL),
 (132,'TN356','6f632ff577326b2b80e4fe3eb77d2fd5','TN356','','2024-07-14 18:39:20',NULL,NULL),
 (133,'TN357','d70ebc1a93a60a3e3569f78eaa7037e0','TN357','','2024-07-14 18:39:20',NULL,NULL),
 (134,'TN358','d260532166543c9dfcb0de048bd14a8a','TN358','','2024-07-14 18:39:20',NULL,NULL),
 (135,'TN359','217faf23b54072052940c503af23be43','TN359','','2024-07-14 18:39:20',NULL,NULL),
 (136,'TN360','6c9c806327a44ef59ddb3a9cf895f3e6','TN360','','2024-07-14 18:39:20',NULL,NULL),
 (137,'TN361','f0585b71f379cf24a0f7c29b9afaee20','TN361','','2024-07-14 18:39:20',NULL,NULL),
 (138,'TN362','4ab725ca2b58bc7559514439783baecd','TN362','','2024-07-14 18:39:20',NULL,NULL),
 (139,'TN363','6fe98ba3602b68917559af38c800077c','TN363','','2024-07-14 18:39:20',NULL,NULL),
 (140,'TN364','cf9b885dc8b388a166d04f861bccf73f','TN364','','2024-07-14 18:39:20',NULL,NULL),
 (141,'TN365','113532fc9e2b71dffceaf33d295c025c','TN365','','2024-07-14 18:39:20',NULL,NULL),
 (142,'TN366','ce557c10826b1ca15c92465f072de0d9','TN366','','2024-07-14 18:39:20',NULL,NULL),
 (143,'TN367','f59cc3001673bd127d410ef773b5667d','TN367','','2024-07-14 18:39:20',NULL,NULL),
 (144,'TN368','acef994a9133f61203d40f866e7548e9','TN368','','2024-07-14 18:39:20',NULL,NULL),
 (145,'TN369','ec342b4e329c5a1585740171d06aade8','TN369','','2024-07-14 18:39:20',NULL,NULL),
 (146,'TN370','9f925e32da4e9fd31e5c2a8b2a753c15','TN370','','2024-07-14 18:39:20',NULL,NULL),
 (147,'TN371','ce42d1d4ddb5dee0ff622a9a19a2e404','TN371','','2024-07-14 18:39:20',NULL,NULL),
 (148,'TN372','313553ca38e591fb50d24a474cf6bb97','TN372','','2024-07-14 18:39:20',NULL,NULL),
 (149,'TN373','f41fe3526307daaed671a5107bcb97f0','TN373','','2024-07-14 18:39:20',NULL,NULL),
 (150,'TN374','438247e8beff5c06de544fac2d7ce026','TN374','','2024-07-14 18:39:20',NULL,NULL),
 (151,'TN375','d7737342b39aff4e3aa340abe619a2e1','TN375','','2024-07-14 18:39:20',NULL,NULL),
 (152,'TN376','8c0d99c15f3aff608d978ecaa0d9bc5d','TN376','','2024-07-14 18:39:20',NULL,NULL),
 (153,'TN377','95cf573f73425c5447e1e0215008458b','TN377','','2024-07-14 18:39:20',NULL,NULL),
 (154,'TN378','6242c800cd310b48d350a227b3b529ab','TN378','','2024-07-14 18:39:20',NULL,NULL),
 (155,'TN379','d26d7ecc4ab049ad4ca951a6b9251cbc','TN379','','2024-07-14 18:39:20',NULL,NULL),
 (156,'TN380','629e253912cd2da9312fa300e6bc590a','TN380','','2024-07-14 18:39:20',NULL,NULL),
 (157,'TN381','0794a0b2b16629e70d0a2ac5ef3ac915','TN381','','2024-07-14 18:39:20',NULL,NULL),
 (158,'TN382','4452954057604d40297bb14182cc57b7','TN382','','2024-07-14 18:39:20',NULL,NULL),
 (159,'TN383','75cf99df49bad73c504561fcda86ab2a','TN383','','2024-07-14 18:39:20',NULL,NULL),
 (160,'TN384','e61c69a694c2d87a18c8621027392671','TN384','','2024-07-14 18:39:20',NULL,NULL),
 (161,'TN385','4accdd8ca68701d21e0509dfbb734bb8','TN385','','2024-07-14 18:39:20',NULL,NULL),
 (162,'TN386','5ff774bb08c694c3d45f4ba7ac126391','TN386','','2024-07-14 18:39:20',NULL,NULL),
 (163,'TN387','796308971bc2e065f299d32d720609c2','TN387','','2024-07-14 18:39:20',NULL,NULL),
 (164,'TN388','e3c3ac1378bff590b7451b93af299627','TN388','','2024-07-14 18:39:20',NULL,NULL),
 (165,'TN389','4715eb7bf0887825e6df2552134945e5','TN389','','2024-07-14 18:39:20',NULL,NULL),
 (166,'TN390','f6dc7c0934d244cc3549e064d32d5e72','TN390','','2024-07-14 18:39:20',NULL,NULL),
 (167,'TN391','4b764e4412be5ce6520314436c0c4349','TN391','','2024-07-14 18:39:20',NULL,NULL),
 (168,'TN392','9a7b18f4e4626c6cbb526fbb35d30eab','TN392','','2024-07-14 18:39:20',NULL,NULL),
 (169,'TN393','743365e9ccedee9231675177b9f2dfd9','TN393','','2024-07-14 18:39:20',NULL,NULL),
 (170,'TN394','3e66f1db0f331c6a0463095b1d8eaaf1','TN394','','2024-07-14 18:39:20',NULL,NULL),
 (171,'TN395','8ebed64baf4579952b744c505c31f021','TN395','','2024-07-14 18:39:20',NULL,NULL),
 (172,'TN396','575a73fb51f2eab6dc1816499fd9e589','TN396','','2024-07-14 18:39:20',NULL,NULL),
 (173,'TN397','5a6424bdad65784b093a90f3abe1e685','TN397','','2024-07-14 18:39:20',NULL,NULL),
 (174,'TN398','da6819cf460f24900f78b2b88b2cdd05','TN398','','2024-07-14 18:39:20',NULL,NULL),
 (175,'TN399','22ef97afc25dc57a82d20f2aae3fa6b0','TN399','','2024-07-14 18:39:20',NULL,NULL),
 (176,'TN400','ef308c05e05a8214c08fc67a02663767','TN400','','2024-07-14 18:39:20',NULL,NULL),
 (177,'C1','b43c98f900ad8c27ecc61807d2d87668','AARIFF M','','2024-07-14 18:39:20',NULL,NULL),
 (178,'C2','98523a81cd408d6f4637954d6ef01cdf','AKSHAYA M','','2024-07-14 18:39:20',NULL,NULL),
 (179,'C3','3cb054569c4fc53e7b1d8e0e94a8ee7f','AMAN SHAHABAS P T K','','2024-07-14 18:39:20',NULL,NULL),
 (180,'C4','71e6aca07f0e94b886b414500224195e','ANAND RAJ M','','2024-07-14 18:39:20',NULL,NULL),
 (181,'C5','2c1327bd400a4bde2b37ccb26b635800','ARUL SANJEEV DEEN','','2024-07-14 18:39:20',NULL,NULL),
 (182,'C6','ffdcd3ea2789b43cb0772b6ac32ddb93','ARYAN KUMAR','','2024-07-14 18:39:20',NULL,NULL),
 (183,'C7','e3a60eb147c9fd595f4d58423f204fb7','BABU PRASATH M','','2024-07-14 18:39:20',NULL,NULL),
 (184,'C8','acd9ba1b0da50c35e011405616c8a5f1','BERBIN JOE','','2024-07-14 18:39:20',NULL,NULL),
 (185,'C9','92e720f2a5b22101fddaa3f28ec60a90','DIVYA G','','2024-07-14 18:39:20',NULL,NULL),
 (186,'C10','aea1b067210b5368c21411120d53a0b5','GOMATHI S','','2024-07-14 18:39:20',NULL,NULL),
 (187,'C11','71943e9627bcdfdb8f8abd6eb2e4d6f5','GOWTHAM S','','2024-07-14 18:39:20',NULL,NULL),
 (188,'C12','b6a1458009df8bc31a2735404e71c925','JANARTHANAN S','','2024-07-14 18:39:20',NULL,NULL),
 (189,'C13','6ce7952fb4370a9d584de740eb8f96d8','JINU P','','2024-07-14 18:39:20',NULL,NULL),
 (190,'C14','a0f3fe795bd692387123dbc222edbe6b','JOHN AJAY J','','2024-07-14 18:39:20',NULL,NULL),
 (191,'C15','9c26440025d6739a9d832462d839b8d7','KALAISELVAN R','','2024-07-14 18:39:20',NULL,NULL),
 (192,'C16','0052aa30555993801c47a128210f193e','KAVIN M','','2024-07-14 18:39:20',NULL,NULL),
 (193,'C17','8bdb26e2b1811f686ea1274d6b077f63','KAVINSARATHI S','','2024-07-14 18:39:20',NULL,NULL),
 (194,'C18','a6f96ceedf399b62240f450c85da182e','KAYALVIZHI R','','2024-07-14 18:39:20',NULL,NULL),
 (195,'C19','a685be4af122c33afbc7a5ad14b2587d','KIRUPAKARAN K','','2024-07-14 18:39:20',NULL,NULL),
 (196,'C20','16acdb401fbd308c1b2eda3f6e7796c5','MAJALA JINDO','','2024-07-14 18:39:20',NULL,NULL),
 (197,'C21','4d7afd4ec6ba41058ccc85d44bee5770','MATHAN KUMAR G','','2024-07-14 18:39:20',NULL,NULL),
 (198,'C22','24fca42a296f9db5539073ef6ecae6f3','MEHALLAN B','','2024-07-14 18:39:20',NULL,NULL),
 (199,'C23','f87c5d861e31e65eccc8781df1f1d972','MOUNIKA PRIYA S','','2024-07-14 18:39:20',NULL,NULL),
 (200,'C24','c0257a401dea12e74a9c08b7e5545722','MUHAMMED SHAHAL M M','','2024-07-14 18:39:20',NULL,NULL),
 (201,'C25','2e38f126f4195326157a90f311660595','MUHAMMED SHAHIF K','','2024-07-14 18:39:20',NULL,NULL),
 (202,'C26','b6484d31bb35be0dfd3888dc1b2bbe34','MUTHURAMYA S','','2024-07-14 18:39:20',NULL,NULL),
 (203,'C27','839a668a9767536c89629589b65fee93','PRAKASH V','','2024-07-14 18:39:20',NULL,NULL),
 (204,'C28','ef05dd87fc8fa1ad0103418ef4b774e2','PRATHISON A','','2024-07-14 18:39:20',NULL,NULL),
 (205,'C29','51d3412557e25b8c750e79c40a66fa47','PRATHIUSH CHANDRA P','','2024-07-14 18:39:20',NULL,NULL),
 (206,'C30','452e99813eee67875f25b81e767e1f3f','PRINCE KUMAR','','2024-07-14 18:39:20',NULL,NULL),
 (207,'C31','3d39fb94619af555be6d33fb9577f973','RAVIKUMAR R','','2024-07-14 18:39:20',NULL,NULL),
 (208,'C32','92b1770c257b2ae691ece619d6b4832e','ROHITH M.JITH','','2024-07-14 18:39:20',NULL,NULL),
 (209,'C33','06c3acfaf23c1ea88b4fe4d75fd37b5e','RUBAN B','','2024-07-14 18:39:20',NULL,NULL),
 (210,'C34','bc8d2af7e587d05901df2c6d59c8c2df','SATHIASHRI K','','2024-07-14 18:39:20',NULL,NULL),
 (211,'C35','d6185512d8304f769e2d00e95a5bc31e','SATHISH KUMAR T','','2024-07-14 18:39:20',NULL,NULL),
 (212,'C36','618c247867dcd883e3e1d120226d2a0c','SELVAKUMAR J','','2024-07-14 18:39:20',NULL,NULL),
 (213,'C37','c053a1cc77161201a0998780e1bf3a7a','SREEHARAN P','','2024-07-14 18:39:20',NULL,NULL),
 (214,'C38','35873536231e68b9ea8d435c423beb37','SUGANESH A','','2024-07-14 18:39:20',NULL,NULL),
 (215,'C39','2535f23ae2c8e8c945caac414aa49fe0','SUMANKANTH K','','2024-07-14 18:39:20',NULL,NULL),
 (216,'C40','3a2f3fef7f4e94553344fde3b282bc75','THRISHA M S','','2024-07-14 18:39:20',NULL,NULL),
 (217,'C41','978e3401f82cb1de6dd37837e8c6f252','VASANTH KUMAR V','','2024-07-14 18:39:20',NULL,NULL),
 (218,'C42','18b596e01788d1cc4072ac75849e2bf9','YOGESH P','','2024-07-14 18:39:20',NULL,NULL),
 (219,'C43','3a1e5683d75070d3a736aab2f833e31f','RAMAKRISHNAN K','','2024-07-14 18:39:20',NULL,NULL),
 (220,'C44','d0029bcaf46700b827f7bf27b21ff6a6','HARRISON RALPH I','','2024-07-14 18:39:20',NULL,NULL),
 (221,'C45','33fdaabf5cfbd38806ebc1180f5a2445','PRATEEK SINHA','','2024-07-14 18:39:20',NULL,NULL),
 (222,'C46','d45228e3b0fb1de460061878f2d34f62','DHINOOP BAIJU','','2024-07-14 18:39:20',NULL,NULL),
 (223,'C47','d11e211a6831894a85122346cd2a0af1','ABDUL SALAM','','2024-07-14 18:39:20',NULL,NULL),
 (224,'C48','e63e209a71acc0afaff8086e53b19dbf','BUDDALA DINESH REDDY','','2024-07-14 18:39:20',NULL,NULL),
 (225,'C49','17b387220ef163527a9887105b47e013','DEVADHARSHINI D','','2024-07-14 18:39:20',NULL,NULL),
 (226,'C50','aec3a57013f63a3d644cbacefa479b5a','KARAN KHOKHAR','','2024-07-14 18:39:20',NULL,NULL),
 (227,'C51','a44f990523fa4c4457ffe3e2bd96f0b3','KARTIK KUMAR P','','2024-07-14 18:39:20',NULL,NULL),
 (228,'C52','c636351b64da32e9dc5d56e7a33cc64d','KHWAIRAKPAM DIANA CHANU','','2024-07-14 18:39:20',NULL,NULL),
 (229,'C53','f47bc046d44388a0548aee5756853e00','MANGAPATNAM NASIR','','2024-07-14 18:39:20',NULL,NULL),
 (230,'C54','a9ed0c53b3dae0326f8b80102c720542','MD AMANULLAH','','2024-07-14 18:39:20',NULL,NULL),
 (231,'C55','75ac8269fc1702a3d306c5502c09582a','MOHAMMAD KAIF A','','2024-07-14 18:39:20',NULL,NULL),
 (232,'C56','57b8dad4a324996b87e78b2dfb9ee1cb','RAJESH R','','2024-07-14 18:39:20',NULL,NULL),
 (233,'C57','ca1f3f0923e0d4777636fee2befd58b3','SAKTHI ADHITHYAN S','','2024-07-14 18:39:20',NULL,NULL),
 (234,'C58','308ae3784ba8b2c58bfb1cf571a0a117','SHAIK SAHIL KISHWAR','','2024-07-14 18:39:20',NULL,NULL),
 (235,'C59','94f110920ac7686e92fc6be55afbc260','VIBIN V','','2024-07-14 18:39:20',NULL,NULL),
 (236,'C60','11dfa2207a743cc9f388ef626c4310f2','ARUN P R','','2024-07-14 18:39:20',NULL,NULL),
 (237,'D1','f8c8e48dea49fa32a7159e2671629aa7','AANCHAL P','','2024-07-14 18:39:20',NULL,NULL),
 (238,'D2','365dd3c2cc48d2e76c95ab1aa8ccd46a','AARTHI M','','2024-07-14 18:39:20',NULL,NULL),
 (239,'D3','9bc68518c744b2b6d1aa8741b318c385','ABHINANDAN KUMAR','','2024-07-14 18:39:20',NULL,NULL),
 (240,'D4','4ee4441d77cb650fb1aba6de19cf6211','ABHINAV KUMAR','','2024-07-14 18:39:20',NULL,NULL),
 (241,'D5','bb06179626492bd708e6a7428f58d7dc','ABINAYA P','','2024-07-14 18:39:20',NULL,NULL),
 (242,'D6','4ebaaead5a442f698cc2bef2c73bd8bd','ABISITHA V.T','','2024-07-14 18:39:20',NULL,NULL),
 (243,'D7','2d13bc231d14812a06e5936cd2afd6f3','ALEN THOMAS','','2024-07-14 18:39:20',NULL,NULL),
 (244,'D8','9b0e40c7872f7b3245c0f857727f370e','ALKA KUMARI YADAV','','2024-07-14 18:39:20',NULL,NULL),
 (245,'D9','bc74b9ae3ad81d17f0b5088302a7e3c1','AMANSHA CHAKKALA PARAMBIL','','2024-07-14 18:39:20',NULL,NULL),
 (246,'D10','734f91cfb813f7e97b017d754abd0440','AMIT KUMAR','','2024-07-14 18:39:20',NULL,NULL),
 (247,'D11','2f1d186055ab5636221702e1afd3c095','AMIT KUMAR','','2024-07-14 18:39:20',NULL,NULL),
 (248,'D12','aa46d57b88e3f35a043d5964087738eb','ANKIT KUMAR','','2024-07-14 18:39:20',NULL,NULL),
 (249,'D13','56da88e55a988f8306478d3d4c45a919','ANSARI HUMEIRA SANIYA NAEEMUDDIN','','2024-07-14 18:39:20',NULL,NULL),
 (250,'D14','35dcbd353d334e93b087da12d9d5d492','AURUTHRA LAKSHMI G','','2024-07-14 18:39:20',NULL,NULL),
 (251,'D15','a54b01a80880da0ed3bf58f7190d9ab8','BHARATHI P','','2024-07-14 18:39:20',NULL,NULL),
 (252,'D16','8dac4b9eeaa6004f9653fe05282391a2','BHARATHKUMAR G','','2024-07-14 18:39:20',NULL,NULL),
 (253,'D17','3a419439a510684e65cd6917f587e21d','BHUVANESWARI A','','2024-07-14 18:39:20',NULL,NULL),
 (254,'D18','680ec28d6d89174f5c2c23823ba7065d','BITTU KUMAR','','2024-07-14 18:39:20',NULL,NULL),
 (255,'D19','2a9a50a56dbc688e08a7c67db1fa3016','CHRISTO SIMON','','2024-07-14 18:39:20',NULL,NULL),
 (256,'D20','db2bd65296584b812b971b55c9065121','DEEPAKKUMAR M','','2024-07-14 18:39:20',NULL,NULL),
 (257,'D21','edbe5b7edc2ee84ce8837a00e23a70c6','DEEPIKA M','','2024-07-14 18:39:20',NULL,NULL),
 (258,'D22','5a8de2e6034d8be7cb76c9127e1c86cd','DHARANI S','','2024-07-14 18:39:20',NULL,NULL),
 (259,'D23','8699b6c56e876bef3554da5b0ff3e168','DHARANIDHARAN M','','2024-07-14 18:39:20',NULL,NULL),
 (260,'D24','ae974041edc6339a01a1aa6ba632c667','GOVIND KUMAR P','','2024-07-14 18:39:20',NULL,NULL),
 (261,'D25','ad2cf84109eeaf92dc0c8830c45be59f','GOWTHAM E','','2024-07-14 18:39:20',NULL,NULL),
 (262,'D26','1430ff414b88fb14add315d383d595bb','GOWTHAM M','','2024-07-14 18:39:20',NULL,NULL),
 (263,'D27','5368684d4778f0c1cdd0b2792e701e42','GOWTHAM V','','2024-07-14 18:39:20',NULL,NULL),
 (264,'D28','f1e97a56ec9092f130656e56fca53310','HARINARAYANAN K YESUDAS','','2024-07-14 18:39:20',NULL,NULL),
 (265,'D29','34b8163a1aca868baf9e286ad1a87d3d','JINSHAD AHAMMED KUTTY','','2024-07-14 18:39:20',NULL,NULL),
 (266,'D30','f4e891963878b690edf6a6c37f8e6ebc','JOEL SABU','','2024-07-14 18:39:21',NULL,NULL),
 (267,'D31','4adb05507fdaacb78351ea1431bfa366','KALYANA MURUGAN M','','2024-07-14 18:39:21',NULL,NULL),
 (268,'D32','669ae5506fc400c6a9e88787e94b1e81','KANISHKA G','','2024-07-14 18:39:21',NULL,NULL),
 (269,'D33','92140e2a40a2ba8f2f5ff1195b90106c','KAVIPRIYA M','','2024-07-14 18:39:21',NULL,NULL),
 (270,'D34','0e5d2e8a28e27556303381e6b9f1a946','KEERTHANA C','','2024-07-14 18:39:21',NULL,NULL),
 (271,'D35','bdd75c392219b1555d12e0af682ea686','MADHU SHAH','','2024-07-14 18:39:21',NULL,NULL),
 (272,'D36','cb1951900c3582418a4720aaabb85060','MANDEEP KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (273,'D37','b048514ac12a3fb2a5cd57ef501f0761','MOHAMED RABIN','','2024-07-14 18:39:21',NULL,NULL),
 (274,'D38','d91c93ee3223e1ac611b3572908331bc','MOHAMED SHUHAIL F','','2024-07-14 18:39:21',NULL,NULL),
 (275,'D39','1eab2aeb1aab502084b0f37f6888063d','MOHAMMED MAAZ P','','2024-07-14 18:39:21',NULL,NULL),
 (276,'D40','c66b7eb90766f0f420f2dde1f30cc882','MOHAMMED NASHITH M K P','','2024-07-14 18:39:21',NULL,NULL),
 (277,'D41','0a905fda36548a672667212b5343ebbc','MOULIDHARAN A','','2024-07-14 18:39:21',NULL,NULL),
 (278,'D42','ed681b959c5ed204c4e065d7eb5d5576','MURALIDHARAN M','','2024-07-14 18:39:21',NULL,NULL),
 (279,'D43','11c556e75f042198377e31fea674f149','NAGANIVESH S','','2024-07-14 18:39:21',NULL,NULL),
 (280,'D44','99b67d79cba321005f1c45dee06cf436','NANDHINI P','','2024-07-14 18:39:21',NULL,NULL),
 (281,'D45','0bc5634082f49936a8ddbe0f7944c6cd','NIHAL MOHAMMED P','','2024-07-14 18:39:21',NULL,NULL),
 (282,'D46','b5ef5b5ea521ffda6f29bc00e49144d5','PRADEEP R','','2024-07-14 18:39:21',NULL,NULL),
 (283,'D47','2bace7ef9d00ef1084d3ed7e2b644b9d','PRITHVI PREM','','2024-07-14 18:39:21',NULL,NULL),
 (284,'D48','c9aaab97ad4de0512b20863c001b8181','PRIYANSHU KUMAR UPADHYAY','','2024-07-14 18:39:21',NULL,NULL),
 (285,'D49','f66b44ffda13501c8c2b484b5cce312b','RAJAN KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (286,'D50','cf45ea0c8e1e9799086fe918253c2751','RAKESH KUMAR YADAV','','2024-07-14 18:39:21',NULL,NULL),
 (287,'D51','99bd523bc06bfd4fb3ec4570ed6181c3','RAMITA KUSHWAHA','','2024-07-14 18:39:21',NULL,NULL),
 (288,'D52','25d50277ae3feb17afaed5d9f2fcea91','RAMPRIT KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (289,'D53','92a2531e4c7a5e797330581b68ba799c','RAMYA K.R','','2024-07-14 18:39:21',NULL,NULL),
 (290,'D54','e99a20ab5c5765380f5d4b391b3a0627','RASHTHAN MANSOOR','','2024-07-14 18:39:21',NULL,NULL),
 (291,'D55','8b3d2cd73e42576b8d750fc6d067de6a','ROHAN RAJEEV K.T','','2024-07-14 18:39:21',NULL,NULL),
 (292,'D56','4b4172d2a416d97988292f7c7c42b9fc','ROHIT KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (293,'D57','c16ff13801ffd014342b5929cfcef451','SANTHOSH R','','2024-07-14 18:39:21',NULL,NULL),
 (294,'D58','31c436ae2d6fdc5b3f9920d5d5f1cb08','SANTHOSHKUMAR V','','2024-07-14 18:39:21',NULL,NULL),
 (295,'D59','a222b790a27cdf83328a53babc924648','SASI KUMAR M','','2024-07-14 18:39:21',NULL,NULL),
 (296,'D60','2cfcf7d78faf1a7abeeff55abde722b0','SATYAM KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (297,'D61','aecd1b8941499d5ec31af401c9b5459a','SAURABH KUMAR VIKRANT','','2024-07-14 18:39:21',NULL,NULL),
 (298,'E1','760c6a8407a379bb116bbe742acabbdc','SAURABH SUMAN','','2024-07-14 18:39:21',NULL,NULL),
 (299,'E2','2b20ef179b4cec9ef52c36020c12cd7f','SHIBIL V','','2024-07-14 18:39:21',NULL,NULL),
 (300,'E3','c661712cee8f88ce338952dff9c2e18a','SHRI SANJAY R','','2024-07-14 18:39:21',NULL,NULL),
 (301,'E4','afb64591217ecafed3aa778ae684d1a2','SHYAM KRISHNA V','','2024-07-14 18:39:21',NULL,NULL),
 (302,'E5','2de34ace849a9bcfb935be37050cae60','SIVAKUMAR M','','2024-07-14 18:39:21',NULL,NULL),
 (303,'E6','4773453723d12613793555eda6846f7a','SIVASANKAR S','','2024-07-14 18:39:21',NULL,NULL),
 (304,'E7','a04a7f9d12cd6601b1907b041a102fea','SOWMIYA M.S','','2024-07-14 18:39:21',NULL,NULL),
 (305,'E8','1299d04619a373d389a37b351ccc379c','SOWNDARYARANI K','','2024-07-14 18:39:21',NULL,NULL),
 (306,'E9','6fdd0dcf33ca7058cb4ea4c2ca0e8da8','SREYAS M P','','2024-07-14 18:39:21',NULL,NULL),
 (307,'E10','2282b7ba0763483d8eae0bc1c8de7739','SRILINITH U','','2024-07-14 18:39:21',NULL,NULL),
 (308,'E11','165d3eed1f623399e402b8f1e215877b','SRIRAM S','','2024-07-14 18:39:21',NULL,NULL),
 (309,'E12','de7c73740ee86f9e47569b0df614cef9','SUMIT KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (310,'E13','f99f867db102584ea57dba1fc30531d6','THIRUMALAI C','','2024-07-14 18:39:21',NULL,NULL),
 (311,'E14','f65efd977b4ed72286766a2db7b8cd63','VASUDEVAN P','','2024-07-14 18:39:21',NULL,NULL),
 (312,'E15','bf2628c3a223a4f6a28ea8f4e7130c4c','VELRAJ M','','2024-07-14 18:39:21',NULL,NULL),
 (313,'E16','ff3e0a0e8e4b8ab15d4c1e381356a051','VELRAJ S','','2024-07-14 18:39:21',NULL,NULL),
 (314,'E17','875827cde069718327936a2f09615274','VIGNESH S','','2024-07-14 18:39:21',NULL,NULL),
 (315,'E18','24808c081279a5330b9c2cb1bda7ce21','YUVARANI M','','2024-07-14 18:39:21',NULL,NULL),
 (316,'E19','a06ed4cb34400383a27449efc32d8fbf','ANITHA S','','2024-07-14 18:39:21',NULL,NULL),
 (317,'E20','ee35b6adae50bb637762a4a75524de24','DHANRAJ V','','2024-07-14 18:39:21',NULL,NULL),
 (318,'E21','658de609f19b37f7db312b264a52c6df','DHINAKARAN M','','2024-07-14 18:39:21',NULL,NULL),
 (319,'E22','3ce105ba0b53b91be5174f9d08ac92b9','GOKUL RAJ A','','2024-07-14 18:39:21',NULL,NULL),
 (320,'E23','f7539d7b1a2653cf048e959e04571837','GOWTHAM T','','2024-07-14 18:39:21',NULL,NULL),
 (321,'E24','eba3ec1d53587eb877661d3a5a160551','GUNA A','','2024-07-14 18:39:21',NULL,NULL),
 (322,'E25','5d033e2e8e877dd3013b791edff1f346','KRISHNAMOORTHY V','','2024-07-14 18:39:21',NULL,NULL),
 (323,'E26','f7d039f5e6ccab38ba8336d5a7fc94cf','LAKSHMANAN S','','2024-07-14 18:39:21',NULL,NULL),
 (324,'E27','d59f838dcbe4996057a2728c1b9ac6d0','MANO P','','2024-07-14 18:39:21',NULL,NULL),
 (325,'E28','6114f5da5bc09647b2b6286ba9095a1d','NIVEDA U S','','2024-07-14 18:39:21',NULL,NULL),
 (326,'E29','ede5688f777e79618ab45c7ad6e29427','RANJITHKUMAR M','','2024-07-14 18:39:21',NULL,NULL),
 (327,'E30','16022bbe84aa8d973b43911a68327d89','SUNI HANGMA LIMBOO','','2024-07-14 18:39:21',NULL,NULL),
 (328,'E31','b62fac2d0fe747bdf64659e5a917039d','THIRUMOORTHY N','','2024-07-14 18:39:21',NULL,NULL),
 (329,'E32','cd1cec4eda36ba83d2e029c00245745c','ADITYA KUMAR CHAUBEY','','2024-07-14 18:39:21',NULL,NULL),
 (330,'E33','5abfa620de5c37dd1aca53a0fefa341f','AJAY KUMAR S','','2024-07-14 18:39:21',NULL,NULL),
 (331,'E34','11b0c8899dd6ced307c5c78f4501976d','AMAN KUMAR ANSHU','','2024-07-14 18:39:21',NULL,NULL),
 (332,'E35','59758371a3d5ff7b593f2a67f4a269c3','AMAN KUMAR JHA','','2024-07-14 18:39:21',NULL,NULL),
 (333,'E36','e663d1e1add214ed1acfc44d2b13e3f5','ANKIT KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (334,'E37','dfb874a0181e2605d118e03dec2606fc','ASHISH KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (335,'E38','10e1a32fbb67a5478ed1a04430a7bd1b','ASHISH KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (336,'E39','dc4205949195ff00886ad21f87786835','BHARATH T','','2024-07-14 18:39:21',NULL,NULL),
 (337,'E40','7b0018ebbb6568ba744b3abbf18fc682','CHANDANA SRI V','','2024-07-14 18:39:21',NULL,NULL),
 (338,'E41','d4cee95afe39d987ee034746541459b9','CHANDRU M','','2024-07-14 18:39:21',NULL,NULL),
 (339,'E42','62069945bbb0b6cd1df2670d92040323','DEEPAK KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (340,'E43','a7dcaaf5a47f972e63cb9eb5d1a2a904','ENIYA A','','2024-07-14 18:39:21',NULL,NULL),
 (341,'E44','1d4eec9b0ed147201e75bb6a9fb8ad6f','GOKUL R','','2024-07-14 18:39:21',NULL,NULL),
 (342,'E45','83d95aec71b71daae5a99ff367c3829d','KALAIYARASAN S','','2024-07-14 18:39:21',NULL,NULL),
 (343,'E46','15b2523e3989892d2216a9ed557af5c0','KULDEEP KUMAR SHAH','','2024-07-14 18:39:21',NULL,NULL),
 (344,'E47','7a4560f16539a3332cfc2009881e9a1b','MALARVIZHI S','','2024-07-14 18:39:21',NULL,NULL),
 (345,'E48','646dfd75539c1c2db13c7f453446ad11','MANIKKAM M','','2024-07-14 18:39:21',NULL,NULL),
 (346,'E49','efc0ed8e68b1fb1a6e705e0f9a5e6a22','MINISHKUMAR A','','2024-07-14 18:39:21',NULL,NULL),
 (347,'E50','0bc26b2ed971301b33354dbf033a167e','MOHAMMED SIDDIQ M S','','2024-07-14 18:39:21',NULL,NULL),
 (348,'E51','8fa15add3b044e8bfd6b943611aa0a8a','MOHAN M','','2024-07-14 18:39:21',NULL,NULL),
 (349,'E52','5fc53b2e97aa9a003fb53849770fc079','MOHANA PRIYA K','','2024-07-14 18:39:21',NULL,NULL),
 (350,'E53','2d081ca42921682662a43c686e2991b7','MURALI M','','2024-07-14 18:39:21',NULL,NULL),
 (351,'E54','3c3ea89e47f8aa67dface3e52e040525','NANDHA A','','2024-07-14 18:39:21',NULL,NULL),
 (352,'E55','cc731f524c67e74b5cd09e9b9f1a97bb','NATHIYA S','','2024-07-14 18:39:21',NULL,NULL),
 (353,'E56','683fc085108290390505e155e68b79f1','NISHA KUMARI','','2024-07-14 18:39:21',NULL,NULL),
 (354,'E57','60b28ec13c2f504b03cc35f633f008e5','NITHIN KUMAR K','','2024-07-14 18:39:21',NULL,NULL),
 (355,'E58','43bb922485f304b219479a07abd83088','PAVITHRA S','','2024-07-14 18:39:21',NULL,NULL),
 (356,'E59','74617ed4dde92f9ae0340f7d8b09b701','PERUMAL T','','2024-07-14 18:39:21',NULL,NULL),
 (357,'E60','0b293ee608dc7219d4b5e2399f3562e7','PRASANNA K','','2024-07-14 18:39:21',NULL,NULL),
 (358,'E61','1d1b36ed0538e50c8885c0e1e32474e1','PREMNATH B','','2024-07-14 18:39:21',NULL,NULL),
 (359,'F1','458f37fce93d7ba24b1bdcd81fbb1c7a','PRINCE KUMAR MANDAL','','2024-07-14 18:39:21',NULL,NULL),
 (360,'F2','eeecdaabc39f8ef83971e751071720d0','PRIYADHARSHINI KUMARI','','2024-07-14 18:39:21',NULL,NULL),
 (361,'F3','211a45fbf2c69b0b083d0e339a8c901a','PRIYADHARSHINI SRINIVASAN','','2024-07-14 18:39:21',NULL,NULL),
 (362,'F4','756c5e28b264e97b85460cee88e376ba','PRIYANKA V','','2024-07-14 18:39:21',NULL,NULL),
 (363,'F5','cf702bc32e81e0c510340b9bc3d769ca','PUGALARASAN S','','2024-07-14 18:39:21',NULL,NULL),
 (364,'F6','52dc67bdf8ab2549f700a8fda14a5aad','SURIYA S','','2024-07-14 18:39:21',NULL,NULL),
 (365,'F7','dfc5d75a85978093bef1ad235519e1d1','VASANTH S','','2024-07-14 18:39:21',NULL,NULL),
 (366,'F8','e2bdac2a21c4533adcabdebea95470dc','VIGNESHWARAN N','','2024-07-14 18:39:21',NULL,NULL),
 (367,'F9','8f19e1a25a0f6a95a6596055a5644a82','RAGUL K','','2024-07-14 18:39:21',NULL,NULL),
 (368,'F10','e734c47c1a1035a6b9714af8b38321eb','RAHUL KUMAR SAH B','','2024-07-14 18:39:21',NULL,NULL),
 (369,'F11','3bfa5ca0d7d078d63b71ec5ceeadc8ba','RAHUL KUMAR SONI','','2024-07-14 18:39:21',NULL,NULL),
 (370,'F12','e7af2a250c1bd729634c72103ca8e948','RAJAGOPAL L','','2024-07-14 18:39:21',NULL,NULL),
 (371,'F13','efd6a2c933f3158dde481a5d82af8b8e','RAMACHANDRAN G','','2024-07-14 18:39:21',NULL,NULL),
 (372,'F14','3231b99fa996752bb85703de205f87ab','RAMESH C','','2024-07-14 18:39:21',NULL,NULL),
 (373,'F15','57a290023a389a2dbe464519896d2b66','RAUSHAN CHOUDHARY','','2024-07-14 18:39:21',NULL,NULL),
 (374,'F16','16e4306f59f8f851f41f5bfc54377225','RAVI KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (375,'F17','057032589a99c935e4d05490551d6b50','RITIK KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (376,'F18','87c5443dad799d3aaa6ba855ebc0baae','ROHIT KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (377,'F19','57ea4f4b8151471e2cb5af7bbed0e7fc','SANJAY M','','2024-07-14 18:39:21',NULL,NULL),
 (378,'F20','9cfc5ac71a8cfc75cc86d9808a3b0f09','SARAN P','','2024-07-14 18:39:21',NULL,NULL),
 (379,'F21','35172fb0ffcec784c1d7e10386460c28','SATHEESHKUMAR T','','2024-07-14 18:39:21',NULL,NULL),
 (380,'F22','a5c13b497184e565bfd34119692df71e','SATHIYANATHAN P','','2024-07-14 18:39:21',NULL,NULL),
 (381,'F23','903e35e3df73effe6b06044dacc6f0d0','SHANU RAJ','','2024-07-14 18:39:21',NULL,NULL),
 (382,'F24','3207e2a4e4e7c9b67a6d4a8bb2b2f392','SHRIJANA KUMARI KUSHWAHA','','2024-07-14 18:39:21',NULL,NULL),
 (383,'F25','e2f27efafa0a692bc4eabbf60f4f9471','SUDHAKAR KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (384,'F26','22a3320ed64b2ef70f432296bfdf2073','SUMITHRA M','','2024-07-14 18:39:21',NULL,NULL),
 (385,'F27','629445bf04b6884f0ad8e35166c10b6d','TAMIZHARASAN V','','2024-07-14 18:39:21',NULL,NULL),
 (386,'F28','ac60af0114f403fcced51a6a0ed98fb7','THANGARAJ K','','2024-07-14 18:39:21',NULL,NULL),
 (387,'F29','470ef5f03548b6d26383f32e23d8fd30','ULAGANATHAN B','','2024-07-14 18:39:21',NULL,NULL),
 (388,'F30','0918c5578177dd9215e7c809b93ed701','VENKATESAN V','','2024-07-14 18:39:21',NULL,NULL),
 (389,'F31','7bb788edd684feb4ab1ff24557843aeb','VIGNESH V','','2024-07-14 18:39:21',NULL,NULL),
 (390,'F32','646243be073530d51a8da16c6346e189','VIGNESH V','','2024-07-14 18:39:21',NULL,NULL),
 (391,'F33','0d69797d4e09f4dbf8dbab2989d7ba22','VIMAL KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (392,'F34','7daf7760d1ad98291f42ccca4d92846b','VISHAL BAITHA','','2024-07-14 18:39:21',NULL,NULL),
 (393,'F35','8f42cfb2acf0f174c30c0f6eb4889a9d','ABINASH E','','2024-07-14 18:39:21',NULL,NULL),
 (394,'F36','92bf3b3bc8294ef43fb08f2ea7146d97','DHANUSH K','','2024-07-14 18:39:21',NULL,NULL),
 (395,'F37','2847c4aa17f477e9817bfcfbcae1649f','DHANUSH R','','2024-07-14 18:39:21',NULL,NULL),
 (396,'F38','2d7f2927d23015facb489a0a8cbcd0d2','DHANUSH S','','2024-07-14 18:39:21',NULL,NULL),
 (397,'F39','b77df056c19a09335c0c8b2a5f452580','GUNAL C M','','2024-07-14 18:39:21',NULL,NULL),
 (398,'F40','d72aa0c8e358a331f2adb43f8218db1d','HARIPRAVEEN S','','2024-07-14 18:39:21',NULL,NULL),
 (399,'F41','8ece699aeb32e6758f48e49e531ace14','JANARTHANAN S','','2024-07-14 18:39:21',NULL,NULL),
 (400,'F42','550f43b03b1704a5e007156e10eda312','KAJA MAIDEEN J','','2024-07-14 18:39:21',NULL,NULL),
 (401,'F43','9eed3649d7176713cf6d5488cb4c222c','LOGARAJ S','','2024-07-14 18:39:21',NULL,NULL),
 (402,'F44','0221296d2a017e19536482a588b57dcc','MANIKANDAN R','','2024-07-14 18:39:21',NULL,NULL),
 (403,'F45','132559cc96706e83a71d7d6f86119592','MUGESH R','','2024-07-14 18:39:21',NULL,NULL),
 (404,'F46','978c2479106e51457e3ff60a54e250c9','NITHYANANTHAN A','','2024-07-14 18:39:21',NULL,NULL),
 (405,'F47','ff5de5c2b11eaaca239e5438f9110da4','SANJAY MUCHCHHAKI','','2024-07-14 18:39:21',NULL,NULL),
 (406,'F48','44ce0632bbc8880db2797131a7c00ede','SRIHARIHARAN G G','','2024-07-14 18:39:21',NULL,NULL),
 (407,'F49','e85dd2174bad4421102c44728f6650ef','SUBIKSHA A','','2024-07-14 18:39:21',NULL,NULL),
 (408,'F50','33a3f303a8a0279f6edb93aff0e67379','ISHWARYA M','','2024-07-14 18:39:21',NULL,NULL),
 (409,'F51','6f31e987d38618eaa80993f050351343','MAHESHKUMAR.S','','2024-07-14 18:39:21',NULL,NULL),
 (410,'F52','70fbe6e857ce76632384b3b5678bb6ed','NITHYAVARTHINI.S','','2024-07-14 18:39:21',NULL,NULL),
 (411,'F53','1ddf7e87ef570878dc3b0599d56524c3','PRABHAKARAN.S','','2024-07-14 18:39:21',NULL,NULL),
 (412,'F54','cb85da6e0daff4cdd6916540a48c8cd2','PRAKASH.K','','2024-07-14 18:39:21',NULL,NULL),
 (413,'F55','5fe477314cabc0bd10764e48fdab7d4c','RAVEENDAR.A','','2024-07-14 18:39:21',NULL,NULL),
 (414,'F56','7e0a1135c930fcf8a26142bcb3e199fb','SANTHOSH.K','','2024-07-14 18:39:21',NULL,NULL),
 (415,'F57','11f93223b5d4cef8c822d6138cddba13','SHANITHA F','','2024-07-14 18:39:21',NULL,NULL),
 (416,'F58','0f3bdcb462d610976c2fc621b9e69af5','SURENDHAR.B','','2024-07-14 18:39:21',NULL,NULL),
 (417,'F59','730de193888aea88f3e7a8a7cdc1e328','UMAMAHESWARI.M','','2024-07-14 18:39:21',NULL,NULL),
 (418,'F60','c786e8926375e05ba2ead67604009dd3','VIGNESH.M','','2024-07-14 18:39:21',NULL,NULL),
 (419,'F61','b98c8826df26953d5887ce4e03ef90ff','VISHAL KUMAR SINGH','','2024-07-14 18:39:21',NULL,NULL),
 (420,'G1','279dbc5e8f5a9e75801821a820e8cbc4','AASAITHAMBI V','','2024-07-14 18:39:21',NULL,NULL),
 (421,'G2','9510d2f9e36c688f31ce41acca73ce9b','AJAY KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (422,'G3','514e398fde6051275283de921d2c3b64','AMAN .','','2024-07-14 18:39:21',NULL,NULL),
 (423,'G4','ae0705f6ddfd2f8aaa385b20a4beed41','AMARJEET KUMAR SINGH','','2024-07-14 18:39:21',NULL,NULL),
 (424,'G5','6f852e823acdc4631ec5fb73755cfd5d','AMBITION SHIMPHRUI','','2024-07-14 18:39:21',NULL,NULL),
 (425,'G6','d1f9bc2bfa863932532b742f80506e03','ANGAJALA BHASKAR','','2024-07-14 18:39:21',NULL,NULL),
 (426,'G7','a1141189078ffa21a36fbc70ca48928e','ANJALI KUMARI','','2024-07-14 18:39:21',NULL,NULL),
 (427,'G8','cdd0b3e9227c123a42bf4f38d1e86a58','ANUSHKA BHARTI','','2024-07-14 18:39:21',NULL,NULL),
 (428,'G9','5d9c2d9533667ddd9657b57c96ff6d4f','ARAVIND KUMAR K','','2024-07-14 18:39:21',NULL,NULL),
 (429,'G10','6b4568581ceb07a145dfe638b46391f4','ARAVINDHAN S','','2024-07-14 18:39:21',NULL,NULL),
 (430,'G11','e4c2136e456b0d3c3778768249be05f0','ARUN S','','2024-07-14 18:39:21',NULL,NULL),
 (431,'G12','a5bcda8d0568176d8f8b6305f02fc258','ARVIND KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (432,'G13','a4a7ba910fada26c47c930e7b388f29c','AYYANRAJAN A','','2024-07-14 18:39:21',NULL,NULL),
 (433,'G14','fce0201bc59b7670adf5e6cad83c83da','BHUVANESH S','','2024-07-14 18:39:21',NULL,NULL),
 (434,'G15','96c035446704d1d8a4c3020619fdf336','BITTU KUMAR SHRIVASTAN','','2024-07-14 18:39:21',NULL,NULL),
 (435,'G16','d5dbb210c53b03cee95e0e200c65302e','DHANUSH K','','2024-07-14 18:39:21',NULL,NULL),
 (436,'G17','abdac5638cc609ef13127c4151844bec','DHANUSHKUMAR S','','2024-07-14 18:39:21',NULL,NULL),
 (437,'G18','a37b5ecb7867df12df5704570d42728a','DHANUVARSHINI R','','2024-07-14 18:39:21',NULL,NULL),
 (438,'G19','dccfc6f4c3716885a80ad2afeeecba39','DHARMVEER KUMAR','','2024-07-14 18:39:21',NULL,NULL),
 (439,'G20','53bfdede173604b9e07bb96e750faf9a','DHINESH KUMAR V','','2024-07-14 18:39:21',NULL,NULL),
 (440,'G21','6e8674b10b669dc8b27d61c30a3252a8','DHIVYA PRAKASH S','','2024-07-14 18:39:21',NULL,NULL),
 (441,'G22','1f807f8035cf6994c2c10f11991c8bbc','DINESH KRISHNA B','','2024-07-14 18:39:21',NULL,NULL),
 (442,'G23','a066e7a0e80bfd6fb92ba217b71515be','DINESH R','','2024-07-14 18:39:21',NULL,NULL),
 (443,'G24','f8a8262d3dc6d6fa9e948c6aa1ad1169','GOKUL RAJ E','','2024-07-14 18:39:21',NULL,NULL),
 (444,'G25','9629ff81e8c852715bc5c4e0b2387f47','GOKUL S','','2024-07-14 18:39:21',NULL,NULL),
 (445,'G26','b82a534bb9cdf1531e081c077bf4eff6','GOKULARASU S','','2024-07-14 18:39:21',NULL,NULL),
 (446,'G27','92140e2a40a2ba8f2f5ff1195b90106c','GOKULNATH M','','2024-07-14 18:39:21',NULL,NULL),
 (447,'G28','efa8976ef1aafe037693c9a85cd5886d','GOPAL KUMAR S','','2024-07-14 18:39:21',NULL,NULL),
 (448,'G29','afd219e97227eed1c80417611c1a1d70','GOWRI M','','2024-07-14 18:39:21',NULL,NULL),
 (449,'G30','f03256f971ff97cb9f856934f61479e1','HARISH M','','2024-07-14 18:39:21',NULL,NULL),
 (450,'G31','b376ead0c33fa25410c18626dc715d5e','HEMALATHA C','','2024-07-14 18:39:21',NULL,NULL),
 (451,'G32','754b5cd49b8e7db9860061ad48e09e0a','JAISURYA S','','2024-07-14 18:39:21',NULL,NULL),
 (452,'G33','0ec18bc194bda03f82523f264d06f1f6','JAMALUDDIN -','','2024-07-14 18:39:21',NULL,NULL),
 (453,'G34','27eedc2286b191df1ad0e59a124dcded','JANA N','','2024-07-14 18:39:21',NULL,NULL),
 (454,'G35','8bc3c7e4b59b5f26acd23ba5574c7c35','JYOTI KUMARI .','','2024-07-14 18:39:21',NULL,NULL),
 (455,'G36','43f71bead88a783373d3e2f93e994434','KABILAN S','','2024-07-14 18:39:21',NULL,NULL),
 (456,'G37','253cd7080300b06ded82bc7a6adf57dd','KALYAN VARMA PANDETI','','2024-07-14 18:39:21',NULL,NULL),
 (457,'G38','2ff75e8aa01ef2466f002184140b41f4','KAMMARA ARAVIND','','2024-07-14 18:39:21',NULL,NULL),
 (458,'G39','4597a1430c390924c00d3aabb02db5a4','KANIGA S','','2024-07-14 18:39:21',NULL,NULL),
 (459,'G40','99c35850ff7cf7e436b03acedd4c59b3','KANNAN S','','2024-07-14 18:39:21',NULL,NULL),
 (460,'G41','47fc39ad489975a587fef35e3ef96b40','KARTHIKA K','','2024-07-14 18:39:21',NULL,NULL),
 (461,'G42','29f4b8a4a82b02561a7446a39b4384b6','KARTHIKEYAN V','','2024-07-14 18:39:21',NULL,NULL),
 (462,'G43','e0febbf28a9f336476ec64514c693dc6','KAVIN J','','2024-07-14 18:39:21',NULL,NULL),
 (463,'G44','779d5b9b0c4319b9e7e70b44b84d0481','KAYALVIZHI P','','2024-07-14 18:39:21',NULL,NULL),
 (464,'G45','fdf19a374daf4647169993345e1f7c7b','KEERTHIKA S','','2024-07-14 18:39:21',NULL,NULL),
 (465,'G46','6c69a2fa86fa040748df7741a2961d10','KRISHNAN A','','2024-07-14 18:39:21',NULL,NULL),
 (466,'G47','52020498bd4761253c6c1cc4a7ecee63','KUNAL RAJ','','2024-07-14 18:39:22',NULL,NULL),
 (467,'G48','2b4d7ee13b57ad8340631e620956ced4','LOGESHWARAN MG','','2024-07-14 18:39:22',NULL,NULL),
 (468,'G49','46dfa0a4a621c997eb81738a6ffd1d80','MADHAN M','','2024-07-14 18:39:22',NULL,NULL),
 (469,'G50','e29bbeb18038ecaa1f76c83fe6debdc2','MADHAVARAJ S','','2024-07-14 18:39:22',NULL,NULL),
 (470,'G51','eb05a18d47523e32369e439a13ea82b8','MANIKANDAN P','','2024-07-14 18:39:22',NULL,NULL),
 (471,'G52','8bec9c99b2f158515bced18d2f58fc42','MANISH D','','2024-07-14 18:39:22',NULL,NULL),
 (472,'G53','8b8060c6101862b14d5b0d7f57458d73','MERTHUNJAYAN A','','2024-07-14 18:39:22',NULL,NULL),
 (473,'G54','703d70d09d9fe08bfdaf739b62797697','MOHAMMAD TABREZ ALAM','','2024-07-14 18:39:22',NULL,NULL),
 (474,'G55','07cbab318e28eb5c7bd1b255e62b9d87','MOHAMMED NAVEETH S','','2024-07-14 18:39:22',NULL,NULL),
 (475,'G56','e0f2fc61bfaa709ed3f3e7e7f9de9e1c','MOUNIKA S','','2024-07-14 18:39:22',NULL,NULL),
 (476,'G57','4907c1d2b7be959509285d7044a28f6a','MUCHUKOTLA MANIKANTA','','2024-07-14 18:39:22',NULL,NULL),
 (477,'G58','bef59ee6b7c87e99f7d596115d5ad25a','MUTHUKUMAR M K','','2024-07-14 18:39:22',NULL,NULL),
 (478,'G59','38cd93298770626757fbcae3208f334b','NARASIMMAN N','','2024-07-14 18:39:22',NULL,NULL),
 (479,'G60','519bbd93ac1c23a622cf8110f6df69d8','NAVEEN V S','','2024-07-14 18:39:22',NULL,NULL),
 (480,'G61','33d47add496d09400c249af2433f7db4','NEHA KUMARI','','2024-07-14 18:39:22',NULL,NULL),
 (481,'G62','172c32e4c74b207a38781bedd52153fd','NIKIL SHABU S','','2024-07-14 18:39:22',NULL,NULL),
 (482,'G63','8f4a241f2ef01b721da6e2bb065d75d0','NIMITHA S','','2024-07-14 18:39:22',NULL,NULL),
 (483,'G64','f2621abf71e773b26b731f13bbc61006','NITHISH KUMAR M','','2024-07-14 18:39:22',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;

--
-- Create schema aptonlinefive
--

CREATE DATABASE IF NOT EXISTS aptonlinefive;
USE aptonlinefive;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,2);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=151 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (2,1,'25 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (3,1,'16 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (4,1,'15 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (5,1,'10 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (6,2,'32 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (7,2,'25 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (8,2,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (9,2,'15 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (10,2,'10 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'1200 chairs',NULL,0,0,'',0,0,NULL,1,0,''),
 (12,3,'1380 chairs',NULL,1,0,'',0,0,NULL,1,0,''),
 (13,3,'380 chairs',NULL,0,0,'',0,0,NULL,1,0,''),
 (14,3,'1250 chairs',NULL,0,0,'',0,0,NULL,1,0,''),
 (15,3,'2000 chairs',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'10 binders',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,4,'5 binders',NULL,0,0,'',0,0,NULL,1,0,''),
 (18,4,'15 binders',NULL,0,0,'',0,0,NULL,1,0,''),
 (19,4,'11 binders',NULL,1,0,'',0,0,NULL,1,0,''),
 (20,4,'25 binders',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,5,'8 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,5,'9 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (23,5,'4 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (24,5,'5 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (25,5,'3 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (26,6,'120 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,6,'110 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (28,6,'115 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (29,6,'130 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (30,6,'95 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (31,7,'180 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,7,'250 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,7,'285 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (34,7,'165 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (35,7,'210 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (36,8,'3:5',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,8,'4:5',NULL,0,0,'',0,0,NULL,1,0,''),
 (38,8,'6:7',NULL,0,0,'',0,0,NULL,1,0,''),
 (39,8,'6:5',NULL,1,0,'',0,0,NULL,1,0,''),
 (40,8,'7:6',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,9,'10 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (42,9,'25 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (43,9,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (44,9,'15((1/2)) days',NULL,0,0,'',0,0,NULL,1,0,''),
 (45,9,'13(1/3) days',NULL,1,0,'',0,0,NULL,1,0,''),
 (46,10,'10 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (47,10,'25 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (48,10,'18 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (49,10,'15 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (50,10,'30 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (51,11,'12 mats',NULL,0,0,'',0,0,NULL,1,0,''),
 (52,11,'20 mats',NULL,0,0,'',0,0,NULL,1,0,''),
 (53,11,'16 mats',NULL,1,0,'',0,0,NULL,1,0,''),
 (54,11,'40 mats',NULL,0,0,'',0,0,NULL,1,0,''),
 (55,11,'52 mats',NULL,0,0,'',0,0,NULL,1,0,''),
 (56,12,'40 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (57,12,'25 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (58,12,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (59,12,'17 (1/2) days',NULL,0,0,'',0,0,NULL,1,0,''),
 (60,12,'10 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (61,13,'20 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,13,'30 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (63,13,'40 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (64,13,'50 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (65,13,'80 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (66,14,'36 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (67,14,'46 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (68,14,'56 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (69,14,'66 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,14,'76 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,15,'12 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (72,15,'13 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (73,15,'14 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (74,15,'15 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (75,15,'17 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (76,16,'40 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (77,16,'50 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (78,16,'60 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (79,16,'70 mts',NULL,1,0,'',0,0,NULL,1,0,''),
 (80,16,'75 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (81,17,'30 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (82,17,'40days',NULL,0,0,'',0,0,NULL,1,0,''),
 (83,17,'50days',NULL,0,0,'',0,0,NULL,1,0,''),
 (84,17,'60days',NULL,1,0,'',0,0,NULL,1,0,''),
 (85,17,'34 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (86,18,'Rs 71',NULL,0,0,'',0,0,NULL,1,0,''),
 (87,18,'Rs 81',NULL,0,0,'',0,0,NULL,1,0,''),
 (88,18,'Rs 91',NULL,1,0,'',0,0,NULL,1,0,''),
 (89,18,'Rs 101',NULL,0,0,'',0,0,NULL,1,0,''),
 (90,18,'Rs 101',NULL,0,0,'',0,0,NULL,1,0,''),
 (91,19,'350hectares',NULL,0,0,'',0,0,NULL,1,0,''),
 (92,19,'400hectares',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,19,'425hectares',NULL,0,0,'',0,0,NULL,1,0,''),
 (94,19,'450hectares',NULL,1,0,'',0,0,NULL,1,0,''),
 (95,19,'480hectares',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,20,'135 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (97,20,'165 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (98,20,'150 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (99,20,'180 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (100,20,'300 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (101,21,'1 day',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,21,'3 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (103,21,'7days',NULL,1,0,'',0,0,NULL,1,0,''),
 (104,21,'14 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (105,21,'12 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (106,22,'648 bottles',NULL,0,0,'',0,0,NULL,1,0,''),
 (107,22,'1,800bottles',NULL,1,0,'',0,0,NULL,1,0,''),
 (108,22,'2,700 bottles',NULL,0,0,'',0,0,NULL,1,0,''),
 (109,22,'10,800 bottles',NULL,0,0,'',0,0,NULL,1,0,''),
 (110,22,'10,400 bottles',NULL,0,0,'',0,0,NULL,1,0,''),
 (111,23,'1 day',NULL,0,0,'',0,0,NULL,1,0,''),
 (112,23,'7 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,23,'5 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (114,23,'8 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (115,23,'9 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (116,24,'46 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (117,24,'47 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,24,'48 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (119,24,'49 mts',NULL,1,0,'',0,0,NULL,1,0,''),
 (120,24,'45 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (121,25,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (122,25,'21 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (123,25,'24 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (124,25,'30 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,25,'32 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (126,26,'11 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (127,26,'12 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (128,26,'13days',NULL,1,0,'',0,0,NULL,1,0,''),
 (129,26,'14 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (130,26,'15 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,27,'9 hrs',NULL,0,0,'',0,0,NULL,1,0,''),
 (132,27,'10 hrs',NULL,0,0,'',0,0,NULL,1,0,''),
 (133,27,'11 hrs',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,27,'12 hrs',NULL,1,0,'',0,0,NULL,1,0,''),
 (135,27,'14 hrs',NULL,0,0,'',0,0,NULL,1,0,''),
 (136,28,'Rs (xy/d)',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,28,'Rs(xd)',NULL,0,0,'',0,0,NULL,1,0,''),
 (138,28,'Rs (yd)',NULL,0,0,'',0,0,NULL,1,0,''),
 (139,28,'Rs (yd/x)',NULL,1,0,'',0,0,NULL,1,0,''),
 (140,28,'Rs (yd/y)',NULL,0,0,'',0,0,NULL,1,0,''),
 (141,29,'14th element',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,29,'9th element',NULL,0,0,'',0,0,NULL,1,0,''),
 (143,29,'12th element',NULL,1,0,'',0,0,NULL,1,0,''),
 (144,29,'7th element',NULL,0,0,'',0,0,NULL,1,0,''),
 (145,29,'8th element',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,30,'18 boys',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,30,'14boys',NULL,1,0,'',0,0,NULL,1,0,''),
 (148,30,'22 boys',NULL,0,0,'',0,0,NULL,1,0,''),
 (149,30,'24 boys',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,30,'26 boys',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
INSERT INTO `apt_tp_rule` (`tp_id`,`rule`) VALUES 
 (1,''),
 (2,''),
 (3,''),
 (4,''),
 (5,''),
 (6,''),
 (7,''),
 (8,''),
 (9,''),
 (10,''),
 (11,''),
 (12,''),
 (13,''),
 (14,''),
 (15,''),
 (16,''),
 (17,''),
 (18,''),
 (19,''),
 (20,'');
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1012 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,2,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,2,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,2,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,2,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,2,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,2,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,2,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,2,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,2,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,2,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,2,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,2,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,2,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,2,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,2,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,2,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,2,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,2,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,2,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,2,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,2,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,2,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,2,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,2,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,2,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,2,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,2,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,2,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,2,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,2,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,2,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,2,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,2,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,2,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,2,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,2,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,2,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,2,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,2,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,2,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,2,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,2,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,2,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,2,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,2,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,2,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,2,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,2,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,2,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,2,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,2,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,2,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,2,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,2,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,2,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,2,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,2,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,2,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,2,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,2,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,2,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,2,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,2,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,2,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,2,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,2,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,2,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,2,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,2,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,2,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,2,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,2,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,2,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,2,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,2,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,2,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,2,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,2,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,2,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,2,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,2,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,2,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,2,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,2,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,2,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,2,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,2,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,2,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,2,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,2,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,2,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,2,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,2,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,2,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,2,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,2,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,2,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,2,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,2,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,2,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,2,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,2,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,2,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,2,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,2,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,2,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,2,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,2,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,2,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,2,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,2,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,2,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,2,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,2,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,2,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,2,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,2,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,2,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,2,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,2,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,2,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,2,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,2,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,2,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,2,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,2,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,2,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,2,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,2,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,2,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,2,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,2,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,2,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,2,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,2,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,2,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,2,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,2,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,2,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,2,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,2,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,2,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,2,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,2,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,2,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,2,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,2,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,2,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,2,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,2,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,2,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,2,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,2,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,2,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,2,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,2,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,2,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,2,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,2,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,2,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (311,2,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (312,2,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (313,2,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (314,2,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (315,2,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (316,2,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (317,2,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (318,2,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (319,2,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (320,2,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (321,2,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (322,2,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (323,2,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (324,2,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (325,2,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (326,2,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (327,2,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (328,2,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (329,2,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (330,2,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (331,2,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (332,2,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (333,2,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (334,2,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (335,2,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (336,2,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (337,2,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (338,2,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (339,2,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (340,2,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (341,2,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (342,2,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (343,2,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (344,2,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (345,2,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (346,2,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (347,2,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (348,2,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (349,2,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (350,2,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (351,2,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (352,2,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (353,2,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (354,2,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (355,2,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (356,2,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (357,2,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (358,2,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (359,2,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (360,2,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (361,2,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (362,2,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (363,2,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (364,2,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (365,2,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (366,2,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (367,2,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (368,2,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (369,2,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (370,2,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (371,2,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (372,2,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (373,2,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (374,2,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (375,2,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (376,2,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (377,2,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (378,2,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (379,2,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (380,2,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (381,2,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (382,2,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (383,2,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (384,2,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (385,2,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (386,2,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (387,2,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (388,2,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (389,2,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (390,2,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (391,2,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (392,2,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (393,2,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (394,2,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (395,2,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (396,2,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (397,2,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (398,2,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (399,2,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (400,2,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (401,2,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (402,2,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (403,2,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (404,2,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (405,2,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (406,2,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (407,2,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (408,2,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (409,2,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (410,2,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (411,2,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (412,2,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (413,2,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (414,2,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (415,2,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (416,2,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (417,2,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (418,2,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (419,2,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (420,2,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (421,2,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (422,2,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (423,2,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (424,2,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (425,2,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (426,2,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (427,2,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (428,2,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (429,2,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (430,2,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (431,2,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (432,2,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (433,2,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (434,2,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (435,2,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (436,2,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (437,2,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (438,2,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (439,2,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (440,2,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (441,2,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (442,2,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (443,2,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (444,2,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (445,2,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (446,2,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (447,2,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (448,2,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (449,2,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (450,2,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (451,2,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (452,2,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (453,2,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (454,2,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (455,2,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (456,2,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (457,2,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (458,2,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (459,2,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (460,2,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (461,2,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (462,2,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (463,2,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (464,2,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (465,2,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (466,2,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (467,2,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (468,2,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (469,2,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (470,2,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (471,2,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (472,2,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (473,2,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (474,2,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (475,2,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (476,2,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (477,2,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (478,2,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (479,2,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (480,2,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (481,2,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (482,2,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (483,2,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (484,2,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (485,2,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (486,2,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (487,2,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (488,2,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (489,2,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (490,2,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (491,2,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (492,2,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (493,2,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (494,2,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (495,2,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (496,2,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (497,2,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (498,2,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (499,2,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (500,2,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (501,2,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (502,2,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (503,2,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (504,2,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (505,2,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (506,2,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (507,2,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (508,2,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (509,2,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (510,2,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (511,2,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (512,2,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (513,2,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (514,2,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (515,2,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (516,2,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (517,2,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (518,2,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (519,2,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (520,2,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (521,2,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (522,2,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (523,2,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (524,2,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (525,2,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (526,2,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (527,2,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (528,2,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (529,2,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (530,2,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (531,2,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (532,2,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (533,2,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (534,2,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (535,2,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (536,2,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (537,2,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (538,2,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (539,2,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (540,2,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (541,2,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (542,2,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (543,2,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (544,2,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (545,2,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (546,2,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (547,2,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (548,2,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (549,2,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (550,2,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (551,2,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (552,2,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (553,2,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (554,2,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (555,2,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (556,2,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (557,2,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (558,2,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (559,2,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (560,2,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (561,2,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (562,2,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (563,2,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (564,2,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (565,2,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (566,2,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (567,2,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (568,2,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (569,2,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (570,2,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (571,2,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (572,2,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (573,2,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (574,2,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (575,2,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (576,2,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (577,2,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (578,2,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (579,2,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (580,2,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (581,2,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (582,2,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (583,2,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (584,2,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (585,2,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (586,2,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (587,2,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (588,2,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (589,2,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (590,2,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (591,2,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (592,2,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (593,2,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (594,2,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (595,2,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (596,2,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (597,2,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (598,2,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (599,2,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (600,2,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (601,2,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (602,2,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (603,2,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (604,2,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (605,2,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (606,2,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (607,2,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (608,2,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (609,2,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (610,2,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (611,2,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (612,2,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (613,2,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (614,2,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (615,2,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (616,2,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (617,2,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (618,2,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (619,2,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (620,2,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (621,2,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (622,2,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (623,2,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (624,2,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (625,2,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (626,2,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (627,2,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (628,2,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (629,2,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (630,2,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (631,2,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (632,2,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (633,2,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (634,2,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (635,2,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (636,2,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (637,2,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (638,2,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (639,2,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (640,2,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (641,2,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (642,2,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (643,2,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (644,2,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (645,2,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (646,2,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (647,2,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (648,2,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (649,2,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (650,2,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (651,2,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (652,2,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (653,2,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (654,2,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (655,2,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (656,2,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (657,2,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (658,2,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (659,2,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (660,2,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (661,2,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (662,2,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (663,2,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (664,2,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (665,2,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (666,2,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (667,2,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (668,2,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (669,2,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (670,2,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (671,2,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (672,2,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (673,2,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (674,2,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (675,2,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (676,2,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (677,2,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (678,2,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (679,2,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (680,2,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (681,2,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (682,2,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (683,2,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (684,2,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (685,2,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (686,2,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (687,2,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (688,2,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (689,2,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (690,2,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (691,2,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (692,2,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (693,2,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (694,2,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (695,2,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (696,2,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (697,2,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (698,2,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (699,2,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (700,2,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (701,2,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (702,2,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (703,2,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (704,2,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (705,2,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (706,2,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (707,2,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (708,2,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (709,2,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (710,2,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (711,2,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (712,2,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (713,2,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (714,2,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (715,2,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (716,2,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (717,2,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (718,2,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (719,2,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (720,2,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (721,2,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (722,2,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (723,2,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (724,2,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (725,2,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (726,2,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (727,2,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (728,2,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (729,2,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (730,2,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (731,2,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (732,2,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (733,2,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (734,2,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (735,2,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (736,2,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (737,2,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (738,2,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (739,2,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (740,2,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (741,2,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (742,2,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (743,2,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (744,2,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (745,2,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (746,2,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (747,2,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (748,2,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (749,2,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (750,2,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (751,2,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (752,2,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (753,2,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (754,2,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (755,2,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (756,2,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (757,2,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (758,2,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (759,2,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (760,2,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (761,2,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (762,2,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (763,2,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (764,2,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (765,2,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (766,2,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (767,2,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (768,2,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (769,2,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (770,2,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (771,2,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (772,2,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (773,2,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (774,2,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (775,2,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (776,2,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (777,2,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (778,2,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (779,2,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (780,2,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (781,2,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (782,2,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (783,2,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (784,2,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (785,2,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (786,2,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (787,2,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (788,2,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (789,2,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (790,2,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (791,2,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (792,2,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (793,2,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (794,2,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (795,2,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (796,2,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (797,2,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (798,2,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (799,2,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (800,2,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (801,2,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (802,2,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (803,2,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (804,2,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (805,2,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (806,2,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (807,2,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (808,2,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (809,2,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (810,2,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (811,2,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (812,2,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (813,2,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (814,2,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (815,2,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (816,2,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (817,2,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (818,2,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (819,2,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (820,2,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (821,2,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (822,2,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (823,2,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (824,2,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (825,2,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (826,2,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (827,2,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (828,2,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (829,2,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (830,2,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (831,2,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (832,2,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (833,2,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (834,2,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (835,2,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (836,2,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (837,2,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (838,2,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (839,2,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (840,2,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (841,2,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (842,2,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (843,2,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (844,2,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (845,2,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (846,2,1,847,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (847,2,1,848,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (848,2,1,849,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (849,2,1,850,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (850,2,1,851,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (851,2,1,852,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (852,2,1,853,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (853,2,1,854,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (854,2,1,855,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (855,2,1,856,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (856,2,1,857,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (857,2,1,858,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (858,2,1,859,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (859,2,1,860,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (860,2,1,861,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (861,2,1,862,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (862,2,1,863,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (863,2,1,864,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (864,2,1,865,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (865,2,1,866,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (866,2,1,867,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (867,2,1,868,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (868,2,1,869,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (869,2,1,870,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (870,2,1,871,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (871,2,1,872,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (872,2,1,873,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (873,2,1,874,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (874,2,1,875,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (875,2,1,876,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (876,2,1,877,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (877,2,1,878,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (878,2,1,879,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (879,2,1,880,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (880,2,1,881,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (881,2,1,882,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (882,2,1,883,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (883,2,1,884,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (884,2,1,885,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (885,2,1,886,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (886,2,1,887,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (887,2,1,888,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (888,2,1,889,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (889,2,1,890,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (890,2,1,891,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (891,2,1,892,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (892,2,1,893,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (893,2,1,894,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (894,2,1,895,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (895,2,1,896,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (896,2,1,897,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (897,2,1,898,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (898,2,1,899,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (899,2,1,900,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (900,2,1,901,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (901,2,1,902,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (902,2,1,903,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (903,2,1,904,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (904,2,1,905,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (905,2,1,906,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (906,2,1,907,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (907,2,1,908,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (908,2,1,909,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (909,2,1,910,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (910,2,1,911,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (911,2,1,912,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (912,2,1,913,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (913,2,1,914,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (914,2,1,915,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (915,2,1,916,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (916,2,1,917,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (917,2,1,918,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (918,2,1,919,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (919,2,1,920,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (920,2,1,921,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (921,2,1,922,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (922,2,1,923,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (923,2,1,924,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (924,2,1,925,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (925,2,1,926,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (926,2,1,927,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (927,2,1,928,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (928,2,1,929,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (929,2,1,930,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (930,2,1,931,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (931,2,1,932,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (932,2,1,933,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (933,2,1,934,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (934,2,1,935,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (935,2,1,936,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (936,2,1,937,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (937,2,1,938,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (938,2,1,939,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (939,2,1,940,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (940,2,1,941,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (941,2,1,942,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (942,2,1,943,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (943,2,1,944,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (944,2,1,945,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (945,2,1,946,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (946,2,1,947,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (947,2,1,948,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (948,2,1,949,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (949,2,1,950,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (950,2,1,951,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (951,2,1,952,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (952,2,1,953,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (953,2,1,954,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (954,2,1,955,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (955,2,1,956,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (956,2,1,957,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (957,2,1,958,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (958,2,1,959,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (959,2,1,960,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (960,2,1,961,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (961,2,1,962,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (962,2,1,963,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (963,2,1,964,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (964,2,1,965,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (965,2,1,966,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (966,2,1,967,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (967,2,1,968,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (968,2,1,969,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (969,2,1,970,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (970,2,1,971,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (971,2,1,972,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (972,2,1,973,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (973,2,1,974,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (974,2,1,975,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (975,2,1,976,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (976,2,1,977,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (977,2,1,978,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (978,2,1,979,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (979,2,1,980,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (980,2,1,981,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (981,2,1,982,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (982,2,1,983,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (983,2,1,984,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (984,2,1,985,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (985,2,1,986,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (986,2,1,987,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (987,2,1,988,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (988,2,1,989,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (989,2,1,990,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (990,2,1,991,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (991,2,1,992,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (992,2,1,993,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (993,2,1,994,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (994,2,1,995,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (995,2,1,996,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (996,2,1,997,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (997,2,1,998,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (998,2,1,999,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (999,2,1,1000,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1000,2,1,1001,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1001,2,1,1002,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1002,2,1,1003,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1003,2,1,1004,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1004,2,1,1005,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1005,2,1,1006,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1006,2,1,1007,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1007,2,1,1008,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1008,2,1,1009,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1009,2,1,1010,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1010,2,1,1011,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1011,2,1,1012,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-01-27 10:40:41',60,1,'30.00',1,0),
 (2,1,1,1,'2024-01-27 10:40:41',60,1,'30.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #012');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-01-27 10:40:34'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-01-27 10:40:34'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-01-27 10:40:34'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-01-27 10:40:34'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-01-27 10:40:34'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-01-27 10:40:34'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-01-27 10:40:34'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-01-27 10:40:34'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-01-27 10:40:34'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-01-27 10:40:34'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-01-27 10:40:34'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-01-27 10:40:34'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-01-27 10:40:34'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-01-27 10:40:34'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-01-27 10:40:34'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-01-27 10:40:34'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-01-27 10:40:34'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-01-27 10:40:34'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-01-27 10:40:34'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-01-27 10:40:34'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-01-27 10:40:34'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-01-27 10:40:34'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-01-27 10:40:34'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-01-27 10:40:34'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-01-27 10:40:34'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-01-27 10:40:34'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-01-27 10:40:34'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-01-27 10:40:34'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-01-27 10:40:34'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-01-27 10:40:34');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 20 men working together can finish a job in 20 days, then the no.of days taken by 25 men of the same capacity to finish the job is ___________ days?</div>\n',1,1,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 16 men working 7 hrs a day can plough a field in 48 days, in how many days will 14 men working 12 hrs a day, plough the same field?</div>\n',1,2,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 12 carpenters, working 6 hrs a day can make 460 chairs in 24 days, how many chairs will 18 carpenters make in 36 days, each working 8 hrs a day?</div>\n',1,3,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 18 binders bind 900 books in 10 days. How many binders will be required to bind 660 books in 12 days?</div>\n',1,4,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Some persons can do a piece of work in 12 days. Two times the no.of such persons will do half of the work in ___________ days?</div>\n',1,5,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A certain no.of men can finish a piece of work in 100 days. If howeverthere were 10 men less, it would take 10 days more for the work to finish. How many men were there originally?</div>\n',1,6,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">95 men have provisions for 200 days. After 5 days,30 men died due to an epidemic. For how many days will the remaining food last?</div>\n',1,7,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The rates of working of A & B are in the ratios 5: 6, the no. of days taken by them to finish the work are in the ratio _____ :_______?</div>\n',1,8,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&ldquo;A&rdquo; does half as a much as work as &ldquo;B&rdquo;, & &ldquo;C&rdquo; does half as a much as work as &ldquo;A&rdquo; & &ldquo;B&rdquo; together. If &ldquo;C&rdquo; alone can finish the work in 40 days, then together all will finish the work in ___________ days? </div>\n',1,9,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a camp, there is meal available for 120 men (or) 200 children. If 150 children have taken the meal, how many men can be catered to with the remaining meal?</div>\n',1,10,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">4 mat weavers can weave 4 mats in 4 days. At the same rate, how many mats would be woven by 8 mat weavers in 8 days? </div>\n',1,11,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a dairy farm, 40 cows eat 40 bags of husk in 40 days. In how many days, one cow will eat one bag of husk?</div>\n',1,12,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 8 men working 9 hours a days can built a wall 18mts long, 2 mts broad and 12 mts high in 10 days, how many men will be required to build a wall 32mtslong , 3mts broad and 9mts high by working 6 hours a days in 8 days?</div>\n',1,13,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A contract was to be completed in 56 days and 104 men were set to work each working 8 hours per day. After 30 days, (2/5) of the work is completed. How many additional men may be employed, so that, the work may be completed in time, each man now working 9 hours a day?</div>\n',1,14,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">5 men (or) 9 women can do a piece of work in 19 days. In how many days will 3 men and 6 women do it?</div>\n',1,15,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 20 men can build a wall 112 mts long in 6 days, what length of a similar wall can be built by 25 men in 3 days?</div>\n',1,16,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 36 men can do a piece of work in 25 days, in how many days will 15 men do it?</div>\n',1,17,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 15 dolls cost Rs 35, what do 39 dolls cost?</div>\n',1,18,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 8 men can reap 80 hectares in 24 days, then how many hectares can 36 men reap in 30 days?</div>\n',1,19,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A certain number of men can complete a piece of work in 180 days. If there are 30 men less, it will take 20 days more for the work to be completed. How many men were there originally?</div>\n',1,20,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 7 spiders make 7 webs in 7 days, then 1 spider will make 1 web in how many days?</div>\n',1,21,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Running at the same constant rate, 6 identical machines can produce a total of 270 bottles per minute. At this rate, how many bottles could 10 such machines produce in 4 minutes?</div>\n',1,22,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">8 women can complete the work in 10 days and 10 children take 16 days to complete the same work. How many days will 10 women and 12 children take to complete the work?</div>\n',1,23,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 20 men can build a wall 56 meters long in 6 days, what length of a similar wall can be built by 35 men in 3 days?</div>\n',1,24,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">2 men and 7 boys can do a piece of work in 14 days; 3 men and 8 boys can do the same in 11 days. Then, 8 men and 6 boys can do three times the amount of this work in________days?</div>\n',1,25,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">39 persons can repair a road in 12 days, working 5 hours a day. In how many days will 30 persons, working 6 hours a day, complete the work?</div>\n',1,26,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Pumps working 8 hours a day, can empty a tank in 2 days. How many hours a day must 4 pumps work to empty the tank in 1 day?</div>\n',1,27,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the cost of &lsquo;x&rsquo; metres of wire is &lsquo;d&rsquo; rupees, then what is the cost of &lsquo;y&rsquo; metres of wire at the same rate?</div>\n',1,28,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The sum of 3rd and 15th elements of an arithmetic progression is equal to the sum of 6th,11th and 13th elements of the same progression. Then, which element of the series should necessarily be equal to zero_____?</div>\n',1,29,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a queue, Shankar is ninth from the rear end. Althaf\'s place is eighth from the front. Nitu is standing between the two. What could be the minimum numbers of boys standing in the queue?</div>\n',1,30,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #012','Assessment Test #012','2024-01-27 10:40:34',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL DEFAULT '',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=1013 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (1,'admin','baf71c021073a99609d073b6c7d2162a','admin','admin','2011-10-27 12:02:06',1,'admin'),
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','2024-07-12 14:55:45',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','2024-07-12 14:55:45',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','2024-07-12 14:55:45',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','2024-07-12 14:55:45',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','2024-07-12 14:55:45',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','2024-07-12 14:55:45',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','2024-07-12 14:55:45',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','2024-07-12 14:55:45',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','2024-07-12 14:55:45',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','2024-07-12 14:55:45',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','2024-07-12 14:55:45',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','2024-07-12 14:55:45',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','2024-07-12 14:55:45',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','2024-07-12 14:55:45',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','2024-07-12 14:55:45',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','2024-07-12 14:55:45',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','2024-07-12 14:55:45',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','2024-07-12 14:55:45',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','2024-07-12 14:55:45',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','2024-07-12 14:55:45',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','2024-07-12 14:55:45',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','2024-07-12 14:55:45',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','2024-07-12 14:55:45',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','2024-07-12 14:55:45',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','2024-07-12 14:55:45',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','2024-07-12 14:55:45',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','2024-07-12 14:55:45',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','2024-07-12 14:55:45',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','2024-07-12 14:55:45',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','2024-07-12 14:55:45',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','2024-07-12 14:55:45',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','2024-07-12 14:55:45',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','2024-07-12 14:55:45',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','2024-07-12 14:55:45',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','2024-07-12 14:55:45',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','2024-07-12 14:55:45',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','2024-07-12 14:55:45',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','2024-07-12 14:55:45',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','2024-07-12 14:55:45',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','2024-07-12 14:55:45',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','2024-07-12 14:55:45',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','2024-07-12 14:55:45',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','2024-07-12 14:55:45',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','2024-07-12 14:55:45',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','2024-07-12 14:55:45',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','2024-07-12 14:55:45',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','2024-07-12 14:55:45',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','2024-07-12 14:55:45',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','2024-07-12 14:55:45',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','2024-07-12 14:55:45',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','2024-07-12 14:55:45',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','2024-07-12 14:55:45',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','2024-07-12 14:55:45',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','2024-07-12 14:55:45',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','2024-07-12 14:55:45',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','2024-07-12 14:55:45',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','2024-07-12 14:55:45',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','2024-07-12 14:55:45',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','2024-07-12 14:55:45',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','2024-07-12 14:55:45',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','2024-07-12 14:55:45',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','2024-07-12 14:55:45',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','2024-07-12 14:55:45',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','2024-07-12 14:55:45',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','2024-07-12 14:55:45',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','2024-07-12 14:55:45',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','2024-07-12 14:55:45',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','2024-07-12 14:55:45',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','2024-07-12 14:55:45',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','2024-07-12 14:55:45',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','2024-07-12 14:55:45',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','2024-07-12 14:55:45',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','2024-07-12 14:55:45',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','2024-07-12 14:55:45',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','2024-07-12 14:55:45',NULL,NULL),
 (77,'TN301','1289ea6624789573dc7607c5233f3bca','TN301','','2024-07-12 14:55:45',NULL,NULL),
 (78,'TN302','e26b0aee894cc6f27fc242a434730645','TN302','','2024-07-12 14:55:45',NULL,NULL),
 (79,'TN303','97f1f9bedce6c3b9d3938d9d40f9d1de','TN303','','2024-07-12 14:55:45',NULL,NULL),
 (80,'TN304','3092223a86bf770e3c9c1a2351228bfe','TN304','','2024-07-12 14:55:45',NULL,NULL),
 (81,'TN305','661fc042c02eb6056e301405816fbd55','TN305','','2024-07-12 14:55:45',NULL,NULL),
 (82,'TN306','38f67721ed7ff9ef0a449ab6832235a3','TN306','','2024-07-12 14:55:45',NULL,NULL),
 (83,'TN307','5ef9db6c70b283266923ba74e546a266','TN307','','2024-07-12 14:55:45',NULL,NULL),
 (84,'TN308','8162c0ec1488a04f6c90e8642940eaa0','TN308','','2024-07-12 14:55:45',NULL,NULL),
 (85,'TN309','53e5940df269d0ec9523feb4fcdd7a22','TN309','','2024-07-12 14:55:45',NULL,NULL),
 (86,'TN310','aed205ee1ec7c212b0b5bdaf6b69af40','TN310','','2024-07-12 14:55:45',NULL,NULL),
 (87,'TN311','c15601a9f59790cb703c4bc0b00e0e20','TN311','','2024-07-12 14:55:45',NULL,NULL),
 (88,'TN312','09fda6e3878307e07b5990d8e66b1103','TN312','','2024-07-12 14:55:45',NULL,NULL),
 (89,'TN313','a5e74a5736c26c2cd770554886ad4154','TN313','','2024-07-12 14:55:45',NULL,NULL),
 (90,'TN314','bd3bd7adec1a7c068788b1a95ae95c20','TN314','','2024-07-12 14:55:45',NULL,NULL),
 (91,'TN315','be0b8c0ca16b0075e5913a351dab0b46','TN315','','2024-07-12 14:55:45',NULL,NULL),
 (92,'TN316','24fca42a296f9db5539073ef6ecae6f3','TN316','','2024-07-12 14:55:45',NULL,NULL),
 (93,'TN317','a6f9bc058b72fdae228c6cdd5dc2751b','TN317','','2024-07-12 14:55:45',NULL,NULL),
 (94,'TN318','ddecc6b257e9db543ff9cb9965717d00','TN318','','2024-07-12 14:55:45',NULL,NULL),
 (95,'TN319','35f235b5913004e66bcd1ecdc8fb3057','TN319','','2024-07-12 14:55:45',NULL,NULL),
 (96,'TN320','da070b79dbc003845178ab377868bdc6','TN320','','2024-07-12 14:55:45',NULL,NULL),
 (97,'TN321','4960df1341319307974d56d2ce268306','TN321','','2024-07-12 14:55:45',NULL,NULL),
 (98,'TN322','543d95db7f4c1008d42f5cfd22e7a5be','TN322','','2024-07-12 14:55:45',NULL,NULL),
 (99,'TN323','1d7a0bd046ce9876580eda3bedab79db','TN323','','2024-07-12 14:55:45',NULL,NULL),
 (100,'TN324','400510cd1d81a680a9e348620d351b25','TN324','','2024-07-12 14:55:45',NULL,NULL),
 (101,'TN325','b104b8b8e328266a31f9a46210f84953','TN325','','2024-07-12 14:55:45',NULL,NULL),
 (102,'TN326','5544253aa515158f2f453770eb33e51b','TN326','','2024-07-12 14:55:45',NULL,NULL),
 (103,'TN327','29c5e96a4b73c506f78673a39fa58b54','TN327','','2024-07-12 14:55:45',NULL,NULL),
 (104,'TN328','bff7cd809932aeab2fe07646e4453d88','TN328','','2024-07-12 14:55:45',NULL,NULL),
 (105,'TN329','f0cbb5ffcb613849e8c5d53965887ca9','TN329','','2024-07-12 14:55:45',NULL,NULL),
 (106,'TN330','1345e9aa4b81a4e8cd95883d12549b8a','TN330','','2024-07-12 14:55:45',NULL,NULL),
 (107,'TN331','0f149a1ac8d4cc16618c907f589147a9','TN331','','2024-07-12 14:55:45',NULL,NULL),
 (108,'TN332','f7133a8c457d92fd22cecc0c3b2efa04','TN332','','2024-07-12 14:55:45',NULL,NULL),
 (109,'TN333','9ee16ce2698fbd7cf97e23c3fe6b8740','TN333','','2024-07-12 14:55:45',NULL,NULL),
 (110,'TN334','93cf6ce6bd5f43a90eaa5de07057429c','TN334','','2024-07-12 14:55:45',NULL,NULL),
 (111,'TN335','24a6637f62b876ea63b4b6c4375362e3','TN335','','2024-07-12 14:55:45',NULL,NULL),
 (112,'TN336','d6ed57d5ed516d005339eb06240b45e6','TN336','','2024-07-12 14:55:45',NULL,NULL),
 (113,'TN337','acbdb66165f48dec35a94c7c6993c33e','TN337','','2024-07-12 14:55:45',NULL,NULL),
 (114,'TN338','fb42c54ecdaec0a7c1e65cadaa7e368b','TN338','','2024-07-12 14:55:45',NULL,NULL),
 (115,'TN339','42e4e7d643724f7b333d0900681f9411','TN339','','2024-07-12 14:55:45',NULL,NULL),
 (116,'TN340','0d53a379688407436ea33cfda2416c13','TN340','','2024-07-12 14:55:45',NULL,NULL),
 (117,'TN341','130192d08a11c1e8f5c256657119b320','TN341','','2024-07-12 14:55:45',NULL,NULL),
 (118,'TN342','a4f75e8cb6c2de78107ac2e989aa3010','TN342','','2024-07-12 14:55:45',NULL,NULL),
 (119,'TN343','01471f2d08b26e0cd0bacad956d44bdb','TN343','','2024-07-12 14:55:45',NULL,NULL),
 (120,'TN344','366e1c32b4cbd219df987a4dc2fed421','TN344','','2024-07-12 14:55:45',NULL,NULL),
 (121,'TN345','3e0a55cbcfea4c5ecadec9c688a33355','TN345','','2024-07-12 14:55:45',NULL,NULL),
 (122,'TN346','9b828b388ef5b87921b63e77bf1c22eb','TN346','','2024-07-12 14:55:45',NULL,NULL),
 (123,'TN347','0e22a00f1a09c3a38d565880a4e3966e','TN347','','2024-07-12 14:55:45',NULL,NULL),
 (124,'TN348','e4ca11b0dedc0b33e6566fc22249e1b2','TN348','','2024-07-12 14:55:45',NULL,NULL),
 (125,'TN349','45b51c7307b1ded7135ce37b16efb7be','TN349','','2024-07-12 14:55:45',NULL,NULL),
 (126,'TN350','9497b729f9d86e78f1a11a0d9d831c4d','TN350','','2024-07-12 14:55:45',NULL,NULL),
 (127,'TN351','fbd75180d9115527383a684ea69f0783','TN351','','2024-07-12 14:55:45',NULL,NULL),
 (128,'TN352','eb4f355e32fdef9d4a10d562b53a4d19','TN352','','2024-07-12 14:55:45',NULL,NULL),
 (129,'TN353','4883a15932e12d27f20f76f95c6611ff','TN353','','2024-07-12 14:55:45',NULL,NULL),
 (130,'TN354','fde7858c1eec55329bd8db4cb766ead2','TN354','','2024-07-12 14:55:45',NULL,NULL),
 (131,'TN355','231dae9001808862f6efddfff0e6a6e8','TN355','','2024-07-12 14:55:45',NULL,NULL),
 (132,'TN356','616ef83adaa44296b1b359feb5a011af','TN356','','2024-07-12 14:55:45',NULL,NULL),
 (133,'TN357','5a14e2bb7ffd9dca43d92a61e27a38f0','TN357','','2024-07-12 14:55:45',NULL,NULL),
 (134,'TN358','3d57651a7c50473ebcab7feab3331a93','TN358','','2024-07-12 14:55:45',NULL,NULL),
 (135,'TN359','62c1a47d5865d9b1ae5d588aa6ad18a4','TN359','','2024-07-12 14:55:45',NULL,NULL),
 (136,'TN360','f0eada9bd948cd7abebb8209526d0982','TN360','','2024-07-12 14:55:45',NULL,NULL),
 (137,'TN361','9852ea66aa61c7e3cb5af21154130baa','TN361','','2024-07-12 14:55:45',NULL,NULL),
 (138,'TN362','55b184d86c50fbe010e80070ef597d9e','TN362','','2024-07-12 14:55:45',NULL,NULL),
 (139,'TN363','030e1cb96e2ca4bdb8022bec52d7f025','TN363','','2024-07-12 14:55:45',NULL,NULL),
 (140,'TN364','c58c612aabc949ec19ee8a3a84222d18','TN364','','2024-07-12 14:55:45',NULL,NULL),
 (141,'TN365','c0b9d9812ecbc0d9cef1388b11016d9e','TN365','','2024-07-12 14:55:45',NULL,NULL),
 (142,'TN366','dd40de1e4bf7cbdaec1c941e402ec64b','TN366','','2024-07-12 14:55:45',NULL,NULL),
 (143,'TN367','b31061923364de8bdd79f779d2d89675','TN367','','2024-07-12 14:55:45',NULL,NULL),
 (144,'TN368','1b0be879a2be62199a4c05eafff09e57','TN368','','2024-07-12 14:55:45',NULL,NULL),
 (145,'TN369','e1eafa6e765a95a1d2792f813c2c0878','TN369','','2024-07-12 14:55:45',NULL,NULL),
 (146,'TN370','f0085044ffd672c73714006792c45658','TN370','','2024-07-12 14:55:45',NULL,NULL),
 (147,'TN371','6b888a8632b8e73f624eb27a25cb63d8','TN371','','2024-07-12 14:55:45',NULL,NULL),
 (148,'TN372','3e9c40acad5da943012f0dad2a382f48','TN372','','2024-07-12 14:55:45',NULL,NULL),
 (149,'TN373','f74059052ca4f8f8debab4f94fe60fee','TN373','','2024-07-12 14:55:45',NULL,NULL),
 (150,'TN374','d044d50d3a84ef2b83396df8435b2567','TN374','','2024-07-12 14:55:45',NULL,NULL),
 (151,'TN375','38b74a55960a640c8d4597de34c9dd64','TN375','','2024-07-12 14:55:45',NULL,NULL),
 (152,'TN376','4c12c516111aaac8525853a6d0d5096e','TN376','','2024-07-12 14:55:45',NULL,NULL),
 (153,'TN377','362a1d87a8c6284f2c7d861b819df5ed','TN377','','2024-07-12 14:55:45',NULL,NULL),
 (154,'TN378','9b25ff1ec23bc539354df9686cd89de5','TN378','','2024-07-12 14:55:45',NULL,NULL),
 (155,'TN379','ae6423f89f07c2e20561e08ef047b742','TN379','','2024-07-12 14:55:45',NULL,NULL),
 (156,'TN380','88d8c25bffa7a6c9575fbfe8f6d43f39','TN380','','2024-07-12 14:55:45',NULL,NULL),
 (157,'TN381','d23ce6d2f1ff27bbf0ebe2325ce9b2b2','TN381','','2024-07-12 14:55:45',NULL,NULL),
 (158,'TN382','e2c5f577217cc1922906d7d9dd42c449','TN382','','2024-07-12 14:55:45',NULL,NULL),
 (159,'TN383','f48fc1a9ef3b76018747f42d990a07aa','TN383','','2024-07-12 14:55:45',NULL,NULL),
 (160,'TN384','7b424c9ec3380d8c0477bdf186363a31','TN384','','2024-07-12 14:55:45',NULL,NULL),
 (161,'TN385','39427ade0baadc061c1dbecc8a1111e0','TN385','','2024-07-12 14:55:45',NULL,NULL),
 (162,'TN386','c9de880f84bc8efb35bbb35183e5f837','TN386','','2024-07-12 14:55:45',NULL,NULL),
 (163,'TN387','eb3504d64781f4186f94897184326fab','TN387','','2024-07-12 14:55:45',NULL,NULL),
 (164,'TN388','ca8e351d27baf506a08673c4b2e96ce0','TN388','','2024-07-12 14:55:45',NULL,NULL),
 (165,'TN389','6636b28d53227b585648fcc9f4458d58','TN389','','2024-07-12 14:55:45',NULL,NULL),
 (166,'TN390','6333af3816e3435142cfe4f77bfb91bf','TN390','','2024-07-12 14:55:45',NULL,NULL),
 (167,'TN391','ca5bb87cfbac4a3dcc1e414c4154eee3','TN391','','2024-07-12 14:55:45',NULL,NULL),
 (168,'TN392','9cef0c55596ba7198d1e8b19ca1c0c8c','TN392','','2024-07-12 14:55:45',NULL,NULL),
 (169,'TN393','b8799e1f36ae1504dc6ccdfe5b02446d','TN393','','2024-07-12 14:55:45',NULL,NULL),
 (170,'TN394','04ff4127b262503a03dbb0ced948fbf8','TN394','','2024-07-12 14:55:45',NULL,NULL),
 (171,'TN395','7422c5e9827367b10c9b445c7cce6a48','TN395','','2024-07-12 14:55:45',NULL,NULL),
 (172,'TN396','bcb94858b4ecf06a149f86779461a0ec','TN396','','2024-07-12 14:55:45',NULL,NULL),
 (173,'TN397','9cf2988dc3f6c7343b61a1e35f498f4f','TN397','','2024-07-12 14:55:45',NULL,NULL),
 (174,'TN398','9b79877cee0f888380277aa6bb14f9c5','TN398','','2024-07-12 14:55:45',NULL,NULL),
 (175,'TN399','5901bff9f8732fd05434a55ac49f3aec','TN399','','2024-07-12 14:55:45',NULL,NULL),
 (176,'TN400','e7bb4d93dd8fc29b6ab52c0e88273299','TN400','','2024-07-12 14:55:45',NULL,NULL),
 (177,'A1','2ede140e685bcb4debb312341bec721e','Swetha C','','2024-07-12 14:55:45',NULL,NULL),
 (178,'A2','f2b0901d3a3bf259c37d44cfaec1f32c','JAYALAKSHMI.V','','2024-07-12 14:55:45',NULL,NULL),
 (179,'A3','0dfeb65b5601085a63954aff0ba353cb','Vignesh V','','2024-07-12 14:55:45',NULL,NULL),
 (180,'A4','c95c5e6c2802ad00d8f0f46f43b47179','PERUMAL.P','','2024-07-12 14:55:45',NULL,NULL),
 (181,'A5','ef0660f7f6de2795d1a64dab278c1002','B prem','','2024-07-12 14:55:45',NULL,NULL),
 (182,'A6','9c914df6d14cd40682bc6d43f30a8f7f','Arunkanth.R','','2024-07-12 14:55:45',NULL,NULL),
 (183,'A7','e8d9d322e9f93829c6ca70fd971533d9','Nithyasri .S','','2024-07-12 14:55:45',NULL,NULL),
 (184,'A8','8494b78d68e052130883c6062e7c1030','Niranjana.K','','2024-07-12 14:55:45',NULL,NULL),
 (185,'A9','0e7dc7bb7db75071b07b4a2066778650','NIVETHA','','2024-07-12 14:55:45',NULL,NULL),
 (186,'A10','d48e93d140dfc6fa26b6a18217af978a','Prem Kumar K R','','2024-07-12 14:55:45',NULL,NULL),
 (187,'A11','2f31957753b0d34582454bf565d8a772','S.B.Charan','','2024-07-12 14:55:45',NULL,NULL),
 (188,'A12','bb9cd442b1e46c5127ed91508aa48b0e','Divyalakshmi P','','2024-07-12 14:55:45',NULL,NULL),
 (189,'A13','6f5abfae2530da4137167b1b6b48ebba','B. V. Lakshya','','2024-07-12 14:55:45',NULL,NULL),
 (190,'A14','12890fa77de9533908c26c8cc25c444d','Meena .s','','2024-07-12 14:55:45',NULL,NULL),
 (191,'A15','a4d65ea90dcff248e6304f1a5fbcc91f','Aishwarya DR','','2024-07-12 14:55:45',NULL,NULL),
 (192,'A16','26d46614d87a6aab6aa1f619fa826ae8','S.AAKASH','','2024-07-12 14:55:45',NULL,NULL),
 (193,'A17','b4815a25d9a3c4b594df11700c582fcb','S. HARIS SRIRAM','','2024-07-12 14:55:45',NULL,NULL),
 (194,'A18','bf68407f6e301fecde8588a63d8a114d','N karthik sundaram','','2024-07-12 14:55:45',NULL,NULL),
 (195,'A19','41908116e1bff61db95e539658393370','C. Iniyan magesh','','2024-07-12 14:55:45',NULL,NULL),
 (196,'A20','04a6361fd8e8cf7d2fc48085f812e876','Ruba shree CR','','2024-07-12 14:55:45',NULL,NULL),
 (197,'A21','dc4c398fba8468a82701d72320ac4865','Rahul Dravid M','','2024-07-12 14:55:45',NULL,NULL),
 (198,'A22','2ef6614e52037be61259254a7165fafb','MOHAMED ASHIK N','','2024-07-12 14:55:45',NULL,NULL),
 (199,'A23','a4dd938197fe9905e27b54ca6f61e31d','Renuka M','','2024-07-12 14:55:45',NULL,NULL),
 (200,'A24','e71ab64498562017acb19367fcc4ecaf','Yokesh v','','2024-07-12 14:55:45',NULL,NULL),
 (201,'A25','8429b72776a8004ba0dae0efc40113b2','Sujith D','','2024-07-12 14:55:45',NULL,NULL),
 (202,'A26','bb0f7054590782d5428b3c2b29761d4a','S.Sanath Krishna','','2024-07-12 14:55:45',NULL,NULL),
 (203,'A27','57d396f3930b0bf191394f19a9c4f5d8','D.HAREESH','','2024-07-12 14:55:45',NULL,NULL),
 (204,'A28','5344d5b00687d8403ef5637712ddfbf3','NAVEENKUMAR','','2024-07-12 14:55:45',NULL,NULL),
 (205,'A29','5f61c67b6bee326d4d2e9401ce33ccd3','Ramkumar K','','2024-07-12 14:55:45',NULL,NULL),
 (206,'A30','0eb0a4442205f9701035704cef5b8c07','MANOJ KUMAR. V','','2024-07-12 14:55:45',NULL,NULL),
 (207,'A31','9858b633782d8453a45cdc8d8f0d9591','NITHESH KUMAR V','','2024-07-12 14:55:45',NULL,NULL),
 (208,'A32','b2941dcd9a7b7b718bd003081006e85d','ABINESH S','','2024-07-12 14:55:45',NULL,NULL),
 (209,'A33','3e74b19f83ee77a8b0051059dea85a28','MUKESH. S','','2024-07-12 14:55:45',NULL,NULL),
 (210,'A34','a7389fd8318daf20bd36b6fcc17eeeb8','V. M. HARISH','','2024-07-12 14:55:45',NULL,NULL),
 (211,'A35','3a089a4b1e87dc0f81f454d5a170ac93','Sathish v','','2024-07-12 14:55:45',NULL,NULL),
 (212,'A36','9c294381a787293db1eb94d213d1f3b2','ACHYUT M','','2024-07-12 14:55:45',NULL,NULL),
 (213,'A37','5709a474e4957ad341eed8e4e13ea514','Priyadharshini S','','2024-07-12 14:55:45',NULL,NULL),
 (214,'A38','8704f7683d928c1f3a9c5c91a69d4224','Shreeman.S','','2024-07-12 14:55:45',NULL,NULL),
 (215,'A39','66e8c23c295091ed5be7c63f699712e4','Yugendran. S','','2024-07-12 14:55:45',NULL,NULL),
 (216,'A40','06abb1062f8db04f800c4d459c756adb','Ajai.R','','2024-07-12 14:55:45',NULL,NULL),
 (217,'A41','4b9dd2966dd70a0b40477c62491a672b','PRIYA S','','2024-07-12 14:55:45',NULL,NULL),
 (218,'A42','3ae9c28bed0635c0c809c30ca6e7d38f','Krishna priya. G','','2024-07-12 14:55:45',NULL,NULL),
 (219,'A43','b401bb55ca6e0af637633c2026f63586','VISHAL C','','2024-07-12 14:55:45',NULL,NULL),
 (220,'A44','3f2e1109e1312991d0f2cc386ae8a07f','Naveen.N M','','2024-07-12 14:55:45',NULL,NULL),
 (221,'A45','2fcc77d9725c371ef2b4c38ae4272fe1','koushik','','2024-07-12 14:55:45',NULL,NULL),
 (222,'A46','5ba5e7fd9c2827a8df6f20dd07f085c4','Lakshman Prasath GN','','2024-07-12 14:55:45',NULL,NULL),
 (223,'A47','0ee925dc001ec20451eee328d8358dcb','BHARATH KUMAR .C','','2024-07-12 14:55:45',NULL,NULL),
 (224,'A48','fc23fd547a6d69b38cea25d7a7564b34','SATHISH S','','2024-07-12 14:55:45',NULL,NULL),
 (225,'A49','676c47664886d669bdc30b5aaaaef6f4','R.Akash','','2024-07-12 14:55:45',NULL,NULL),
 (226,'A50','8ff7ac50acfab8f0f2573a74c69a4f80','Charan santhosh','','2024-07-12 14:55:45',NULL,NULL),
 (227,'A51','e9d4d59ebef7fbf61f253a980d33bf0e','KEVIN RAJ D','','2024-07-12 14:55:45',NULL,NULL),
 (228,'A52','8f1ca9be3680b0183c0a40dac4bf23f4','M.santosh kumar','','2024-07-12 14:55:45',NULL,NULL),
 (229,'A53','f403cb02becd1a5adc307a93841fc56c','Vignesh r','','2024-07-12 14:55:45',NULL,NULL),
 (230,'A54','204e1da89697415de1b5e836d8bb1a82','Thirumal v.m.v','','2024-07-12 14:55:45',NULL,NULL),
 (231,'A55','afafb4e01a93f50792fe2da8cb518004','K.Dhanush','','2024-07-12 14:55:45',NULL,NULL),
 (232,'B1','d5eadf9de39f4ab874e10790daa3e3bb','ARUNACHALESWARAN. S','','2024-07-12 14:55:45',NULL,NULL),
 (233,'B2','6096f5a266b4c4c76f7a69f8cdfb47aa','S.PRAGDEESHWAR','','2024-07-12 14:55:45',NULL,NULL),
 (234,'B3','dc390619f1497fb4897b3f1fbf1a5fc7','Aarav','','2024-07-12 14:55:45',NULL,NULL),
 (235,'B4','8e2880ba2aba429f2e861b94c620ff0c','M.AARTHI','','2024-07-12 14:55:45',NULL,NULL),
 (236,'B5','715dc74ce15ecdb8af63e8429e7567c5','Sakthi Sanjai.S','','2024-07-12 14:55:45',NULL,NULL),
 (237,'B6','8feb3205fb843b72ad750e8d2453e508','LOKESHWRAN R','','2024-07-12 14:55:45',NULL,NULL),
 (238,'B7','9fb9138eab4a1c751aa58c48bd2be230','Jai Ganesh S','','2024-07-12 14:55:45',NULL,NULL),
 (239,'B8','61a64c1c81da9f2f3b26634ad2aa007d','LK Narain karthigeyan','','2024-07-12 14:55:45',NULL,NULL),
 (240,'B9','0b5babd6364424252d629f6ca7fac2dd','Sathya Narayanan K','','2024-07-12 14:55:45',NULL,NULL),
 (241,'B10','91ca056ce29c911100963e6f07ba03f6','HARTHI.V','','2024-07-12 14:55:45',NULL,NULL),
 (242,'B11','ce6edc0f5d25ebf6c8ca93165522f2b8','Baradhi kannan RB','','2024-07-12 14:55:45',NULL,NULL),
 (243,'B12','36d1a9f36f48e4a92e15bb014f287e3f','Thrilok D','','2024-07-12 14:55:45',NULL,NULL),
 (244,'B13','a541f8fa245c03d270046c2bdf53f3cb','Prithive S','','2024-07-12 14:55:45',NULL,NULL),
 (245,'B14','d7129f1d536652cbfae5286dcb47bd96','Karan N','','2024-07-12 14:55:45',NULL,NULL),
 (246,'B15','298d0b0efeb9abf7c62124c1af660907','bharath raj k','','2024-07-12 14:55:45',NULL,NULL),
 (247,'B16','d3e0a19146e4f62c5b4a830962ebc1bd','kaviyashree','','2024-07-12 14:55:45',NULL,NULL),
 (248,'B17','96d3febcedecc91f3cd36a5e141761eb','Pranati P','','2024-07-12 14:55:45',NULL,NULL),
 (249,'B18','1b86f8a1c5195862540439fdb47b41b1','Rindhya .K','','2024-07-12 14:55:45',NULL,NULL),
 (250,'B19','a489d2ac5a02b67454c01ced56cc6ca0','Keerthana S','','2024-07-12 14:55:45',NULL,NULL),
 (251,'B20','21c673ace2b39f993e3250f4f9b518e9','Tharun kumar U','','2024-07-12 14:55:45',NULL,NULL),
 (252,'B21','6669b287f4778f1d45c94d024fd7f036','Shyamkumar A','','2024-07-12 14:55:45',NULL,NULL),
 (253,'B22','a03e5a2656f9cae7ecf6cca696717884','Venkatesh P N','','2024-07-12 14:55:45',NULL,NULL),
 (254,'B23','7c37640eae911ea061151730cae7fd4a','Eshwar R','','2024-07-12 14:55:45',NULL,NULL),
 (255,'B24','9cfb3c56ce80aa3292a6825b6a9eb73d','Danush P','','2024-07-12 14:55:45',NULL,NULL),
 (256,'B25','f4d4f78fb97db87d11477d050279b4c1','Abinayasree R','','2024-07-12 14:55:45',NULL,NULL),
 (257,'B26','e60c2466e7a4a95d17cdf7e54c35fae1','Pragadeesh J S','','2024-07-12 14:55:45',NULL,NULL),
 (258,'B27','d961f5f4b459015c8dcf97a237a6c5d5','Tholkappian R','','2024-07-12 14:55:45',NULL,NULL),
 (259,'B28','458a7f7ee7e772325c64846e771936cb','Rajesh kumar.M','','2024-07-12 14:55:45',NULL,NULL),
 (260,'B29','18bc92af8a7b125f65893b7bd6a9d735','SHRIKANTH N M','','2024-07-12 14:55:45',NULL,NULL),
 (261,'B30','2f131db77667d4bd8f62c0153e44279d','Divya D','','2024-07-12 14:55:45',NULL,NULL),
 (262,'B31','ce63bab66e4aa069eb037e9a1d4439a7','Aravindhan P','','2024-07-12 14:55:45',NULL,NULL),
 (263,'B32','719138b7eee9ad1749f527dfdb91f151','KISHORE RAM G M','','2024-07-12 14:55:45',NULL,NULL),
 (264,'B33','4a9f0e6e842735607351ab5622e43c38','Malathy.S','','2024-07-12 14:55:45',NULL,NULL),
 (265,'B34','6d573be7477feb56ffdbad3c65a94ba4','VINOTH. D','','2024-07-12 14:55:45',NULL,NULL),
 (266,'B35','a9faf0f54ec0f2be22f443e9be5661d7','Arockia Pauline A','','2024-07-12 14:55:45',NULL,NULL),
 (267,'B36','4ae28640e0b0db553753faaee53b393b','PRABHAKARAN.M','','2024-07-12 14:55:45',NULL,NULL),
 (268,'B37','a615c2e4399777fbfca0c81adec695b9','Murugan R','','2024-07-12 14:55:45',NULL,NULL),
 (269,'B38','bdd8051a5edc1105a3fb7c4d1d27b8a9','G. vignesh','','2024-07-12 14:55:45',NULL,NULL),
 (270,'B39','6efe7d5702fa7c39261d1494c6815831','Aniruthan R','','2024-07-12 14:55:45',NULL,NULL),
 (271,'B40','f64524bf1990a95a8f91f70bbca86468','JAGADESH. S','','2024-07-12 14:55:45',NULL,NULL),
 (272,'B41','e53cc999fc0a5e72d1e2b9ea781cd8ce','PASUPATHI.R','','2024-07-12 14:55:45',NULL,NULL),
 (273,'B42','c1a6a8874fa9e497bb8f2f109b4ed746','SARANYA DEVI B','','2024-07-12 14:55:45',NULL,NULL),
 (274,'B43','94f924019428ed6cfbb5304a4810175b','DHANUSHA S T','','2024-07-12 14:55:45',NULL,NULL),
 (275,'B44','a616828ebef5f2414f700a43eac63539','NIVETHITHA P','','2024-07-12 14:55:45',NULL,NULL),
 (276,'B45','531c27070ad315e41ab310072c371f50','Kaviya S','','2024-07-12 14:55:45',NULL,NULL),
 (277,'B46','1f97ed3339a00c0754ce3f4551cb48b8','Jeyalakshmi V','','2024-07-12 14:55:45',NULL,NULL),
 (278,'B47','73423bc4be0f11256ce3ac5a5f061f65','Sivaranjani K','','2024-07-12 14:55:45',NULL,NULL),
 (279,'B48','3fd7fb0e9b20c35331f34ee3bed707b1','Karthishwari S','','2024-07-12 14:55:45',NULL,NULL),
 (280,'B49','43d78e095793a594e54c835f79342dd1','KOKILA V','','2024-07-12 14:55:45',NULL,NULL),
 (281,'B50','17fb58ff27f0393fb6dfabb262530fef','Vivek Anand V','','2024-07-12 14:55:45',NULL,NULL),
 (282,'B51','a59b66ef297cd13d5125b1fa172a41c1','Shanmugapriyan M','','2024-07-12 14:55:45',NULL,NULL),
 (283,'B52','c3e434bb9d4343a1a54a11729f0f8db3','A.MADESHWARAN','','2024-07-12 14:55:45',NULL,NULL),
 (284,'B53','ce7583badc9e19b722e9c5247c09dc44','Athira.R','','2024-07-12 14:55:45',NULL,NULL),
 (285,'B54','38a38c062358131a1049b1eba39734fc','VINISHIYA.R','','2024-07-12 14:55:45',NULL,NULL),
 (286,'B55','fa2f1bbeb5da9c28e2b5724bd47e40eb','sanjay D','','2024-07-12 14:55:45',NULL,NULL),
 (287,'B56','ca5745f12e0950c512d178239e404e9a','Fathima R','','2024-07-12 14:55:45',NULL,NULL),
 (288,'B57','d3c496d5aecd36ef317f87dff892d5dc','R.NAVEEN KUMAR','','2024-07-12 14:55:45',NULL,NULL),
 (289,'B58','b508bcd8cc99a5a2d7ba477026141e8b','D.V.MOKSHIN VIGNESH','','2024-07-12 14:55:45',NULL,NULL),
 (290,'B59','7da3b0adbb0a22170b11ab79d65ade7b','APARNA.P','','2024-07-12 14:55:45',NULL,NULL),
 (291,'B60','94cd8c87450a7ee55e433fe31ed77727','RAGHUL KUMAR.R.N','','2024-07-12 14:55:45',NULL,NULL),
 (292,'C1','8fcf93882ed92cec1ddab0ed14808367','KARTHIKEYAN M','','2024-07-12 14:55:45',NULL,NULL),
 (293,'C2','af125b1a9abb97f5c7392c4634403151','KAVI PRIYA G','','2024-07-12 14:55:45',NULL,NULL),
 (294,'C3','8f86f4d679529e678967b83db98c1bcf','SAI KUMAR S','','2024-07-12 14:55:45',NULL,NULL),
 (295,'C4','691a5e6b35bcced8c70d4b689b602027','HARINI SHREE S','','2024-07-12 14:55:45',NULL,NULL),
 (296,'C5','aa4aaa3987166750fb47471def307257','JOSHEKA U S','','2024-07-12 14:55:45',NULL,NULL),
 (297,'C6','da0a1e6755c37462af317e38f771322c','KARTHIKEYAN S','','2024-07-12 14:55:45',NULL,NULL),
 (298,'C7','619d8fb5ce23b22065852eb4f4019409','GIRISH V K','','2024-07-12 14:55:45',NULL,NULL),
 (299,'C8','632bb5a5d2e7cf8bf839f51a23c6be38','MONIKA P V','','2024-07-12 14:55:45',NULL,NULL),
 (300,'C9','bc773ff56fd6a478382f51faf2ccc448','YESWANTH S','','2024-07-12 14:55:45',NULL,NULL),
 (301,'C10','981dc529177dca21bb4f3f37cfaf4cf7','KAMALESH P','','2024-07-12 14:55:45',NULL,NULL),
 (302,'C11','0d5e02200b357f3315ee5a09890d063e','DINESH BABU  B','','2024-07-12 14:55:45',NULL,NULL),
 (303,'C12','b1fcb43dfc0b254fdc0ff030d9b0d160','RITHISHBARATH  H','','2024-07-12 14:55:45',NULL,NULL),
 (304,'C13','8a15ed19f00feee3ad32ee8193df6daf','ANANTHAN T','','2024-07-12 14:55:45',NULL,NULL),
 (305,'C14','3c4bb531c342b9d10371b44101f89b35','NITHYASHRI A','','2024-07-12 14:55:45',NULL,NULL),
 (306,'C15','106a4972258230be9bb102a319b9684a','KARTHICK S','','2024-07-12 14:55:45',NULL,NULL),
 (307,'C16','15c4b5081ff196df47d8f3dfd28d4af0','SRILEKAA B','','2024-07-12 14:55:45',NULL,NULL),
 (308,'C17','0df7e47fbd1784db1293823d019e1d8f','BHADRI NARAYANAN A J','','2024-07-12 14:55:45',NULL,NULL),
 (309,'C18','82810eec2f102057ee2d537cb6b6d95e','PRADHEEP RAJ B K','','2024-07-12 14:55:45',NULL,NULL),
 (310,'C19','b452fdf4f02c1c07f1400adb434e7f25','AVINASH M','','2024-07-12 14:55:45',NULL,NULL),
 (311,'C20','8a99f32f034f525a95b7df835080a0c4','SRIRAM A','','2024-07-12 14:55:45',NULL,NULL),
 (312,'C21','28f9738c4f855be47bc929440900550d','SUBHASHREE S','','2024-07-12 14:55:45',NULL,NULL),
 (313,'C22','3658db85e9b7a3d9a369858094e392a0','RAGAVI D','','2024-07-12 14:55:45',NULL,NULL),
 (314,'C23','fcbf0229bc8adb75a09de3a454ae1047','JANUSRI V','','2024-07-12 14:55:45',NULL,NULL),
 (315,'C24','fa05153c57ce48587b95b0111fd977fb','SUJAN M','','2024-07-12 14:55:45',NULL,NULL),
 (316,'C25','b82d85abadc1c7cb71800ea56e0d8113','YAGNYA NARAYANAN B','','2024-07-12 14:55:45',NULL,NULL),
 (317,'C26','91a78725fc956029d8cfd3e848bd4487','RAGAVI S','','2024-07-12 14:55:45',NULL,NULL),
 (318,'C27','16efba41b78090669673c7f1a91ccf37','JAI ARVIND S','','2024-07-12 14:55:45',NULL,NULL),
 (319,'C28','66452909b31987040b85987ec17bb078','ASWIN I V','','2024-07-12 14:55:45',NULL,NULL),
 (320,'C29','1aa6852993e1518b787c571369a4899e','NITHIN DAS E S','','2024-07-12 14:55:45',NULL,NULL),
 (321,'C30','1d59f729d35361e3f6c9c98c9efc22c9','PUSHKALA L','','2024-07-12 14:55:45',NULL,NULL),
 (322,'C31','1d0c1f115fa15e1a6b707d3c3d5985ba','AKSHARA B','','2024-07-12 14:55:45',NULL,NULL),
 (323,'C32','d0a35d25fa42aecc3fc4c71c89d19f8b','SRUTHI Y','','2024-07-12 14:55:45',NULL,NULL),
 (324,'C33','e4b5f1bef17dcd404cadafef8acadb54','HARI KRISHNAN M','','2024-07-12 14:55:45',NULL,NULL),
 (325,'C34','b143b4cb5e98f53ff1760db0fd81cdf4','RANJITH KUMAR  R','','2024-07-12 14:55:45',NULL,NULL),
 (326,'C35','c1bfff13d2bf2d80ea000570b26cfd3e','PRASANTH V','','2024-07-12 14:55:45',NULL,NULL),
 (327,'C36','2ce5d48d6cb083e152e880e08eb7e4ac','SHIVANI S','','2024-07-12 14:55:45',NULL,NULL),
 (328,'C37','88ea2e8a6a8192dd1df5bde22f93aee1','SAISRIRAM S','','2024-07-12 14:55:45',NULL,NULL),
 (329,'C38','0b70f85fb74a19bc2cc7522642d769e0','SHIVA PRASAD B','','2024-07-12 14:55:45',NULL,NULL),
 (330,'C39','0240ef07c2999a5a6e3277b4a925fa0e','VISHNU NARAYANAN K  J','','2024-07-12 14:55:45',NULL,NULL),
 (331,'C40','f53aa9e5c797d6eb29eeca7d1a5d7c64','ARUNACHALAMOORTHY P.P.B','','2024-07-12 14:55:45',NULL,NULL),
 (332,'C41','a32190953e7086a61d7f5666de638b14','SIVAPRAKASH P','','2024-07-12 14:55:45',NULL,NULL),
 (333,'C42','82b4af74564a80fcb6590353ed2a0d62','SRINATH V','','2024-07-12 14:55:45',NULL,NULL),
 (334,'C43','c15249c8e474cbaae159e34bdb2eaee6','PRASANTH G','','2024-07-12 14:55:45',NULL,NULL),
 (335,'C44','15fad8569432ad277c59e086b556232e','NANDINI M','','2024-07-12 14:55:45',NULL,NULL),
 (336,'C45','ec6a49e7206f3228e2da0326e7e3f862','DHANYA SHREE V','','2024-07-12 14:55:45',NULL,NULL),
 (337,'C46','e19d6596bd2b3fac132984f3f5479dab','VARUN N','','2024-07-12 14:55:45',NULL,NULL),
 (338,'C47','b09aee222ea974cf181bf8ae024065e8','LEENASRI L','','2024-07-12 14:55:45',NULL,NULL),
 (339,'C48','4a922ef287b2dc3f5f821cab5554e27f','SIVASAILAM A','','2024-07-12 14:55:45',NULL,NULL),
 (340,'C49','d6398c8cf3f57f75d92c075468c41a85','SANJAY M','','2024-07-12 14:55:45',NULL,NULL),
 (341,'C50','42e535bbcae6ac2386b2df243e1327f5','ABISHEK V','','2024-07-12 14:55:45',NULL,NULL),
 (342,'C51','709bd950cc72040817d7ca351b40b67e','JEEVA T','','2024-07-12 14:55:45',NULL,NULL),
 (343,'C52','573166b7e8bf8eb7180a955bc654e76b','SWATHISHREE M','','2024-07-12 14:55:45',NULL,NULL),
 (344,'C53','f06d64106f23b77c1db4370426fb3e70','SANTHOSH KUMAR M','','2024-07-12 14:55:45',NULL,NULL),
 (345,'C54','0f97508412c1bf4b7eda64322e45662c','SANJAY B','','2024-07-12 14:55:45',NULL,NULL),
 (346,'C55','b17c52c1928b1912242856a03af2c494','ARUN PRASATH H','','2024-07-12 14:55:45',NULL,NULL),
 (347,'C56','8c0f11748e9a5d6d88eeba25062dcec6','VIGNESHWAR R','','2024-07-12 14:55:45',NULL,NULL),
 (348,'C57','d1fc8c4d9799049a07435cc9a47a2496','RAKESH K','','2024-07-12 14:55:45',NULL,NULL),
 (349,'C58','bf3cf891791adac6d8c4b729e9a7bd5f','MANOJ KUMAR D','','2024-07-12 14:55:45',NULL,NULL),
 (350,'C59','3bf4b1b78e04debfa1611dcb050c4d6d','GOKULPRASATH B','','2024-07-12 14:55:45',NULL,NULL),
 (351,'C60','67ed888eeb7415fd1b7728755848a870','ARJUN S','','2024-07-12 14:55:45',NULL,NULL),
 (352,'D1','ac06078d4638a9bc9aa1ea8ddc0110d0','AKASH S','','2024-07-12 14:55:45',NULL,NULL),
 (353,'D2','62cca1f4f820bf9b077d3eb2049122e8','LOKESWAR K R','','2024-07-12 14:55:45',NULL,NULL),
 (354,'D3','b0e17c19199775259d409a95e49cae1e','PRIYANKA T','','2024-07-12 14:55:45',NULL,NULL),
 (355,'D4','b360890b90e3e7ecc4d5b043112bbdee','HARISH M','','2024-07-12 14:55:45',NULL,NULL),
 (356,'D5','7e015e3ed14067228004786f0281a295','MADHURKANTH K','','2024-07-12 14:55:45',NULL,NULL),
 (357,'D6','a5b5bc8c758338c9e5d6ca5ff7364f16','JAYARAJ P','','2024-07-12 14:55:45',NULL,NULL),
 (358,'D7','7cd8dca55e97bddd8d7d5b42a33567d8','DIVYA R M','','2024-07-12 14:55:45',NULL,NULL),
 (359,'D8','12ea08b130b0d3fad63c5826dd70a6c2','AKSHARA V K','','2024-07-12 14:55:45',NULL,NULL),
 (360,'D9','83d5db977c993572a2f6563012fc57de','DEEKSHITHA K','','2024-07-12 14:55:45',NULL,NULL),
 (361,'D10','42ff716e547573cae565e80e0f7a6100','SUNIL KUMAR R','','2024-07-12 14:55:45',NULL,NULL),
 (362,'D11','975b6730a29986b93bf6e4b7418431ba','NANDITHA P G','','2024-07-12 14:55:45',NULL,NULL),
 (363,'D12','9ec78d1faf2b76325769baa30841ad0d','PRASSANNA S','','2024-07-12 14:55:45',NULL,NULL),
 (364,'D13','486b976d333d32794eccc5fb82143065','SASMITA S P','','2024-07-12 14:55:45',NULL,NULL),
 (365,'D14','7b83cf7f2c4e50eba206499013aae10f','HARIPRIYA G','','2024-07-12 14:55:45',NULL,NULL),
 (366,'D15','af1421c71322dd03479957fcbbec6f10','MIRUTHULA R','','2024-07-12 14:55:45',NULL,NULL),
 (367,'D16','7b35e37ce9e428dd66b6975ac286c252','DHIVYAPRAKASH V','','2024-07-12 14:55:45',NULL,NULL),
 (368,'D17','7384508c6b5887103f7e4fe999408f53','HARSH JAIN M','','2024-07-12 14:55:45',NULL,NULL),
 (369,'D18','538dbdd4319c46daeede1e2c2af213bb','GIRISHKUMAR S','','2024-07-12 14:55:45',NULL,NULL),
 (370,'D19','dfa9bac82395455b1302662efa61aad4','HEMANTH KUMAR B','','2024-07-12 14:55:45',NULL,NULL),
 (371,'D20','eee60af1d227dde44acd238cd923739d','NITHISH S','','2024-07-12 14:55:45',NULL,NULL),
 (372,'D21','d9984ab72c7e3ab74cb86f4ddce9ebc7','BRINDHA M','','2024-07-12 14:55:45',NULL,NULL),
 (373,'D22','f3d7002e079ab0000859f0d20563a15d','DEVANAND S','','2024-07-12 14:55:45',NULL,NULL),
 (374,'D23','f47393d97464093b48f4addb5eb62bc8','DIVYA SHREE S','','2024-07-12 14:55:45',NULL,NULL),
 (375,'D24','2aadc88d512d740cec8c822af8d2d7f5','SANTHOSHKUMAR M','','2024-07-12 14:55:45',NULL,NULL),
 (376,'D25','f891d92e8f6b31b07fd99bc6912a651e','GOUTHAM D','','2024-07-12 14:55:45',NULL,NULL),
 (377,'D26','9d7b954ae92bfa992b9b19d76f526856','SHRI VAISHALY V','','2024-07-12 14:55:45',NULL,NULL),
 (378,'D27','645b36f9cb04c1970ab3f31554500b5f','ELAMARAN R','','2024-07-12 14:55:45',NULL,NULL),
 (379,'D28','b35dc3f90a54ac9816d64a66c53054b3','GURUPRASATH M','','2024-07-12 14:55:45',NULL,NULL),
 (380,'D29','118a633601f7f73e506e38b7d01872cc','VARSHINE N L','','2024-07-12 14:55:45',NULL,NULL),
 (381,'D30','4c0852a2b934500b53da506dfea3c4ff','HARINI H','','2024-07-12 14:55:45',NULL,NULL),
 (382,'D31','375cb4c21628b52ecde3dc5631cd0ea9','AKSHAYA KUMAR S','','2024-07-12 14:55:45',NULL,NULL),
 (383,'D32','03cf283f675a0a7667929a05d506db72','DHANUSRI U','','2024-07-12 14:55:45',NULL,NULL),
 (384,'D33','60292e3b0872b4c6728687dfe4cfba12','JEEVITHA T','','2024-07-12 14:55:45',NULL,NULL),
 (385,'D34','6eba2f8389053f4a8a368babffc0b9fb','KRITHIKA S A','','2024-07-12 14:55:45',NULL,NULL),
 (386,'D35','83aacce00fdc558c417f08dc292a4ad0','NAVEEN KUMAR S','','2024-07-12 14:55:45',NULL,NULL),
 (387,'D36','3afcb9d7d7085217c4ff609e95f14820','MADHUMITHA N','','2024-07-12 14:55:45',NULL,NULL),
 (388,'D37','a3ba5840a216780b62e958f8f7c94a5b','EHAB IMTIAZ','','2024-07-12 14:55:45',NULL,NULL),
 (389,'D38','20e7cf332f0053749bb8ae43779ad4e5','KEERTHANA A S','','2024-07-12 14:55:45',NULL,NULL),
 (390,'D39','e5a72de4b435a23b8beb32f86fbe4147','SRI HARI V','','2024-07-12 14:55:45',NULL,NULL),
 (391,'D40','35b216b63fb4481f2f840b698562fb11','SARATH S','','2024-07-12 14:55:45',NULL,NULL),
 (392,'D41','1637782ad0f9bee2c85b1e7cc6c65651','SRINATH K S','','2024-07-12 14:55:45',NULL,NULL),
 (393,'D42','5cd5dee9655fab3339c3deeb0bff3611','MEHAVARSHINI S P','','2024-07-12 14:55:45',NULL,NULL),
 (394,'D43','fa3352b0b3c29cbb61835315c0c499ff','DHANUSH KODI K','','2024-07-12 14:55:45',NULL,NULL),
 (395,'D44','75e07c0a1c38ad9d44c7f68a567a9167','NISHWANTH KUMAR D','','2024-07-12 14:55:45',NULL,NULL),
 (396,'D45','8a18e253ba41f5f90bd85bea5df8593f','GANESH J','','2024-07-12 14:55:45',NULL,NULL),
 (397,'D46','dfa823c35cefc8fb84df8d492f1636a0','AGATHEESWARAN P','','2024-07-12 14:55:45',NULL,NULL),
 (398,'D47','be951ee23ccdf734bd06400bbbf441a0','ABINAYA SRI M','','2024-07-12 14:55:45',NULL,NULL),
 (399,'D48','88e32ed79e861b1884eda9430c0c9819','PRASANNA VISHWANATH J','','2024-07-12 14:55:45',NULL,NULL),
 (400,'D49','4eb1e41aa51280a20b41b07c7ea42986','ARUN KUMAR K','','2024-07-12 14:55:45',NULL,NULL),
 (401,'D50','6def4949ee4aaf67c87e5dcfcb72d97a','SIDDHARTH SHIVRAM  DAVEY','','2024-07-12 14:55:45',NULL,NULL),
 (402,'D51','7fa908ad7c622233680b6ec1d36e49ea','MADHAV PRAKASH PAREKH','','2024-07-12 14:55:45',NULL,NULL),
 (403,'D52','fc315b163077c4a925b20f4c241d9c5d','NAVEEN SAYEE  G','','2024-07-12 14:55:45',NULL,NULL),
 (404,'D53','c343a4086d84be61c78e5664b71ea29c','LOKESH K','','2024-07-12 14:55:45',NULL,NULL),
 (405,'D54','ecc1c50d5ab2f33096a33f4a42f57815','LOKESH KUMAR K','','2024-07-12 14:55:45',NULL,NULL),
 (406,'D55','e4589126f2fff6ecdb36b9c0386a9335','SREE C H','','2024-07-12 14:55:45',NULL,NULL),
 (407,'D56','8f1d119fdf0036d6bdb07e7b4f1ba0b9','KRISHNAKUMAR R','','2024-07-12 14:55:45',NULL,NULL),
 (408,'D57','4e074ee7596e194e672a17c65325e8e4','VISHALI R','','2024-07-12 14:55:45',NULL,NULL),
 (409,'D58','f399aabcd33ccad4ca95c9a2f8093c44','ARUNA NANDHINI R K','','2024-07-12 14:55:45',NULL,NULL),
 (410,'D59','f16fd88bbdceb1f4b50f997c59dba31d','KIRAN KUMAR S N','','2024-07-12 14:55:45',NULL,NULL),
 (411,'E1','11b1fe0d2e894d386dd87015e4a93b55','N.Saranya','','2024-07-12 14:55:45',NULL,NULL),
 (412,'E2','2db5385ac93711ae2b5175e3caafc0b3','Nalin  Bhutra','','2024-07-12 14:55:45',NULL,NULL),
 (413,'E3','7ea5cb4c465b9ac1cefd11961e9a40c8','Kavyansh Sharma S','','2024-07-12 14:55:45',NULL,NULL),
 (414,'E4','0ca8cd6740646470cd93c715705c517c','Jai rupesh k','','2024-07-12 14:55:45',NULL,NULL),
 (415,'E5','e7ddb328d038b85bd5579e7458180e48','N.Rajeshwari','','2024-07-12 14:55:45',NULL,NULL),
 (416,'E6','33784502629ea185942c5571353e1687','Nivetha.S','','2024-07-12 14:55:45',NULL,NULL),
 (417,'E7','15eb04f30a68972a325093e2f92adc63','Sowmiya.v','','2024-07-12 14:55:45',NULL,NULL),
 (418,'E8','4ebf61a1b0c10e6eee8c33e925c11e4f','S.keerthana','','2024-07-12 14:55:45',NULL,NULL),
 (419,'E9','2f362a2d6332f7c539e6cdc2c4fe886f','Mega. R','','2024-07-12 14:55:45',NULL,NULL),
 (420,'E10','718490cfc5f7bd91cb3930c27522b9b5','Urvashi Bhutra','','2024-07-12 14:55:45',NULL,NULL),
 (421,'E11','32f49ad9ada6965b3c75b5cc503c1815','DINESHKUMAR J','','2024-07-12 14:55:45',NULL,NULL),
 (422,'E12','51aa15f52bce06671d6af759fc8017f6','Dhivyesh.C','','2024-07-12 14:55:45',NULL,NULL),
 (423,'E13','6501f27f32d0defbe73e98ebb4e95c28','S Madesh','','2024-07-12 14:55:45',NULL,NULL),
 (424,'E14','04d01e2d781ec7515b8239e549a678df','Sasi Subikshan','','2024-07-12 14:55:45',NULL,NULL),
 (425,'E15','d07a7844e323bc85f47b5eb3377fbeec','Dhwani Bagada','','2024-07-12 14:55:45',NULL,NULL),
 (426,'E16','d15aa9e188ed54eee761d7d9fdda73e7','Harakesh','','2024-07-12 14:55:45',NULL,NULL),
 (427,'E17','f29b21357275c96e5e423a0d79cc4482','Swetha B.M','','2024-07-12 14:55:45',NULL,NULL),
 (428,'E18','ee808a8c976e51feed93cfce17cbf79b','Mothika','','2024-07-12 14:55:45',NULL,NULL),
 (429,'E19','5261a9ce26032c312d6a626a4681eded','Krishnakanth','','2024-07-12 14:55:45',NULL,NULL),
 (430,'E20','335897493391aba569d7099e234d2e7f','Varshini','','2024-07-12 14:55:45',NULL,NULL),
 (431,'E21','9d5ddc9ae357bdd2d61d0abccc1b484e','Priyanka','','2024-07-12 14:55:45',NULL,NULL),
 (432,'E22','c52214e3ea271a574f739a0a02db44f7','Mahesh Kumar','','2024-07-12 14:55:45',NULL,NULL),
 (433,'E23','cf0c9d28def040ac8abb2fa2d0f4943d','Amrutha Varshini','','2024-07-12 14:55:45',NULL,NULL),
 (434,'E24','f3ff36652efedcc6afa6b71859d15a02','Nithiya Sri. S','','2024-07-12 14:55:45',NULL,NULL),
 (435,'E25','679d775006477b85e67959110c28804d','Thilak.S','','2024-07-12 14:55:45',NULL,NULL),
 (436,'E26','a031b1a3bd3febeb5cd1d8767ebd0dba','Hemant Sri Kumar','','2024-07-12 14:55:45',NULL,NULL),
 (437,'E27','4073b55002b7356090373b201dbbfa21','Mythreyan','','2024-07-12 14:55:45',NULL,NULL),
 (438,'E28','5ff413d9139b1e8d5d9a124f35a0a5b6','G.Madhusudhanan','','2024-07-12 14:55:45',NULL,NULL),
 (439,'E29','e2c06103c7f849c70a2ec5b61502fe28','Anant Gautam','','2024-07-12 14:55:45',NULL,NULL),
 (440,'E30','8900b8d95b5a9c01294a5c98a7c2008f','A Yash','','2024-07-12 14:55:45',NULL,NULL),
 (441,'E31','ef151ae2338891fa89223f56cbc8c73f','SUBASH C','','2024-07-12 14:55:45',NULL,NULL),
 (442,'E32','6df30fd7e6a62f36dcc88f3041064733','Srija N','','2024-07-12 14:55:45',NULL,NULL),
 (443,'E33','481d8f1a49a0461a9664ddeb8eabf915','Thirish Kumar A','','2024-07-12 14:55:45',NULL,NULL),
 (444,'E34','5de26896c99b1e84f039841048225f22','Nanda Kumaran C','','2024-07-12 14:55:45',NULL,NULL),
 (445,'E35','1f5b192a0db8acdc66f1a4135bfa6916','Bhavya P','','2024-07-12 14:55:45',NULL,NULL),
 (446,'E36','aba0328448cda82d125ee3acccefc34e','Sai Manikandan S','','2024-07-12 14:55:45',NULL,NULL),
 (447,'E37','2615ae4abc1066a1955e2906bb36c623','Dinesh Kumar K','','2024-07-12 14:55:45',NULL,NULL),
 (448,'E38','3925fd0aede0f2af807f9a0b1f99dac3','Deenadhayalan','','2024-07-12 14:55:45',NULL,NULL),
 (449,'E39','9372c571c2ad11c1ca7f8b9bb49150f1','Abhyankar M','','2024-07-12 14:55:45',NULL,NULL),
 (450,'E40','c3f8ae97219b1c38687a815a3670cd3e','Reshmi S','','2024-07-12 14:55:45',NULL,NULL),
 (451,'E41','992260439f529dbede3679624f18f0db','B Navanesh','','2024-07-12 14:55:45',NULL,NULL),
 (452,'E42','5e8a8a23dc921b4f63a1e40087b2cb34','Karthikeyan S','','2024-07-12 14:55:45',NULL,NULL),
 (453,'E43','510b3646fd8feb900a3f0a54076b23eb','Lingeshwar  P','','2024-07-12 14:55:45',NULL,NULL),
 (454,'E44','de0e0b0a023375c08f9ab153e481f1a4','Lavanya M','','2024-07-12 14:55:45',NULL,NULL),
 (455,'E45','bb966fc2ee24dec995667e2938a5e553','Vikash N','','2024-07-12 14:55:45',NULL,NULL),
 (456,'E46','6c318dc4756fa80379f537cd50af7837','Aishwarya','','2024-07-12 14:55:45',NULL,NULL),
 (457,'E47','1156a054a95087decce2c16e47ac6a1a','Amirtha  M','','2024-07-12 14:55:45',NULL,NULL),
 (458,'E48','45e60a75d4436b77f1868e943963dc18','Subhashini R','','2024-07-12 14:55:45',NULL,NULL),
 (459,'E49','9a2e886cbf988a75ba4e1bde42b5e28d','Pavankumar J','','2024-07-12 14:55:45',NULL,NULL),
 (460,'E50','6be3bf94b300e898a2db61e50aded810','Aswath D','','2024-07-12 14:55:45',NULL,NULL),
 (461,'E51','f6fb01fbb1a8229a06868693fb3ffef2','Kishore Kumar M','','2024-07-12 14:55:45',NULL,NULL),
 (462,'E52','36c84153cb2dc8e4203073f5336114c7','Vishal J','','2024-07-12 14:55:45',NULL,NULL),
 (463,'E53','c63ad94a870699f89f196ebb3e258065','Richard Benjamin P','','2024-07-12 14:55:45',NULL,NULL),
 (464,'E54','f8c4cef13466468ce609ce2abe9bad71','M. Mahalakshmi','','2024-07-12 14:55:45',NULL,NULL),
 (465,'E55','29dc6a215b58f3428a1e3a3abd867ea1','D.Sangeetha','','2024-07-12 14:55:45',NULL,NULL),
 (466,'E56','3d895a5463dc99c11325db270a4c9823','Pushba Latha.R','','2024-07-12 14:55:45',NULL,NULL),
 (467,'E57','39d108ddc58ef7208ce49609fa6fb4d7','S.Siva Ranjani','','2024-07-12 14:55:45',NULL,NULL),
 (468,'E58','7a0ba625ab1c7a0d16858bf899ef11de','G.Dhanush','','2024-07-12 14:55:45',NULL,NULL),
 (469,'E59','30fd659f901103ce7ad9b6b962a4bb7f','ISHWARIYA B','','2024-07-12 14:55:45',NULL,NULL),
 (470,'E60','10eaa1e04608a412d5f83d71c9a05a65','AR.Visalakshi','','2024-07-12 14:55:45',NULL,NULL),
 (471,'E61','439bacb4e24d195255bf98c81a36623a','S.Pavithra','','2024-07-12 14:55:45',NULL,NULL),
 (472,'E62','434f87c8f5f7cad4085b03691acaeada','A.Mamatha','','2024-07-12 14:55:45',NULL,NULL),
 (473,'E63','998d303e4f5daee45fb895fe7234fcc4','H.Shrimathi','','2024-07-12 14:55:45',NULL,NULL),
 (474,'F1','5c6ff6d9de868e56c2520e9a7ac64605','KARTHICK D','','2024-07-12 14:55:45',NULL,NULL),
 (475,'F2','1c14052892d14ca395b29d6da79e3e77','ROSHAN KUMAR PANDIT K','','2024-07-12 14:55:45',NULL,NULL),
 (476,'F3','ea1272be6458dbba733c5886610442bd','SRIKHANTH R','','2024-07-12 14:55:45',NULL,NULL),
 (477,'F4','37741afbd7d6fbd72816eae77e5c6e65','RISHI ABINANDHAN S','','2024-07-12 14:55:45',NULL,NULL),
 (478,'F5','b5d5fe5bcf9c634dc02656cc6d630f31','NAVEEN KUMAR V','','2024-07-12 14:55:45',NULL,NULL),
 (479,'F6','24b665d3a806629113463b1901f3ba72','HARINI K','','2024-07-12 14:55:45',NULL,NULL),
 (480,'F7','c2c0c7dc0194cb18ac96cdacc9907088','MONIKA D','','2024-07-12 14:55:45',NULL,NULL),
 (481,'F8','98d6a996226de80cc98c752e75fef7cd','KAVI PRIYA K','','2024-07-12 14:55:45',NULL,NULL),
 (482,'F9','9754252bb5251426d9b134604950a5d1','KRISHNARAJ L','','2024-07-12 14:55:45',NULL,NULL),
 (483,'F10','c43882579c7869ef906cc6043d9aff21','AJAY KUMAR K S','','2024-07-12 14:55:45',NULL,NULL),
 (484,'F11','7c30cdfe2ece22fd331cc4d781ddc2e0','PRASANTH M','','2024-07-12 14:55:45',NULL,NULL),
 (485,'F12','8704f7683d928c1f3a9c5c91a69d4224','MEGHNA  LODHA  A','','2024-07-12 14:55:45',NULL,NULL),
 (486,'F13','5822326f1bbbad84c1369ed538805770','PRANAVANESH V','','2024-07-12 14:55:45',NULL,NULL),
 (487,'F14','d1dc04955418ff6b54d7713df1206f2b','SRAAVAN N','','2024-07-12 14:55:45',NULL,NULL),
 (488,'F15','4cc3f30ad849516a1fa3eefca48ab170','ASHWIN PRAKASH S','','2024-07-12 14:55:45',NULL,NULL),
 (489,'F16','8d2f81f7927d8879a688b13710be63e2','MOHAN RAJ J','','2024-07-12 14:55:45',NULL,NULL),
 (490,'F17','3976e9646e2b1556888347974d7ecb68','SAI KRISHNA G','','2024-07-12 14:55:45',NULL,NULL),
 (491,'F18','83c9f5692281bf59471b13dfddb3af91','LAKSHYA L JAIN','','2024-07-12 14:55:45',NULL,NULL),
 (492,'F19','21f51ce556fd14d756455e5519b5a4c2','NITHYA KUMAR R','','2024-07-12 14:55:45',NULL,NULL),
 (493,'F20','cff8029ebf9356030d94b9408e4156f7','PAVITHRA M','','2024-07-12 14:55:45',NULL,NULL),
 (494,'F21','1ad8120d2b1597023c1d521d63469544','GOBI KRISHNA V S','','2024-07-12 14:55:45',NULL,NULL),
 (495,'F22','01596fc2b34a9606a3ceb9531ee50895','ROSHAN KRISHNA S','','2024-07-12 14:55:45',NULL,NULL),
 (496,'F23','779237e7ffb5ab9422807f451ad92acc','DHEERAJ S','','2024-07-12 14:55:45',NULL,NULL),
 (497,'F24','ff7fb9c79fc9f0be1651f10e31d8b26f','SHRI VARSHINI P','','2024-07-12 14:55:45',NULL,NULL),
 (498,'F25','008459d2999eb84a992b11b8b43492f2','SESHAGOPALAN K S','','2024-07-12 14:55:45',NULL,NULL),
 (499,'F26','eb1b44f4fe50b4fbfa251b6e69079058','RACHAL MERLIN D S','','2024-07-12 14:55:45',NULL,NULL),
 (500,'F27','db1c5d2c58a3108f724221b42ff427a1','DEVINDRA M','','2024-07-12 14:55:45',NULL,NULL),
 (501,'F28','ef2af387c580692d05235fbda6291648','LINGESHWARAN SV','','2024-07-12 14:55:45',NULL,NULL),
 (502,'F29','e6a8906540fbbcefd9ec9b667b5b0aaa','GOKUL RAJ R','','2024-07-12 14:55:45',NULL,NULL),
 (503,'F30','0bcd35defefcfca97711312231bdb3f0','LAVANYA CHANDRA J T','','2024-07-12 14:55:45',NULL,NULL),
 (504,'F31','f11f8ab96500ec743144c93a724da2b8','MAGESH G','','2024-07-12 14:55:45',NULL,NULL),
 (505,'F32','395c286431d1b72622935f2aa10921a2','SHANMUGANATHAN S','','2024-07-12 14:55:45',NULL,NULL),
 (506,'F33','c1fb9f007c62d2d6a1b52ea3f40bd3f1','ABDUL AJEEZ N','','2024-07-12 14:55:45',NULL,NULL),
 (507,'F34','c2c8e3b637020bede070d9ecfee7f7b2','HEMANTH B','','2024-07-12 14:55:45',NULL,NULL),
 (508,'F35','9aba50a1a33a6b15048e268e9cfbd16d','YUVARAJ V','','2024-07-12 14:55:45',NULL,NULL),
 (509,'F36','89a15fce6031450c6b0bc5bb58de1405','CHANDRA SEKAR G M','','2024-07-12 14:55:45',NULL,NULL),
 (510,'F37','bc456ba814a15b8dbe8a7fb722179d36','YASODHA C','','2024-07-12 14:55:45',NULL,NULL),
 (511,'F38','892a8d41fe513ecd2d839f15e2269a6a','SURIYA KUMAR P','','2024-07-12 14:55:45',NULL,NULL),
 (512,'F39','3a1645172ca39a2e0690a95fd3e1368e','JAYARAM S','','2024-07-12 14:55:45',NULL,NULL),
 (513,'F40','43118d59ccd20a4262d28cc518d6d844','BARATH B','','2024-07-12 14:55:45',NULL,NULL),
 (514,'F41','a0173237e87238a1e35bbe59ebd8f239','DHANUSH M','','2024-07-12 14:55:45',NULL,NULL),
 (515,'F42','ddcc42bcf4b89f7d290887c9811bb927','ROHAN A','','2024-07-12 14:55:45',NULL,NULL),
 (516,'F43','82c80a586b71f4ed3407189b7e20e7d3','KAMU K R','','2024-07-12 14:55:45',NULL,NULL),
 (517,'F44','243b94bed741d109dd0cbc069073391b','BHUVANESH G','','2024-07-12 14:55:45',NULL,NULL),
 (518,'F45','5bf301b4f7e53301344dd7c0a73a2932','KAMALESH J','','2024-07-12 14:55:45',NULL,NULL),
 (519,'F46','46fe2b10bd1782dd174cf7110c0de53d','MOHANDAS P','','2024-07-12 14:55:45',NULL,NULL),
 (520,'F47','3f7162b6904ab5028dc57e362c6f9fa5','HARISH KARTHICK  A','','2024-07-12 14:55:45',NULL,NULL),
 (521,'F48','42cd32f025cee0b13920f54a01258bbe','MANOJKUMAR V','','2024-07-12 14:55:45',NULL,NULL),
 (522,'F49','ec5ebe1b6fe0f16158adaf8b5e5de149','KRITHIKA J','','2024-07-12 14:55:45',NULL,NULL),
 (523,'F50','b7fc69da2c1ae2b88473c3043c733d40','SHREYA M','','2024-07-12 14:55:45',NULL,NULL),
 (524,'F51','414c5085afda21cae63e45803affdb43','Pratikalpa RJ','','2024-07-12 14:55:45',NULL,NULL),
 (525,'F52','5dff468bc4ff7a71cd57c4bc38175bef','Harish kumar R','','2024-07-12 14:55:45',NULL,NULL),
 (526,'F53','fda5329c65a6d129b4602f79d423b2ec','Logeshwaran PS','','2024-07-12 14:55:45',NULL,NULL),
 (527,'F54','e73253447870f351651278e404726c0c','Preethi V','','2024-07-12 14:55:45',NULL,NULL),
 (528,'F55','8007cb9719e4149717719b1b2e90505b','M Kannan','','2024-07-12 14:55:45',NULL,NULL),
 (529,'F56','6b0b92fa3dbacf4abfe7ee5667706e6b','R swathi','','2024-07-12 14:55:45',NULL,NULL),
 (530,'F57','07b1962ae3aca8d91059e818b3bce1d9','Keerthi J','','2024-07-12 14:55:45',NULL,NULL),
 (531,'F58','a9298b8a944778ba567fc1b4e3117398','Monishvar E B','','2024-07-12 14:55:45',NULL,NULL),
 (532,'F59','f1c30576fde40a6474ecc110799151d6','S. Christon Manuel Raja','','2024-07-12 14:55:45',NULL,NULL),
 (533,'G1','63ac08fd2e224af3fe3348d8d9af1808','SAI CHARAN R','','2024-07-12 14:55:45',NULL,NULL),
 (534,'G2','ee5caca419a5df57ffd9d53dbfaa971a','DHEIVEEKA NACHIYAR P','','2024-07-12 14:55:45',NULL,NULL),
 (535,'G3','ffc7b91542e1e01bace700ef20837cb7','JANARTHANAN S','','2024-07-12 14:55:45',NULL,NULL),
 (536,'G4','a3d8c5575754cf0f9c14fe0379550614','KAPILDEV R','','2024-07-12 14:55:45',NULL,NULL),
 (537,'G5','725e5299df0c03388594cbd6e4f34137','DHASARATHY B','','2024-07-12 14:55:45',NULL,NULL),
 (538,'G6','dcb030cc67ef3865f821747b68e98aa3','RANJITH M','','2024-07-12 14:55:45',NULL,NULL),
 (539,'G7','8daec4e7167470cba91cbcbf4c3fd690','DHANUSH A','','2024-07-12 14:55:45',NULL,NULL),
 (540,'G8','21be262cce501d9ecc6d2fed4699bbd2','LAKSHMI PRATHA S','','2024-07-12 14:55:45',NULL,NULL),
 (541,'G9','83f12a72495f6f6d2c33cd8a754afaf6','DILIP','','2024-07-12 14:55:45',NULL,NULL),
 (542,'G10','c38d9166a534a6e8e2251d21835c6059','RUDRESH H VYAS','','2024-07-12 14:55:45',NULL,NULL),
 (543,'G11','5f1f9245af025fee5f1c6322ed9d3a63','HARSH GOEL','','2024-07-12 14:55:45',NULL,NULL),
 (544,'G12','28870fb558afa7f27825c67dd3f59cc9','HEMANTH T','','2024-07-12 14:55:45',NULL,NULL),
 (545,'G13','05ec40ffa84c71474ea4c534b115e8e8','SANTHOSH S','','2024-07-12 14:55:45',NULL,NULL),
 (546,'G14','53409d92d30acb2822ac7b24787f8089','VARSHITH S J','','2024-07-12 14:55:45',NULL,NULL),
 (547,'G15','cf60361deccf85da9d1dac102ee167b5','HAYAGREEV PARTHSARATHY','','2024-07-12 14:55:45',NULL,NULL),
 (548,'G16','bca4506d6ff3646c9c5b6af08fe0bb9d','JEEVANANDAN B K','','2024-07-12 14:55:45',NULL,NULL),
 (549,'G17','a8db197500754034f2eaa679252bdc9d','HARISH.R','','2024-07-12 14:55:45',NULL,NULL),
 (550,'G18','459c40ce7818314c53e378c54ee90e67','DHEENAN R','','2024-07-12 14:55:45',NULL,NULL),
 (551,'G19','4d91dbf5c697ed0b438b3dc40be03b8b','VIGNESH SAI','','2024-07-12 14:55:45',NULL,NULL),
 (552,'G20','0e8bdfc28bae58a2bac95498a7e3863c','KAMALI R','','2024-07-12 14:55:45',NULL,NULL),
 (553,'G21','63ef43ca91d8a7a9e129a340bc2e16fe','Deepika v','','2024-07-12 14:55:45',NULL,NULL),
 (554,'G22','7880141be2c1d333fc1880a8a49d7c36','Thakshina GB','','2024-07-12 14:55:45',NULL,NULL),
 (555,'G23','bd7d492d9c89fe8430ddde58e4877c9f','Sanjeev R','','2024-07-12 14:55:45',NULL,NULL),
 (556,'G24','e70d85ab4c64576a6e49e4830b975441','Ramya.B','','2024-07-12 14:55:45',NULL,NULL),
 (557,'G25','348c3c70f4178d4d44606fbfa58df1d4','S md jamal','','2024-07-12 14:55:45',NULL,NULL),
 (558,'G26','0ca509aef0d68fa8e40d82c19af26b77','Giridharan S','','2024-07-12 14:55:45',NULL,NULL),
 (559,'G27','0fb0d9d8d395c90aecae8ae55ae85e86','Yathish.V','','2024-07-12 14:55:45',NULL,NULL),
 (560,'G28','025a908903aa3cc6df40b1850e9966d4','Vaseegaran B','','2024-07-12 14:55:45',NULL,NULL),
 (561,'G29','61fc9be661d0456266a44437dc0a75fa','S. M. LAKSHMANAN','','2024-07-12 14:55:45',NULL,NULL),
 (562,'G30','40cbcda7266205444f9f0f5e2c571775','SURENDAR. D','','2024-07-12 14:55:45',NULL,NULL),
 (563,'G31','cb743fed4f2bb59f1fbd4e9f3568d984','Niranjan K','','2024-07-12 14:55:45',NULL,NULL),
 (564,'G32','85d755437c400a27360854112c65a959','Anush R','','2024-07-12 14:55:45',NULL,NULL),
 (565,'G33','90fbcbc178390cd1fbd5cec109f3a026','Abisha.P.V.','','2024-07-12 14:55:45',NULL,NULL),
 (566,'G34','eac173cae274e55072dbc1491868150f','V. Pranava','','2024-07-12 14:55:45',NULL,NULL),
 (567,'G35','01564e96c238c2305d7fd8560a09679a','Reena. S','','2024-07-12 14:55:45',NULL,NULL),
 (568,'G36','0d1ebcdf362562df610c996d1f42f629','M.Priyanga','','2024-07-12 14:55:45',NULL,NULL),
 (569,'G37','5a74dd5669edb0e08995568c338c9d76','Sorna Kumar V','','2024-07-12 14:55:45',NULL,NULL),
 (570,'G38','ecb0983e8b23c62b8810657689b8da1e','B. Logeshwari','','2024-07-12 14:55:45',NULL,NULL),
 (571,'G39','9c79c37c15df679c51cfe13500d6abb9','Nivetha k','','2024-07-12 14:55:45',NULL,NULL),
 (572,'G40','1905063316e7c42d4eb7eab735497e5c','A. Hema Abinaya Priya','','2024-07-12 14:55:45',NULL,NULL),
 (573,'G41','2ef9184789a137368982a22685123f27','Preethi S','','2024-07-12 14:55:45',NULL,NULL),
 (574,'G42','2e66ba374fd69e93d8a56bc2016ad16e','Vijayalakshmi.k','','2024-07-12 14:55:45',NULL,NULL),
 (575,'G43','d1a8b40935a31db679a4238ab29cefec','J. P. KOWSALYA','','2024-07-12 14:55:45',NULL,NULL),
 (576,'G44','a7c9a851feb5f1434b50b869832dd1e1','Lakshmi priya.M','','2024-07-12 14:55:45',NULL,NULL),
 (577,'G45','4570e48697db135cd73224ca77709f19','S SUBASRI','','2024-07-12 14:55:45',NULL,NULL),
 (578,'G46','de16253e53e6ec1de34b66c22ace3a8c','M. Logeshwari','','2024-07-12 14:55:45',NULL,NULL),
 (579,'G47','7f5c6eb89a5ebe941e306b65bee7505b','Anusuya R','','2024-07-12 14:55:45',NULL,NULL),
 (580,'G48','e7c81ab66c4e07c476e67e7da27b7807','Lavanya R','','2024-07-12 14:55:45',NULL,NULL),
 (581,'G49','82d035e6282251b41786c54089f44328','SUREKHA S','','2024-07-12 14:55:45',NULL,NULL),
 (582,'G50','36f555bf88f0f47662e2ea529e4bcf8f','C. Harinee','','2024-07-12 14:55:45',NULL,NULL),
 (583,'G51','f491bd960a2fa2d934d268839aff09e2','Muthu Karthika S','','2024-07-12 14:55:45',NULL,NULL),
 (584,'G52','8e1730619c2b62563f03b768eda45c9e','JAI KISHANN A S','','2024-07-12 14:55:45',NULL,NULL),
 (585,'G53','338b685a54f6631bc6cde578039c879f','Kalaivani P','','2024-07-12 14:55:45',NULL,NULL),
 (586,'G54','76e9f587dde79588dda6b2cbfaebadfb','M.Pragalthy','','2024-07-12 14:55:45',NULL,NULL),
 (587,'G55','d913ace606cb782623992f1202b463f8','Jayapraveen.K','','2024-07-12 14:55:45',NULL,NULL),
 (588,'G56','1197f26fcace539df504bd170716236a','Ahygrev.S.T.K','','2024-07-12 14:55:45',NULL,NULL),
 (589,'G57','6b7d60c136151064cf473ec49a9e2da4','R.Sushmitha','','2024-07-12 14:55:45',NULL,NULL),
 (590,'G58','b768142f53342798915824dad81ae507','Priya dharshini V','','2024-07-12 14:55:45',NULL,NULL),
 (591,'G59','82a9ed02056076e42c74544af1a2515e','S R Lakshmi priya','','2024-07-12 14:55:45',NULL,NULL),
 (592,'G60','4bd32015f5b693eb3509388137814f24','Shayaarthi Muralidharan','','2024-07-12 14:55:45',NULL,NULL),
 (593,'G61','15222ab64a36e8dc2104a37113127d8e','RUPALI RAVINDRA PHADTARE','','2024-07-12 14:55:45',NULL,NULL),
 (594,'G62','e04f94d67296596b3ad1d411205b9607','Janaki. R','','2024-07-12 14:55:45',NULL,NULL),
 (595,'G63','0c3775466321f1842efb71cd81057319','MEENAKSHI SUNDARAM C','','2024-07-12 14:55:45',NULL,NULL),
 (596,'H1','b1ce96d56fd9d6c3d56cd94b8e88eec1','Meera priyadharshini.K','','2024-07-12 14:55:45',NULL,NULL),
 (597,'H2','75e2dea88131059efd04d2f3798b3663','Soniya. S','','2024-07-12 14:55:45',NULL,NULL),
 (598,'H3','58518163c501361872cd5c7feba3ec10','S.Reshmaa','','2024-07-12 14:55:45',NULL,NULL),
 (599,'H4','6dae08f69e7c1fcc0ad69614c953886f','Harini R','','2024-07-12 14:55:45',NULL,NULL),
 (600,'H5','dbfa5c965d84218516fdc8febde799b5','Shalini.U.K','','2024-07-12 14:55:45',NULL,NULL),
 (601,'H6','bfb219bdc744f923a1e7e7e88b967945','S Navena Kumari','','2024-07-12 14:55:45',NULL,NULL),
 (602,'H7','c8ecfa957fd2423726b762ca8e9d3d1d','R HARITHA','','2024-07-12 14:55:45',NULL,NULL),
 (603,'H8','206ab6a11a1bef7991b38f55509cdc82','Anjali kumari. S','','2024-07-12 14:55:45',NULL,NULL),
 (604,'H9','41a9a87b8e823952822c2a95b665a2f8','SAKTHIVEL.R','','2024-07-12 14:55:45',NULL,NULL),
 (605,'H10','9ff91ddb007ed918d69dea63bc05a76e','V. ASHIKA','','2024-07-12 14:55:45',NULL,NULL),
 (606,'H11','8684da5fd3eab02e5213a8875a09b600','DURGA PRASAD','','2024-07-12 14:55:45',NULL,NULL),
 (607,'H12','ddd942385e987627fab1e9120cd3b37f','R SANTHIYA','','2024-07-12 14:55:45',NULL,NULL),
 (608,'H13','add93f5baeab8859f66d423499236dd5','Ashwin. S','','2024-07-12 14:55:45',NULL,NULL),
 (609,'H14','b6ea59aa81f2688bf3f9d371d5d64130','Swathi.R','','2024-07-12 14:55:45',NULL,NULL),
 (610,'H15','36cd3e4741013db4193a23e9447ffcc2','K.JAYASABARI','','2024-07-12 14:55:45',NULL,NULL),
 (611,'H16','c7736c774bb3b391525990649aa3a1d9','KEERTHI KUMAR V','','2024-07-12 14:55:45',NULL,NULL),
 (612,'H17','d1ac12d9c9d303536b20ba16a4ef1efb','DILIPKUMAR N T','','2024-07-12 14:55:45',NULL,NULL),
 (613,'H18','d226b4ff6c289c48f372b1351892da86','R LITHESH MANI KANDAN','','2024-07-12 14:55:45',NULL,NULL),
 (614,'H19','3b6d3c728e10cf8a3a9c04c2a957d271','LALITH','','2024-07-12 14:55:45',NULL,NULL),
 (615,'H20','2e5a9107ae67bedb4ab1c75c0f55fd20','Madhan G.R','','2024-07-12 14:55:45',NULL,NULL),
 (616,'H21','7a7e203ad7f0eb5b5343547153217836','G N DHANAVANDHAN','','2024-07-12 14:55:45',NULL,NULL),
 (617,'H22','1502304f6dffdf69636ddac8ffc9a06d','S.SOWNDHARYA','','2024-07-12 14:55:45',NULL,NULL),
 (618,'H23','0d53285f9581abbe3e95b2ce6769bb26','MONISH T N','','2024-07-12 14:55:45',NULL,NULL),
 (619,'H24','06e2000122a7b1d855e1435dbebd57e0','Thanusri K S','','2024-07-12 14:55:45',NULL,NULL),
 (620,'H25','68950ea9a6ce99a5dbe385b574f33b98','Ajay.R','','2024-07-12 14:55:45',NULL,NULL),
 (621,'H26','a5ad9c56af0643870c244d541c6c383e','S.Kiruthiga','','2024-07-12 14:55:45',NULL,NULL),
 (622,'H27','55869aa3fe9498b57f29e717d10acc6c','Dhanush Kumar S','','2024-07-12 14:55:45',NULL,NULL),
 (623,'H28','192c7e482190cfbfa524e9c3dfadd460','Kedarnath P','','2024-07-12 14:55:45',NULL,NULL),
 (624,'H29','e10572bd3a4172433691696ecc24ebf2','K.G.Hiren','','2024-07-12 14:55:45',NULL,NULL),
 (625,'H30','784d7572addac272ae0d808d1067b62b','J Shriram','','2024-07-12 14:55:45',NULL,NULL),
 (626,'H31','8bd79de41b37521147c0bb8b7c8501c2','VijayaVishnu TM','','2024-07-12 14:55:45',NULL,NULL),
 (627,'H32','85233a264d21eaf1cadfc37908aacbaa','Sasmita. J','','2024-07-12 14:55:45',NULL,NULL),
 (628,'H33','494041e9288cad46d5175fdeda473b33','Bavadhaarrani j','','2024-07-12 14:55:45',NULL,NULL),
 (629,'H34','8504aed696d072bfdb0b895436998fc0','Sarvesh Kannan S','','2024-07-12 14:55:45',NULL,NULL),
 (630,'H35','1b426ccacd4d908a52bd9f189781e3b6','M Kalai Vani','','2024-07-12 14:55:45',NULL,NULL),
 (631,'H36','36f045e4cc72cc2c56b640423d0d63e8','Amruth S K','','2024-07-12 14:55:45',NULL,NULL),
 (632,'H37','f2c88c93580a84b288c798b816bbcee7','L. Yuvashree','','2024-07-12 14:55:45',NULL,NULL),
 (633,'H38','2ff4cdd4b7f596cc9723c090640b57db','Nithish kumar. E','','2024-07-12 14:55:45',NULL,NULL),
 (634,'H39','517ba331477519de73a3c00dda5391a7','KEERTHI SRINIVASAN BD','','2024-07-12 14:55:45',NULL,NULL),
 (635,'H40','8cd2cdb25d7df5b659f6e83bb864428a','Anagha. A','','2024-07-12 14:55:45',NULL,NULL),
 (636,'H41','7e7a2055e996204287df47d0ab4e9909','Vignesh R K','','2024-07-12 14:55:45',NULL,NULL),
 (637,'H42','6a835e04445176d81b2068f02d4f885c','S Arunkumeren','','2024-07-12 14:55:45',NULL,NULL),
 (638,'H43','b9962dd307b655d6efd35fc40d94319c','Domavarapu Naveen','','2024-07-12 14:55:45',NULL,NULL),
 (639,'H44','a1bd9322a0b7d583716cb70c3f5a142f','shivaram','','2024-07-12 14:55:45',NULL,NULL),
 (640,'H45','607dd7f78e12116f6ce381217819b675','SUSHMITHA U','','2024-07-12 14:55:45',NULL,NULL),
 (641,'H46','540a5fc02a23327b20c313ae890a3ed6','MADHU MIDHA V','','2024-07-12 14:55:45',NULL,NULL),
 (642,'H47','96b5cb4e4f44a828f04a4d3a5620266f','G.Gayathri','','2024-07-12 14:55:45',NULL,NULL),
 (643,'H48','f5c56af0eccb3b4d8a1130029bb4e5cf','Devakumaran.V','','2024-07-12 14:55:45',NULL,NULL),
 (644,'H49','66b2b6eb07c9bf96c5caab17a3d69aeb','Madhumitha GR','','2024-07-12 14:55:45',NULL,NULL),
 (645,'H50','24a04491b9b8a29ebf2fb65a6a340fc5','Sanmai Ravindra Marla','','2024-07-12 14:55:45',NULL,NULL),
 (646,'H51','04a8dd2660a8f8f172ac014b0237ee1e','Naveen kumar v','','2024-07-12 14:55:45',NULL,NULL),
 (647,'H52','99261fffdf5fd5b3970fcf64133357c7','J. DEEPIKA','','2024-07-12 14:55:45',NULL,NULL),
 (648,'H53','68b0f0596900fcc7b9260aa41e0e5560','V.Ezhil','','2024-07-12 14:55:45',NULL,NULL),
 (649,'H54','a4622c7d11be6c6a5f8c3c52320105af','M. Abirami','','2024-07-12 14:55:45',NULL,NULL),
 (650,'H55','128015da8171f40eb28098917de55175','Thiyagarajan V','','2024-07-12 14:55:45',NULL,NULL),
 (651,'H56','874d0296adbb84a1c869298b0ed424ee','NANDHAKUMAR A','','2024-07-12 14:55:45',NULL,NULL),
 (652,'H57','54e0bdcda7b0d8dc68a56e5595984808','JASHWIN J','','2024-07-12 14:55:45',NULL,NULL),
 (653,'H58','fe2fdcc6ec6a1ac4615fb7dfe06584c9','MANIMARAN S','','2024-07-12 14:55:45',NULL,NULL),
 (654,'H59','50752238dc0f4793995deb586f6b47e4','NANDAKUMAR S','','2024-07-12 14:55:45',NULL,NULL);
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (655,'H60','e3b10739290612b1c426aedae9efa72b','Deepisala M','','2024-07-12 14:55:45',NULL,NULL),
 (656,'H61','7eb6174cb3333b6d79aa80843fcfae92','Reshma R','','2024-07-12 14:55:45',NULL,NULL),
 (657,'H62','1aeb5e5c0cd1cdd49bed046441e66a64','Muthuganesh M','','2024-07-12 14:55:45',NULL,NULL),
 (658,'H63','e86bf1ecb7ed95db1c1b0bbb2ef79a75','B.S. Prakalaya','','2024-07-12 14:55:45',NULL,NULL),
 (659,'J1','71996496f21a3e4ac0dc12f35b113128','Anirudh Narayanan A.','','2024-07-12 14:55:45',NULL,NULL),
 (660,'J2','0e701a9701dfce5d4a6cfc71e9639270','S Masooda Fathima','','2024-07-12 14:55:45',NULL,NULL),
 (661,'J3','75425325000b95ef1e5995d42221f82e','Sangeetha.B','','2024-07-12 14:55:45',NULL,NULL),
 (662,'J4','d0b5530ff674d772a245d0df3212093c','A.Nithya Sree','','2024-07-12 14:55:45',NULL,NULL),
 (663,'J5','d916a900b34df307448b801e5f132f3b','Bala Barathi. V','','2024-07-12 14:55:45',NULL,NULL),
 (664,'J6','0dd7c4c4a7127f0bed37b99d0811cd4f','A.Nanthini','','2024-07-12 14:55:45',NULL,NULL),
 (665,'J7','baed24486df22aa1ca3aec8a88857079','Santhiya M','','2024-07-12 14:55:45',NULL,NULL),
 (666,'J8','20f9ebeaad2b114617edeea5e32f71e4','Thilagavathy R','','2024-07-12 14:55:45',NULL,NULL),
 (667,'J9','08f6ea928e0e29f229c1cc9c22e20387','Keerthana R','','2024-07-12 14:55:45',NULL,NULL),
 (668,'J10','8e261b17ffc901ea2d64f47e55d68337','Divya R','','2024-07-12 14:55:45',NULL,NULL),
 (669,'J11','81dc75d9ff74f5bd3545a1f126cb3bb0','A. Shree Raghavan.R','','2024-07-12 14:55:45',NULL,NULL),
 (670,'J12','132561a728bcdc24b42b2f59ad812af3','Anandhakumar.B','','2024-07-12 14:55:45',NULL,NULL),
 (671,'J13','3f5f985512fb0f5138c6094209ef917d','Pavithra. R','','2024-07-12 14:55:45',NULL,NULL),
 (672,'J14','52f7f752831f73fcd6285f9551465d2e','Keerthana S','','2024-07-12 14:55:45',NULL,NULL),
 (673,'J15','fed04fb62c2a34d75555dae502725904','Uma.A','','2024-07-12 14:55:45',NULL,NULL),
 (674,'J16','c9ead8f08bada12e8145f6fbd898cccf','Ramya G K','','2024-07-12 14:55:45',NULL,NULL),
 (675,'J17','c901dea7ef35e309b58b8a15981852e4','Gowridevi V','','2024-07-12 14:55:45',NULL,NULL),
 (676,'J18','20476fe61d6a634807a96bde04c40e5f','Mohamed Aboobacker K','','2024-07-12 14:55:45',NULL,NULL),
 (677,'J19','24881c77292b573a16f502422d69c63b','Rushika Sri.D','','2024-07-12 14:55:45',NULL,NULL),
 (678,'J20','b1f4d6d368323a1c2a5d1486e52287dd','Sowmya Radha S','','2024-07-12 14:55:45',NULL,NULL),
 (679,'J21','3221abc88121b6a665a222386ce19f16','Swetha J','','2024-07-12 14:55:45',NULL,NULL),
 (680,'J22','99410bf0a71144a052ebce97d6a33744','Monica Seles K','','2024-07-12 14:55:45',NULL,NULL),
 (681,'J23','c081dffe7a4606425a1d502ef6c2722d','Suvetha. N','','2024-07-12 14:55:45',NULL,NULL),
 (682,'J24','3fa2cca20de335da02b842ecd11b3782','B.Sree Arthi','','2024-07-12 14:55:45',NULL,NULL),
 (683,'J25','d7ac2c137dcf5a97620a2f6b46ed7687','Dinesh V','','2024-07-12 14:55:45',NULL,NULL),
 (684,'J26','b8223efd08f1121cd919e1d2191dc893','Lakshmi Priya S','','2024-07-12 14:55:45',NULL,NULL),
 (685,'J27','464282df9f0de8de180b84e0a7f6631a','Suryanarayanan.D','','2024-07-12 14:55:45',NULL,NULL),
 (686,'J28','548a98e3ee757b16210eec173d97ea30','A. Sherly Keats','','2024-07-12 14:55:45',NULL,NULL),
 (687,'J29','5aa9a93099d8cffe97e8c5806fc35085','S. ANANTHA KRISHNAN','','2024-07-12 14:55:45',NULL,NULL),
 (688,'J30','fedcd7e33985013d1c5b23bb64468d94','V.Amirthavarshini','','2024-07-12 14:55:45',NULL,NULL),
 (689,'J31','a2de1bf4670d9479ea599e9793dd39af','Yazhini.V','','2024-07-12 14:55:45',NULL,NULL),
 (690,'J32','d8f02ba633be09878e521f8a34f7b23b','Rajakumari','','2024-07-12 14:55:45',NULL,NULL),
 (691,'J33','45c377a0d0050d846b331f0db44c32c0','R.K. VIGNESH','','2024-07-12 14:55:45',NULL,NULL),
 (692,'J34','42271ab603749f5ad18b476f293e9688','A.Shri Lalitha','','2024-07-12 14:55:45',NULL,NULL),
 (693,'J35','bc3d984e75f4cbcdd5d819f5f8b6236a','SAI KUMAR M','','2024-07-12 14:55:45',NULL,NULL),
 (694,'J36','9f31cb8cb3dda1e14169c5de1f2888d7','Aarthi. S. G','','2024-07-12 14:55:45',NULL,NULL),
 (695,'J37','2e80386ecaf7c8d20d4b10f3dfdabc1e','BRINDHA.P','','2024-07-12 14:55:45',NULL,NULL),
 (696,'J38','e040e8d90a0f0505e8c8cd52d9a3133f','A S RESHMA','','2024-07-12 14:55:45',NULL,NULL),
 (697,'J39','2c6e62b5c5059f0e783876a240f2e845','Ananya A','','2024-07-12 14:55:45',NULL,NULL),
 (698,'J40','eb94cb8c4db328758eeae4a26e351bca','Malathy. N','','2024-07-12 14:55:45',NULL,NULL),
 (699,'J41','df1775f965ac3ec09c35e865f63bca14','Ruba Devi. N. T','','2024-07-12 14:55:45',NULL,NULL),
 (700,'J42','e2ac2d20142b0bde5d67cbe58f41d9b6','JEEVAKUMARAN G','','2024-07-12 14:55:45',NULL,NULL),
 (701,'J43','d51a253ad2f6c1f3674ae803eb708d0d','Akshara Su','','2024-07-12 14:55:45',NULL,NULL),
 (702,'J44','75a2a8ead0fa225ac9ffc736089fd53c','GAYATHRI DHEVI G M','','2024-07-12 14:55:45',NULL,NULL),
 (703,'J45','74b71cd5af00b0f1f3b0df1b5ee6fb2d','R. SRIVATHSAN','','2024-07-12 14:55:45',NULL,NULL),
 (704,'J46','8149391b7f44bcfa6cdd7ba1e292fde8','M KAVIYA','','2024-07-12 14:55:45',NULL,NULL),
 (705,'J47','48f7f0809c880f0722c83e58cfc2768c','LEENA V S','','2024-07-12 14:55:45',NULL,NULL),
 (706,'J48','8df0438dd147db7e143da8390ae56b9d','JAYASHANKARI R','','2024-07-12 14:55:45',NULL,NULL),
 (707,'J49','d26b3c1fafe3eb798c014a644dcfe5ef','POOJA K','','2024-07-12 14:55:45',NULL,NULL),
 (708,'J50','8d6ba1b22aaaa27eb399d06074f51d08','ARUNIMA P M','','2024-07-12 14:55:45',NULL,NULL),
 (709,'J51','73ceda3a731d2679d3458a2c1c5410da','N.Sruthi','','2024-07-12 14:55:45',NULL,NULL),
 (710,'J52','c90c2ff1db5dd19d76e758ee61f9fee2','Charumathi J.J','','2024-07-12 14:55:45',NULL,NULL),
 (711,'J53','bfc67ef18e39dc8106684b8ce964f162','Dhivyapriya B','','2024-07-12 14:55:45',NULL,NULL),
 (712,'J54','38caaecd03e996df7c3deaa492cf9a18','Livitha A','','2024-07-12 14:55:45',NULL,NULL),
 (713,'J55','25bd149c498a4123d1b2915fab9d4baa','MALLIGA.P','','2024-07-12 14:55:45',NULL,NULL),
 (714,'J56','e952654b26198cbffe4b80ccb2210573','Abhi A','','2024-07-12 14:55:45',NULL,NULL),
 (715,'J57','b787475a2d65f129ce949e8d37d21a28','Hemashri.A','','2024-07-12 14:55:45',NULL,NULL),
 (716,'J58','3a357a469e53027b45167556f7feea98','Pavatharani.m','','2024-07-12 14:55:45',NULL,NULL),
 (717,'J59','ee16097e10f3918574a7481032cf9bb0','Bharath Kumar .S','','2024-07-12 14:55:45',NULL,NULL),
 (718,'J60','8cf6c3f86f8a5507136af373d233105f','S.Meera Jasmine','','2024-07-12 14:55:45',NULL,NULL),
 (719,'J61','6106202fda492a7abb4ab52bcf227359','Harini.R','','2024-07-12 14:55:45',NULL,NULL),
 (720,'J62','2219a1cad72ef7d93f108c74715b152c','Hemalatha D','','2024-07-12 14:55:45',NULL,NULL),
 (721,'J63','bd410e60f4466573b31a179d31c57d37','S.Sandhya','','2024-07-12 14:55:45',NULL,NULL),
 (722,'K1','2781a3699ab85ea1575ca906f808e40e','Dhanush. B','','2024-07-12 14:55:45',NULL,NULL),
 (723,'K2','f035c5e710b3ac337856154eac5c8eb4','Ganesh B','','2024-07-12 14:55:45',NULL,NULL),
 (724,'K3','04d5bb3e5f1dd70812bbf29f8955fcdc','G.Meenakshi','','2024-07-12 14:55:45',NULL,NULL),
 (725,'K4','2af459528e100f2d2dbc822276cba551','C. E. Giftlin Sheril','','2024-07-12 14:55:45',NULL,NULL),
 (726,'K5','2fe1939f083ba03cb82022a38a283ac7','Harshaa. V','','2024-07-12 14:55:45',NULL,NULL),
 (727,'K6','89cc69b0e2f1949b68e0df61cc6afc45','Manigandan T','','2024-07-12 14:55:45',NULL,NULL),
 (728,'K7','bfee71a6e7804643054597197716221d','Yaswanth K','','2024-07-12 14:55:45',NULL,NULL),
 (729,'K8','5ecf3eed549c631b435a13f733c9305b','Gayathri S','','2024-07-12 14:55:45',NULL,NULL),
 (730,'K9','0660d522e8cd3277518b9939c69e89b1','RESHMA.S','','2024-07-12 14:55:45',NULL,NULL),
 (731,'K10','6e3f12466dbc952b52983465850c7a74','HARISH.S','','2024-07-12 14:55:45',NULL,NULL),
 (732,'K11','4cf9e94d8ac872efc8aee931efaa54dc','VEDA PRAKASH .J','','2024-07-12 14:55:45',NULL,NULL),
 (733,'K12','370b857440c031ae0d3d1a165d2c6943','Divya.k','','2024-07-12 14:55:45',NULL,NULL),
 (734,'K13','f1902c8212c7846f7c32b4c2e4df0a95','S.YUVARAJ','','2024-07-12 14:55:45',NULL,NULL),
 (735,'K14','8ebf0558181fc8245b8899c734135823','Gayathri M','','2024-07-12 14:55:45',NULL,NULL),
 (736,'K15','24ef572c612f54015cc2f30e3c7e4c81','K.PRASANNA','','2024-07-12 14:55:45',NULL,NULL),
 (737,'K16','12ff70399a0e1f650d27ed9cf135ff4d','VIGNESH R','','2024-07-12 14:55:45',NULL,NULL),
 (738,'K17','fd50ab0af2b68ca24453598d80e5aed2','manimegalai','','2024-07-12 14:55:45',NULL,NULL),
 (739,'K18','e6a684d540670bed149eee6a1c0c4a9a','S.Saranya','','2024-07-12 14:55:45',NULL,NULL),
 (740,'K19','e9692a8835acc0bdabe5a06accec7d3b','MUKESHWAR.R','','2024-07-12 14:55:45',NULL,NULL),
 (741,'K20','74ca7e400af4921fa96ff8108101ddda','S. CHIRAAG JAIN','','2024-07-12 14:55:45',NULL,NULL),
 (742,'K21','91ffc5cf8095cede0c93dccb4786a7d7','Jayaa shri Y','','2024-07-12 14:55:45',NULL,NULL),
 (743,'K22','d91d432ba02b93aa1799ba9647ee8d5c','Aswin','','2024-07-12 14:55:45',NULL,NULL),
 (744,'K23','234fe81e8c412d227c71ca25d13ab09b','Mithun m','','2024-07-12 14:55:45',NULL,NULL),
 (745,'K24','b9a61fe8a05615510e2f985199976310','A.Thilak Balaji','','2024-07-12 14:55:45',NULL,NULL),
 (746,'K25','2ddfbb9a7ce1c461fb61977d8af9ca78','Kishore S','','2024-07-12 14:55:45',NULL,NULL),
 (747,'K26','8abd6185d7ccba502480917db3dd5e36','AJAY K.M','','2024-07-12 14:55:45',NULL,NULL),
 (748,'K27','4b7b31f8beedebd35f7b9df03379b9bc','Abinash.V','','2024-07-12 14:55:45',NULL,NULL),
 (749,'K28','b0bbc0383a1ed3c45c3ebe0500f95216','Hemanth V','','2024-07-12 14:55:45',NULL,NULL),
 (750,'K29','2d7e84392f676a1eb1786507e89bdb96','Santhosh kumar V','','2024-07-12 14:55:45',NULL,NULL),
 (751,'K30','e3b0d7e42aefef89bac7d05697af9eb5','C R Ram Monish','','2024-07-12 14:55:45',NULL,NULL),
 (752,'K31','58438d59b3134c3c2745183385167056','Jagannadhan mv','','2024-07-12 14:55:45',NULL,NULL),
 (753,'K32','d8326dab540284d239582726856a6e3d','vishal S','','2024-07-12 14:55:45',NULL,NULL),
 (754,'K33','a85779003304acd0282f3fbefd6243cc','BLESSED SAMUEL A','','2024-07-12 14:55:45',NULL,NULL),
 (755,'K34','9f57d13a84305d23079e89527966007d','N.Hari shanker','','2024-07-12 14:55:45',NULL,NULL),
 (756,'K35','faa06a0d4a5d626ebd0f1301fb8d73cd','Gururaghav P','','2024-07-12 14:55:45',NULL,NULL),
 (757,'K36','15768a72d02d893f32ace69b5fab5643','Monika. R','','2024-07-12 14:55:45',NULL,NULL),
 (758,'K37','b68d163bb34201d91661c2ecd40d73d2','Jai adithya ram kumar. P','','2024-07-12 14:55:45',NULL,NULL),
 (759,'K38','9b5e022100ba0dedad24bb8560e2b6b6','Mukund M','','2024-07-12 14:55:45',NULL,NULL),
 (760,'K39','fe4dd1c3b8e374171234c089d5c5b5b3','US Vishalragav','','2024-07-12 14:55:45',NULL,NULL),
 (761,'K40','3a2ce2f195085a9ecb12159573844595','Abhinaya P C','','2024-07-12 14:55:45',NULL,NULL),
 (762,'K41','1cdd7d8e4c63efcc88cc6f65a69aa6a4','Madhuvanthi M K','','2024-07-12 14:55:45',NULL,NULL),
 (763,'K42','94e8d5102e774c744ce22bbc649f29c4','K R Tejashree','','2024-07-12 14:55:45',NULL,NULL),
 (764,'K43','2df5e93cd19e2e599cb4ea878c4c4522','Affraa S','','2024-07-12 14:55:45',NULL,NULL),
 (765,'K44','299b51e8e8a69f3596419e16fc7443bc','P Neeshanth','','2024-07-12 14:55:45',NULL,NULL),
 (766,'K45','ac3745661adb311c31848a810268791a','Anjana R','','2024-07-12 14:55:45',NULL,NULL),
 (767,'K46','fded044ee1718adade88a5db572ff56f','R Sriharinandan','','2024-07-12 14:55:45',NULL,NULL),
 (768,'K47','b3b66b97edfb739abbbebc04611d1bc5','Lekha R','','2024-07-12 14:55:45',NULL,NULL),
 (769,'K48','401badf02c9224140849904c3b77ba4a','Krithika K','','2024-07-12 14:55:45',NULL,NULL),
 (770,'K49','837d354a85df6eb4711a830f97ac4af3','Nandidha G','','2024-07-12 14:55:45',NULL,NULL),
 (771,'K50','ae3c75ad2dd4586611fd83cc4f074a1c','Charanyeyan S','','2024-07-12 14:55:45',NULL,NULL),
 (772,'K51','379bfeb3093aa512fdfde2c2e9f3bddc','Subhika M','','2024-07-12 14:55:45',NULL,NULL),
 (773,'K52','af1e206a381903c73017c266d6ba3f59','Savitha Sri P B','','2024-07-12 14:55:45',NULL,NULL),
 (774,'K53','31d310da170650c601ed8a01e20e009a','Tejesve S','','2024-07-12 14:55:45',NULL,NULL),
 (775,'K54','80023ddb2410720c2f12d067e0fea1f7','Boomigha K','','2024-07-12 14:55:45',NULL,NULL),
 (776,'K55','5d366e94d9ec70ae782dcd1bcd3f3732','Sarvesh Chandar','','2024-07-12 14:55:45',NULL,NULL),
 (777,'K56','d217186449557ed403c7546e755f10b3','Lakshmipathy S','','2024-07-12 14:55:45',NULL,NULL),
 (778,'K57','48bdf7e1fb843a57f1080b4037bed30f','Logesh V','','2024-07-12 14:55:45',NULL,NULL),
 (779,'K58','7ba4889fbfb5c8dff45bfb67d1d1de4a','Dheekshidha K S','','2024-07-12 14:55:45',NULL,NULL),
 (780,'K59','303b3ea2f9b0c22ad24c1e2fadf6df4f','B Srilakshmi','','2024-07-12 14:55:45',NULL,NULL),
 (781,'K60','91e64684b1a9b515adc4b03e27b674ea','Aarthi S','','2024-07-12 14:55:45',NULL,NULL),
 (782,'K61','32c8928c8dee74756b6a56f5cd184a04','Sarankumar.K','','2024-07-12 14:55:45',NULL,NULL),
 (783,'K62','e0ccc6f227618b7cfe222e84ca6649d0','Sreeja','','2024-07-12 14:55:45',NULL,NULL),
 (784,'K63','a7c6b4ca8b301a734273fbff7a6e7404','Abhinav Praveen','','2024-07-12 14:55:45',NULL,NULL),
 (785,'L1','69a1eed464ea0ebfabaecac2b3bb3958','SHYAM. R','','2024-07-12 14:55:45',NULL,NULL),
 (786,'L2','5b4329108baaa9ab6080bce362995075','SAKTHIVEL B','','2024-07-12 14:55:45',NULL,NULL),
 (787,'L3','7200b38706a1c9c19fe693f048b3dcdc','GUHAN.L','','2024-07-12 14:55:45',NULL,NULL),
 (788,'L4','c72bfcbfc3f11b50a35d1b384ed79ca9','TARUN J','','2024-07-12 14:55:45',NULL,NULL),
 (789,'L5','64dea3c17f14784c6edaee4efbce4b46','Sharan','','2024-07-12 14:55:45',NULL,NULL),
 (790,'L6','59a4a3871c58a35f4bd0b40fe1152ae0','Akash k','','2024-07-12 14:55:45',NULL,NULL),
 (791,'L7','47536d338bbe12ff77bc3719faf4eeaa','Kathirvel.G','','2024-07-12 14:55:45',NULL,NULL),
 (792,'L8','146f5caac39d8f7f8c4b042a3aee36d9','LIBICA P','','2024-07-12 14:55:45',NULL,NULL),
 (793,'L9','432094be85d8f7465a9e4ae5a01969e8','Latesh S','','2024-07-12 14:55:45',NULL,NULL),
 (794,'L10','c269c04b6e3c2f6174923ed402ed6d38','Abinaya. A','','2024-07-12 14:55:45',NULL,NULL),
 (795,'L11','419d62ba7f2049f43b4a41e7a88c3832','Gopi M','','2024-07-12 14:55:45',NULL,NULL),
 (796,'L12','8d1154d4809b3b15ed79d842265bb000','Jeevitha. B','','2024-07-12 14:55:45',NULL,NULL),
 (797,'L13','19a60c0d0a561138e5cfd083b4274a4d','S.L.NITEESH','','2024-07-12 14:55:45',NULL,NULL),
 (798,'L14','66339d145f6059e544d2873941b3d1c4','Srivarman.V','','2024-07-12 14:55:45',NULL,NULL),
 (799,'L15','474b2077637a01f286dc253875f6f6e0','Rithika. S','','2024-07-12 14:55:45',NULL,NULL),
 (800,'L16','0948de1a97fb74cbe2006177d1df3356','Srimathi P','','2024-07-12 14:55:45',NULL,NULL),
 (801,'L17','1357794eef850e848b89705a4bd58ff7','R.Ashok Kumar','','2024-07-12 14:55:45',NULL,NULL),
 (802,'L18','ace90b6dc84950c21261dc7f285cc1f4','M.Thrisha','','2024-07-12 14:55:45',NULL,NULL),
 (803,'L19','0306089d5785a567aa4887d1ab90be76','Nithya shree R','','2024-07-12 14:55:45',NULL,NULL),
 (804,'L20','aef025b44372702c1a85a486fa8dd796','D.M.ROSHINI','','2024-07-12 14:55:45',NULL,NULL),
 (805,'L21','df62ca787b6a51b766b08fe43d391d6c','B. Mohit Sharma','','2024-07-12 14:55:45',NULL,NULL),
 (806,'L22','65180ad7698e1920d9774c6c758ff431','VIGNESH L','','2024-07-12 14:55:45',NULL,NULL),
 (807,'L23','d0d9d94a82635a4fd29dacea2c61d0d0','G.swetha','','2024-07-12 14:55:45',NULL,NULL),
 (808,'L24','fba7693310422f9bda43b71618de2c0b','S.Yuvashri','','2024-07-12 14:55:45',NULL,NULL),
 (809,'L25','1dc2d3cba6f09210562ffdfa0ee436ef','Madhan R','','2024-07-12 14:55:45',NULL,NULL),
 (810,'L26','d21b576f4c8d4d7ef32213e17c9f0f44','BALAJI. S','','2024-07-12 14:55:45',NULL,NULL),
 (811,'L27','2a8fe1e7d4a6d4192fff00027abf9b38','VIJAY S','','2024-07-12 14:55:45',NULL,NULL),
 (812,'L28','851ae753e3cb8fed9fb481b64d83a093','G.Amar nath','','2024-07-12 14:55:45',NULL,NULL),
 (813,'L29','5141db3acb51f500018906b1f5b7a4c0','V.Vignesh','','2024-07-12 14:55:45',NULL,NULL),
 (814,'L30','6ad1c3e82e7da83f10df9e8bc26a4b84','C D BASKAR','','2024-07-12 14:55:45',NULL,NULL),
 (815,'L31','342828c1cf48ce68c003a14900021132','Harish B','','2024-07-12 14:55:45',NULL,NULL),
 (816,'L32','4cda1d18c0409c29d1cb2a241d8ab827','HariPrasaad R K','','2024-07-12 14:55:45',NULL,NULL),
 (817,'L33','c1ac6fa4c1644b60f45ea386f3409442','Harish Narayan. S','','2024-07-12 14:55:45',NULL,NULL),
 (818,'L34','f64524bf1990a95a8f91f70bbca86468','Ilakkiya.B','','2024-07-12 14:55:45',NULL,NULL),
 (819,'L35','e4477bd852debd5aae38591eab6bb48f','Madhavan','','2024-07-12 14:55:45',NULL,NULL),
 (820,'L36','7f52ebc31f9aaf0f933799f6ef337dcb','RAVI PRAKASH M','','2024-07-12 14:55:45',NULL,NULL),
 (821,'L37','cb5e246b359764c71dabe6611d438fc8','Asish Kamalnath G','','2024-07-12 14:55:45',NULL,NULL),
 (822,'L38','f8de75d5cfafe66c6f42bcc9567c86fb','KEVIN JOSHUA','','2024-07-12 14:55:45',NULL,NULL),
 (823,'L39','1d534ae059f18200da33e2a5f67275f7','T SANTHOSH','','2024-07-12 14:55:45',NULL,NULL),
 (824,'L40','61ab4375dced27a46e74be9cb2a67caa','Monisha','','2024-07-12 14:55:45',NULL,NULL),
 (825,'L41','e161a67d4831560978e85826a3c503ad','Bala murali.P','','2024-07-12 14:55:45',NULL,NULL),
 (826,'L42','8da386d437d8f9d77100915211a709c9','Hiteshgourd','','2024-07-12 14:55:45',NULL,NULL),
 (827,'L43','b5f6374db247f5946444321f9686d216','Shree Balaji','','2024-07-12 14:55:45',NULL,NULL),
 (828,'L44','bd89a7e62c540a05a61332319c589ed2','Deepak S','','2024-07-12 14:55:45',NULL,NULL),
 (829,'L45','1a18c0131bf3f8527380068b8497c506','Dharshini','','2024-07-12 14:55:45',NULL,NULL),
 (830,'L46','fcbb34085158483791b74243d5e7c2c5','Punitha','','2024-07-12 14:55:45',NULL,NULL),
 (831,'L47','5e1102ecd8f7e852cd33b9f251a9f930','Maalavika','','2024-07-12 14:55:45',NULL,NULL),
 (832,'L48','c71cd0f002f8e2f979b9d7d6039cb7c2','Pavan Kumar','','2024-07-12 14:55:45',NULL,NULL),
 (833,'L49','00e10683154274f852eafe114ffdd5d3','Anadhakrishnan','','2024-07-12 14:55:45',NULL,NULL),
 (834,'L50','d8e878d4f66d0c8611e84cfd409ca247','Barath kumar.K','','2024-07-12 14:55:45',NULL,NULL),
 (835,'L51','462f1d653ba877edc5168741b0c30e9c','Srivarshan.B','','2024-07-12 14:55:45',NULL,NULL),
 (836,'L52','e6340fb871cd76e26a8ec71bf1d14a5b','Sivakishore A.S','','2024-07-12 14:55:45',NULL,NULL),
 (837,'L53','97d1c8292a27b67e5b424bf23633874e','ESHWAR R S','','2024-07-12 14:55:45',NULL,NULL),
 (838,'L54','c453246dc559811f059729bd9b273033','Hari haran.V','','2024-07-12 14:55:45',NULL,NULL),
 (839,'L55','230f76e2860232d48fe1404c49b5cfd8','Asha ayyanar','','2024-07-12 14:55:45',NULL,NULL),
 (840,'L56','2c070e073fc8d69e5c46d4330a81750e','Devadharshini.G','','2024-07-12 14:55:45',NULL,NULL),
 (841,'L57','73291a3bd6de084d6014dccae48ab8ec','S. ANANTHI','','2024-07-12 14:55:45',NULL,NULL),
 (842,'L58','64125a156b51ed6bcf7f1a66a85d6889','Janani Gr','','2024-07-12 14:55:45',NULL,NULL),
 (843,'L59','5dcdda7e0c6621ff1869d47ca7171716','R.Yuvanshankaran','','2024-07-12 14:55:45',NULL,NULL),
 (844,'L60','de7ff92e8b2febaa153abc5513719c5f','Vinoth.S','','2024-07-12 14:55:45',NULL,NULL),
 (845,'M1','d3a8f27db9a415ad30804cf3de960ebb','TRIBUVAN G R','','2024-07-12 14:55:45',NULL,NULL),
 (846,'M2','f5b44b27ad2bece86d6f5349aa8b4ca5','J MONICA','','2024-07-12 14:55:45',NULL,NULL),
 (847,'M3','099ab1e192a352c58bf22c7e222f8b0d','J JAYAKANTH','','2024-07-12 14:55:45',NULL,NULL),
 (848,'M4','190e21434ee7bc2ba6782584059e0aa0','Ashwin K','','2024-07-12 14:55:45',NULL,NULL),
 (849,'M5','f2f92d5df1776cb42646ebaa6b246e54','PRAVEEN R','','2024-07-12 14:55:45',NULL,NULL),
 (850,'M6','81365a6a6d6b2ccaa50af0d9d6a782dd','Sumeesha T','','2024-07-12 14:55:45',NULL,NULL),
 (851,'M7','ccfe26118c82689ebb9434a6019ae005','Mohanapriya.V','','2024-07-12 14:55:45',NULL,NULL),
 (852,'M8','77fc9d5af05a6f4c1acb2338b0899c3c','Yuvashree','','2024-07-12 14:55:45',NULL,NULL),
 (853,'M9','721a5c43671883b24378bcad709997ed','Kaviya DC','','2024-07-12 14:55:45',NULL,NULL),
 (854,'M10','6af639902c643bf9107afec93b5a7094','Kalyan Kumar .v','','2024-07-12 14:55:45',NULL,NULL),
 (855,'M11','fdcc929829fe8fbdec50ca1f6280d9a4','NIRANJAN PRASAAD RG','','2024-07-12 14:55:45',NULL,NULL),
 (856,'M12','dda7584d8fd6e8b5a23c7fabae644218','Srinath S','','2024-07-12 14:55:45',NULL,NULL),
 (857,'M13','4637a1881cd754eacc483e410b014487','Akalya','','2024-07-12 14:55:45',NULL,NULL),
 (858,'M14','d8dc7125adbaa100cc093ed4589b7601','Monica.S','','2024-07-12 14:55:45',NULL,NULL),
 (859,'M15','392e1940ecd3f28c7bdb33ad7cfa1de5','Aravind B','','2024-07-12 14:55:45',NULL,NULL),
 (860,'M16','2b1a3ca3bd9a5bb0bc8326ce157df4a2','Raahulraj S','','2024-07-12 14:55:45',NULL,NULL),
 (861,'M17','073a8ec7dfe5fe7a1d475ff45e7f3b67','Mohamad Arshath','','2024-07-12 14:55:45',NULL,NULL),
 (862,'M18','71a38132880a0a9b49e801bd511dca15','Neroshan','','2024-07-12 14:55:45',NULL,NULL),
 (863,'M19','f6ffaf7ad21a339c9b5625093ef4e937','KIRTHIKA S','','2024-07-12 14:55:45',NULL,NULL),
 (864,'M20','0af317235d0edd1cd87ee4316ca3bc6a','S.SURASH KUMAR','','2024-07-12 14:55:45',NULL,NULL),
 (865,'M21','faa30884b53428a2337b31c4de685dec','Akash selvan K','','2024-07-12 14:55:45',NULL,NULL),
 (866,'M22','d89e1e50236f84581cfbd210439e6af7','Vinoth.R','','2024-07-12 14:55:45',NULL,NULL),
 (867,'M23','2458ef6831c6fcc9714a06a98766332f','M.Srivardan','','2024-07-12 14:55:45',NULL,NULL),
 (868,'M24','05b131e3964cd0f8676e40ce0f2cf6f6','Sankhesh Jain','','2024-07-12 14:55:45',NULL,NULL),
 (869,'M25','0874386808d288f7991c0131adf113b3','Grandhi Abhinav Gupta','','2024-07-12 14:55:45',NULL,NULL),
 (870,'M26','621d707b658958c6cee3959e6b1326e7','srinithy','','2024-07-12 14:55:45',NULL,NULL),
 (871,'M27','0850afcaeedf9f9168bbcc32bfad731e','K.kishore giri','','2024-07-12 14:55:45',NULL,NULL),
 (872,'M28','a474c2b7796b59d384a53d9ba0059a1e','K.Gayathri','','2024-07-12 14:55:45',NULL,NULL),
 (873,'M29','86444f7193ded034b09bba1a9bf6a023','R. Siddharth','','2024-07-12 14:55:45',NULL,NULL),
 (874,'M30','e10333dea51949a40139be240a5cbb27','Vishal.E','','2024-07-12 14:55:45',NULL,NULL),
 (875,'M31','fec5115f31c6b6076ade3fe6bc853eb0','D.Manav kothari','','2024-07-12 14:55:45',NULL,NULL),
 (876,'M32','fedd4c5dc015d5feaa6a106b878df2ad','Jinish S Jain','','2024-07-12 14:55:45',NULL,NULL),
 (877,'M33','8ea6fe4e0892d590b25640ff718dc3ff','NARESH KUMAR','','2024-07-12 14:55:45',NULL,NULL),
 (878,'M34','9ba45340532fbacaaabcb2450d5c229c','Dhanush Suriya. L','','2024-07-12 14:55:45',NULL,NULL),
 (879,'M35','28a3b974f77f16bd92d22783a3cb37eb','Anush chandak','','2024-07-12 14:55:45',NULL,NULL),
 (880,'M36','58490899460bd9b8151e6a15e8929193','Darsh R Bafna','','2024-07-12 14:55:45',NULL,NULL),
 (881,'M37','c60e521794742f9f3ca2429d2f0f6998','Tilak Sharma','','2024-07-12 14:55:45',NULL,NULL),
 (882,'M38','712275b5f057b633ee03b8ab3cfff6e9','Mugesh kumar K.R','','2024-07-12 14:55:45',NULL,NULL),
 (883,'M39','89323f2d31c70da2db940bee235aa836','Harsith s','','2024-07-12 14:55:45',NULL,NULL),
 (884,'M40','bc9d49aef881e28c5f9b0cd4b2a3c1f9','Bharath S','','2024-07-12 14:55:45',NULL,NULL),
 (885,'M41','b498336893e6f6dce0cf0b55e327c158','N.S.Reshwan lal','','2024-07-12 14:55:45',NULL,NULL),
 (886,'M42','e6cf0b7e335a5d72761206aa1515074a','B.Rahul','','2024-07-12 14:55:45',NULL,NULL),
 (887,'M43','5080fd517ba16a60c1190dd62b52958f','Sunita Baug. S','','2024-07-12 14:55:45',NULL,NULL),
 (888,'M44','911561c64409abb442a145698d60af3a','Prishna S','','2024-07-12 14:55:45',NULL,NULL),
 (889,'M45','860536e67a1d247dbec3e1e214c1d8e0','Sanath Mahendra Pujari','','2024-07-12 14:55:45',NULL,NULL),
 (890,'M46','84e1f54309ab9ecd74c62ecf37305c38','Baranidharan.s','','2024-07-12 14:55:45',NULL,NULL),
 (891,'M47','38db2b823554e5dbf0aa667ac8961779','D.Vijay','','2024-07-12 14:55:45',NULL,NULL),
 (892,'M48','e34bcf4db01a54caab3fe92f1e1c7e8a','Lingeshwaran .T','','2024-07-12 14:55:45',NULL,NULL),
 (893,'M49','dc7bc6117c94a3931b193319dcaf3b32','Oviya S','','2024-07-12 14:55:45',NULL,NULL),
 (894,'M50','35ac8fd1621ecb5cf88780dbb3f457ca','Kumaresan P','','2024-07-12 14:55:45',NULL,NULL),
 (895,'M51','566ee4800b4b7acad0af63b328b037a1','Srinivasan. B','','2024-07-12 14:55:45',NULL,NULL),
 (896,'M52','1c2a076560091275fb68f86d11180524','Kamesh.v','','2024-07-12 14:55:45',NULL,NULL),
 (897,'M53','303c5c560448092c2c5f9a2171f15914','Mithun kumar','','2024-07-12 14:55:45',NULL,NULL),
 (898,'M54','d2bdf3a66ef0c94d9ebbde2ca1cc8117','viyanka','','2024-07-12 14:55:45',NULL,NULL),
 (899,'M55','7688b60b67280d89b3024ec4accb6b92','manu prasad','','2024-07-12 14:55:45',NULL,NULL),
 (900,'M56','435089f6780aabc30b3492fecd09d572','Parathick','','2024-07-12 14:55:45',NULL,NULL),
 (901,'M57','5e61dfc4d7a7e47f993fd91173bc215a','Rahul kamesh','','2024-07-12 14:55:45',NULL,NULL),
 (902,'M58','a3dc06d06cf7b2bbb7c83d793ca5c4fb','Praveen Kumar R','','2024-07-12 14:55:45',NULL,NULL),
 (903,'M59','e74110c67e3f6ee56ccbf153aefb95be','Sangeetha.C','','2024-07-12 14:55:45',NULL,NULL),
 (904,'M60','734122a8333bb69429597d75eab6a0c0','R. Swetha','','2024-07-12 14:55:45',NULL,NULL),
 (905,'M61','1048b207b759e832e28f403ad42b8625','Nandhini. V','','2024-07-12 14:55:45',NULL,NULL),
 (906,'M62','71d4fd9682fca982a564f57ddcd8fa1c','D.Harini','','2024-07-12 14:55:45',NULL,NULL),
 (907,'N1','201f1e3d6af6b3785375d8d311cbb414','VS Tarun','','2024-07-12 14:55:45',NULL,NULL),
 (908,'N2','75afca7825447118acb5fa9092e27f77','Sanjay Kumar.S','','2024-07-12 14:55:45',NULL,NULL),
 (909,'N3','2d49b94fe6cc64b44bba402b7c10235a','PAVAN PRASAD V','','2024-07-12 14:55:45',NULL,NULL),
 (910,'N4','73a36e63bcd4438b5198ee59f5a07604','ROHITH.M','','2024-07-12 14:55:45',NULL,NULL),
 (911,'N5','3ef9218af91416a04eeb523fadf1a518','P Madhavan','','2024-07-12 14:55:45',NULL,NULL),
 (912,'N6','f7f91d391ae39c029300f49ae48f3298','Avinas','','2024-07-12 14:55:45',NULL,NULL),
 (913,'N7','dbdfa7c9a257bf6975bc28a1cb4c1f35','Dayanesh','','2024-07-12 14:55:45',NULL,NULL),
 (914,'N8','6c6f227dcb4b8f7e307c54cffc793284','S.NITESH JAIN','','2024-07-12 14:55:45',NULL,NULL),
 (915,'N9','6a4d578810be62ad7cc6bff237c4529a','K.S.PURUSHOTHAM','','2024-07-12 14:55:45',NULL,NULL),
 (916,'N10','5904d53a92614a5507822ff2f0bb24b5','Priyadharshini.R','','2024-07-12 14:55:45',NULL,NULL),
 (917,'N11','6d9b6cde00c108cca6d1857f3a71604e','Siddarth.R','','2024-07-12 14:55:45',NULL,NULL),
 (918,'N12','64a0f2f43131a6bd5c6144ac80e7b787','JAI KARTHIK PG','','2024-07-12 14:55:45',NULL,NULL),
 (919,'N13','541e8655a7d9ea642535a3193b38eff1','R GOWTHAM','','2024-07-12 14:55:45',NULL,NULL),
 (920,'N14','d1741eecd3f0c53d29518f1732727c9f','Deepthy. N','','2024-07-12 14:55:45',NULL,NULL),
 (921,'N15','3bf104fc55892c60fa0531a01e4ebe94','Adithya Amrutrao Gaikwad','','2024-07-12 14:55:45',NULL,NULL),
 (922,'N16','a11303f3e804fe6950ff8c994cd1ac2f','S Kethan Rao','','2024-07-12 14:55:45',NULL,NULL),
 (923,'N17','40c56b7da2200759ac5c749fa26a087e','Prakash Kumar C','','2024-07-12 14:55:45',NULL,NULL),
 (924,'N18','1b40f59a7d10195fff101ea0f75f8f03','M Vishal','','2024-07-12 14:55:45',NULL,NULL),
 (925,'N19','0c5f7359bb8715cc2c46201cfed6ad9b','Siva Kumar S','','2024-07-12 14:55:45',NULL,NULL),
 (926,'N20','ce1b4b028e83edc8cc77158bf95309b4','Lalith Kumar M','','2024-07-12 14:55:45',NULL,NULL),
 (927,'N21','8d7c5587c2daebef89e2f4cb40de3b83','Advaith','','2024-07-12 14:55:45',NULL,NULL),
 (928,'N22','31b78a4068a9314b4c05f5fa477ebf3c','R Harish Ragavendar','','2024-07-12 14:55:45',NULL,NULL),
 (929,'N23','fe46ea669c92dc4ca26ef8ecef64901c','Deepak Muralidharan','','2024-07-12 14:55:45',NULL,NULL),
 (930,'N24','67fa0cad3cb2a08d411809b779225446','Janani.S','','2024-07-12 14:55:45',NULL,NULL),
 (931,'N25','e381cbd87d579428847e3b8170282879','Harini.S','','2024-07-12 14:55:45',NULL,NULL),
 (932,'N26','baba47270c25e874ab7067fa5284da80','Jayashree. R','','2024-07-12 14:55:45',NULL,NULL),
 (933,'N27','6f4b8dff9d4a3c9584df52df311b357e','Sridevi. A','','2024-07-12 14:55:45',NULL,NULL),
 (934,'N28','9c1604c2a61f5c0a04827241dbec1238','Abhishek Mani','','2024-07-12 14:55:45',NULL,NULL),
 (935,'N29','83977194c4e11a87fe39cd3b79b484b9','Naresh Chowdry. S','','2024-07-12 14:55:45',NULL,NULL),
 (936,'N30','d998a9881214b79aa613e2bd438d075d','Vasanth Kumar S','','2024-07-12 14:55:45',NULL,NULL),
 (937,'N31','2a4844781b0af9361ef31ad1d98dd0b2','Firdus A','','2024-07-12 14:55:45',NULL,NULL),
 (938,'N32','ca56b8652e3ce0c04044b0abb6fd9350','Ayush singhi','','2024-07-12 14:55:45',NULL,NULL),
 (939,'N33','8a119d551e303712335ee331855c5d64','GOWTHAM P','','2024-07-12 14:55:45',NULL,NULL),
 (940,'N34','7ebff3bbba99ea44c103516332ec40ff','Gayathri S','','2024-07-12 14:55:45',NULL,NULL),
 (941,'N35','3c50af9371dd0e3f3a3830e7fe051c5d','Divyadharshini.s','','2024-07-12 14:55:45',NULL,NULL),
 (942,'N36','fab5916f701d5d464438c32bb638eacc','R ROHAN JOHN FREDRICK','','2024-07-12 14:55:45',NULL,NULL),
 (943,'N37','52d4146b6389214f9fd4c7932d83fd2e','John samvel P','','2024-07-12 14:55:45',NULL,NULL),
 (944,'N38','ee25d89d01d16aea08eb31d391813dda','S.HARI HARAN','','2024-07-12 14:55:45',NULL,NULL),
 (945,'N39','fc969769a637e3100ab6d4db98916dcc','M . Jasmitha','','2024-07-12 14:55:45',NULL,NULL),
 (946,'N40','e82d21c3693261d61dab7388cb676b8c','Suzanne Ameen','','2024-07-12 14:55:45',NULL,NULL),
 (947,'N41','3445530a382fe390189fab53a8732b03','Chris rock','','2024-07-12 14:55:45',NULL,NULL),
 (948,'N42','134daecefd8cb8c49d2d0ccdc6e2b3fb','Thilak babu.A','','2024-07-12 14:55:45',NULL,NULL),
 (949,'N43','1de17875ea41d02d709b4f0e15c3adb2','Saran v','','2024-07-12 14:55:45',NULL,NULL),
 (950,'N44','89b7b812a2926823bef407d7e081b6b5','SHRINIVAS N','','2024-07-12 14:55:45',NULL,NULL),
 (951,'N45','62f40baff0b3a59acdbfc7147b960187','Vignesh.M','','2024-07-12 14:55:45',NULL,NULL),
 (952,'N46','8b9102097c971d216331d167fbbadff5','Aswath s','','2024-07-12 14:55:45',NULL,NULL),
 (953,'N47','b8fd6cf72918e7c99977f81e4610e2e5','L.kinjal','','2024-07-12 14:55:45',NULL,NULL),
 (954,'N48','3d4b428be69c71e55f4155d846a741b1','P.Harsh','','2024-07-12 14:55:45',NULL,NULL),
 (955,'N49','c5b7c1a30f705f568be2751da5bb966a','Akshay V Harihara','','2024-07-12 14:55:45',NULL,NULL),
 (956,'N50','77f5b89a13d741846c7300ab8ca7ac6e','Ritish Kumar','','2024-07-12 14:55:45',NULL,NULL),
 (957,'N51','f37269e1c3ca4a860fc11ab55b748d5f','Elanthiraiyan.T','','2024-07-12 14:55:45',NULL,NULL),
 (958,'N52','a1fcb6d5ff67ef4c07e73024cc947320','Sujitha S','','2024-07-12 14:55:45',NULL,NULL),
 (959,'N53','72bd42915b37898cff2b5427111c4c6f','Vaishnavi S','','2024-07-12 14:55:45',NULL,NULL),
 (960,'N54','0164228360e226a63c2b43d08309058d','Jai Vishnu','','2024-07-12 14:55:45',NULL,NULL),
 (961,'N55','5bdcbbe4f8371b0492d22d2c45905118','Snega C','','2024-07-12 14:55:45',NULL,NULL),
 (962,'N56','abac6b793c1a2c058ad8eb028c48932f','Dharshitha V','','2024-07-12 14:55:45',NULL,NULL),
 (963,'N57','6acf491f8f78594d6548af893967bb8a','Siva Sarvesh','','2024-07-12 14:55:45',NULL,NULL),
 (964,'N58','fbb26b5d3ecf437580f6100b05a3da64','Monisha R','','2024-07-12 14:55:45',NULL,NULL),
 (965,'N59','5d2fcf699ef57655c140f2d05741ae4e','Shreenath B','','2024-07-12 14:55:45',NULL,NULL),
 (966,'N60','0962da37be6328a1dddecd70a752842b','Srijayanth P','','2024-07-12 14:55:45',NULL,NULL),
 (967,'N61','56160504f2db274654123954ecb8bea6','Vishwa Renganathan','','2024-07-12 14:55:45',NULL,NULL),
 (968,'N62','5b9941e237dc07434e67dcc81e389732','Vishva R','','2024-07-12 14:55:45',NULL,NULL),
 (969,'Q1','ac28d15a717749c213047431532ad06e','Uma Kathirvel','','2024-07-12 14:55:45',NULL,NULL),
 (970,'Q2','184981f688bf5b71337d4946bfc7c226','Pavithra R','','2024-07-12 14:55:45',NULL,NULL),
 (971,'Q3','4ed49775abc8353a1712bb3393dd98eb','Maadesh Kumar','','2024-07-12 14:55:45',NULL,NULL),
 (972,'Q4','6417f4ef8f500d0b5f9bb2871c890fbf','Varsha Mishra','','2024-07-12 14:55:45',NULL,NULL),
 (973,'Q5','88b270f42d41dbcdaf9c976b2ff4c826','Rohit Sharma','','2024-07-12 14:55:45',NULL,NULL),
 (974,'Q6','7485591cac504cfddfdb4d2722c8b1c2','Sakthi umadevi.B','','2024-07-12 14:55:45',NULL,NULL),
 (975,'Q7','46e39d3a4c6694ab5d186ccef514e7a3','Karishma Saini','','2024-07-12 14:55:45',NULL,NULL),
 (976,'Q8','3bc6918b2c03d8d18195fb17a762956b','S Krishna Kumar','','2024-07-12 14:55:45',NULL,NULL),
 (977,'Q9','c32a242015d74ce3f2361c7565294fc1','MURUGANANDAN.N.B','','2024-07-12 14:55:45',NULL,NULL),
 (978,'Q10','f50831bdad73e45a9412a9e8f378c139','Sangeethraj Hopper. S','','2024-07-12 14:55:45',NULL,NULL),
 (979,'Q11','0077585db1c8d33665e1561ff7b5e628','Santhosh Kumar.c','','2024-07-12 14:55:45',NULL,NULL),
 (980,'Q12','8ed42183f08e1c1fab38a874fc5bbe6d','Monisha. D','','2024-07-12 14:55:45',NULL,NULL),
 (981,'Q13','3dc57d233cf43682d6e87ccdf09ed81a','BHAVANA K','','2024-07-12 14:55:45',NULL,NULL),
 (982,'Q14','27d67972188165990f507cdce568c7f5','Akash prem B','','2024-07-12 14:55:45',NULL,NULL),
 (983,'Q15','78b60d64faf20032a1bb14f150367cbb','Lakshimi S','','2024-07-12 14:55:45',NULL,NULL),
 (984,'Q16','96dc8c50e31dbe38cb4df27af7fcbb6d','Abinaya P','','2024-07-12 14:55:45',NULL,NULL),
 (985,'Q17','e6ec8a1f4b242b7705aa75baa7534f0e','Govardhini.K.M','','2024-07-12 14:55:45',NULL,NULL),
 (986,'Q18','969a85d0802cd20c9dc3a447d521e33b','Mahakarthick k','','2024-07-12 14:55:45',NULL,NULL),
 (987,'Q19','6aa748fc7e513f6a1d70aa44eb4b33dc','Sushmitha M','','2024-07-12 14:55:45',NULL,NULL),
 (988,'Q20','97ccc6b792acb9dc233e935ffe755c15','Manjula L','','2024-07-12 14:55:45',NULL,NULL),
 (989,'Q21','1f0924249a7f58ff74adb5b0143c65b7','Kanthana K D','','2024-07-12 14:55:45',NULL,NULL),
 (990,'Q22','3c0e41c984fd196edd4cf03c252ba764','S SNEHA','','2024-07-12 14:55:45',NULL,NULL),
 (991,'Q23','c88674eff15454339cafb43613711352','Ashrutha Sharadha S','','2024-07-12 14:55:45',NULL,NULL),
 (992,'Q24','1ad12c3a86670271fbb89baa8335e739','Kaviya K','','2024-07-12 14:55:45',NULL,NULL),
 (993,'Q25','44657d22212dae2a1b0c005b2fc08d15','N.SANJAI','','2024-07-12 14:55:45',NULL,NULL),
 (994,'Q26','1b8003ae8123a136760db615227ccc41','Lokeshviswa M','','2024-07-12 14:55:45',NULL,NULL),
 (995,'Q27','d2bf8c3f19e7e0a5c7e68746d4dd99e5','ABIRAMI RAMANATHAN','','2024-07-12 14:55:45',NULL,NULL),
 (996,'Q28','e316a01d1277bac7fd328429aa9a2560','Pavithra.M','','2024-07-12 14:55:45',NULL,NULL),
 (997,'Q29','18f623e7af37788064d6e12ebe964d72','Vibhu P','','2024-07-12 14:55:45',NULL,NULL),
 (998,'Q30','cf4f4c65e7f00b6f8653f69543decb67','Srinath M','','2024-07-12 14:55:45',NULL,NULL),
 (999,'Q31','68a5ec4ba70a6386896d59e8e7056d7f','Megalakshmi M','','2024-07-12 14:55:45',NULL,NULL),
 (1000,'Q32','a4b82c495776797cdb0ab922188feee8','Ramya Priya B.K','','2024-07-12 14:55:45',NULL,NULL),
 (1001,'Q33','25242963a4b47a1bdff3201848feea3f','Yamini P','','2024-07-12 14:55:45',NULL,NULL),
 (1002,'Q34','7381b81cf95047bb7cd332ba4716dadc','Priyanka R','','2024-07-12 14:55:45',NULL,NULL),
 (1003,'Q35','d4ce20c6e2a0d754a80122699b3e2ea1','Sukanya R','','2024-07-12 14:55:45',NULL,NULL),
 (1004,'Q36','ed9cb76da31280b16f94114d191f0895','Harihara sudhan.G','','2024-07-12 14:55:45',NULL,NULL),
 (1005,'Q37','4efd929dedc3c782c2ea7783bb53275c','Chandramouleeswaran B','','2024-07-12 14:55:45',NULL,NULL),
 (1006,'Q38','585a4f0a927d87cc1ee10d1319c56adb','Prerana bagri','','2024-07-12 14:55:45',NULL,NULL),
 (1007,'Q39','8a47f797460775497ba596a91e934f69','Aswin R','','2024-07-12 14:55:45',NULL,NULL),
 (1008,'Q40','a392edb6110d1bc8ce811925c93e5939','Keerthi sree hashni M','','2024-07-12 14:55:45',NULL,NULL),
 (1009,'Q41','aec8179499e147c8e32abff35160706d','Sakthivel V.J','','2024-07-12 14:55:45',NULL,NULL),
 (1010,'Q42','d71de1c52d7afb63b28caf1510668086','Amrithaa B','','2024-07-12 14:55:45',NULL,NULL),
 (1011,'Q43','e4d8bfe36c5bb080b270199f7f8d6051','Kishore M','','2024-07-12 14:55:45',NULL,NULL),
 (1012,'Q44','704b46673412b61272e2e5e1ce1f15bc','S.Priyadharshini','','2024-07-12 14:55:45',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;

--
-- Create schema aptonlinesix
--

CREATE DATABASE IF NOT EXISTS aptonlinesix;
USE aptonlinesix;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,2);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=301 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'Rs 7150',NULL,0,0,'',0,0,NULL,1,0,''),
 (2,1,'Rs 7500',NULL,0,0,'',0,0,NULL,1,0,''),
 (3,1,'Rs 7250',NULL,0,0,'',0,0,NULL,1,0,''),
 (4,1,'Rs 8250',NULL,0,0,'',0,0,NULL,1,0,''),
 (5,1,'Rs 8000',NULL,1,0,'',0,0,NULL,1,0,''),
 (6,2,'3(1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (7,2,'13(1/3)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (8,2,'23(1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (9,2,'33(1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (10,2,'43(1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'(yxz) / (100a)',NULL,0,0,'',0,0,NULL,1,0,''),
 (12,3,'(ayz) / (100x)',NULL,0,0,'',0,0,NULL,1,0,''),
 (13,3,'(axy) / (100z)',NULL,0,0,'',0,0,NULL,1,0,''),
 (14,3,'(axz) / (100y)',NULL,1,0,'',0,0,NULL,1,0,''),
 (15,3,'(ax) / (100yz)',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'Rs 325',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,4,'Rs 320',NULL,1,0,'',0,0,NULL,1,0,''),
 (18,4,'Rs 350',NULL,0,0,'',0,0,NULL,1,0,''),
 (19,4,'Rs 375',NULL,0,0,'',0,0,NULL,1,0,''),
 (20,4,'Rs 340',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,5,'80 grams',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,5,'70 grams',NULL,0,0,'',0,0,NULL,1,0,''),
 (23,5,'50 grams',NULL,0,0,'',0,0,NULL,1,0,''),
 (24,5,'40 grams',NULL,0,0,'',0,0,NULL,1,0,''),
 (25,5,'60 grams',NULL,1,0,'',0,0,NULL,1,0,''),
 (26,6,'22%',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,6,'20%',NULL,1,0,'',0,0,NULL,1,0,''),
 (28,6,'24%',NULL,0,0,'',0,0,NULL,1,0,''),
 (29,6,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (30,6,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (31,7,'13%',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,7,'12%',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,7,'11%',NULL,0,0,'',0,0,NULL,1,0,''),
 (34,7,'10%',NULL,1,0,'',0,0,NULL,1,0,''),
 (35,7,'14%',NULL,0,0,'',0,0,NULL,1,0,''),
 (36,8,'60%',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,8,'50%',NULL,0,0,'',0,0,NULL,1,0,''),
 (38,8,'40%',NULL,1,0,'',0,0,NULL,1,0,''),
 (39,8,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (40,8,'70%',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,9,'350',NULL,0,0,'',0,0,NULL,1,0,''),
 (42,9,'130',NULL,0,0,'',0,0,NULL,1,0,''),
 (43,9,'75',NULL,0,0,'',0,0,NULL,1,0,''),
 (44,9,'200',NULL,0,0,'',0,0,NULL,1,0,''),
 (45,9,'120',NULL,1,0,'',0,0,NULL,1,0,''),
 (46,10,'25%',NULL,1,0,'',0,0,NULL,1,0,''),
 (47,10,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (48,10,'40%',NULL,0,0,'',0,0,NULL,1,0,''),
 (49,10,'50%',NULL,0,0,'',0,0,NULL,1,0,''),
 (50,10,'60%',NULL,0,0,'',0,0,NULL,1,0,''),
 (51,11,'8%',NULL,0,0,'',0,0,NULL,1,0,''),
 (52,11,'6%',NULL,0,0,'',0,0,NULL,1,0,''),
 (53,11,'7%',NULL,0,0,'',0,0,NULL,1,0,''),
 (54,11,'4%',NULL,1,0,'',0,0,NULL,1,0,''),
 (55,11,'9%',NULL,0,0,'',0,0,NULL,1,0,''),
 (56,12,'16 (2/5)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (57,12,'16 (2/3)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (58,12,'16 (1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (59,12,'16 (7/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (60,12,'16 (4/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (61,13,'Rs 15000',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,13,'Rs 14750',NULL,0,0,'',0,0,NULL,1,0,''),
 (63,13,'Rs 12000',NULL,1,0,'',0,0,NULL,1,0,''),
 (64,13,'Rs 11245',NULL,0,0,'',0,0,NULL,1,0,''),
 (65,13,'Rs 13725',NULL,0,0,'',0,0,NULL,1,0,''),
 (66,14,'5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (67,14,'4%',NULL,1,0,'',0,0,NULL,1,0,''),
 (68,14,'6%',NULL,0,0,'',0,0,NULL,1,0,''),
 (69,14,'7%',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,14,'8%',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,15,'127',NULL,0,0,'',0,0,NULL,1,0,''),
 (72,15,'250',NULL,0,0,'',0,0,NULL,1,0,''),
 (73,15,'175',NULL,0,0,'',0,0,NULL,1,0,''),
 (74,15,'135',NULL,0,0,'',0,0,NULL,1,0,''),
 (75,15,'200',NULL,1,0,'',0,0,NULL,1,0,''),
 (76,16,'20%',NULL,1,0,'',0,0,NULL,1,0,''),
 (77,16,'25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (78,16,'22%',NULL,0,0,'',0,0,NULL,1,0,''),
 (79,16,'10%',NULL,0,0,'',0,0,NULL,1,0,''),
 (80,16,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (81,17,'120%',NULL,0,0,'',0,0,NULL,1,0,''),
 (82,17,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (83,17,'80%',NULL,0,0,'',0,0,NULL,1,0,''),
 (84,17,'160%',NULL,1,0,'',0,0,NULL,1,0,''),
 (85,17,'200%',NULL,0,0,'',0,0,NULL,1,0,''),
 (86,18,'45000',NULL,0,0,'',0,0,NULL,1,0,''),
 (87,18,'50000',NULL,0,0,'',0,0,NULL,1,0,''),
 (88,18,'40000',NULL,1,0,'',0,0,NULL,1,0,''),
 (89,18,'34750',NULL,0,0,'',0,0,NULL,1,0,''),
 (90,18,'20000',NULL,0,0,'',0,0,NULL,1,0,''),
 (91,19,'180000',NULL,0,0,'',0,0,NULL,1,0,''),
 (92,19,'165342',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,19,'175643',NULL,0,0,'',0,0,NULL,1,0,''),
 (94,19,'177366',NULL,1,0,'',0,0,NULL,1,0,''),
 (95,19,'150000',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,20,'2500',NULL,0,0,'',0,0,NULL,1,0,''),
 (97,20,'2600',NULL,0,0,'',0,0,NULL,1,0,''),
 (98,20,'2700',NULL,1,0,'',0,0,NULL,1,0,''),
 (99,20,'2800',NULL,0,0,'',0,0,NULL,1,0,''),
 (100,20,'2900',NULL,0,0,'',0,0,NULL,1,0,''),
 (101,21,'39 & 30',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,21,'42 & 33',NULL,1,0,'',0,0,NULL,1,0,''),
 (103,21,'42 & 32',NULL,0,0,'',0,0,NULL,1,0,''),
 (104,21,'41 & 33',NULL,0,0,'',0,0,NULL,1,0,''),
 (105,21,'40 & 33',NULL,0,0,'',0,0,NULL,1,0,''),
 (106,22,'66.66%',NULL,1,0,'',0,0,NULL,1,0,''),
 (107,22,'76.66%',NULL,0,0,'',0,0,NULL,1,0,''),
 (108,22,'96.66%',NULL,0,0,'',0,0,NULL,1,0,''),
 (109,22,'86.66%',NULL,0,0,'',0,0,NULL,1,0,''),
 (110,22,'88.66%',NULL,0,0,'',0,0,NULL,1,0,''),
 (111,23,'25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (112,23,'50%',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,23,'70%',NULL,1,0,'',0,0,NULL,1,0,''),
 (114,23,'150%',NULL,0,0,'',0,0,NULL,1,0,''),
 (115,23,'None of above',NULL,0,0,'',0,0,NULL,1,0,''),
 (116,24,'25%',NULL,1,0,'',0,0,NULL,1,0,''),
 (117,24,'50%',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,24,'125%',NULL,0,0,'',0,0,NULL,1,0,''),
 (119,24,'150%',NULL,0,0,'',0,0,NULL,1,0,''),
 (120,24,'None of above',NULL,0,0,'',0,0,NULL,1,0,''),
 (121,25,'16 (1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (122,25,'16%',NULL,0,0,'',0,0,NULL,1,0,''),
 (123,25,'16 (2/5)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (124,25,'16 (2/7)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,25,'16 (2/3)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (126,26,'18',NULL,1,0,'',0,0,NULL,1,0,''),
 (127,26,'16',NULL,0,0,'',0,0,NULL,1,0,''),
 (128,26,'20',NULL,0,0,'',0,0,NULL,1,0,''),
 (129,26,'22',NULL,0,0,'',0,0,NULL,1,0,''),
 (130,26,'24',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,27,'110',NULL,0,0,'',0,0,NULL,1,0,''),
 (132,27,'120',NULL,0,0,'',0,0,NULL,1,0,''),
 (133,27,'140',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,27,'130',NULL,0,0,'',0,0,NULL,1,0,''),
 (135,27,'150',NULL,1,0,'',0,0,NULL,1,0,''),
 (136,28,'A',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,28,'B',NULL,0,0,'',0,0,NULL,1,0,''),
 (138,28,'C',NULL,1,0,'',0,0,NULL,1,0,''),
 (139,28,'All Alike',NULL,0,0,'',0,0,NULL,1,0,''),
 (140,28,'None',NULL,0,0,'',0,0,NULL,1,0,''),
 (141,29,'62 paise',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,29,'60 paise',NULL,1,0,'',0,0,NULL,1,0,''),
 (143,29,'75 paise',NULL,0,0,'',0,0,NULL,1,0,''),
 (144,29,'70 paise',NULL,0,0,'',0,0,NULL,1,0,''),
 (145,29,'72 paise',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,30,'24%',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,30,'70%',NULL,0,0,'',0,0,NULL,1,0,''),
 (148,30,'80%',NULL,0,0,'',0,0,NULL,1,0,''),
 (149,30,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,30,'10%',NULL,1,0,'',0,0,NULL,1,0,''),
 (151,31,'17 (11/17)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (152,31,'3 ((1/2))%',NULL,0,0,'',0,0,NULL,1,0,''),
 (153,31,'4 (3/7)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (154,31,'10 (4/5)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (155,31,'10%',NULL,0,0,'',0,0,NULL,1,0,''),
 (156,32,'Rs 46',NULL,0,0,'',0,0,NULL,1,0,''),
 (157,32,'Rs 42',NULL,0,0,'',0,0,NULL,1,0,''),
 (158,32,'Rs 50',NULL,0,0,'',0,0,NULL,1,0,''),
 (159,32,'Rs 46.40',NULL,1,0,'',0,0,NULL,1,0,''),
 (160,32,'Rs 40.40',NULL,0,0,'',0,0,NULL,1,0,''),
 (161,33,'33 (1/3)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (162,33,'35 (1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (163,33,'33 (1/2)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (164,33,'33%',NULL,0,0,'',0,0,NULL,1,0,''),
 (165,33,'30 (1/3)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (166,34,'Rs 17.5',NULL,0,0,'',0,0,NULL,1,0,''),
 (167,34,'Rs 18',NULL,0,0,'',0,0,NULL,1,0,''),
 (168,34,'Rs 14.40',NULL,1,0,'',0,0,NULL,1,0,''),
 (169,34,'Rs 20',NULL,0,0,'',0,0,NULL,1,0,''),
 (170,34,'Rs 15',NULL,0,0,'',0,0,NULL,1,0,''),
 (171,35,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (172,35,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (173,35,'27%',NULL,0,0,'',0,0,NULL,1,0,''),
 (174,35,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (175,35,'25%',NULL,1,0,'',0,0,NULL,1,0,''),
 (176,36,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (177,36,'25%',NULL,1,0,'',0,0,NULL,1,0,''),
 (178,36,'27%',NULL,0,0,'',0,0,NULL,1,0,''),
 (179,36,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (180,36,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (181,37,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (182,37,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (183,37,'27%',NULL,0,0,'',0,0,NULL,1,0,''),
 (184,37,'20%',NULL,1,0,'',0,0,NULL,1,0,''),
 (185,37,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (186,38,'27%',NULL,0,0,'',0,0,NULL,1,0,''),
 (187,38,'26%',NULL,0,0,'',0,0,NULL,1,0,''),
 (188,38,'21%',NULL,1,0,'',0,0,NULL,1,0,''),
 (189,38,'28%',NULL,0,0,'',0,0,NULL,1,0,''),
 (190,38,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (191,39,'Rs 27.50',NULL,1,0,'',0,0,NULL,1,0,''),
 (192,39,'Rs 25.50',NULL,0,0,'',0,0,NULL,1,0,''),
 (193,39,'Rs 20',NULL,0,0,'',0,0,NULL,1,0,''),
 (194,39,'Rs 25',NULL,0,0,'',0,0,NULL,1,0,''),
 (195,39,'Rs 37.50',NULL,0,0,'',0,0,NULL,1,0,''),
 (196,40,'11(1/7)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (197,40,'10(1/9)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (198,40,'11(2/9)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (199,40,'11(1/8)%',NULL,0,0,'',0,0,NULL,1,0,''),
 (200,40,'11(1/9)%',NULL,1,0,'',0,0,NULL,1,0,''),
 (201,41,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (202,41,'24',NULL,0,0,'',0,0,NULL,1,0,''),
 (203,41,'18',NULL,1,0,'',0,0,NULL,1,0,''),
 (204,41,'30',NULL,0,0,'',0,0,NULL,1,0,''),
 (205,41,'27',NULL,0,0,'',0,0,NULL,1,0,''),
 (206,42,'37.5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (207,42,'17.5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (208,42,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (209,42,'25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (210,42,'15.5%',NULL,1,0,'',0,0,NULL,1,0,''),
 (211,43,'100%',NULL,0,0,'',0,0,NULL,1,0,''),
 (212,43,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (213,43,'120%',NULL,1,0,'',0,0,NULL,1,0,''),
 (214,43,'170%',NULL,0,0,'',0,0,NULL,1,0,''),
 (215,43,'150%',NULL,0,0,'',0,0,NULL,1,0,''),
 (216,44,'Rs 750',NULL,0,0,'',0,0,NULL,1,0,''),
 (217,44,'Rs 1000',NULL,1,0,'',0,0,NULL,1,0,''),
 (218,44,'Rs 875',NULL,0,0,'',0,0,NULL,1,0,''),
 (219,44,'Rs 1250',NULL,0,0,'',0,0,NULL,1,0,''),
 (220,44,'Rs1500',NULL,0,0,'',0,0,NULL,1,0,''),
 (221,45,'3% loss',NULL,0,0,'',0,0,NULL,1,0,''),
 (222,45,'2% loss',NULL,0,0,'',0,0,NULL,1,0,''),
 (223,45,'1% profit',NULL,0,0,'',0,0,NULL,1,0,''),
 (224,45,'1% loss',NULL,1,0,'',0,0,NULL,1,0,''),
 (225,45,'2% profit',NULL,0,0,'',0,0,NULL,1,0,''),
 (226,46,'0.5%',NULL,0,0,'',0,0,NULL,1,0,''),
 (227,46,'0.65%',NULL,0,0,'',0,0,NULL,1,0,''),
 (228,46,'0.25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (229,46,'0.60%',NULL,0,0,'',0,0,NULL,1,0,''),
 (230,46,'0.625%',NULL,1,0,'',0,0,NULL,1,0,''),
 (231,47,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (232,47,'15%',NULL,1,0,'',0,0,NULL,1,0,''),
 (233,47,'20%',NULL,0,0,'',0,0,NULL,1,0,''),
 (234,47,'25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (235,47,'17%',NULL,0,0,'',0,0,NULL,1,0,''),
 (236,48,'5% loss',NULL,0,0,'',0,0,NULL,1,0,''),
 (237,48,'5% profit',NULL,0,0,'',0,0,NULL,1,0,''),
 (238,48,'10% loss',NULL,0,0,'',0,0,NULL,1,0,''),
 (239,48,'10% profit',NULL,1,0,'',0,0,NULL,1,0,''),
 (240,48,'Neither loss nor profit',NULL,0,0,'',0,0,NULL,1,0,''),
 (241,49,'Rs 35000',NULL,0,0,'',0,0,NULL,1,0,''),
 (242,49,'Rs 17500',NULL,0,0,'',0,0,NULL,1,0,''),
 (243,49,'Rs 15000',NULL,1,0,'',0,0,NULL,1,0,''),
 (244,49,'Rs 10000',NULL,0,0,'',0,0,NULL,1,0,''),
 (245,49,'Rs 25000',NULL,0,0,'',0,0,NULL,1,0,''),
 (246,50,'Rs 400',NULL,1,0,'',0,0,NULL,1,0,''),
 (247,50,'Rs 450',NULL,0,0,'',0,0,NULL,1,0,''),
 (248,50,'Rs 500',NULL,0,0,'',0,0,NULL,1,0,''),
 (249,50,'Rs 200',NULL,0,0,'',0,0,NULL,1,0,''),
 (250,50,'Rs 800',NULL,0,0,'',0,0,NULL,1,0,''),
 (251,51,'Rs 65',NULL,0,0,'',0,0,NULL,1,0,''),
 (252,51,'Rs 62.50',NULL,0,0,'',0,0,NULL,1,0,''),
 (253,51,'Rs 67. 20',NULL,1,0,'',0,0,NULL,1,0,''),
 (254,51,'Rs 60',NULL,0,0,'',0,0,NULL,1,0,''),
 (255,51,'Rs 65.75',NULL,0,0,'',0,0,NULL,1,0,''),
 (256,52,'Rs 150',NULL,1,0,'',0,0,NULL,1,0,''),
 (257,52,'Rs 250',NULL,0,0,'',0,0,NULL,1,0,''),
 (258,52,'Rs 100',NULL,0,0,'',0,0,NULL,1,0,''),
 (259,52,'Rs 175',NULL,0,0,'',0,0,NULL,1,0,''),
 (260,52,'Rs 200',NULL,0,0,'',0,0,NULL,1,0,''),
 (261,53,'Rs 490',NULL,0,0,'',0,0,NULL,1,0,''),
 (262,53,'Rs 400',NULL,0,0,'',0,0,NULL,1,0,''),
 (263,53,'Rs 375',NULL,0,0,'',0,0,NULL,1,0,''),
 (264,53,'Rs 500',NULL,0,0,'',0,0,NULL,1,0,''),
 (265,53,'Rs 390',NULL,1,0,'',0,0,NULL,1,0,''),
 (266,54,'Rs 680',NULL,1,0,'',0,0,NULL,1,0,''),
 (267,54,'Rs 620',NULL,0,0,'',0,0,NULL,1,0,''),
 (268,54,'Rs 475',NULL,0,0,'',0,0,NULL,1,0,''),
 (269,54,'Rs 600',NULL,0,0,'',0,0,NULL,1,0,''),
 (270,54,'Rs 880',NULL,0,0,'',0,0,NULL,1,0,''),
 (271,55,'Rs 45',NULL,0,0,'',0,0,NULL,1,0,''),
 (272,55,'Rs 100',NULL,0,0,'',0,0,NULL,1,0,''),
 (273,55,'Rs 60',NULL,1,0,'',0,0,NULL,1,0,''),
 (274,55,'Rs 65',NULL,0,0,'',0,0,NULL,1,0,''),
 (275,55,'Rs 80',NULL,0,0,'',0,0,NULL,1,0,''),
 (276,56,'60%',NULL,0,0,'',0,0,NULL,1,0,''),
 (277,56,'25%',NULL,0,0,'',0,0,NULL,1,0,''),
 (278,56,'30%',NULL,0,0,'',0,0,NULL,1,0,''),
 (279,56,'52%',NULL,1,0,'',0,0,NULL,1,0,''),
 (280,56,'70%',NULL,0,0,'',0,0,NULL,1,0,''),
 (281,57,'Rs 45',NULL,0,0,'',0,0,NULL,1,0,''),
 (282,57,'Rs 50',NULL,0,0,'',0,0,NULL,1,0,''),
 (283,57,'Rs 55',NULL,0,0,'',0,0,NULL,1,0,''),
 (284,57,'Rs 60',NULL,1,0,'',0,0,NULL,1,0,''),
 (285,57,'Rs 65',NULL,0,0,'',0,0,NULL,1,0,''),
 (286,58,'Rs 2 (Loss)',NULL,0,0,'',0,0,NULL,1,0,''),
 (287,58,'Rs 3 (Profit)',NULL,1,0,'',0,0,NULL,1,0,''),
 (288,58,'Rs 4 (Loss)',NULL,0,0,'',0,0,NULL,1,0,''),
 (289,58,'Rs 5 (Profit)',NULL,0,0,'',0,0,NULL,1,0,''),
 (290,58,'Rs 1 (Loss)',NULL,0,0,'',0,0,NULL,1,0,''),
 (291,59,'150%',NULL,0,0,'',0,0,NULL,1,0,''),
 (292,59,'200%',NULL,0,0,'',0,0,NULL,1,0,''),
 (293,59,'300%',NULL,1,0,'',0,0,NULL,1,0,''),
 (294,59,'350%',NULL,0,0,'',0,0,NULL,1,0,''),
 (295,59,'400%',NULL,0,0,'',0,0,NULL,1,0,''),
 (296,60,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (297,60,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (298,60,'5',NULL,1,0,'',0,0,NULL,1,0,''),
 (299,60,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (300,60,'7',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
INSERT INTO `apt_tp_rule` (`tp_id`,`rule`) VALUES 
 (1,''),
 (2,''),
 (3,''),
 (4,''),
 (5,''),
 (6,''),
 (7,''),
 (8,''),
 (9,''),
 (10,''),
 (11,''),
 (12,''),
 (13,''),
 (14,''),
 (15,''),
 (16,''),
 (17,''),
 (18,''),
 (19,''),
 (20,'');
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1949 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,3,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,3,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,3,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,3,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,3,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,3,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,3,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,3,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,3,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,3,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,3,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,3,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,3,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,3,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,3,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,3,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,3,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,3,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,3,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,3,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,3,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,3,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,3,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,3,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,3,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,3,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,3,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,3,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,3,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,3,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,3,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,3,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,3,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,3,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,3,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,3,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,3,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,3,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,3,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,3,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,3,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,3,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,3,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,3,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,3,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,3,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,3,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,3,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,3,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,3,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,3,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,3,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,3,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,3,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,3,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,3,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,3,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,3,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,3,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,3,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,3,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,3,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,3,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,3,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,3,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,3,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,3,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,3,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,3,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,3,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,3,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,3,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,3,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,3,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,3,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,3,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,3,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,3,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,3,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,3,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,3,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,3,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,3,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,3,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,3,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,3,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,3,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,3,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,3,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,3,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,3,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,3,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,3,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,3,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,3,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,3,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,3,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,3,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,3,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,3,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,3,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,3,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,3,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,3,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,3,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,3,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,3,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,3,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,3,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,3,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,3,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,3,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,3,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,3,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,3,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,3,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,3,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,3,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,3,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,3,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,3,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,3,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,3,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,3,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,3,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,3,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,3,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,3,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,3,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,3,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,3,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,3,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,3,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,3,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,3,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,3,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,3,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,3,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,3,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,3,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,3,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,3,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,3,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,3,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,3,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,3,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,3,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,3,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,3,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,3,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,3,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,3,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,3,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,3,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,3,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,3,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,3,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,3,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,3,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,3,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (311,3,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (312,3,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (313,3,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (314,3,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (315,3,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (316,3,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (317,3,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (318,3,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (319,3,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (320,3,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (321,3,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (322,3,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (323,3,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (324,3,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (325,3,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (326,3,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (327,3,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (328,3,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (329,3,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (330,3,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (331,3,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (332,3,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (333,3,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (334,3,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (335,3,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (336,3,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (337,3,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (338,3,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (339,3,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (340,3,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (341,3,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (342,3,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (343,3,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (344,3,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (345,3,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (346,3,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (347,3,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (348,3,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (349,3,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (350,3,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (351,3,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (352,3,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (353,3,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (354,3,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (355,3,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (356,3,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (357,3,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (358,3,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (359,3,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (360,3,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (361,3,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (362,3,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (363,3,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (364,3,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (365,3,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (366,3,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (367,3,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (368,3,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (369,3,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (370,3,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (371,3,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (372,3,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (373,3,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (374,3,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (375,3,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (376,3,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (377,3,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (378,3,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (379,3,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (380,3,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (381,3,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (382,3,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (383,3,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (384,3,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (385,3,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (386,3,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (387,3,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (388,3,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (389,3,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (390,3,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (391,3,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (392,3,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (393,3,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (394,3,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (395,3,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (396,3,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (397,3,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (398,3,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (399,3,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (400,3,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (401,3,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (402,3,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (403,3,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (404,3,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (405,3,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (406,3,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (407,3,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (408,3,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (409,3,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (410,3,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (411,3,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (412,3,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (413,3,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (414,3,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (415,3,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (416,3,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (417,3,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (418,3,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (419,3,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (420,3,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (421,3,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (422,3,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (423,3,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (424,3,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (425,3,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (426,3,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (427,3,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (428,3,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (429,3,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (430,3,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (431,3,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (432,3,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (433,3,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (434,3,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (435,3,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (436,3,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (437,3,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (438,3,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (439,3,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (440,3,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (441,3,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (442,3,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (443,3,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (444,3,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (445,3,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (446,3,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (447,3,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (448,3,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (449,3,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (450,3,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (451,3,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (452,3,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (453,3,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (454,3,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (455,3,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (456,3,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (457,3,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (458,3,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (459,3,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (460,3,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (461,3,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (462,3,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (463,3,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (464,3,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (465,3,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (466,3,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (467,3,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (468,3,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (469,3,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (470,3,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (471,3,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (472,3,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (473,3,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (474,3,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (475,3,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (476,3,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (477,3,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (478,3,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (479,3,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (480,3,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (481,3,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (482,3,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (483,3,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (484,3,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (485,3,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (486,3,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (487,3,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (488,3,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (489,3,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (490,3,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (491,3,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (492,3,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (493,3,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (494,3,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (495,3,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (496,3,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (497,3,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (498,3,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (499,3,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (500,3,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (501,3,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (502,3,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (503,3,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (504,3,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (505,3,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (506,3,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (507,3,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (508,3,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (509,3,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (510,3,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (511,3,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (512,3,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (513,3,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (514,3,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (515,3,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (516,3,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (517,3,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (518,3,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (519,3,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (520,3,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (521,3,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (522,3,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (523,3,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (524,3,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (525,3,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (526,3,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (527,3,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (528,3,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (529,3,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (530,3,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (531,3,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (532,3,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (533,3,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (534,3,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (535,3,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (536,3,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (537,3,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (538,3,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (539,3,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (540,3,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (541,3,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (542,3,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (543,3,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (544,3,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (545,3,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (546,3,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (547,3,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (548,3,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (549,3,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (550,3,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (551,3,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (552,3,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (553,3,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (554,3,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (555,3,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (556,3,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (557,3,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (558,3,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (559,3,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (560,3,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (561,3,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (562,3,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (563,3,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (564,3,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (565,3,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (566,3,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (567,3,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (568,3,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (569,3,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (570,3,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (571,3,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (572,3,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (573,3,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (574,3,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (575,3,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (576,3,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (577,3,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (578,3,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (579,3,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (580,3,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (581,3,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (582,3,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (583,3,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (584,3,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (585,3,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (586,3,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (587,3,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (588,3,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (589,3,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (590,3,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (591,3,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (592,3,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (593,3,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (594,3,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (595,3,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (596,3,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (597,3,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (598,3,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (599,3,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (600,3,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (601,3,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (602,3,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (603,3,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (604,3,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (605,3,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (606,3,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (607,3,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (608,3,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (609,3,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (610,3,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (611,3,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (612,3,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (613,3,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (614,3,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (615,3,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (616,3,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (617,3,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (618,3,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (619,3,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (620,3,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (621,3,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (622,3,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (623,3,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (624,3,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (625,3,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (626,3,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (627,3,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (628,3,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (629,3,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (630,3,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (631,3,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (632,3,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (633,3,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (634,3,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (635,3,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (636,3,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (637,3,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (638,3,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (639,3,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (640,3,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (641,3,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (642,3,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (643,3,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (644,3,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (645,3,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (646,3,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (647,3,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (648,3,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (649,3,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (650,3,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (651,3,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (652,3,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (653,3,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (654,3,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (655,3,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (656,3,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (657,3,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (658,3,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (659,3,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (660,3,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (661,3,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (662,3,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (663,3,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (664,3,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (665,3,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (666,3,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (667,3,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (668,3,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (669,3,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (670,3,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (671,3,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (672,3,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (673,3,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (674,3,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (675,3,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (676,3,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (677,3,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (678,3,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (679,3,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (680,3,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (681,3,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (682,3,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (683,3,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (684,3,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (685,3,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (686,3,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (687,3,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (688,3,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (689,3,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (690,3,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (691,3,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (692,3,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (693,3,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (694,3,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (695,3,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (696,3,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (697,3,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (698,3,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (699,3,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (700,3,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (701,3,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (702,3,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (703,3,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (704,3,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (705,3,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (706,3,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (707,3,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (708,3,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (709,3,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (710,3,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (711,3,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (712,3,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (713,3,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (714,3,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (715,3,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (716,3,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (717,3,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (718,3,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (719,3,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (720,3,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (721,3,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (722,3,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (723,3,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (724,3,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (725,3,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (726,3,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (727,3,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (728,3,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (729,3,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (730,3,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (731,3,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (732,3,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (733,3,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (734,3,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (735,3,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (736,3,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (737,3,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (738,3,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (739,3,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (740,3,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (741,3,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (742,3,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (743,3,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (744,3,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (745,3,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (746,3,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (747,3,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (748,3,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (749,3,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (750,3,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (751,3,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (752,3,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (753,3,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (754,3,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (755,3,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (756,3,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (757,3,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (758,3,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (759,3,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (760,3,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (761,3,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (762,3,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (763,3,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (764,3,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (765,3,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (766,3,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (767,3,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (768,3,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (769,3,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (770,3,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (771,3,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (772,3,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (773,3,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (774,3,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (775,3,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (776,3,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (777,3,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (778,3,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (779,3,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (780,3,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (781,3,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (782,3,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (783,3,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (784,3,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (785,3,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (786,3,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (787,3,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (788,3,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (789,3,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (790,3,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (791,3,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (792,3,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (793,3,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (794,3,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (795,3,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (796,3,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (797,3,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (798,3,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (799,3,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (800,3,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (801,3,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (802,3,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (803,3,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (804,3,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (805,3,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (806,3,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (807,3,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (808,3,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (809,3,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (810,3,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (811,3,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (812,3,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (813,3,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (814,3,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (815,3,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (816,3,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (817,3,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (818,3,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (819,3,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (820,3,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (821,3,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (822,3,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (823,3,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (824,3,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (825,3,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (826,3,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (827,3,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (828,3,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (829,3,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (830,3,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (831,3,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (832,3,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (833,3,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (834,3,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (835,3,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (836,3,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (837,3,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (838,3,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (839,3,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (840,3,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (841,3,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (842,3,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (843,3,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (844,3,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (845,3,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (846,3,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (847,3,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (848,3,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (849,3,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (850,3,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (851,3,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (852,3,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (853,3,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (854,3,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (855,3,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (856,3,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (857,3,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (858,3,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (859,3,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (860,3,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (861,3,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (862,3,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (863,3,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (864,3,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (865,3,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (866,3,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (867,3,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (868,3,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (869,3,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (870,3,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (871,3,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (872,3,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (873,3,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (874,3,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (875,3,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (876,3,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (877,3,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (878,3,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (879,3,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (880,3,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (881,3,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (882,3,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (883,3,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (884,3,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (885,3,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (886,3,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (887,3,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (888,3,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (889,3,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (890,3,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (891,3,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (892,3,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (893,3,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (894,3,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (895,3,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (896,3,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (897,3,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (898,3,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (899,3,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (900,3,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (901,3,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (902,3,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (903,3,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (904,3,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (905,3,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (906,3,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (907,3,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (908,3,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (909,3,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (910,3,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (911,3,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (912,3,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (913,3,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (914,3,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (915,3,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (916,3,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (917,3,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (918,3,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (919,3,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (920,3,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (921,3,1,847,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (922,3,1,848,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (923,3,1,849,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (924,3,1,850,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (925,3,1,851,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (926,3,1,852,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (927,3,1,853,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (928,3,1,854,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (929,3,1,855,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (930,3,1,856,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (931,3,1,857,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (932,3,1,858,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (933,3,1,859,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (934,3,1,860,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (935,3,1,861,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (936,3,1,862,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (937,3,1,863,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (938,3,1,864,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (939,3,1,865,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (940,3,1,866,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (941,3,1,867,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (942,3,1,868,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (943,3,1,869,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (944,3,1,870,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (945,3,1,871,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (946,3,1,872,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (947,3,1,873,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (948,3,1,874,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (949,3,1,875,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (950,3,1,876,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (951,3,1,877,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (952,3,1,878,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (953,3,1,879,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (954,3,1,880,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (955,3,1,881,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (956,3,1,882,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (957,3,1,883,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (958,3,1,884,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (959,3,1,885,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (960,3,1,886,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (961,3,1,887,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (962,3,1,888,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (963,3,1,889,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (964,3,1,890,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (965,3,1,891,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (966,3,1,892,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (967,3,1,893,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (968,3,1,894,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (969,3,1,895,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (970,3,1,896,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (971,3,1,897,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (972,3,1,898,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (973,3,1,899,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (974,3,1,900,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (975,3,1,901,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (976,3,1,902,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (977,3,1,903,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (978,3,1,904,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (979,3,1,905,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (980,3,1,906,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (981,3,1,907,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (982,3,1,908,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (983,3,1,909,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (984,3,1,910,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (985,3,1,911,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (986,3,1,912,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (987,3,1,913,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (988,3,1,914,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (989,3,1,915,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (990,3,1,916,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (991,3,1,917,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (992,3,1,918,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (993,3,1,919,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (994,3,1,920,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (995,3,1,921,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (996,3,1,922,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (997,3,1,923,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (998,3,1,924,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (999,3,1,925,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1000,3,1,926,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1001,3,1,927,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1002,3,1,928,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1003,3,1,929,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1004,3,1,930,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1005,3,1,931,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1006,3,1,932,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1007,3,1,933,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1008,3,1,934,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1009,3,1,935,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1010,3,1,936,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1011,3,1,937,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1012,3,1,938,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1013,3,1,939,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1014,3,1,940,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1015,3,1,941,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1016,3,1,942,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1017,3,1,943,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1018,3,1,944,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1019,3,1,945,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1020,3,1,946,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1021,3,1,947,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1022,3,1,948,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1023,3,1,949,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1024,3,1,950,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1025,3,1,951,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1026,3,1,952,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1027,3,1,953,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1028,3,1,954,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1029,3,1,955,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1030,3,1,956,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1031,3,1,957,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1032,3,1,958,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1033,3,1,959,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1034,3,1,960,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1035,3,1,961,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1036,3,1,962,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1037,3,1,963,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1038,3,1,964,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1039,3,1,965,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1040,3,1,966,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1041,3,1,967,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1042,3,1,968,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1043,3,1,969,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1044,3,1,970,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1045,3,1,971,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1046,3,1,972,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1047,3,1,973,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1048,3,1,974,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1049,3,1,975,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1050,4,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1051,4,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1052,4,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1053,4,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1054,4,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1055,4,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1056,4,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1057,4,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1058,4,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1059,4,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1060,4,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1061,4,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1062,4,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1063,4,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1064,4,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1065,4,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1066,4,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1067,4,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1068,4,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1069,4,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1070,4,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1071,4,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1072,4,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1073,4,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1074,4,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1075,4,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1076,4,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1077,4,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1078,4,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1079,4,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1080,4,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1081,4,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1082,4,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1083,4,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1084,4,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1085,4,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1086,4,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1087,4,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1088,4,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1089,4,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1090,4,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1091,4,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1092,4,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1093,4,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1094,4,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1095,4,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1096,4,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1097,4,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1098,4,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1099,4,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1100,4,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1101,4,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1102,4,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1103,4,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1104,4,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1105,4,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1106,4,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1107,4,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1108,4,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1109,4,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1110,4,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1111,4,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1112,4,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1113,4,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1114,4,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1115,4,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1116,4,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1117,4,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1118,4,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1119,4,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1120,4,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1121,4,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1122,4,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1123,4,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1124,4,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1125,4,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1126,4,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1127,4,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1128,4,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1129,4,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1130,4,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1131,4,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1132,4,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1133,4,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1134,4,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1135,4,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1136,4,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1137,4,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1138,4,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1139,4,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1140,4,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1141,4,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1142,4,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1143,4,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1144,4,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1145,4,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1146,4,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1147,4,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1148,4,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1149,4,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1150,4,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1151,4,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1152,4,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1153,4,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1154,4,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1155,4,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1156,4,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1157,4,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1158,4,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1159,4,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1160,4,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1161,4,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1162,4,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1163,4,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1164,4,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1165,4,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1166,4,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1167,4,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1168,4,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1169,4,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1170,4,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1171,4,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1172,4,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1173,4,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1174,4,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1175,4,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1176,4,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1177,4,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1178,4,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1179,4,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1180,4,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1181,4,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1182,4,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1183,4,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1184,4,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1185,4,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1186,4,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1187,4,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1188,4,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1189,4,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1190,4,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1191,4,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1192,4,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1193,4,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1194,4,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1195,4,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1196,4,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1197,4,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1198,4,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1199,4,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1200,4,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1201,4,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1202,4,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1203,4,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1204,4,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1205,4,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1206,4,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1207,4,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1208,4,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1209,4,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1210,4,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1211,4,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1212,4,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1213,4,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1214,4,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1215,4,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1216,4,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1217,4,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1218,4,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1219,4,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1220,4,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1221,4,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1222,4,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1223,4,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1224,4,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1225,4,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1226,4,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1227,4,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1228,4,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1229,4,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1230,4,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1231,4,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1232,4,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1233,4,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1234,4,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1235,4,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1236,4,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1237,4,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1238,4,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1239,4,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1240,4,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1241,4,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1242,4,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1243,4,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1244,4,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1245,4,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1246,4,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1247,4,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1248,4,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1249,4,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1250,4,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1251,4,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1252,4,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1253,4,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1254,4,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1255,4,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1256,4,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1257,4,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1258,4,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1259,4,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1260,4,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1261,4,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1262,4,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1263,4,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1264,4,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1265,4,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1266,4,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1267,4,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1268,4,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1269,4,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1270,4,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1271,4,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1272,4,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1273,4,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1274,4,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1275,4,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1276,4,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1277,4,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1278,4,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1279,4,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1280,4,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1281,4,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1282,4,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1283,4,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1284,4,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1285,4,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1286,4,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1287,4,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1288,4,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1289,4,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1290,4,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1291,4,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1292,4,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1293,4,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1294,4,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1295,4,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1296,4,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1297,4,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1298,4,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1299,4,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1300,4,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1301,4,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1302,4,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1303,4,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1304,4,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1305,4,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1306,4,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1307,4,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1308,4,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1309,4,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1310,4,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1311,4,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1312,4,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1313,4,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1314,4,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1315,4,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1316,4,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1317,4,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1318,4,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1319,4,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1320,4,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1321,4,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1322,4,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1323,4,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1324,4,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1325,4,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1326,4,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1327,4,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1328,4,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1329,4,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1330,4,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1331,4,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1332,4,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1333,4,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1334,4,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1335,4,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1336,4,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1337,4,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1338,4,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1339,4,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1340,4,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1341,4,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1342,4,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1343,4,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1344,4,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1345,4,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1346,4,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1347,4,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1348,4,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1349,4,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1350,4,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1351,4,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1352,4,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1353,4,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1354,4,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1355,4,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1356,4,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1357,4,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1358,4,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1359,4,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1360,4,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1361,4,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1362,4,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1363,4,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1364,4,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1365,4,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1366,4,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1367,4,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1368,4,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1369,4,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1370,4,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1371,4,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1372,4,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1373,4,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1374,4,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1375,4,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1376,4,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1377,4,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1378,4,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1379,4,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1380,4,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1381,4,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1382,4,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1383,4,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1384,4,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1385,4,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1386,4,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1387,4,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1388,4,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1389,4,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1390,4,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1391,4,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1392,4,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1393,4,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1394,4,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1395,4,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1396,4,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1397,4,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1398,4,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1399,4,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1400,4,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1401,4,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1402,4,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1403,4,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1404,4,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1405,4,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1406,4,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1407,4,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1408,4,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1409,4,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1410,4,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1411,4,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1412,4,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1413,4,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1414,4,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1415,4,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1416,4,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1417,4,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1418,4,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1419,4,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1420,4,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1421,4,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1422,4,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1423,4,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1424,4,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1425,4,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1426,4,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1427,4,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1428,4,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1429,4,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1430,4,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1431,4,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1432,4,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1433,4,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1434,4,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1435,4,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1436,4,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1437,4,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1438,4,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1439,4,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1440,4,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1441,4,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1442,4,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1443,4,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1444,4,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1445,4,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1446,4,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1447,4,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1448,4,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1449,4,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1450,4,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1451,4,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1452,4,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1453,4,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1454,4,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1455,4,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1456,4,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1457,4,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1458,4,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1459,4,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1460,4,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1461,4,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1462,4,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1463,4,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1464,4,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1465,4,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1466,4,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1467,4,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1468,4,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1469,4,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1470,4,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1471,4,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1472,4,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1473,4,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1474,4,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1475,4,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1476,4,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1477,4,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1478,4,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1479,4,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1480,4,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1481,4,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1482,4,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1483,4,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1484,4,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1485,4,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1486,4,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1487,4,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1488,4,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1489,4,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1490,4,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1491,4,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1492,4,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1493,4,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1494,4,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1495,4,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1496,4,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1497,4,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1498,4,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1499,4,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1500,4,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1501,4,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1502,4,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1503,4,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1504,4,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1505,4,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1506,4,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1507,4,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1508,4,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1509,4,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1510,4,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1511,4,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1512,4,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1513,4,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1514,4,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1515,4,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1516,4,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1517,4,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1518,4,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1519,4,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1520,4,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1521,4,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1522,4,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1523,4,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1524,4,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1525,4,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1526,4,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1527,4,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1528,4,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1529,4,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1530,4,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1531,4,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1532,4,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1533,4,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1534,4,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1535,4,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1536,4,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1537,4,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1538,4,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1539,4,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1540,4,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1541,4,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1542,4,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1543,4,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1544,4,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1545,4,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1546,4,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1547,4,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1548,4,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1549,4,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1550,4,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1551,4,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1552,4,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1553,4,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1554,4,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1555,4,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1556,4,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1557,4,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1558,4,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1559,4,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1560,4,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1561,4,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1562,4,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1563,4,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1564,4,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1565,4,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1566,4,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1567,4,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1568,4,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1569,4,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1570,4,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1571,4,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1572,4,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1573,4,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1574,4,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1575,4,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1576,4,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1577,4,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1578,4,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1579,4,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1580,4,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1581,4,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1582,4,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1583,4,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1584,4,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1585,4,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1586,4,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1587,4,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1588,4,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1589,4,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1590,4,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1591,4,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1592,4,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1593,4,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1594,4,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1595,4,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1596,4,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1597,4,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1598,4,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1599,4,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1600,4,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1601,4,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1602,4,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1603,4,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1604,4,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1605,4,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1606,4,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1607,4,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1608,4,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1609,4,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1610,4,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1611,4,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1612,4,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1613,4,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1614,4,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1615,4,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1616,4,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1617,4,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1618,4,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1619,4,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1620,4,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1621,4,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1622,4,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1623,4,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1624,4,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1625,4,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1626,4,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1627,4,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1628,4,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1629,4,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1630,4,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1631,4,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1632,4,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1633,4,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1634,4,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1635,4,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1636,4,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1637,4,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1638,4,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1639,4,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1640,4,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1641,4,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1642,4,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1643,4,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1644,4,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1645,4,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1646,4,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1647,4,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1648,4,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1649,4,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1650,4,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1651,4,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1652,4,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1653,4,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1654,4,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1655,4,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1656,4,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1657,4,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1658,4,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1659,4,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1660,4,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1661,4,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1662,4,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1663,4,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1664,4,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1665,4,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1666,4,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1667,4,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1668,4,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1669,4,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1670,4,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1671,4,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1672,4,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1673,4,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1674,4,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1675,4,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1676,4,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1677,4,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1678,4,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1679,4,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1680,4,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1681,4,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1682,4,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1683,4,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1684,4,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1685,4,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1686,4,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1687,4,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1688,4,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1689,4,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1690,4,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1691,4,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1692,4,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1693,4,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1694,4,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1695,4,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1696,4,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1697,4,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1698,4,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1699,4,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1700,4,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1701,4,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1702,4,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1703,4,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1704,4,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1705,4,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1706,4,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1707,4,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1708,4,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1709,4,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1710,4,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1711,4,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1712,4,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1713,4,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1714,4,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1715,4,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1716,4,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1717,4,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1718,4,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1719,4,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1720,4,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1721,4,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1722,4,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1723,4,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1724,4,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1725,4,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1726,4,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1727,4,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1728,4,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1729,4,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1730,4,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1731,4,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1732,4,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1733,4,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1734,4,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1735,4,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1736,4,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1737,4,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1738,4,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1739,4,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1740,4,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1741,4,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1742,4,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1743,4,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1744,4,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1745,4,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1746,4,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1747,4,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1748,4,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1749,4,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1750,4,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1751,4,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1752,4,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1753,4,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1754,4,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1755,4,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1756,4,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1757,4,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1758,4,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1759,4,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1760,4,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1761,4,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1762,4,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1763,4,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1764,4,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1765,4,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1766,4,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1767,4,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1768,4,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1769,4,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1770,4,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1771,4,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1772,4,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1773,4,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1774,4,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1775,4,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1776,4,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1777,4,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1778,4,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1779,4,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1780,4,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1781,4,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1782,4,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1783,4,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1784,4,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1785,4,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1786,4,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1787,4,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1788,4,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1789,4,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1790,4,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1791,4,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1792,4,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1793,4,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1794,4,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1795,4,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1796,4,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1797,4,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1798,4,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1799,4,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1800,4,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1801,4,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1802,4,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1803,4,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1804,4,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1805,4,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1806,4,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1807,4,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1808,4,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1809,4,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1810,4,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1811,4,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1812,4,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1813,4,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1814,4,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1815,4,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1816,4,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1817,4,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1818,4,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1819,4,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1820,4,1,847,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1821,4,1,848,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1822,4,1,849,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1823,4,1,850,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1824,4,1,851,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1825,4,1,852,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1826,4,1,853,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1827,4,1,854,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1828,4,1,855,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1829,4,1,856,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1830,4,1,857,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1831,4,1,858,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1832,4,1,859,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1833,4,1,860,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1834,4,1,861,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1835,4,1,862,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1836,4,1,863,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1837,4,1,864,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1838,4,1,865,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1839,4,1,866,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1840,4,1,867,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1841,4,1,868,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1842,4,1,869,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1843,4,1,870,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1844,4,1,871,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1845,4,1,872,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1846,4,1,873,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1847,4,1,874,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1848,4,1,875,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1849,4,1,876,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1850,4,1,877,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1851,4,1,878,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1852,4,1,879,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1853,4,1,880,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1854,4,1,881,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1855,4,1,882,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1856,4,1,883,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1857,4,1,884,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1858,4,1,885,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1859,4,1,886,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1860,4,1,887,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1861,4,1,888,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1862,4,1,889,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1863,4,1,890,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1864,4,1,891,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1865,4,1,892,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1866,4,1,893,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1867,4,1,894,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1868,4,1,895,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1869,4,1,896,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1870,4,1,897,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1871,4,1,898,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1872,4,1,899,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1873,4,1,900,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1874,4,1,901,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1875,4,1,902,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1876,4,1,903,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1877,4,1,904,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1878,4,1,905,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1879,4,1,906,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1880,4,1,907,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1881,4,1,908,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1882,4,1,909,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1883,4,1,910,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1884,4,1,911,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1885,4,1,912,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1886,4,1,913,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1887,4,1,914,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1888,4,1,915,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1889,4,1,916,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1890,4,1,917,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1891,4,1,918,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1892,4,1,919,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1893,4,1,920,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1894,4,1,921,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1895,4,1,922,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1896,4,1,923,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1897,4,1,924,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1898,4,1,925,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1899,4,1,926,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1900,4,1,927,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1901,4,1,928,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1902,4,1,929,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1903,4,1,930,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1904,4,1,931,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1905,4,1,932,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1906,4,1,933,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1907,4,1,934,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1908,4,1,935,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1909,4,1,936,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1910,4,1,937,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1911,4,1,938,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1912,4,1,939,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1913,4,1,940,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1914,4,1,941,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1915,4,1,942,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1916,4,1,943,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1917,4,1,944,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1918,4,1,945,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1919,4,1,946,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1920,4,1,947,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1921,4,1,948,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1922,4,1,949,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1923,4,1,950,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1924,4,1,951,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1925,4,1,952,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1926,4,1,953,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1927,4,1,954,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1928,4,1,955,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1929,4,1,956,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1930,4,1,957,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1931,4,1,958,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1932,4,1,959,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1933,4,1,960,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1934,4,1,961,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1935,4,1,962,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1936,4,1,963,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1937,4,1,964,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1938,4,1,965,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1939,4,1,966,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1940,4,1,967,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1941,4,1,968,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1942,4,1,969,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1943,4,1,970,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1944,4,1,971,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1945,4,1,972,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1946,4,1,973,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1947,4,1,974,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1948,4,1,975,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-07-14 18:27:03',60,1,'30.00',1,0),
 (2,2,2,1,'2024-07-14 18:27:04',60,1,'30.00',1,0),
 (3,1,1,1,'2024-07-14 18:27:05',60,1,'30.00',1,0),
 (4,2,2,1,'2024-07-14 18:27:11',60,1,'30.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #002'),
 (2,'Assessment Test #003');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-07-14 18:27:02'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-07-14 18:27:02'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-07-14 18:27:02'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-07-14 18:27:02'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-07-14 18:27:02'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-07-14 18:27:02'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-07-14 18:27:02'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-07-14 18:27:02'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-07-14 18:27:02'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-07-14 18:27:02'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-07-14 18:27:02'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-07-14 18:27:02'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-07-14 18:27:02'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-07-14 18:27:02'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-07-14 18:27:02'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-07-14 18:27:02'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-07-14 18:27:02'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-07-14 18:27:02'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-07-14 18:27:02'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-07-14 18:27:02'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-07-14 18:27:02'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-07-14 18:27:02'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-07-14 18:27:02'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-07-14 18:27:02'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-07-14 18:27:02'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-07-14 18:27:02'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-07-14 18:27:02'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-07-14 18:27:02'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-07-14 18:27:02'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-07-14 18:27:02'),
 (31,'',0,'0',NULL,NULL,31,0,NULL,'2024-07-14 18:27:02'),
 (32,'',0,'0',NULL,NULL,32,0,NULL,'2024-07-14 18:27:02'),
 (33,'',0,'0',NULL,NULL,33,0,NULL,'2024-07-14 18:27:02'),
 (34,'',0,'0',NULL,NULL,34,0,NULL,'2024-07-14 18:27:02'),
 (35,'',0,'0',NULL,NULL,35,0,NULL,'2024-07-14 18:27:02'),
 (36,'',0,'0',NULL,NULL,36,0,NULL,'2024-07-14 18:27:02'),
 (37,'',0,'0',NULL,NULL,37,0,NULL,'2024-07-14 18:27:02'),
 (38,'',0,'0',NULL,NULL,38,0,NULL,'2024-07-14 18:27:02'),
 (39,'',0,'0',NULL,NULL,39,0,NULL,'2024-07-14 18:27:02'),
 (40,'',0,'0',NULL,NULL,40,0,NULL,'2024-07-14 18:27:03'),
 (41,'',0,'0',NULL,NULL,41,0,NULL,'2024-07-14 18:27:03'),
 (42,'',0,'0',NULL,NULL,42,0,NULL,'2024-07-14 18:27:03'),
 (43,'',0,'0',NULL,NULL,43,0,NULL,'2024-07-14 18:27:03'),
 (44,'',0,'0',NULL,NULL,44,0,NULL,'2024-07-14 18:27:03'),
 (45,'',0,'0',NULL,NULL,45,0,NULL,'2024-07-14 18:27:03'),
 (46,'',0,'0',NULL,NULL,46,0,NULL,'2024-07-14 18:27:03'),
 (47,'',0,'0',NULL,NULL,47,0,NULL,'2024-07-14 18:27:03'),
 (48,'',0,'0',NULL,NULL,48,0,NULL,'2024-07-14 18:27:03'),
 (49,'',0,'0',NULL,NULL,49,0,NULL,'2024-07-14 18:27:03'),
 (50,'',0,'0',NULL,NULL,50,0,NULL,'2024-07-14 18:27:03'),
 (51,'',0,'0',NULL,NULL,51,0,NULL,'2024-07-14 18:27:03'),
 (52,'',0,'0',NULL,NULL,52,0,NULL,'2024-07-14 18:27:03'),
 (53,'',0,'0',NULL,NULL,53,0,NULL,'2024-07-14 18:27:03'),
 (54,'',0,'0',NULL,NULL,54,0,NULL,'2024-07-14 18:27:03'),
 (55,'',0,'0',NULL,NULL,55,0,NULL,'2024-07-14 18:27:03'),
 (56,'',0,'0',NULL,NULL,56,0,NULL,'2024-07-14 18:27:03'),
 (57,'',0,'0',NULL,NULL,57,0,NULL,'2024-07-14 18:27:03'),
 (58,'',0,'0',NULL,NULL,58,0,NULL,'2024-07-14 18:27:03'),
 (59,'',0,'0',NULL,NULL,59,0,NULL,'2024-07-14 18:27:03'),
 (60,'',0,'0',NULL,NULL,60,0,NULL,'2024-07-14 18:27:03');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Swati spends 40% of her salary on food, 25% on house rent, 15% on Entertainment and 5% on conveyance. If her saving at the end of a month is Rs 1200, then her salary per month is Rs ______?</div>\n',1,1,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A school has only three classes which contain 40, 50 and 60 students respectively. The pass percentages of these classes are 10, 20 and 10 respectively. The pass percentage of the school is ______%?</div>\n',1,2,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If X% of a is the same as Y% of b, the Z% of b is _______?</div>\n',1,3,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">An increase of Rs 60 in the monthly salary of Madan made it 50% of the monthly salary of Kamal. What is Madan&rsquo;s present monthly salary?</div>\n',1,4,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">300 grams of sugar solution has 40% sugar in it. How much sugar should be added to make it 50% in the solution?</div>\n',1,5,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The income of a broker remains unchanged though the rate of commission is increased from 4% to 5%. The percentage slump in business is ______?</div>\n',1,6,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Two numbers are less than a third number by 30% and 37% respectively. How much percent is the second number less than the first?</div>\n',1,7,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In an examination, 35% of total student failed in Hindi, 45% failed in English and 20% in both. The percentage of those who passed in both the subjects is ________%?</div>\n',1,8,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">There are 600 boys in a hostel. Each plays either hockey or football or both. If 75% play hockey and 45% play football, how many play both?</div>\n',1,9,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Raman&rsquo;s salary was decreased by 50% and subsequently increased by 50%. He has a loss of _______%?</div>\n',1,10,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">On increasing the price of T.V. sets by 30% their sale decreased by 20%. What is the effect on the revenue receipts of the shop?</div>\n',1,11,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The price of sugar increases by 20%.  By what percent must a house wife reduce the consumption of sugar, so that the expenditure on sugar is the same as before?</div>\n',1,12,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The value of a machine depreciates at the rate of 10% every year. It was purchased 3 years ago. If its present value is Rs 8748, its purchase price was Rs __________?</div>\n',1,13,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The length of a rectangle is increased by 20% and the width is decreased by 20%. The area changes by________%?</div>\n',1,14,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A cricket team won 40% of the total number of matches it played during a year. If it lost 50% of the matches played and 20 matches were drawn, then the total number of matches played by the team during the year was _________? </div>\n',1,15,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the price of sugar is increased from Rs 6 per kg to Rs 7.50 per kg, then how much use of sugar a person should reduce so that, the expenditure on sugar doesn&rsquo;t change?</div>\n',1,16,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Entry fee in an exhibition was Re 1. Later this was reduced by 25%, which resulted in 20% increase in sale. Find the percentage increase in the number of visitors?</div>\n',1,17,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The population of a city has increased at the rate of 10% every ten years. The present population is 48,400. What was it 20 yrs ago?</div>\n',1,18,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The population of a town was 1,60,000 three yrs ago. If it had increased by 3%, 2.5% & 5% in the last-three years, find the present population?</div>\n',1,19,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In an election between two candidates, one got 55% of the total valid votes & 20% of the votes were invalid. If the total number of votes was 7500, the number of valid votes that the other candidate gotwas__________?</div>\n',1,20,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Two students appeared at an examination. One of them secured 9 marks more than the other and his marks was 56% of the sum of their marks. The marks obtained by them are_______& ______?</div>\n',1,21,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If A\'s height is 40% less than that of B, how much percent B\'s height is more than that of A?</div>\n',1,22,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">40% of the women are above 30 years of age and 80 percent of the women are less than or equal to 50 years of age. 20 percent of all women play basketball. If 30 percent of the women above the age of 50 plays basketball, what percent of players are less than or equal to 50 years?</div>\n',1,23,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The ratio 5:20 expressed as percent equals to______%?</div>\n',1,24,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If &lsquo;y&rsquo; exceeds &lsquo;x&rsquo; by 20%, then &lsquo;x&rsquo; is less than &lsquo;y&rsquo; by______%?</div>\n',1,25,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">How much 60% of 50 is greater than 40% of 30?</div>\n',1,26,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 40 is subtracted from 60% of a number, the result is 50. Find the number?</div>\n',1,27,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A sells his goods 50% cheaper than B, but 50% dearer than C. The cheapest is sold by ______?</div>\n',1,28,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The price of sugar having gone down by 10%, a consumer can buy 5 kg more sugar for Rs 270. The difference between the original and reduced price per kg is___________?</div>\n',1,29,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the price of a book is first decreased by 25% and then increased by 20%, then the net change in the price will be _____%?</div>\n',1,30,1,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (31,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If by selling an article for Rs 100 a man gains Rs 15, then his gain percent is _______%?</div>\n',1,1,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (32,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">When a commodity is sold for Rs 34.80, there is a loss of 25%. What is the C.P of the commodity? </div>\n',1,2,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (33,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the selling price of an article is (4/3) times its cost-price. The profit percent is ______%?                </div>\n',1,3,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (34,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">There would be a 10% loss if a toy is sold at Rs 10.80 per piece. At what price should it be sold to earn a profit of 20%?</div>\n',1,4,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (35,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A man sells 320 mangoes at the C.P of 400 mangoes. His gain percent is _______%?</div>\n',1,5,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (36,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the C.P of 12 tables is equal to the S.P of 16 tables, the loss or gain percent is ____%?</div>\n',1,6,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (37,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A fruit seller purchases oranges at the rate of 3 for Rs 5 & sells them at the rate of 2 for Rs 4. His profit in the transaction is ______%?</div>\n',1,7,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (38,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If I purchases 11 books for Rs 10 and sold all the books at the rate of 10 books for Rs 11, the profit percentage is ______%?</div>\n',1,8,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (39,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Ajay bought 15 kgs of dhal at rate of Rs14.50 per kg & 10 kgs at the rate of Rs 13 per kg. He mixed the two & sold the mixture at the rate of Rs15 per kg. What was his total gain in the transaction?</div>\n',1,9,2,'1','2024-07-14 18:27:02',0,NULL,NULL,'','',NULL,NULL),
 (40,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A dealer professing to sell his goods at C.P. uses a 900 gms weight for a kilogram. His gain percent is ______%?</div>\n',1,10,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (41,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">By selling 45 lemons for Rs 40, a man loses 20%. How many should he sell for Rs 24 to gain 20% in the transaction?</div>\n',1,11,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (42,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Vikas bought paper sheets for Rs 7,200 & spent Rs 200 on transport. Paying Rs 600, he had 330 boxes made, which he sold at Rs 28 each. His profit percentage is _____?</div>\n',1,12,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (43,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A man gains 10 % by selling a certain article for a certain price. If he sells it at double the price, the profit made is ______?</div>\n',1,13,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (44,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&rdquo;A&rdquo; sells a bicycle to &ldquo;B&rdquo; at a profit of 20% & &ldquo;B&rdquo; sells it to C at a profit of 25%. If &ldquo;C&rdquo; pays Rs 1500, what did &ldquo;A&rdquo; pay for it?</div>\n',1,14,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (45,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A dealer sold two of his cattle for Rs 500 each, on one of them he lost 10% & on the other he gained 10%. His gain or loss percent in the entire transaction is ______?</div>\n',1,15,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (46,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A person earns 15% on investment but loses 10% in another. If the ratio of the two investments be 3: 5, what is the gain or loss on the two investments taken together?              </div>\n',1,16,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (47,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A dealer sold 3/4th of his articles at a gain of 20% and the remaining at C.P. The gain earned by him in the whole transaction is ______?</div>\n',1,17,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (48,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	A man purchased sugar worth Rs 400. He sold (&frac34;) of that at a loss of 10% and the remainder at a gain of 10%. In the whole, he gets ______?</div>',1,18,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (49,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Two-third of a consignment was sold at a profit of 5% & the remainder at a loss of 2%. If the total profit was Rs 400, the value of the consignment was ______?</div>\n',1,19,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (50,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A machine is sold at a profit of 10%. Had it been sold for Rs 80/- less, there would have been a loss of 10% .The C.P of the machine is ________ ?</div>\n',1,20,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (51,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If an article is sold at 5% gain instead of 5% loss, the seller gets Rs 6.72 more. The C.P of the article is ________?</div>\n',1,21,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (52,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">An article when sold at a gain of 5% yields Rs 15 more than, when sold at a loss of 15 %.What is the C.P?</div>\n',1,22,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (53,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Profit after selling a commodity for Rs 425 is the same as the loss after selling it for Rs 355. What is the cost of the commodity?</div>\n',1,23,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (54,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">An article when sold for Rs 840 earns a profit which is double the amount of loss, when the same article is sold for Rs 600. What is the C.P of the article?</div>\n',1,24,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (55,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The profit made, when an article is sold for Rs 78 is twice much as when it is sold for Rs 69. What is the C.P of the article?</div>\n',1,25,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (56,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A single discount equivalent to a discount series of 40% & 20% is ________?</div>\n',1,26,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (57,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">On selling 17 balls at Rs 720, there is a loss equal to the cost price of 5 balls. The cost price of a ball is____?</div>\n',1,27,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (58,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If a cost price of a pencil box is Rs 67 and selling price is Rs 70. Is there a profit or loss & by how much?</div>\n',1,28,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (59,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the cost price is 25% of selling price. Then, what is the profit percent?</div>\n',1,29,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL),
 (60,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A vendor bought bananas at 6 for a rupee. How many for a rupee must he sell to gain 20%?</div>\n',1,30,2,'1','2024-07-14 18:27:03',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #002','Assessment Test #002','2024-07-14 18:27:01',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (2,2,'Assessment Test #003','Assessment Test #003','2024-07-14 18:27:02',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL DEFAULT '',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=976 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (1,'admin','baf71c021073a99609d073b6c7d2162a','admin','admin','2011-10-27 12:02:06',1,'admin'),
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','2024-07-14 18:26:55',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','2024-07-14 18:26:55',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','2024-07-14 18:26:55',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','2024-07-14 18:26:55',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','2024-07-14 18:26:55',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','2024-07-14 18:26:55',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','2024-07-14 18:26:55',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','2024-07-14 18:26:55',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','2024-07-14 18:26:55',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','2024-07-14 18:26:55',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','2024-07-14 18:26:55',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','2024-07-14 18:26:55',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','2024-07-14 18:26:55',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','2024-07-14 18:26:55',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','2024-07-14 18:26:55',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','2024-07-14 18:26:55',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','2024-07-14 18:26:55',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','2024-07-14 18:26:55',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','2024-07-14 18:26:55',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','2024-07-14 18:26:55',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','2024-07-14 18:26:55',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','2024-07-14 18:26:55',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','2024-07-14 18:26:55',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','2024-07-14 18:26:55',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','2024-07-14 18:26:55',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','2024-07-14 18:26:55',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','2024-07-14 18:26:55',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','2024-07-14 18:26:55',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','2024-07-14 18:26:55',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','2024-07-14 18:26:55',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','2024-07-14 18:26:55',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','2024-07-14 18:26:55',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','2024-07-14 18:26:55',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','2024-07-14 18:26:55',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','2024-07-14 18:26:55',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','2024-07-14 18:26:55',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','2024-07-14 18:26:55',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','2024-07-14 18:26:55',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','2024-07-14 18:26:55',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','2024-07-14 18:26:55',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','2024-07-14 18:26:55',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','2024-07-14 18:26:55',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','2024-07-14 18:26:55',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','2024-07-14 18:26:55',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','2024-07-14 18:26:55',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','2024-07-14 18:26:55',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','2024-07-14 18:26:55',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','2024-07-14 18:26:55',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','2024-07-14 18:26:55',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','2024-07-14 18:26:55',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','2024-07-14 18:26:55',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','2024-07-14 18:26:55',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','2024-07-14 18:26:55',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','2024-07-14 18:26:55',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','2024-07-14 18:26:55',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','2024-07-14 18:26:55',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','2024-07-14 18:26:55',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','2024-07-14 18:26:55',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','2024-07-14 18:26:55',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','2024-07-14 18:26:55',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','2024-07-14 18:26:55',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','2024-07-14 18:26:55',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','2024-07-14 18:26:55',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','2024-07-14 18:26:55',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','2024-07-14 18:26:55',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','2024-07-14 18:26:55',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','2024-07-14 18:26:55',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','2024-07-14 18:26:55',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','2024-07-14 18:26:55',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','2024-07-14 18:26:55',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','2024-07-14 18:26:55',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','2024-07-14 18:26:55',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','2024-07-14 18:26:55',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','2024-07-14 18:26:55',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','2024-07-14 18:26:55',NULL,NULL),
 (77,'TN301','bbc5f0f12be40025ce80892250ec4182','TN301','','2024-07-14 18:26:56',NULL,NULL),
 (78,'TN302','1e62389469eb40b4e62ce857e56c9100','TN302','','2024-07-14 18:26:56',NULL,NULL),
 (79,'TN303','58e335cbcc03f10a3532b03fc4341f15','TN303','','2024-07-14 18:26:56',NULL,NULL),
 (80,'TN304','cd7930f1fb55aa905c4df45128c97baf','TN304','','2024-07-14 18:26:56',NULL,NULL),
 (81,'TN305','899937c678dd35a5f485a5cf5672cbdc','TN305','','2024-07-14 18:26:56',NULL,NULL),
 (82,'TN306','a4285f24393b69e835eaf548d7d07f45','TN306','','2024-07-14 18:26:56',NULL,NULL),
 (83,'TN307','ab44b7c6bcf661e62a4e2b18b8a253b7','TN307','','2024-07-14 18:26:56',NULL,NULL),
 (84,'TN308','f04787034bfc6945046da5be3f5742b5','TN308','','2024-07-14 18:26:56',NULL,NULL),
 (85,'TN309','f738531932bca315e161ac0e7cd4294a','TN309','','2024-07-14 18:26:56',NULL,NULL),
 (86,'TN310','6490380387ae6387b6996de9604dd6eb','TN310','','2024-07-14 18:26:56',NULL,NULL),
 (87,'TN311','fc45f85571933a6d19ef0474814aec0a','TN311','','2024-07-14 18:26:56',NULL,NULL),
 (88,'TN312','331d4587e3a2032a9764d0872e167ce4','TN312','','2024-07-14 18:26:56',NULL,NULL),
 (89,'TN313','ab5112c84ccbf0821dfe0162e1c42265','TN313','','2024-07-14 18:26:56',NULL,NULL),
 (90,'TN314','bf7b6059fb03e5bc400e6955798df27b','TN314','','2024-07-14 18:26:56',NULL,NULL),
 (91,'TN315','acc19803bb31da0d81d7bbdbb3061e0f','TN315','','2024-07-14 18:26:56',NULL,NULL),
 (92,'TN316','4b48542959905998321dafed96b8fe0d','TN316','','2024-07-14 18:26:56',NULL,NULL),
 (93,'TN317','715e7d7cefaf5dc4f2a5d60a4ef19971','TN317','','2024-07-14 18:26:56',NULL,NULL),
 (94,'TN318','64b1ea19a67c2510aed6574c87a1b4e4','TN318','','2024-07-14 18:26:56',NULL,NULL),
 (95,'TN319','071ece34f471558328a7a7cf872bffc6','TN319','','2024-07-14 18:26:56',NULL,NULL),
 (96,'TN320','3937cc3391f789daa16828c12b0154b0','TN320','','2024-07-14 18:26:56',NULL,NULL),
 (97,'TN321','09737fb620f89466fcdf36c398d594c3','TN321','','2024-07-14 18:26:56',NULL,NULL),
 (98,'TN322','7d4107d7b06d882d3db7a988ea3ae132','TN322','','2024-07-14 18:26:56',NULL,NULL),
 (99,'TN323','a0ca2ea676216e2970c8bdfe80fb2601','TN323','','2024-07-14 18:26:56',NULL,NULL),
 (100,'TN324','beeacc5cfddddc526d51e7becebba204','TN324','','2024-07-14 18:26:56',NULL,NULL),
 (101,'TN325','823688abb73ec077fc4549febebbf8a8','TN325','','2024-07-14 18:26:56',NULL,NULL),
 (102,'TN326','c65a4eac6d96fd36ed8f85d7779017b9','TN326','','2024-07-14 18:26:56',NULL,NULL),
 (103,'TN327','6fb20c4016a1efc028fcb5c917a1a9b5','TN327','','2024-07-14 18:26:56',NULL,NULL),
 (104,'TN328','23ec588619d8eec9ed938588cd4c0ffc','TN328','','2024-07-14 18:26:56',NULL,NULL),
 (105,'TN329','29e55698371d27448de7f7249d214b4d','TN329','','2024-07-14 18:26:56',NULL,NULL),
 (106,'TN330','fb121c2efcf80025a5164afa01673431','TN330','','2024-07-14 18:26:56',NULL,NULL),
 (107,'TN331','571d9ffd33e956278043ecdc4195e480','TN331','','2024-07-14 18:26:56',NULL,NULL),
 (108,'TN332','02090f3e184e6001f9827d82e9b4a9a8','TN332','','2024-07-14 18:26:56',NULL,NULL),
 (109,'TN333','e1317b7101153447aa5494ef25a1e5e3','TN333','','2024-07-14 18:26:56',NULL,NULL),
 (110,'TN334','f344ec1e06ba85fd0d2b94ec25abd242','TN334','','2024-07-14 18:26:56',NULL,NULL),
 (111,'TN335','fa78b2a9f4868507f06b1eae79af8cf2','TN335','','2024-07-14 18:26:56',NULL,NULL),
 (112,'TN336','53289881c031b7abd31559d53b36c0b5','TN336','','2024-07-14 18:26:56',NULL,NULL),
 (113,'TN337','e248b290ba6ef82d9b8df3026b2770aa','TN337','','2024-07-14 18:26:56',NULL,NULL),
 (114,'TN338','f225f5efb7500d24ce566bf921369a58','TN338','','2024-07-14 18:26:56',NULL,NULL),
 (115,'TN339','8ed035e44c1c105a6355ae67f3986798','TN339','','2024-07-14 18:26:56',NULL,NULL),
 (116,'TN340','bddfd499ad958bc300ae05427591ee99','TN340','','2024-07-14 18:26:56',NULL,NULL),
 (117,'TN341','706621a1363be2510f2e9877122c2383','TN341','','2024-07-14 18:26:56',NULL,NULL),
 (118,'TN342','c24bb864a69c0e054cfeb60f552f5e1b','TN342','','2024-07-14 18:26:56',NULL,NULL),
 (119,'TN343','142049421de0e29fd784864c6f115ea9','TN343','','2024-07-14 18:26:56',NULL,NULL),
 (120,'TN344','03e32ef0bfcedf0582aa4f96bb50d46f','TN344','','2024-07-14 18:26:56',NULL,NULL),
 (121,'TN345','945a9a01730517acb18a3d32d6015a5c','TN345','','2024-07-14 18:26:56',NULL,NULL),
 (122,'TN346','766d51e2c0d42b490e6086b461cfae3b','TN346','','2024-07-14 18:26:56',NULL,NULL),
 (123,'TN347','59293db2ff6f51319b8437b2abaf9893','TN347','','2024-07-14 18:26:56',NULL,NULL),
 (124,'TN348','623bad9a80f73c502fdff11cab24fadc','TN348','','2024-07-14 18:26:56',NULL,NULL),
 (125,'TN349','36f0a163e203282e72a9e19d16c60686','TN349','','2024-07-14 18:26:56',NULL,NULL),
 (126,'TN350','4c24b350c05e410509c1ca4bb2e17af8','TN350','','2024-07-14 18:26:56',NULL,NULL),
 (127,'TN351','e6a27c97dd92116dc7c753eae0c98037','TN351','','2024-07-14 18:26:56',NULL,NULL),
 (128,'TN352','d948ba1439ce06a133ecd15804d717dc','TN352','','2024-07-14 18:26:56',NULL,NULL),
 (129,'TN353','621a5e4a6f094d16dc53eb1c4e2434b4','TN353','','2024-07-14 18:26:56',NULL,NULL),
 (130,'TN354','717a78291620b9c4a1e84e901bdc9af8','TN354','','2024-07-14 18:26:56',NULL,NULL),
 (131,'TN355','3556d3b4d05167215cf9959401834b19','TN355','','2024-07-14 18:26:56',NULL,NULL),
 (132,'TN356','c8a9c567be7cd63d9736af5b79469ae8','TN356','','2024-07-14 18:26:56',NULL,NULL),
 (133,'TN357','fcde6134ad992b618af211ac8e7a06eb','TN357','','2024-07-14 18:26:56',NULL,NULL),
 (134,'TN358','f406125822839689e114556657b1db83','TN358','','2024-07-14 18:26:56',NULL,NULL),
 (135,'TN359','edf21e767cff7ae9035cc60dbcd8aead','TN359','','2024-07-14 18:26:56',NULL,NULL),
 (136,'TN360','f4ad9140c3c15b1b6f42c10ee03b5cb6','TN360','','2024-07-14 18:26:56',NULL,NULL),
 (137,'TN361','5d9c505cecb81e4c3316fca985018fcb','TN361','','2024-07-14 18:26:56',NULL,NULL),
 (138,'TN362','22b1fec71c1bad80cd04135647102e12','TN362','','2024-07-14 18:26:56',NULL,NULL),
 (139,'TN363','332ddd9595af057584e783b09df742ac','TN363','','2024-07-14 18:26:56',NULL,NULL),
 (140,'TN364','74fdb3d545750f5cfa1818a899f3ff00','TN364','','2024-07-14 18:26:56',NULL,NULL),
 (141,'TN365','9497f7911e15fe139c5e176439238969','TN365','','2024-07-14 18:26:56',NULL,NULL),
 (142,'TN366','cd409dca1c9ba1ac624133a99f2c2962','TN366','','2024-07-14 18:26:56',NULL,NULL),
 (143,'TN367','7cc3aec8e8aeae02ee5dc92e08d4ec43','TN367','','2024-07-14 18:26:56',NULL,NULL),
 (144,'TN368','8fb4a66b743f675444119f0432177dcd','TN368','','2024-07-14 18:26:56',NULL,NULL),
 (145,'TN369','7bc747c96c918c00f355309f8c62c194','TN369','','2024-07-14 18:26:56',NULL,NULL),
 (146,'TN370','56b836d812562491b3283a164b295d70','TN370','','2024-07-14 18:26:56',NULL,NULL),
 (147,'TN371','01a73eed90e1a003af338cc9da2a0b85','TN371','','2024-07-14 18:26:56',NULL,NULL),
 (148,'TN372','d61e7c66accc8166fe95b37cc5fcaaab','TN372','','2024-07-14 18:26:56',NULL,NULL),
 (149,'TN373','9f02eb93d48658a809dab079b055efc1','TN373','','2024-07-14 18:26:56',NULL,NULL),
 (150,'TN374','0eafb37da1979c85ed73960434ee8a4b','TN374','','2024-07-14 18:26:56',NULL,NULL),
 (151,'TN375','a142cb1fe4af05f6bd1f9d0b95fb5ee2','TN375','','2024-07-14 18:26:56',NULL,NULL),
 (152,'TN376','e80659aba97f94308561dacd3b88470d','TN376','','2024-07-14 18:26:56',NULL,NULL),
 (153,'TN377','e7f56c1576629d76ab1f2ccc8fd72ca7','TN377','','2024-07-14 18:26:56',NULL,NULL),
 (154,'TN378','556d3ccb4641032b416e78249113ee5b','TN378','','2024-07-14 18:26:56',NULL,NULL),
 (155,'TN379','3d7eaaa3d0e6b35c16fdd3c39a8541c0','TN379','','2024-07-14 18:26:56',NULL,NULL),
 (156,'TN380','aba6bbfee95826ef9d2f154f823b726b','TN380','','2024-07-14 18:26:56',NULL,NULL),
 (157,'TN381','cdd1629569bf7c1e4cb18210c9b19d51','TN381','','2024-07-14 18:26:56',NULL,NULL),
 (158,'TN382','fcfc82ddb19b91c6a82a5751c9bdb7ed','TN382','','2024-07-14 18:26:56',NULL,NULL),
 (159,'TN383','9d21690535c7678c0cf321de3b2d1be0','TN383','','2024-07-14 18:26:56',NULL,NULL),
 (160,'TN384','67c39899c4972904e5aec01fb54020f8','TN384','','2024-07-14 18:26:56',NULL,NULL),
 (161,'TN385','f5ab5f5b27fc8c2e6d062ac3fa925701','TN385','','2024-07-14 18:26:56',NULL,NULL),
 (162,'TN386','5b799a0141b73adc0d46f554716bd603','TN386','','2024-07-14 18:26:56',NULL,NULL),
 (163,'TN387','89a6b783804e0a35e2d893d2f6af8ab0','TN387','','2024-07-14 18:26:56',NULL,NULL),
 (164,'TN388','ba9c17ff0b794ee0f6b98ae5812d6af3','TN388','','2024-07-14 18:26:56',NULL,NULL),
 (165,'TN389','34ff33b20fa2f7baa4d7cf1ffc42381b','TN389','','2024-07-14 18:26:56',NULL,NULL),
 (166,'TN390','02c12c6ba9cec206400bd69decac5f76','TN390','','2024-07-14 18:26:56',NULL,NULL),
 (167,'TN391','e14e794db9f6d703b2ea042221333d66','TN391','','2024-07-14 18:26:56',NULL,NULL),
 (168,'TN392','8662e371a6d48647badac3edf30c5f63','TN392','','2024-07-14 18:26:56',NULL,NULL),
 (169,'TN393','be50faad379515af6f9efe0fb04574c9','TN393','','2024-07-14 18:26:56',NULL,NULL),
 (170,'TN394','3da8fb6f33ff1723d5dd9e7628e4fcb6','TN394','','2024-07-14 18:26:56',NULL,NULL),
 (171,'TN395','9488e357c4828c515d96b1499778735b','TN395','','2024-07-14 18:26:56',NULL,NULL),
 (172,'TN396','b82b52f638cafc61d25aad2b7095dc33','TN396','','2024-07-14 18:26:56',NULL,NULL),
 (173,'TN397','6b24d032d4a6ca8541ac28c921b7e930','TN397','','2024-07-14 18:26:56',NULL,NULL),
 (174,'TN398','4eebbbee2a6e65f6da48e052a1933414','TN398','','2024-07-14 18:26:56',NULL,NULL),
 (175,'TN399','3166142006d459130e76a43d9cd5ff92','TN399','','2024-07-14 18:26:56',NULL,NULL),
 (176,'TN400','8bcae3bb6e0c3cd1adb82dc989b3a375','TN400','','2024-07-14 18:26:56',NULL,NULL),
 (177,'A1','764430ccec4fb73d4897923b21c3544f','BOOMIKA DEVI S','','2024-07-14 18:26:56',NULL,NULL),
 (178,'A2','59837789f691aef6b1a18ff8c48775a5','PAVISHNA S','','2024-07-14 18:26:56',NULL,NULL),
 (179,'A3','fbdabe740c36cdd70d9e93b7c279f4b4','SINDHU S','','2024-07-14 18:26:56',NULL,NULL),
 (180,'A4','b35631ee01054034d53805a65316e0c9','ARAVINTH P','','2024-07-14 18:26:56',NULL,NULL),
 (181,'A5','36862c73454b3c03134745df0dd40c23','DHIVYADHARSHINI R','','2024-07-14 18:26:56',NULL,NULL),
 (182,'A6','c91b0bc0970c526e17963bd64386cce2','GOPIKA V','','2024-07-14 18:26:56',NULL,NULL),
 (183,'A7','2a1650f0670833e10b66c878a57c3810','MANOJ.K','','2024-07-14 18:26:56',NULL,NULL),
 (184,'A8','b3d1df98fa506f34b4846b4f6472129c','MONISH.S','','2024-07-14 18:26:56',NULL,NULL),
 (185,'A9','30edbe9dee103fc9f548165c2266341c','PRAKASH P','','2024-07-14 18:26:56',NULL,NULL),
 (186,'A10','dbc74227400b34489eba1f412ff6cfe5','SARABESHWAR C D','','2024-07-14 18:26:56',NULL,NULL),
 (187,'A11','0bbb4a4f3e9068177b503e7cabc1c963','SUJET RAJA S','','2024-07-14 18:26:56',NULL,NULL),
 (188,'A12','a565520d24ebd2b4e2454f56b28d3e23','THENNARASU R S','','2024-07-14 18:26:56',NULL,NULL),
 (189,'A13','49c8c5fe5211ecb4ec07585cf5eca816','ADHITHYA K G','','2024-07-14 18:26:56',NULL,NULL),
 (190,'A14','581c9144cf13c12255b44c59cfc545bc','DHARANESH S P','','2024-07-14 18:26:56',NULL,NULL),
 (191,'A15','6795e22a4f8527d9f038ae43a5753ec3','DINESH KUMAR C','','2024-07-14 18:26:56',NULL,NULL),
 (192,'A16','44ebd364bf7342b65647c2203fa90f85','GAYATHRI V','','2024-07-14 18:26:56',NULL,NULL),
 (193,'A17','01c3f4e1b8c176bb3689a856ecee5134','HAREENI S','','2024-07-14 18:26:57',NULL,NULL),
 (194,'A18','c9a22ad13e24bf23df30827f895c715b','HARSHIDHA V','','2024-07-14 18:26:57',NULL,NULL),
 (195,'A19','cc013489c4ce342a0239ed2f6e935fda','INIYAN T V','','2024-07-14 18:26:57',NULL,NULL),
 (196,'A20','7f7172787bafe2a4f41f695d4ea9e962','KAPIL M','','2024-07-14 18:26:57',NULL,NULL),
 (197,'A21','aca82c0433c5002aa5cbf1ff32fea45d','KAVIN SAKTHI M R','','2024-07-14 18:26:57',NULL,NULL),
 (198,'A22','89237d70af379a7cdcdbad3775981477','LINGESHKANNA M','','2024-07-14 18:26:57',NULL,NULL),
 (199,'A23','28c1efbcd8119c63fc05e99af41f3b81','NAMBIRAJA M','','2024-07-14 18:26:57',NULL,NULL),
 (200,'A24','cfc8395a7f55576ccf44d13e4c66fc0a','REAGHASHANE S B','','2024-07-14 18:26:57',NULL,NULL),
 (201,'A25','6ffe3c2f69df03f0381831a54489b250','SIVAPRAKASH S','','2024-07-14 18:26:57',NULL,NULL),
 (202,'A26','ce141f450f19489b4074c727aaa3de41','SOWMITH S','','2024-07-14 18:26:57',NULL,NULL),
 (203,'A27','601444a1373b71c9db426c1e9ff6b52b','SUHAS J','','2024-07-14 18:26:57',NULL,NULL),
 (204,'A28','5cd7f2d193adcb69f7cf92d16c285109','SWATHI K R','','2024-07-14 18:26:57',NULL,NULL),
 (205,'A29','c18a7b897fc43821ab7d69f52f86d601','VIGNESH R','','2024-07-14 18:26:57',NULL,NULL),
 (206,'A30','34137b9690d4615950b62b4e18d0cc4e','VIMAL M','','2024-07-14 18:26:57',NULL,NULL),
 (207,'A31','46ed9af82dbebafa4f1ab6ae08d2a872','ABINISHA S','','2024-07-14 18:26:57',NULL,NULL),
 (208,'A32','6d5ea2e12d8f6bbe35dbfaea0e5d973f','ATCHAYA P','','2024-07-14 18:26:57',NULL,NULL),
 (209,'A33','e57f6772b81ae0328d9735d8482bcec9','BALAGURU P A','','2024-07-14 18:26:57',NULL,NULL),
 (210,'A34','656e15b3a29c964db9c9205934bd195d','CHANDRU S','','2024-07-14 18:26:57',NULL,NULL),
 (211,'A35','698f509b4c5fe1dceb2a182784170fd3','DEVADHARSHINI S','','2024-07-14 18:26:57',NULL,NULL),
 (212,'A36','a1d8fdb572a7e08c8d1c30415bf1d895','DHANUSH N','','2024-07-14 18:26:57',NULL,NULL),
 (213,'A37','d3a62f15edc0a3d17eec38614b32340a','DHARANESH P S','','2024-07-14 18:26:57',NULL,NULL),
 (214,'A38','8d5385ee919d69a726668c1a0029f725','GOKUL ARASU S P','','2024-07-14 18:26:57',NULL,NULL),
 (215,'A39','258e1a0f990b8f5531077d3fb381fce1','GUNANITHI S K','','2024-07-14 18:26:57',NULL,NULL),
 (216,'A40','80b81b1ca35a47bdbb57199990034141','HARINI PRIYA S K','','2024-07-14 18:26:57',NULL,NULL),
 (217,'A41','c7f2db29d97d0d81709dc7b14a35aeee','HARINISRI S','','2024-07-14 18:26:57',NULL,NULL),
 (218,'A42','34d9e0d3d689d475b7fcbe14b121207a','HARISH N J','','2024-07-14 18:26:57',NULL,NULL),
 (219,'A43','b9ca2ca9557c372cdd40349c7ab480d9','HARISHITHA D','','2024-07-14 18:26:57',NULL,NULL),
 (220,'A44','150391141c187f737496a688ff0d6916','ILANKATHIR P S','','2024-07-14 18:26:57',NULL,NULL),
 (221,'A45','806b243c01f2c47f2ca61dfa12be3a10','KAMALASH K','','2024-07-14 18:26:57',NULL,NULL),
 (222,'A46','1ea5e3b6871c6eb4656576e5f0ce5e97','KANISHKA V K','','2024-07-14 18:26:57',NULL,NULL),
 (223,'A47','8ba7f2a1ab6c4c97ebad9b8d774ddfb3','KARSHNA N N M','','2024-07-14 18:26:57',NULL,NULL),
 (224,'A48','3cf754bf52797cf8f80655c31308d0f2','KAVYA M','','2024-07-14 18:26:57',NULL,NULL),
 (225,'A49','78599da410d255ef348bc700e17c30a6','KERTHIVAS P','','2024-07-14 18:26:57',NULL,NULL),
 (226,'A50','07298e64348855216615fbed6394f9d2','KIRUTHIKA R','','2024-07-14 18:26:57',NULL,NULL),
 (227,'A51','dc0b557ec1a702c27ee6fa8d175ab4f1','KISHOR M S','','2024-07-14 18:26:57',NULL,NULL),
 (228,'A52','712467ba89593103a7b32fa996758ea1','KOMTESH WARAN K','','2024-07-14 18:26:57',NULL,NULL),
 (229,'A53','2aa2d59883fa4bff6d380d75a3ed7e44','MITHRA DEVI D','','2024-07-14 18:26:57',NULL,NULL),
 (230,'A54','ea7d89549b0c6f884a0d25813531c06e','MOHAN SURYA R','','2024-07-14 18:26:57',NULL,NULL),
 (231,'A55','e6f3c96e3a2b78299cb58f9c8cd7dd8d','NANDHA KUMAR V','','2024-07-14 18:26:57',NULL,NULL),
 (232,'A56','2699fe433abb73b5bf9b4a8b3e9a4305','NAVEEN KUMAR E','','2024-07-14 18:26:57',NULL,NULL),
 (233,'A57','b54e12f9ce6a5972dc0addc827531f89','PRANAV B','','2024-07-14 18:26:57',NULL,NULL),
 (234,'A58','62290bd5326253c53ef08b07bd9c65a6','PREMKUMAR M','','2024-07-14 18:26:57',NULL,NULL),
 (235,'A59','e13d21c5a9ce44e2ad22840acd9ff84d','PRIYA P','','2024-07-14 18:26:57',NULL,NULL),
 (236,'A60','45ff3bcfe79707c8e83c257d317a8b9f','PRIYANDHARSHINI R','','2024-07-14 18:26:57',NULL,NULL),
 (237,'A61','89b6136d4e745e9ee8a8b4b1164e90d3','RAAJDHARAN D','','2024-07-14 18:26:57',NULL,NULL),
 (238,'A62','f6fff7e1314065087f0b9194c47cbf17','RAGUL P C','','2024-07-14 18:26:57',NULL,NULL),
 (239,'A63','565e78cfb78b218fd150c8f200a67a30','RAJASRI S','','2024-07-14 18:26:57',NULL,NULL),
 (240,'A64','df1693670d123bf0014ca00933b54863','RAVEENDHARAN D','','2024-07-14 18:26:57',NULL,NULL),
 (241,'A65','a7c4747aa1360224e76f1e98c20a2ac8','RITHANYA S M','','2024-07-14 18:26:57',NULL,NULL),
 (242,'A66','f0a6f05d6c102cc71a0f1b83050478f4','RUBASRI M R','','2024-07-14 18:26:57',NULL,NULL),
 (243,'A67','5ce0da8e9700a55b8a00a4c7b7193816','SANGEETH S','','2024-07-14 18:26:57',NULL,NULL),
 (244,'A68','de6d8aacdef81b847e32417e71d63306','SANTHOSH S','','2024-07-14 18:26:57',NULL,NULL),
 (245,'A69','b07d60f75bd187126abec10262b08a04','SARVESHWARAN M','','2024-07-14 18:26:57',NULL,NULL),
 (246,'A70','d04aec74a61d619e6458a8821f22bf44','SELVAMAHESH M','','2024-07-14 18:26:57',NULL,NULL),
 (247,'A71','0a12d8e53be88888e391603217ed70c5','SIBHI RAJ M S','','2024-07-14 18:26:57',NULL,NULL),
 (248,'A72','0815d14d455d4089a2b5742ee1a926e7','SIBI SANTHOSH R','','2024-07-14 18:26:57',NULL,NULL),
 (249,'A73','873ae1a7c2fc347d578551e61fad2807','SRI MIDUNYA S K','','2024-07-14 18:26:57',NULL,NULL),
 (250,'A74','a2dfb7bd309f1a035157f4e74017785a','SRIDHAR G','','2024-07-14 18:26:57',NULL,NULL),
 (251,'A75','6b8c4819435a918901025c3a4db619ac','THARANI S','','2024-07-14 18:26:57',NULL,NULL),
 (252,'A76','61799dd1c7bc1022b831025da6b9ff19','THARIQ ALI J','','2024-07-14 18:26:57',NULL,NULL),
 (253,'A77','a6cdec65be7e4477d99811d69a1b8464','VISHWA M','','2024-07-14 18:26:57',NULL,NULL),
 (254,'A78','23bf9aa36b1396f22c8c01e252941cdc','ZEBA S','','2024-07-14 18:26:57',NULL,NULL),
 (255,'A79','d21d55410ff27038807a22d99be230fc','THEJASRI S P','','2024-07-14 18:26:57',NULL,NULL),
 (256,'A80','0c3f63ec851684539c465829d8bdc3d2','AARTHY B','','2024-07-14 18:26:57',NULL,NULL),
 (257,'A81','68cb62078add5be73473662e8afcb19a','ABINAYA M','','2024-07-14 18:26:57',NULL,NULL),
 (258,'A82','6bf8b8d28bd3e5ffa91ebecc2d577f96','ADVAITHA G S','','2024-07-14 18:26:57',NULL,NULL),
 (259,'A83','9699ce22275ef0b4524c831b6ba133fd','ANANTHU A GHOSH','','2024-07-14 18:26:57',NULL,NULL),
 (260,'A84','90f4d08c2bf9c682cc55c15d77e3b1e5','ARUL M','','2024-07-14 18:26:57',NULL,NULL),
 (261,'A85','4e1a0991f07164f8fbd63dfa410b927b','ARUL MOZHI J B','','2024-07-14 18:26:57',NULL,NULL),
 (262,'A86','f77ca0e71e405f178281375398fdbd06','BHUVA SHREE S','','2024-07-14 18:26:57',NULL,NULL),
 (263,'A87','6ca91b8c1c6559ab2eca0219a780320d','CHIRADEEP T G','','2024-07-14 18:26:57',NULL,NULL),
 (264,'A88','08dccd14c5f396415e736a49c3558ea0','CHITHRAPRASANNA C','','2024-07-14 18:26:57',NULL,NULL),
 (265,'A89','be81b9317ce721b12294f20cddf5eb28','DEEPIKA P','','2024-07-14 18:26:57',NULL,NULL),
 (266,'A90','9af89e564b05276f49790bf9f2f5b9ed','DHACHAYINI K','','2024-07-14 18:26:57',NULL,NULL),
 (267,'A91','576916e8f73bf79dd72683ac997274f5','DHARANEESH S','','2024-07-14 18:26:57',NULL,NULL),
 (268,'A92','f366b58d4d69b2f26b9638233848c903','DHARANITHAR A','','2024-07-14 18:26:57',NULL,NULL),
 (269,'A93','9601a2238494254d7c051437ae8107f9','DHARSHINI S','','2024-07-14 18:26:57',NULL,NULL),
 (270,'A94','dc94f1503dfef397a45e886a6738f422','GOBINATH S','','2024-07-14 18:26:57',NULL,NULL),
 (271,'A95','d6b49607c9e934b0c2186675cdcd23eb','GUHAN R','','2024-07-14 18:26:57',NULL,NULL),
 (272,'A96','71b515c9addd1a397b03916f02af1dc5','HARI PRASATH S K','','2024-07-14 18:26:57',NULL,NULL),
 (273,'A97','7bf632ce30a99c5a0f1edb0651916b99','HARIHARAN V','','2024-07-14 18:26:57',NULL,NULL),
 (274,'A98','13b1063a4cb41bfd941da12848babca7','HARISH KUMARAN S','','2024-07-14 18:26:57',NULL,NULL),
 (275,'A99','cee4f1b5a442de52f622ae8342485765','HARISHNI C','','2024-07-14 18:26:57',NULL,NULL),
 (276,'A100','b0730aa6c2ca2d3a3d61ebac86ff9da7','KAVIYAN E','','2024-07-14 18:26:57',NULL,NULL),
 (277,'A101','dd6d371ee6d39535220a2f3073029d5d','KIRITHIKA SRI R','','2024-07-14 18:26:57',NULL,NULL),
 (278,'A102','fb4e35b66121b0e8c81eeadf470409c4','KOKILA M J','','2024-07-14 18:26:57',NULL,NULL),
 (279,'A103','36f1330fa6681871abddda14ba9b8aee','MADHU MITHA C','','2024-07-14 18:26:57',NULL,NULL),
 (280,'A104','cc06183b87d98d70a17694b97a590fd7','MUKESH B','','2024-07-14 18:26:57',NULL,NULL),
 (281,'A105','87c507e54a8b81033cd820fdcb83da83','NANDHINI N','','2024-07-14 18:26:57',NULL,NULL),
 (282,'A106','c8de34e4b3c53c75d9d8f7e4fcdb75f4','NAVEEN B','','2024-07-14 18:26:57',NULL,NULL),
 (283,'A107','cf31986e692f17b28cd0f57b38397a52','NAVEEN KUMAR K V','','2024-07-14 18:26:57',NULL,NULL),
 (284,'A108','7cddadd90c2ed850ed70057bb04ae56e','NIDARSHANA K','','2024-07-14 18:26:57',NULL,NULL),
 (285,'A109','1f9f31675ca45179bbbb286ada540141','NISHANTHINIYA P','','2024-07-14 18:26:57',NULL,NULL),
 (286,'A110','7653743c79c48878c8a56d6c057c9fad','NIVETHA C','','2024-07-14 18:26:57',NULL,NULL),
 (287,'A111','99af28bd5a7706914fef1b6e9504f8bd','PAVISHKA R G','','2024-07-14 18:26:57',NULL,NULL),
 (288,'A112','b1c11f7643ca43e0c36f2edaa45307be','PON ALAGARASU M','','2024-07-14 18:26:57',NULL,NULL),
 (289,'A113','3018e9ed1642ce77b4d0f3b48e8f8e78','PRANESH K V','','2024-07-14 18:26:57',NULL,NULL),
 (290,'A114','3f602d24ab7f745f37133b01ff69935f','PRAVIN K S','','2024-07-14 18:26:57',NULL,NULL),
 (291,'A115','f22eff77dfd5beb18e5dfa2e3f986cb4','RANKESH K','','2024-07-14 18:26:57',NULL,NULL),
 (292,'A116','8ad503908becf40eb738ba3c1d76951f','RESHMA G','','2024-07-14 18:26:57',NULL,NULL),
 (293,'A117','e16140c8f34703c02c91b699c8610eca','ROHINI SHRI V','','2024-07-14 18:26:57',NULL,NULL),
 (294,'A118','a79c46921305e7ad5024312be47c78f5','SANDHIYA R','','2024-07-14 18:26:57',NULL,NULL),
 (295,'A119','63892fb5e9d3fa056973e5b334f38068','SUPREETH K R','','2024-07-14 18:26:57',NULL,NULL),
 (296,'A120','ba10744b6653a0fdf8c7df728fa49b08','SWATHI T','','2024-07-14 18:26:57',NULL,NULL),
 (297,'A121','52cc156db981228afead809157a1754d','THAIYANBAN M','','2024-07-14 18:26:57',NULL,NULL),
 (298,'A122','01da7c56eb648226e06bb70af9d5f473','THAMILARASAN A','','2024-07-14 18:26:57',NULL,NULL),
 (299,'A123','76621a4d345c5b46977c6028ab4410d1','THARUN P B','','2024-07-14 18:26:57',NULL,NULL),
 (300,'A124','2dda19f325ec2dbd14a945219a2251ff','VIGNESHSABARI V','','2024-07-14 18:26:57',NULL,NULL),
 (301,'A125','6d5ae81d6c07feca01c9f4545acea442','YUKESHAN K','','2024-07-14 18:26:57',NULL,NULL),
 (302,'A126','2f23c6d812591ef0ce2eaba0779da2e5','ANESH S','','2024-07-14 18:26:57',NULL,NULL),
 (303,'A127','d8dccdbfadc1da5a2516f10b20e2652c','BALAJI S','','2024-07-14 18:26:57',NULL,NULL),
 (304,'A128','a79b6974fb49b6d4eb528f9aa2ef1757','BHARATH C','','2024-07-14 18:26:57',NULL,NULL),
 (305,'A129','347eec93c320574fa3b6d9b2db4f02a1','DARNI S S','','2024-07-14 18:26:57',NULL,NULL),
 (306,'A130','baf30499866494438443cd3abfbfc35b','DEEPAK KARTHIK R V','','2024-07-14 18:26:57',NULL,NULL),
 (307,'A131','021fc9e76521f4b56d4506893d0d8f00','DHARANI P','','2024-07-14 18:26:57',NULL,NULL),
 (308,'A132','c3e0c09a4b9fa3b2e326275f8296094c','DHARSHANTH S','','2024-07-14 18:26:57',NULL,NULL),
 (309,'A133','aabe1b9d9214b08d13dda47ad378bd7e','DHINAKARAN K','','2024-07-14 18:26:57',NULL,NULL),
 (310,'A134','b6390f8000cd8fed064426bfb939f61f','KAVID S K','','2024-07-14 18:26:57',NULL,NULL),
 (311,'A135','f490827c1bc50844fe58228c3e4884c0','KAVISREE K','','2024-07-14 18:26:57',NULL,NULL),
 (312,'A136','2ed77bbb51c25de023ae6a4bf7da5f97','KAVITHA T','','2024-07-14 18:26:57',NULL,NULL),
 (313,'A137','f9bc15416786b369a45c636664f88107','KIRUTHIKA G','','2024-07-14 18:26:57',NULL,NULL),
 (314,'A138','c745fd10509641d0a8eec6463839b074','LOGESH D','','2024-07-14 18:26:57',NULL,NULL),
 (315,'A139','c694d021a13d83e7f3aefc3fae577efe','MOULIDHARAN T','','2024-07-14 18:26:57',NULL,NULL),
 (316,'A140','328f226c2528943a711e6c821e9e72df','MURSHEED LAL A','','2024-07-14 18:26:57',NULL,NULL),
 (317,'A141','2f99ff7692c0c999ad07eb25f5d1eb8a','NALLASIVAM S','','2024-07-14 18:26:57',NULL,NULL),
 (318,'A142','84a4b949d8c938878839c38cdd7c0369','NANDHA GOPAL S','','2024-07-14 18:26:57',NULL,NULL),
 (319,'A143','ca315225b4528aee47a6ae8bc6557b0e','NANDHINI M','','2024-07-14 18:26:57',NULL,NULL),
 (320,'A144','222465140d07bbe14fb548c5295647b6','NAVEEN S','','2024-07-14 18:26:57',NULL,NULL),
 (321,'A145','c09016c1fc31b2ce3e2bf83d4f955114','NAVEENA V','','2024-07-14 18:26:57',NULL,NULL),
 (322,'A146','c876bb5f83e80c598522b4567c80ff71','PRADEEP S C','','2024-07-14 18:26:57',NULL,NULL),
 (323,'A147','7973a38b114fc6b0df95c3458b577d98','PRAVEEN I','','2024-07-14 18:26:57',NULL,NULL),
 (324,'A148','d89952201e7562207785354d0a14b6f8','RITHANYA S','','2024-07-14 18:26:57',NULL,NULL),
 (325,'A149','57f9026af7c149e2c157b86d7c61bb58','ROHITH G','','2024-07-14 18:26:57',NULL,NULL),
 (326,'A150','dfd211c40cdf3388737585aca75a8402','SANJAY KUMAR K','','2024-07-14 18:26:57',NULL,NULL),
 (327,'A151','503c4f454d42ce9b18c1befba48d9cea','SANJAY V K','','2024-07-14 18:26:57',NULL,NULL),
 (328,'A152','09dbeebbb62e9665e6a3ce4c709e7ee0','SARAN R','','2024-07-14 18:26:57',NULL,NULL),
 (329,'A153','b7407f0ad157690c50a098199b200b31','SARAVANASIVAM S','','2024-07-14 18:26:57',NULL,NULL),
 (330,'A154','7a618b895b72035c60d3ac25ff6a704b','SATHVIKA V S','','2024-07-14 18:26:57',NULL,NULL),
 (331,'A155','e2bf9fa5d78b116edac9097c3ab78109','SHUBBITCHA S B','','2024-07-14 18:26:57',NULL,NULL),
 (332,'A156','50e579510f1f49554f2234065c73caf9','SRINITHI P','','2024-07-14 18:26:57',NULL,NULL),
 (333,'A157','eb76e5a52527cae19608649ee34c2daf','SUBIKA S','','2024-07-14 18:26:57',NULL,NULL),
 (334,'A158','c820312b68e882d034724cd89596a50d','SURENDHRAN C','','2024-07-14 18:26:57',NULL,NULL),
 (335,'A159','055c39c6172b653a280a06d081feef2e','THANIKACHALAM G','','2024-07-14 18:26:57',NULL,NULL),
 (336,'A160','9831e94206a89b854f6234f6a5e5e672','THIRUKUMARAN S','','2024-07-14 18:26:57',NULL,NULL),
 (337,'A161','0f727cc140380226494eb3ac0f10f40c','VARSHA R S','','2024-07-14 18:26:57',NULL,NULL),
 (338,'A162','8e1b2560037900d1b7492f3e745bf30f','VIJAYA PARAKASH S','','2024-07-14 18:26:57',NULL,NULL),
 (339,'A163','5923bfd829e64fc57233ce4f66a5a21b','VIKAS C','','2024-07-14 18:26:57',NULL,NULL),
 (340,'A164','052831eb8233e327d9a45fad49ba01f9','VIKASINI M','','2024-07-14 18:26:57',NULL,NULL),
 (341,'A165','d73468acb0699f4c2c04376fdba829de','YOGAPRIYA M','','2024-07-14 18:26:57',NULL,NULL),
 (342,'A166','4c51294c215fc3969b5258d7a5ae6e47','AMIRTHA K T','','2024-07-14 18:26:57',NULL,NULL),
 (343,'A167','61ec4fce0eeff8e2c0509742b978f600','ARUNKUMAR S','','2024-07-14 18:26:57',NULL,NULL),
 (344,'A168','6bf9aa677cbac803447b067adbdef815','DEVANAND Y','','2024-07-14 18:26:57',NULL,NULL),
 (345,'A169','ace14026370a5b56569d784e9915b77b','DHIVYA SRI S','','2024-07-14 18:26:57',NULL,NULL),
 (346,'A170','87321069d7bdaa262a93da1858090643','DINESHKUMAR G','','2024-07-14 18:26:57',NULL,NULL),
 (347,'A171','d341dd5de4e712146a7e9e8deb222696','ELAKIYA A','','2024-07-14 18:26:57',NULL,NULL),
 (348,'A172','81acc6a23f15cca22e0639dc0307dc42','HARINI B','','2024-07-14 18:26:57',NULL,NULL),
 (349,'A173','98f9b9ac5def88519b6e5622fb2b1f2c','MAHESH VARMA A S','','2024-07-14 18:26:57',NULL,NULL),
 (350,'A174','a2f9bee2e4faf93542f371007423c8e0','MANOJKUMAR P','','2024-07-14 18:26:57',NULL,NULL),
 (351,'A175','540aa6c215c61a06123930cd6d370731','NARMADHA SREE M','','2024-07-14 18:26:57',NULL,NULL),
 (352,'A176','b0048a628d0b547567b3e7d5548806eb','PADHMEENA S','','2024-07-14 18:26:57',NULL,NULL),
 (353,'A177','2a3f9279bfc2425fab0fc38fd81f77e3','PAVITHRA DEVI R','','2024-07-14 18:26:57',NULL,NULL),
 (354,'A178','406f3ccef9aa2ad124f25fb608c5994a','PONNARASU S','','2024-07-14 18:26:57',NULL,NULL),
 (355,'A179','10503be0f5f239c147f769ff30341baa','PRAVEEN M','','2024-07-14 18:26:57',NULL,NULL),
 (356,'A180','fd6fdeaafaa680638515669cb431ebbd','REVATHI H','','2024-07-14 18:26:57',NULL,NULL),
 (357,'A181','e6fa8c4d8a7fda5cc85a3d1e41b1b742','RITHANYA K R','','2024-07-14 18:26:57',NULL,NULL),
 (358,'A182','d3caf9fd78c281db5732317ab743165b','SANDHIYA S','','2024-07-14 18:26:57',NULL,NULL),
 (359,'A183','aa55826ae2decf967ebe39be86da0f80','SANJAY G','','2024-07-14 18:26:57',NULL,NULL),
 (360,'A184','b852e850df8db0373220869eebb2ba38','SANJEEVIKUMAR T','','2024-07-14 18:26:57',NULL,NULL),
 (361,'A185','b31d4b7fbd75e11f90c7d6570469dd33','SARAN C','','2024-07-14 18:26:57',NULL,NULL),
 (362,'A186','a472242bd5e712ab07b9b7185777f23c','SELVARAJ S','','2024-07-14 18:26:57',NULL,NULL),
 (363,'A187','a046602815403463823ab296978e1f42','SHARUMATHI S','','2024-07-14 18:26:57',NULL,NULL),
 (364,'A188','5cbabf55e62855f320ea2971a55c3dcf','SHRI DEVI V','','2024-07-14 18:26:57',NULL,NULL),
 (365,'A189','27baea6a0872b04a17eea738de2f5117','SUDHARSHAN J A','','2024-07-14 18:26:57',NULL,NULL),
 (366,'A190','751151af194ce64c6122d57980318629','SUNMATHI E','','2024-07-14 18:26:57',NULL,NULL),
 (367,'A191','3bd8820e2b4cb5f0fd27f82d2b9b9545','SYAMALAA DEVI N R','','2024-07-14 18:26:57',NULL,NULL),
 (368,'A192','0a5e6f35c24186786dc98220950eee01','TANUJA C S','','2024-07-14 18:26:57',NULL,NULL),
 (369,'A193','535a88fd82f4b64aae52a0eac344c953','THILAKAN K V','','2024-07-14 18:26:57',NULL,NULL),
 (370,'A194','40f9ca5489081b88b9b0445303e67055','VIDHIYA KIRUSHIKHA A S','','2024-07-14 18:26:57',NULL,NULL),
 (371,'A195','f34d76fcdfa6ddf9d42312c11def34d1','VIJAY PRASANTH M S','','2024-07-14 18:26:57',NULL,NULL),
 (372,'A196','0e39c2e1686b54703195668be5755f45','VIKASH K B','','2024-07-14 18:26:57',NULL,NULL),
 (373,'A197','dd75b42d07fcd2a4ea279402a4f88601','ARUN KUMAR V','','2024-07-14 18:26:57',NULL,NULL),
 (374,'A198','0a3939b64e49c680602efefd2b05d6df','ASVIKA A T','','2024-07-14 18:26:57',NULL,NULL),
 (375,'A199','d4d98b6212a6a45fb495eb40b8feb4b0','ASWATH S','','2024-07-14 18:26:57',NULL,NULL),
 (376,'A200','2a44669a3acdfa9d5d3e521186802558','ASWIN S','','2024-07-14 18:26:57',NULL,NULL),
 (377,'A201','c330800ea049256f4957590c0f4bcf24','BHARANEEDARAN P','','2024-07-14 18:26:57',NULL,NULL),
 (378,'A202','23af8e86f0d83aa47fe2a8ea2637ac36','CHARLES T','','2024-07-14 18:26:57',NULL,NULL),
 (379,'A203','ed1696df02baf69bc9a988b651340115','DEVADHARSHINI K','','2024-07-14 18:26:57',NULL,NULL),
 (380,'A204','8b5b3ef551e9d78de6e0214a04c3a718','DHARSHANI M','','2024-07-14 18:26:57',NULL,NULL),
 (381,'A205','c0517ff40c9ad390e0352f200cf5b97a','ELAKKIYA','','2024-07-14 18:26:57',NULL,NULL),
 (382,'A206','84d468321b03a4e380cba59dc06daf1b','JANANI K','','2024-07-14 18:26:57',NULL,NULL),
 (383,'A207','058026f0927d188ad8a349b57c353aec','KANISHKA K P','','2024-07-14 18:26:58',NULL,NULL),
 (384,'A208','c9be772ec0d999c13ddf34d9c231ca1b','MADHURANJANI S','','2024-07-14 18:26:58',NULL,NULL),
 (385,'A209','1618de421768d97494b778d44b1be619','MANJUVIDHYA N','','2024-07-14 18:26:58',NULL,NULL),
 (386,'A210','1a09557f422349e01a1d654629060496','MOHAMED RIYAZ A','','2024-07-14 18:26:58',NULL,NULL),
 (387,'A211','5f99402d9792a0abcfccef55ceff7aac','MOHANADEVI G','','2024-07-14 18:26:58',NULL,NULL),
 (388,'A212','b011960685de02d19b01dce56806b6fa','NITARSANA H','','2024-07-14 18:26:58',NULL,NULL),
 (389,'A213','dec63d181fd9b72df476f39c074d7882','PRAKALYA D','','2024-07-14 18:26:58',NULL,NULL),
 (390,'A214','b2af5ea6db842a2f44a51520a3634079','SAKTHIPRIYA S','','2024-07-14 18:26:58',NULL,NULL),
 (391,'A215','a932b9d5a966673214959bab90db6d87','SALAI SAUCHIYAN V','','2024-07-14 18:26:58',NULL,NULL),
 (392,'A216','db11fb50b21d3105a8299c861ba961e0','SANMATHI S','','2024-07-14 18:26:58',NULL,NULL),
 (393,'A217','b9f1090a1eeded079db41c4bb27d96b4','SARAN S','','2024-07-14 18:26:58',NULL,NULL),
 (394,'A218','09cf619b52385bf4e10c2a11213bcbc4','SUNITHA NANDHINI S','','2024-07-14 18:26:58',NULL,NULL),
 (395,'A219','b35b109720d6fbc95b54207228ee3a4f','SURYA B','','2024-07-14 18:26:58',NULL,NULL),
 (396,'A220','c723113cf924dd19489d059db905a88d','VAISHNAVI S','','2024-07-14 18:26:58',NULL,NULL),
 (397,'A221','9fc1114ee93d3141f08ebd19742bcecf','VIGNESHWARAN S','','2024-07-14 18:26:58',NULL,NULL),
 (398,'A222','8b95875894dee28732d7a3209353575e','VINODHA M S','','2024-07-14 18:26:58',NULL,NULL),
 (399,'A223','09fc989c1544842611bf223e1b13d3f6','YUGENDHIRAN S','','2024-07-14 18:26:58',NULL,NULL),
 (400,'A224','edfe22348d3287fc412bc6b572939af8','ABINAYA K','','2024-07-14 18:26:58',NULL,NULL),
 (401,'A225','51f2f4bf6c343e66ac825ab9870bad85','ABIRAMI S','','2024-07-14 18:26:58',NULL,NULL),
 (402,'A226','7575bb09ea9c10dda210afea723d7a52','ARTHI J','','2024-07-14 18:26:58',NULL,NULL),
 (403,'A227','cc19c70bced0d55f848bb788f0855287','ASHWIN S K','','2024-07-14 18:26:58',NULL,NULL),
 (404,'A228','13826a55caf9bb5f337ad82c54bf0746','BOOBALAMURUGAN S','','2024-07-14 18:26:58',NULL,NULL),
 (405,'A229','31092d32fb9d016097ee8faf2e699d3d','CHIVVANI T A','','2024-07-14 18:26:58',NULL,NULL),
 (406,'A230','a48a50b0c8bba7b3aa26235e5ba6a98d','DEEPAN ANTONY SUBIKSHAN M','','2024-07-14 18:26:58',NULL,NULL),
 (407,'A231','cbe5b33b977350a5800840c251c30fcc','DHARANISH Y','','2024-07-14 18:26:58',NULL,NULL),
 (408,'A232','4625e38f3c28bdaecd9c339e5b4926e4','DHIVAAKAR G S','','2024-07-14 18:26:58',NULL,NULL),
 (409,'A233','7609cab830fd6b80d306222856587c01','DINESH N','','2024-07-14 18:26:58',NULL,NULL),
 (410,'A234','32b76d48cf90015217bc08045c99defb','ELAKIYA R','','2024-07-14 18:26:58',NULL,NULL),
 (411,'A235','6da685973e31be21d0e428ef1984fc5c','GAYANRANJAN PATRA','','2024-07-14 18:26:58',NULL,NULL),
 (412,'A236','3d6935f75b18d91c1a3b23d94a32239d','GOKULKRISHNAN S','','2024-07-14 18:26:58',NULL,NULL),
 (413,'A237','e87751000fa2a66d6cd65b154b8d4f47','GOWSELYA P','','2024-07-14 18:26:58',NULL,NULL),
 (414,'A238','09010b0cf3c16dc930b8f61db4b5505a','GURU AKSHAYA R','','2024-07-14 18:26:58',NULL,NULL),
 (415,'A239','f88803a3b14cf61eb00632c7b9998902','HARINI K','','2024-07-14 18:26:58',NULL,NULL),
 (416,'A240','1375bee2666310c1358fdeb0023e29c5','HEMANTH KUMAR K','','2024-07-14 18:26:58',NULL,NULL),
 (417,'A241','1d9d71e4a4e99ae82c9a05bb9c55401f','INDHUJA P','','2024-07-14 18:26:58',NULL,NULL),
 (418,'A242','3204f5678192f1bd4a85a12b523a1cac','JANANISRI S','','2024-07-14 18:26:58',NULL,NULL),
 (419,'A243','469dbd9e598b1b98c9e651e4872570db','JAYASURYA M K','','2024-07-14 18:26:58',NULL,NULL),
 (420,'A244','85ec4640cfe9d095b2f6a181ad30dfd4','KARUPPUSAMY V','','2024-07-14 18:26:58',NULL,NULL),
 (421,'A245','41f67181178dac09a1413be48f4aa1e7','KAVIYA SREE R','','2024-07-14 18:26:58',NULL,NULL),
 (422,'A246','98417a460dbc7fc4d313075453a54909','LAKSHMI SHANKAR S','','2024-07-14 18:26:58',NULL,NULL),
 (423,'A247','3fd43c94a596ee5f27fb210cf25b2b91','MADHUMITHA K','','2024-07-14 18:26:58',NULL,NULL),
 (424,'A248','3ea959d979cf8b2d0cc03d4abd932d3a','MUTHUSAMY P','','2024-07-14 18:26:58',NULL,NULL),
 (425,'A249','89812faa304cbffee1d955ecb0041139','NAVEEN S','','2024-07-14 18:26:58',NULL,NULL),
 (426,'A250','b39cf8ec7e95eb7b8e2c7193ee750861','PAVITHRAA VJ','','2024-07-14 18:26:58',NULL,NULL),
 (427,'A251','a6f8322274f48f244475692c858f59ea','PRIYATHARSHINI S','','2024-07-14 18:26:58',NULL,NULL),
 (428,'A252','9804de8be8e185232e64474bb7097351','RITTHIKA M','','2024-07-14 18:26:58',NULL,NULL),
 (429,'A253','d38fcae09f94d004fd9d9f9ad6d7c042','SABAREE U B','','2024-07-14 18:26:58',NULL,NULL),
 (430,'A254','0320da740e89422a5fdc24214a8c51a8','SANTHIHA S','','2024-07-14 18:26:58',NULL,NULL),
 (431,'A255','e8708835d57efffe13219a84be1e3b93','SARAN A','','2024-07-14 18:26:58',NULL,NULL),
 (432,'A256','7ca60a3ac9249d22f0a9069534a3a731','SELVANATHAN K','','2024-07-14 18:26:58',NULL,NULL),
 (433,'A257','d709b900185532d6c3e1a3d684bdac11','SUBASHREE R','','2024-07-14 18:26:58',NULL,NULL),
 (434,'A258','430598f1170926486b7a4b148c244c6f','THAARANI S','','2024-07-14 18:26:58',NULL,NULL),
 (435,'A259','67d2569af5c9d9da043cc8ae3e245afd','THANISH ADHITHYA V T','','2024-07-14 18:26:58',NULL,NULL),
 (436,'A260','c8b59aad150bfcf280d1b22c42719aa4','THILAK KISHOR K M','','2024-07-14 18:26:58',NULL,NULL),
 (437,'A261','1e105b5031c8a7135da362e90574aebc','YUVADHARSHAN J','','2024-07-14 18:26:58',NULL,NULL),
 (438,'A262','ef5977b8657a931db446ea2d4dd40abd','AKSHAYA R','','2024-07-14 18:26:58',NULL,NULL),
 (439,'A263','479122a8dcafccbf1c0104b233af068a','ASHWIN KRISHNA A','','2024-07-14 18:26:58',NULL,NULL),
 (440,'A264','58cbbac6a32d9c4644edf7ba2bc7d336','BABU A','','2024-07-14 18:26:58',NULL,NULL),
 (441,'A265','e919e7c8b5401e9218d4e0f23dbeb6b5','DHANUSHRI P','','2024-07-14 18:26:58',NULL,NULL),
 (442,'A266','5d58ced178abda3a44c6b3744cd34046','DHARSHINII M','','2024-07-14 18:26:58',NULL,NULL),
 (443,'A267','cc60787bfe15b82b71f5140e5eb0c1c7','DHARUNYA M P','','2024-07-14 18:26:58',NULL,NULL),
 (444,'A268','b8f277528e5e9202a9d9f21463a44ea8','HARAVINDHAN S','','2024-07-14 18:26:58',NULL,NULL),
 (445,'A269','4818c4f703370580ffdba954a0cfc323','HARSNI R','','2024-07-14 18:26:58',NULL,NULL),
 (446,'A270','7e4bd6e56bf9e900f24b592ea1e98ec4','HEMA K','','2024-07-14 18:26:58',NULL,NULL),
 (447,'A271','5ab0a8cff7816c032b57fb7852b23a4f','JAYABALAJE V','','2024-07-14 18:26:58',NULL,NULL),
 (448,'A272','ce8b5db9691fea67b83f548c90646162','KABILAN S','','2024-07-14 18:26:58',NULL,NULL),
 (449,'A273','7b19830774c735478f98554d1b6b2085','KALAIARASAN R','','2024-07-14 18:26:58',NULL,NULL),
 (450,'A274','fd960d9552ec63edd382b1458dcd577e','KARISHMA N','','2024-07-14 18:26:58',NULL,NULL),
 (451,'A275','8cc6dd77965001152c9630e0f757148d','LAKSHANA S','','2024-07-14 18:26:58',NULL,NULL),
 (452,'A276','4607298390ff4e5d387c80ee7679ca08','MEIVEL S','','2024-07-14 18:26:58',NULL,NULL),
 (453,'A277','cca612b90351bfc5734995ee0cf56684','MOHAMMED AFRIDI A','','2024-07-14 18:26:58',NULL,NULL),
 (454,'A278','c561dc39b7d678ca2dfb487301c4aefc','MONISH D','','2024-07-14 18:26:58',NULL,NULL),
 (455,'A279','fcf508e0faed18b7233562d40e83bd82','MUKESH S R','','2024-07-14 18:26:58',NULL,NULL),
 (456,'A280','08459596215ea94208ae719df417d82d','NAVEEN KUMARR M S','','2024-07-14 18:26:58',NULL,NULL),
 (457,'A281','a8004e48fedb5910c5df9c762fb7671e','POONGUZHALI M','','2024-07-14 18:26:58',NULL,NULL),
 (458,'A282','d71e793ac45a431dbcf950160464aa14','PRIYADHARSHINI R','','2024-07-14 18:26:58',NULL,NULL),
 (459,'A283','c16b7193c72aa8e891cf9306a74b75fd','PRIYANGA A','','2024-07-14 18:26:58',NULL,NULL),
 (460,'A284','07f8f5fc63164c29cce8a0712fc119ea','RAMYA V N','','2024-07-14 18:26:58',NULL,NULL),
 (461,'A285','682dabf1bcd3ad5a537e2c0563f4fc6d','RIZWANA R','','2024-07-14 18:26:58',NULL,NULL),
 (462,'A286','4bb7f5f25295a4af7b41b60e39aff8ff','RUBIKA G P','','2024-07-14 18:26:58',NULL,NULL),
 (463,'A287','e04670785b141560e8cddfe4384d51fe','SABARISH R S','','2024-07-14 18:26:58',NULL,NULL),
 (464,'A288','8b6c0e5ac7d1be695368ab5bb4d6110c','SANJAI M R','','2024-07-14 18:26:58',NULL,NULL),
 (465,'A289','568d555b925a7f000c2834fef8522a65','SANJAY S','','2024-07-14 18:26:58',NULL,NULL),
 (466,'A290','32dab44c6e89e36a6002ba363c0ed78a','SANTHOSH KUMAR R','','2024-07-14 18:26:58',NULL,NULL),
 (467,'A291','aa176ef48521198015aa8c3dc8c50278','SRI SANKARI K','','2024-07-14 18:26:58',NULL,NULL),
 (468,'A292','b89aeebb577f893ad64b56e3c6645695','SUDHARSHANA R','','2024-07-14 18:26:58',NULL,NULL),
 (469,'A293','2202dc72c48f04d28f38041495444777','SWETHA V','','2024-07-14 18:26:58',NULL,NULL),
 (470,'A294','8b8907438fd43a49c5acb28d11339526','TAMILARASU S P','','2024-07-14 18:26:58',NULL,NULL),
 (471,'A295','639f77a520254bd1dd177e7d82d6a768','VIKKASH G','','2024-07-14 18:26:58',NULL,NULL),
 (472,'A296','6ddd5281034b2cd91ed0526a565de4c4','VINESH M','','2024-07-14 18:26:58',NULL,NULL),
 (473,'A297','7cf238754ef8dd1d81f6119e6f445753','YOGAVADIVEL K','','2024-07-14 18:26:58',NULL,NULL),
 (474,'A298','ea3e00330e6e450cfdb77e63627055a1','AKSAYAN V K J','','2024-07-14 18:26:58',NULL,NULL),
 (475,'A299','c7d46e3451c7694f3948b940683e0df7','AMRESH L','','2024-07-14 18:26:58',NULL,NULL),
 (476,'A300','570b192aeaf92d63691b8f3cef7e878d','ANUSHIYA DEVI V','','2024-07-14 18:26:58',NULL,NULL),
 (477,'A301','add62d2e53f0a633f5c8dc29173087db','APOORVA R','','2024-07-14 18:26:58',NULL,NULL),
 (478,'A302','ed3f06d661c284ff022eb58fbb559ceb','AVISKAR JEE VIKRAM V','','2024-07-14 18:26:58',NULL,NULL),
 (479,'A303','bc95a4f053ba2b724c1f22891bd38c9a','BOOMIKA D','','2024-07-14 18:26:58',NULL,NULL),
 (480,'A304','20205240f9d9a440938d9f6b5677185c','DHIYANIKA S','','2024-07-14 18:26:58',NULL,NULL),
 (481,'A305','36b43a513dde417b9dade8f7b468ee2d','DINESH P K','','2024-07-14 18:26:58',NULL,NULL),
 (482,'A306','098bea5b18ce2373ccf2c4d0b0463be3','GOPALAKRISHNAN S','','2024-07-14 18:26:58',NULL,NULL),
 (483,'A307','9bdddd453b78815bda1bb10e0244f358','HARIRAM G','','2024-07-14 18:26:58',NULL,NULL),
 (484,'A308','48064703ca2ce6975f98adf60372f639','INDHUPRIYA S','','2024-07-14 18:26:58',NULL,NULL),
 (485,'A309','529f027787588be0f84b2224a612c3e8','JOYCE CATHERINE J','','2024-07-14 18:26:58',NULL,NULL),
 (486,'A310','66b73806cee34822e2616efc7a5e2c62','KATHIRVEL S','','2024-07-14 18:26:58',NULL,NULL),
 (487,'A311','447fd4d604a0312dfa5f465406bd7816','KEERTHI V','','2024-07-14 18:26:58',NULL,NULL),
 (488,'A312','2d5ffd2fc11b02b20fa3d105ba983204','KEERTHI VARSHINI M','','2024-07-14 18:26:58',NULL,NULL),
 (489,'A313','198c0cd97aed097de145c78a045a5b95','KISHORE KUMAR S','','2024-07-14 18:26:58',NULL,NULL),
 (490,'A314','b5a303f49614d9e139401998db7155e6','LOGESH G','','2024-07-14 18:26:58',NULL,NULL),
 (491,'A315','1f5eba18c83274b08fe2a573a780d8cf','MAHENDRAN R','','2024-07-14 18:26:58',NULL,NULL),
 (492,'A316','c2586c265862bf3f9f61246902df44b2','MATHANKUMAR S','','2024-07-14 18:26:58',NULL,NULL),
 (493,'A317','8d40949a4fcff2aedbd7d8ab34f015a5','MEHAVARSHINI R','','2024-07-14 18:26:58',NULL,NULL),
 (494,'A318','01c944c2f06bbe9996556fa3242754ec','MOULIKKA M','','2024-07-14 18:26:58',NULL,NULL),
 (495,'A319','4d54f496d7a717ec320ca6367a98d926','NAVANEETH S R','','2024-07-14 18:26:58',NULL,NULL),
 (496,'A320','e64cdb3f992a84e594f830a76313078c','NISWANTH S','','2024-07-14 18:26:58',NULL,NULL),
 (497,'A321','530dd82090a4b44b377784a4d11b3c1e','NITHISH P','','2024-07-14 18:26:58',NULL,NULL),
 (498,'A322','c314b4650dc5b49cb5c458e45ab5428e','OVIYA R','','2024-07-14 18:26:58',NULL,NULL),
 (499,'A323','64f66b10af5a9f92b6b722c6a7ef4961','SABARINATHAN M','','2024-07-14 18:26:58',NULL,NULL),
 (500,'A324','7373683c5818f85f59f6354431b1a3a3','SELVAM M','','2024-07-14 18:26:58',NULL,NULL),
 (501,'A325','a86baf8e2a3f243c74003c539cf42a7f','SHIVANI SHARMA R','','2024-07-14 18:26:58',NULL,NULL),
 (502,'A326','de35d63499072fd15a0a52dc28ee87c3','SRINITHI B','','2024-07-14 18:26:58',NULL,NULL),
 (503,'A327','68b5d6c3c8c13b90114ca182b42fc129','SRIRAM V','','2024-07-14 18:26:58',NULL,NULL),
 (504,'A328','e73eee77db0ad3005c51c787d658646e','THANYAVARSHINI S','','2024-07-14 18:26:58',NULL,NULL),
 (505,'A329','04dfa8c9f7e5a61a3b62d8f79e86d1e5','VIGNESH S','','2024-07-14 18:26:58',NULL,NULL),
 (506,'A330','8ff9b5dcadae4584514a4642609bef76','VIGNESHWARAN P','','2024-07-14 18:26:58',NULL,NULL),
 (507,'A331','46ca24f101849f0e452180df74c1429a','VISWANATHAN S','','2024-07-14 18:26:58',NULL,NULL),
 (508,'A332','982cec1e8e9bbd4d90742dc58ece477d','YASHIKA SRI J','','2024-07-14 18:26:58',NULL,NULL),
 (509,'A333','2ce70a851f0dbc2fc52342c9715e493b','AJAY V','','2024-07-14 18:26:58',NULL,NULL),
 (510,'A334','c9bc59d15d56c2443de0aa6247f0e689','CHARAN KUMAR D','','2024-07-14 18:26:58',NULL,NULL),
 (511,'A335','16eba41f875364d5901201666fc3ebfe','GOKULAMOORTHY K S','','2024-07-14 18:26:58',NULL,NULL),
 (512,'A336','fb57c8d93873226fa42a68d1ea13a6f4','GOWRI SHANKAR S','','2024-07-14 18:26:58',NULL,NULL),
 (513,'A337','b06add2dfb03678ad1d7242d8c4e86a4','HARI PRASAD S','','2024-07-14 18:26:58',NULL,NULL),
 (514,'A338','1bf8ce6722046f0548b143e22192402c','HARISH S M','','2024-07-14 18:26:58',NULL,NULL),
 (515,'A339','3df12b0a366c050a152f53079eaabc2f','JANARTHANAN S','','2024-07-14 18:26:58',NULL,NULL),
 (516,'A340','799049bdd1b8ee925c1d7e9e5d6b0659','JANARTHANAN S','','2024-07-14 18:26:58',NULL,NULL),
 (517,'A341','726af61865b7e670e76b46202179c0e3','JAYAPRAKASH S','','2024-07-14 18:26:58',NULL,NULL),
 (518,'A342','62cbd2689307a94def47f8899c37f3d8','KEERTHIGA E','','2024-07-14 18:26:58',NULL,NULL),
 (519,'A343','c167fc171e404967efdbef0fb44446bc','KIRUBHA D','','2024-07-14 18:26:58',NULL,NULL),
 (520,'A344','4fc0c5b5e041a3ede349c7692430aed0','LALITHAMBIKAI V','','2024-07-14 18:26:58',NULL,NULL),
 (521,'A345','17cb1c06a950f7149108613ddd30ad73','MOHANAMBIGAI O','','2024-07-14 18:26:58',NULL,NULL),
 (522,'A346','e9226f890f506ebbba83f9c7532ba716','NISHANTHINI R','','2024-07-14 18:26:58',NULL,NULL),
 (523,'A347','a8e4f1f97e764a7c19a9fdeb6b058b22','PRADESH C','','2024-07-14 18:26:58',NULL,NULL),
 (524,'A348','bec287211f011ef5c4f5519e12b264c9','RANJITH T','','2024-07-14 18:26:58',NULL,NULL),
 (525,'A349','c2426bb99d3f2707f0b5f75201a4f45d','RENUSHRIK R','','2024-07-14 18:26:58',NULL,NULL),
 (526,'A350','ddf6a53f3da3ee7318c0ce3c3c26d097','SANJAYMOORTHI M','','2024-07-14 18:26:58',NULL,NULL),
 (527,'A351','e3f5b38a610dbde1be1b1d2eb84d6e10','SARANES S','','2024-07-14 18:26:58',NULL,NULL),
 (528,'A352','3499e050c3d35fb435af9a99acc001d2','SARVIKA S','','2024-07-14 18:26:58',NULL,NULL),
 (529,'A353','3e5289bec401abfedf70427ed8033d77','SIVA DHAYANANTHAN C P','','2024-07-14 18:26:58',NULL,NULL),
 (530,'A354','59ee9b0a333832c1fc5550627f68ddfc','SIVADHARSHINI D','','2024-07-14 18:26:58',NULL,NULL),
 (531,'A355','c01d1b675acddc8a81d225addc9d8c40','SOMESH R','','2024-07-14 18:26:58',NULL,NULL),
 (532,'A356','d7c6aeb0cd12f00a504aff360d4a4977','SUBHIKSHA M','','2024-07-14 18:26:58',NULL,NULL),
 (533,'A357','4c5676243339240d6f01d576ca8c5c8b','SURENDAR R','','2024-07-14 18:26:58',NULL,NULL),
 (534,'A358','5990af443c6887932f7e9433e34a1517','SWEETLINE G','','2024-07-14 18:26:58',NULL,NULL),
 (535,'A359','503e5e18e9359cd59b649cb5343dff72','TAMILSELVAN D','','2024-07-14 18:26:58',NULL,NULL),
 (536,'A360','0b5132e71d7186ef9d3a9f4b4d476611','THARUNKUMAR G','','2024-07-14 18:26:58',NULL,NULL),
 (537,'A361','df8e53d67185e574aaa9ada04b673051','VELMURUGAN N','','2024-07-14 18:26:58',NULL,NULL),
 (538,'A362','5fbcb2445a832c01b8ee652e7c11ffc4','APARNA N','','2024-07-14 18:26:58',NULL,NULL),
 (539,'A363','28ea5f58945ea3e9215e7cc9ebaa4031','DHANUSRIYA R','','2024-07-14 18:26:58',NULL,NULL),
 (540,'A364','b47e0246d05d38396647b404f6cbc806','NIVETHA P','','2024-07-14 18:26:58',NULL,NULL),
 (541,'A365','58b78b5f5dafcf9e1296a1af135d7fea','PIRUTHIGA D','','2024-07-14 18:26:58',NULL,NULL),
 (542,'A366','41b6f0664e8a28b72ee18be10c217158','RASITHA A','','2024-07-14 18:26:58',NULL,NULL),
 (543,'A367','d078a70ddafacf0a137a85c8f67b03a4','SWETHA S','','2024-07-14 18:26:58',NULL,NULL),
 (544,'A368','44baac4570fb0344343e3cf9ceea73b8','THIRUKAILAI M','','2024-07-14 18:26:58',NULL,NULL),
 (545,'A369','389dc5778e442503a0b43325a1c4640c','UDAYA E S','','2024-07-14 18:26:58',NULL,NULL),
 (546,'A370','1c0ecf8b86789dcb359c06cccdc416ab','YUKESH S R','','2024-07-14 18:26:58',NULL,NULL),
 (547,'A371','31d87e669e9f43fa75d02be349c4134b','SANGAVI S','','2024-07-14 18:26:58',NULL,NULL),
 (548,'A372','3ef390b5393ac43f82fe259622e48c16','BHAVANI S','','2024-07-14 18:26:58',NULL,NULL),
 (549,'A373','2f41018b7e551265192c0e63fc022e4e','NISHANTHIPRIYA G','','2024-07-14 18:26:58',NULL,NULL),
 (550,'A374','59865adaad8e91e44981882cc7521377','AAKASH S','','2024-07-14 18:26:58',NULL,NULL),
 (551,'A375','e75376ce2a6834a9b283244be1323b1b','AATHIS P','','2024-07-14 18:26:58',NULL,NULL),
 (552,'A376','3e39b60c065096f36b8f34ee900be9f4','BHARATHKUMAR J','','2024-07-14 18:26:58',NULL,NULL),
 (553,'A377','0e899c140817be6b11f1b9e23d388522','BOOPESH S','','2024-07-14 18:26:58',NULL,NULL),
 (554,'A378','a237d84d866ad49c35a50b08574dfe11','DHARSHANA S','','2024-07-14 18:26:58',NULL,NULL),
 (555,'A379','c35021780c5f69baf03c27f3febae0c9','DIHEESH S','','2024-07-14 18:26:58',NULL,NULL),
 (556,'A380','729f4eddf61828efef61adef5d1bd45e','ELANCHEZHIYAN P','','2024-07-14 18:26:58',NULL,NULL),
 (557,'A381','7b60aed6539d0a5cae9e200f5a8660f8','GOKUL M','','2024-07-14 18:26:58',NULL,NULL),
 (558,'A382','ab5d5ad11a02120fea3576271ce475fa','GOPIKA R','','2024-07-14 18:26:58',NULL,NULL),
 (559,'A383','5ba9bfdba66b3ab0d2a2516cf64123f2','GOVARTHINI S','','2024-07-14 18:26:58',NULL,NULL),
 (560,'A384','1ec6a9bb68e14a4cee867144bb863954','GURU S','','2024-07-14 18:26:58',NULL,NULL),
 (561,'A385','cc622bb0492f6c2ae56a0f552e4bd88f','HARI PRASANTH A','','2024-07-14 18:26:58',NULL,NULL),
 (562,'A386','8111794a1e33a49245138f38a9617b80','HARISH J','','2024-07-14 18:26:59',NULL,NULL),
 (563,'A387','c24aa297de23639ff7c0a544aabf1595','HARISH R','','2024-07-14 18:26:59',NULL,NULL),
 (564,'A388','b60c01563eeb92d5a095431e1ee3d202','INDHUMATHI K','','2024-07-14 18:26:59',NULL,NULL),
 (565,'A389','cf70bdd1fe87f3293051d577e1c2a406','ISSAC JEFFERY P','','2024-07-14 18:26:59',NULL,NULL),
 (566,'A390','83662d5e717340f032a4a2eebec582d2','KABILAN S','','2024-07-14 18:26:59',NULL,NULL),
 (567,'A391','22eecd7e9d32466e88e38ea4b531525c','KARTHIKA R','','2024-07-14 18:26:59',NULL,NULL),
 (568,'A392','60c03cee6eb0eaa1c3858e6a31f55c51','KAVIN KUMAR S','','2024-07-14 18:26:59',NULL,NULL),
 (569,'A393','8ed9a73dba3d323727177473d8f0f3b1','KAVINKUMAR L','','2024-07-14 18:26:59',NULL,NULL),
 (570,'A394','915a4e8eba3d4d3deb748c774bf3c60c','KAVYA S','','2024-07-14 18:26:59',NULL,NULL),
 (571,'A395','c42a763ab7af48d22fafeb0acbab24e8','KEERTHANA K','','2024-07-14 18:26:59',NULL,NULL),
 (572,'A396','5adeb9bf02b5ab0f4fb3375baaa0549e','KIRUTHIK K','','2024-07-14 18:26:59',NULL,NULL),
 (573,'A397','6b0bad6b8b5ffdb11e46146fe4238af4','KISHORE T','','2024-07-14 18:26:59',NULL,NULL),
 (574,'A398','de9c00374feca612f1600951566eecf9','KRISHNAKUMAR P','','2024-07-14 18:26:59',NULL,NULL),
 (575,'A399','b38d26aa6a0ba0ff50bd1f26cf0e69f1','MANI SHANKAR B','','2024-07-14 18:26:59',NULL,NULL),
 (576,'A400','d3e6de47c61ecf09ec62d3536c8e6891','NANDEESHWARAN M','','2024-07-14 18:26:59',NULL,NULL),
 (577,'A401','1552e907720f8ac5c59ce7af4e9e1e41','NANDHA KISHORE V','','2024-07-14 18:26:59',NULL,NULL),
 (578,'A402','21209f26ec1975894c73986e5adf8712','NAVEENKUMAR K V','','2024-07-14 18:26:59',NULL,NULL),
 (579,'A403','57a403f5cf6cff3607f066fbe9a8a051','NAVEENKUMAR M','','2024-07-14 18:26:59',NULL,NULL),
 (580,'A404','48f17e0f7efa331c70edcca434eeb94b','PRAVEEN RAJ A','','2024-07-14 18:26:59',NULL,NULL),
 (581,'A405','1de91e281e40cea805d9711626123f61','PRAVEENA S','','2024-07-14 18:26:59',NULL,NULL),
 (582,'A406','cf5f3e2d42c18e437d2c08dd0485fa0f','RAGAVARDHINI R','','2024-07-14 18:26:59',NULL,NULL),
 (583,'A407','ef425d4a9ba0b38853ae950be9ef556b','RAGUL K M','','2024-07-14 18:26:59',NULL,NULL),
 (584,'A408','30a54d7a3e87acdb58556a339885a1b7','RAMYAH T S K','','2024-07-14 18:26:59',NULL,NULL),
 (585,'A409','99a6cfdf896c70e70a9f710a42d1a528','RANJITH G I','','2024-07-14 18:26:59',NULL,NULL),
 (586,'A410','992a4799dc0140d3b5c326ad75eb6013','RANJITH P','','2024-07-14 18:26:59',NULL,NULL),
 (587,'A411','62bfe0d2052b1d2ab11b15256b1a2e08','RITHYVAN M','','2024-07-14 18:26:59',NULL,NULL),
 (588,'A412','9ab1c1d158297ab0cf903b3e43a6980f','SAMYUKTHA K','','2024-07-14 18:26:59',NULL,NULL),
 (589,'A413','7287338926019fca7346704febf3c05e','SANTHOSH S','','2024-07-14 18:26:59',NULL,NULL),
 (590,'A414','8ab5bbfe24d32e5fdcd1b567b9963ba1','SELLAKUMAR P','','2024-07-14 18:26:59',NULL,NULL),
 (591,'A415','6ea081b015c9cfbee97400af0043aec5','SHYAM LAKSHMAN G M','','2024-07-14 18:26:59',NULL,NULL),
 (592,'A416','2ccaa7e812e2dfec02a71d0b4f5e3de7','SUCHIT J','','2024-07-14 18:26:59',NULL,NULL),
 (593,'A417','35da77463c94ebe6bf1e697d07d67b87','VAIDEGHI M','','2024-07-14 18:26:59',NULL,NULL),
 (594,'A418','f4a226fa643c6e33bf08581de2294b73','VISHNU V','','2024-07-14 18:26:59',NULL,NULL),
 (595,'A419','1e27b4a4a39f342efc44ccba44efa4ed','VIVENDHIRAN T','','2024-07-14 18:26:59',NULL,NULL),
 (596,'A420','37b2bfc4f1851c3cd8c00276af876fc7','ZAHEER HUSAIN S','','2024-07-14 18:26:59',NULL,NULL),
 (597,'A421','3935e1880b8cf1131149547ceeb4d227','ABINAYA M','','2024-07-14 18:26:59',NULL,NULL),
 (598,'A422','95b441a31b6f247533d87ee51d6f9481','ANAS AHMED P M','','2024-07-14 18:26:59',NULL,NULL),
 (599,'A423','189e6b854de03194d7d04acd3230fde7','AATHI LINGAM S','','2024-07-14 18:26:59',NULL,NULL),
 (600,'A424','ff4d15fb9df81fccb0f68bd68b618739','AZARUDEEN A','','2024-07-14 18:26:59',NULL,NULL),
 (601,'A425','f101b625e8f97e26db67c011641bf605','BHARANIDHARAN P','','2024-07-14 18:26:59',NULL,NULL),
 (602,'A426','8d6ba1b22aaaa27eb399d06074f51d08','CHAKRAPANI T','','2024-07-14 18:26:59',NULL,NULL),
 (603,'A427','8ff99303638ba9d6485dfb88e59e3b39','DEEPAHARINI S','','2024-07-14 18:26:59',NULL,NULL),
 (604,'A428','f3c1ea0e148eb05ce8371eb88729e6da','DEEPAN KUMAR S M','','2024-07-14 18:26:59',NULL,NULL),
 (605,'A429','1b7952eb68ce615a2ddb872f8de94df4','DHANUJA S','','2024-07-14 18:26:59',NULL,NULL),
 (606,'A430','7f2249b4621c7221d2d580e9b3162446','HARIPRAKASH K','','2024-07-14 18:26:59',NULL,NULL),
 (607,'A431','21ca535ccd9ab662f6543e23db34293c','INDHU G','','2024-07-14 18:26:59',NULL,NULL),
 (608,'A432','472f8a718fa75e66facb3b5871a8cb0b','JAYA KUMAR B','','2024-07-14 18:26:59',NULL,NULL),
 (609,'A433','dd3781e0165f1f1b473c3beb6380eed2','JAYAVARSHINIE V S','','2024-07-14 18:26:59',NULL,NULL),
 (610,'A434','0ed999018bd315f951e6e6d982aac32d','JOTHISH R','','2024-07-14 18:26:59',NULL,NULL),
 (611,'A435','8c391e0de770faba90a92506f8712edd','KANTHASRUPAN T','','2024-07-14 18:26:59',NULL,NULL),
 (612,'A436','a5182e59843dad442ba678b5dde48972','KANYA V','','2024-07-14 18:26:59',NULL,NULL),
 (613,'A437','95247f28366c57103488061be94709e4','KEERTHIAKASH M R','','2024-07-14 18:26:59',NULL,NULL),
 (614,'A438','e6da968d0cd779d17affb12b5552293a','KUMARAN N','','2024-07-14 18:26:59',NULL,NULL),
 (615,'A439','be85df670cec9d92912f0661cbaf24d4','LALITH VISHNU P','','2024-07-14 18:26:59',NULL,NULL),
 (616,'A440','67c31c71a587a2783f16b42d32e211e0','LOGESH V','','2024-07-14 18:26:59',NULL,NULL),
 (617,'A441','00aff07e9d7f17b400085e63bb7285d6','LOGESHWARAN R S','','2024-07-14 18:26:59',NULL,NULL),
 (618,'A442','634827463dc4bea0499b4f53d3adf403','LOGU R','','2024-07-14 18:26:59',NULL,NULL),
 (619,'A443','d698a6b17f4d2ba372636cec5699ec9c','MOHAMMED SAMEERUDDIN R','','2024-07-14 18:26:59',NULL,NULL),
 (620,'A444','61688a13f43202e4933e63f5be90049c','MOUNIKA G','','2024-07-14 18:26:59',NULL,NULL),
 (621,'A445','a0566085575d2b03673ea1d59fd2f87b','NITHYAANANDAN C','','2024-07-14 18:26:59',NULL,NULL),
 (622,'A446','50f10550ec78da72fa4357bd9936ec56','NIVETHA N','','2024-07-14 18:26:59',NULL,NULL),
 (623,'A447','87e2a1a3b879a93495bd2c7d5b72d81f','PREMKUMAR M','','2024-07-14 18:26:59',NULL,NULL),
 (624,'A448','012a16a6a49acaa00c24a2a7b825048d','PRIYADARSHINI S','','2024-07-14 18:26:59',NULL,NULL),
 (625,'A449','90bffe72e16c1204e96263e088655c5a','RAJAVEL P','','2024-07-14 18:26:59',NULL,NULL),
 (626,'A450','ced12e3c298bb87b93b5e8eae1209b5b','RAKANISA R S','','2024-07-14 18:26:59',NULL,NULL),
 (627,'A451','c6ef660d614f021cdf389d5ae89ebfb8','RAVIKUMAR P','','2024-07-14 18:26:59',NULL,NULL),
 (628,'A452','2a77fdcafa9f1207276ac5626f32c49d','SAAKTHI B','','2024-07-14 18:26:59',NULL,NULL),
 (629,'A453','35ca97b9b93f79f73e1ac73d85e86a9d','SANDHIYA D','','2024-07-14 18:26:59',NULL,NULL),
 (630,'A454','80d3898de0253e1ea6285068dd1a8bf2','SANJAY PRABHU K P','','2024-07-14 18:26:59',NULL,NULL),
 (631,'A455','a41aee5d8b18c93695864975264727c1','SEMAAS SRI T','','2024-07-14 18:26:59',NULL,NULL),
 (632,'A456','67fce494b60dfe474a0638f60400719f','SHANJEETHA S','','2024-07-14 18:26:59',NULL,NULL),
 (633,'A457','6c7ddc39c9288c5799827c15be2bdaed','SRISARAVANAN G K','','2024-07-14 18:26:59',NULL,NULL),
 (634,'A458','200318ed6abc7530a9ce24ed80e9f068','SUJAY BALA B','','2024-07-14 18:26:59',NULL,NULL),
 (635,'A459','cb15feb375ef84f7a1c18ae13ff18a4f','THARUN J','','2024-07-14 18:26:59',NULL,NULL),
 (636,'A460','1717ef151053a793780a50ab89e07041','VANITHA R','','2024-07-14 18:26:59',NULL,NULL),
 (637,'A461','738bb09f5d4d50a91e63277c7b11736f','VIGNESH V','','2024-07-14 18:26:59',NULL,NULL),
 (638,'A462','c48a16a1e878f0c455393cc82b538929','VIJAY R','','2024-07-14 18:26:59',NULL,NULL),
 (639,'A463','1af19190a69f7f6b996f86b69e4421b0','VIMALRAJ R','','2024-07-14 18:26:59',NULL,NULL),
 (640,'A464','d54d822ecd83b9cb746d5c9b6edb9502','VISWANTH K','','2024-07-14 18:26:59',NULL,NULL),
 (641,'A465','5529eee403c4572c62028d58dc6500c1','KEERTHIVASAN G','','2024-07-14 18:26:59',NULL,NULL),
 (642,'A466','e19c6646ef2bcebc2795943539db524f','ABHI K M','','2024-07-14 18:26:59',NULL,NULL),
 (643,'A467','896f627c661c81112dd825e50727a804','ARUN A','','2024-07-14 18:26:59',NULL,NULL),
 (644,'A468','7c13e4cf10e347501f0ef0919ef040bc','ATHISH N','','2024-07-14 18:26:59',NULL,NULL),
 (645,'A469','93297c63dffa49b64d37b75a4736d126','BALAMANIKANDAN S','','2024-07-14 18:26:59',NULL,NULL),
 (646,'A470','85feb74ef9853af0caefe9c4dfe1191c','CHARANYA DEVI K','','2024-07-14 18:26:59',NULL,NULL),
 (647,'A471','8d553e98fca301194141e4c50164ca3d','DEEBAK RANGANAATHAN M','','2024-07-14 18:26:59',NULL,NULL),
 (648,'A472','1b7156665d856fe63ba16f1eba0810c1','DEEPAK M G','','2024-07-14 18:26:59',NULL,NULL),
 (649,'A473','96d5458c2b9c1c81200916afe0894a61','DHANA SRI R','','2024-07-14 18:26:59',NULL,NULL),
 (650,'A474','981803b65d6656cdb4e6700dd4243d9b','DHANUSH V','','2024-07-14 18:26:59',NULL,NULL),
 (651,'A475','94cd8c87450a7ee55e433fe31ed77727','GOKUL K','','2024-07-14 18:26:59',NULL,NULL);
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (652,'A476','a76d36ddec047386e5fc15573dd8e49f','GOKUL S','','2024-07-14 18:26:59',NULL,NULL),
 (653,'A477','fb9abdd3bcf35e8685253ba03347d229','GOWTHAM M','','2024-07-14 18:26:59',NULL,NULL),
 (654,'A478','b6ff2816a9c351ee744d2e5b93b1ba20','HARSHINI A','','2024-07-14 18:26:59',NULL,NULL),
 (655,'A479','a1c9354fddcd3e3963deeadb4c312b1d','INIKA M','','2024-07-14 18:26:59',NULL,NULL),
 (656,'A480','cb14a78e7d3a015cb519f9cef9bb51a2','JOHN JACOP RAJ J','','2024-07-14 18:26:59',NULL,NULL),
 (657,'A481','832b4361e50002de03764f050e0809a3','KARTHICK K','','2024-07-14 18:26:59',NULL,NULL),
 (658,'A482','8ee09194fe128d8382ba5fde27ef52af','KARTHICK RAJA A','','2024-07-14 18:26:59',NULL,NULL),
 (659,'A483','2c7a776f5148bf925de7e885d950c9af','KAVYALAKSHMI S','','2024-07-14 18:26:59',NULL,NULL),
 (660,'A484','d65ecf3d8af5e950fda81b7801203938','KIRTHIGA R','','2024-07-14 18:26:59',NULL,NULL),
 (661,'A485','cc512922f4fc9c19372bc37e0170fa92','KISHORE P M','','2024-07-14 18:26:59',NULL,NULL),
 (662,'A486','687ace70218678ec18ac33a6239b0227','LAKSHAN G','','2024-07-14 18:26:59',NULL,NULL),
 (663,'A487','fc27f2d34dcfb0b16236ad22d77049a3','LINGESHWARAN N','','2024-07-14 18:26:59',NULL,NULL),
 (664,'A488','8f1adb903cb6d05093098f0ab555aeef','MADHUMITHA DEVI SRI K','','2024-07-14 18:26:59',NULL,NULL),
 (665,'A489','1f744421b084fdf6a7ada424f25323ca','MAHAPRAGADEESHWARAN S','','2024-07-14 18:26:59',NULL,NULL),
 (666,'A490','59f3b4da04fc32e15f2d834c4b31cfc7','MANJUREGHAA S','','2024-07-14 18:26:59',NULL,NULL),
 (667,'A491','d65a3517532515406352e4d30fa71f26','MANOJ KUMAR S','','2024-07-14 18:26:59',NULL,NULL),
 (668,'A492','4a2eb94b511414c3f7ebe4fedd1341ac','MONIKA G','','2024-07-14 18:26:59',NULL,NULL),
 (669,'A493','a63e1adb753ae624b380814bf0a901bd','MUHAMMAD NAZEEB K S','','2024-07-14 18:26:59',NULL,NULL),
 (670,'A494','a30fb4a7bf146be33cf9d7aee155d454','NAVEENKUMAR S','','2024-07-14 18:26:59',NULL,NULL),
 (671,'A495','5c0acd817995aa198dffdabcb21aed28','POOJA S','','2024-07-14 18:26:59',NULL,NULL),
 (672,'A496','0f0c57abb6986ed065403d1ae2f2152c','PRABHAKAR O S','','2024-07-14 18:26:59',NULL,NULL),
 (673,'A497','08c6c7294687e65fd98997149d9e9562','RESHMA M','','2024-07-14 18:26:59',NULL,NULL),
 (674,'A498','85608780bf7a6cb792531a4799d941a0','ROHINI R','','2024-07-14 18:26:59',NULL,NULL),
 (675,'A499','a69e32c1a2faec1c4590763c5667d5b3','SAIPRASATH L','','2024-07-14 18:26:59',NULL,NULL),
 (676,'A500','d6750b242ffbbc96921eca4314278456','SANGAMITHA T','','2024-07-14 18:26:59',NULL,NULL),
 (677,'A501','6c951dbb47ee11cce151f416f6f93cfc','SANJEETH KUMAR V','','2024-07-14 18:26:59',NULL,NULL),
 (678,'A502','93278c13a9353d59ccbbb402f7718a70','SANTHOSH KUMAR K','','2024-07-14 18:26:59',NULL,NULL),
 (679,'A503','fa797f4425c3fd0c19b992d9a98a03dc','SENTHILNATHAN K','','2024-07-14 18:26:59',NULL,NULL),
 (680,'A504','f3b662feb3ba0071e9da08ba32af4e1a','SNEHA D','','2024-07-14 18:26:59',NULL,NULL),
 (681,'A505','6e01b6da3fdd1aa32d85442777e35443','SOWMYA S','','2024-07-14 18:26:59',NULL,NULL),
 (682,'A506','3702744f3ac958928c2cb3d18a7c5503','SRINITHA R','','2024-07-14 18:26:59',NULL,NULL),
 (683,'A507','9154321f65f7466121870abaf4003ce0','SUBANU M','','2024-07-14 18:26:59',NULL,NULL),
 (684,'A508','20d71e1f85e418fbf25f1de6ba08d54d','SUGESH P','','2024-07-14 18:26:59',NULL,NULL),
 (685,'A509','26367d88a22ef1c690980dc8ddf52107','SURYA M','','2024-07-14 18:26:59',NULL,NULL),
 (686,'A510','f65dc3d9af249a23e0142ed8e62b799d','SUSHMITA M V','','2024-07-14 18:26:59',NULL,NULL),
 (687,'A511','8110f7069638aedae0d4f5da11874b55','SUVETHIKA SRI S','','2024-07-14 18:26:59',NULL,NULL),
 (688,'A512','5c0c0916698db37bbaef667ba0147d01','THAAMIRA M','','2024-07-14 18:26:59',NULL,NULL),
 (689,'A513','59697962d9c63422d0d72363b7d27ed2','THIRUMALAI D','','2024-07-14 18:26:59',NULL,NULL),
 (690,'A514','a299818114d232b9d5c0179ebe97d91f','VARSHNISRI M','','2024-07-14 18:26:59',NULL,NULL),
 (691,'A515','b1b54b0b2a61c091e1befee0784c4d72','VIKRAM B','','2024-07-14 18:26:59',NULL,NULL),
 (692,'A516','363db3035b141357ed6321ad37815e20','VIKRAM V B','','2024-07-14 18:26:59',NULL,NULL),
 (693,'A517','3c346f9b690ec591f95809a1155b222e','VINITHA N','','2024-07-14 18:26:59',NULL,NULL),
 (694,'A518','3b6730695d040ded8d804e4fe3862f55','AARTHIKA D','','2024-07-14 18:26:59',NULL,NULL),
 (695,'A519','50ad992b97ad6cd0b9acd727a9ed57ad','ABINAYA A','','2024-07-14 18:26:59',NULL,NULL),
 (696,'A520','c193e4594c41532e5ced6fd5b912526f','ANUSHREE M J','','2024-07-14 18:26:59',NULL,NULL),
 (697,'A521','a34938bc7ab0114a514d45728dede8ad','ARUL MOZHI V','','2024-07-14 18:26:59',NULL,NULL),
 (698,'A522','e6db199d3a7c2288f52eeb167bb4d574','ARUNPRASAATH V E','','2024-07-14 18:26:59',NULL,NULL),
 (699,'A523','799d869ab76aefa0945c2c5837dc79d4','BALAJI S','','2024-07-14 18:26:59',NULL,NULL),
 (700,'A524','2e998a926c410de9b7fe6c0cc1b0a0af','DARSHINI P','','2024-07-14 18:26:59',NULL,NULL),
 (701,'A525','415239fabe12b88e04e4954b509cc9de','DHANUSURAM S','','2024-07-14 18:26:59',NULL,NULL),
 (702,'A526','ec5f4b6bc00c45a43c5ae59bf8ece7c1','DHARANISH T','','2024-07-14 18:26:59',NULL,NULL),
 (703,'A527','49cd74c73d9ceec0d43e3bbf52030609','EVELINE JEFFINA V','','2024-07-14 18:27:00',NULL,NULL),
 (704,'A528','1f288a8ef57d7ace1960cb402fcfc342','GEETHA SRI R','','2024-07-14 18:27:00',NULL,NULL),
 (705,'A529','a4471595bfd248166edcf8ee09287098','GOBIKA M','','2024-07-14 18:27:00',NULL,NULL),
 (706,'A530','c89a17a5f9cabbde0c4273bfdb7acd94','GUHAN N','','2024-07-14 18:27:00',NULL,NULL),
 (707,'A531','d45d7e3088918ddc0b5352dfcd4b63e7','JANABHARATHI K','','2024-07-14 18:27:00',NULL,NULL),
 (708,'A532','f9be682b4f0278628f42fab29596e54b','JANANI D','','2024-07-14 18:27:00',NULL,NULL),
 (709,'A533','ab2013790f558e45bcb2ec94371515c3','JANET PRICILLA S','','2024-07-14 18:27:00',NULL,NULL),
 (710,'A534','a64634387c0eec5e32963f49b2fd13e6','JASWANTH A','','2024-07-14 18:27:00',NULL,NULL),
 (711,'A535','bd740c2f6f94e6e8151c343764210669','KARTHICK S A','','2024-07-14 18:27:00',NULL,NULL),
 (712,'A536','1e1ddae5f9173af40c8b4a9764ad2f73','KAVIN M','','2024-07-14 18:27:00',NULL,NULL),
 (713,'A537','212deb345e38f12f2f44751ec4c87230','KISHORE R V','','2024-07-14 18:27:00',NULL,NULL),
 (714,'A538','c6030de7ab35dcb5ddac6bcce10f47cf','LATHIKA K','','2024-07-14 18:27:00',NULL,NULL),
 (715,'A539','49860403759c9b3cbbab7334be54e629','LOGANATHAN V','','2024-07-14 18:27:00',NULL,NULL),
 (716,'A540','de6c5bcdec298c39e86c83c3cbd3b57b','MADHUMITHA R','','2024-07-14 18:27:00',NULL,NULL),
 (717,'A541','9af05e7d3ae6db6c284f2ad59bf39a0d','MITHUN ATHITH M R','','2024-07-14 18:27:00',NULL,NULL),
 (718,'A542','93b7fbdb1d1db9d01cbafa6ba4b9dcc3','MOHAMMED NIHAAL S M','','2024-07-14 18:27:00',NULL,NULL),
 (719,'A543','d6eb0ac8888277d8e4bb97e352fba23e','MOHANVEL K','','2024-07-14 18:27:00',NULL,NULL),
 (720,'A544','03720a22309074cb13e899dab953eb38','MOUNIKA DHARANI P V','','2024-07-14 18:27:00',NULL,NULL),
 (721,'A545','d7a1ccaaf9ea42306426af91b175d9a1','NAVEENKUMAR J','','2024-07-14 18:27:00',NULL,NULL),
 (722,'A546','53e847bb5bbfc83af2c07e796cb9f890','PAVITHRA S','','2024-07-14 18:27:00',NULL,NULL),
 (723,'A547','b34fd10e9a19d28c78230153ac2f2459','RANJITH KUMAR R','','2024-07-14 18:27:00',NULL,NULL),
 (724,'A548','e8103ccfe5413566ad4bd61faa1d2b3f','RATHISH K','','2024-07-14 18:27:00',NULL,NULL),
 (725,'A549','0ded02d0e7902f916af4be478b265545','RITIKA DEVI S','','2024-07-14 18:27:00',NULL,NULL),
 (726,'A550','8ff348ea7bf386cb7d3c1d89399fe1b7','SABARNA K','','2024-07-14 18:27:00',NULL,NULL),
 (727,'A551','6cf3bde58edef1626edfb6a006cc045b','SAHANAA K T','','2024-07-14 18:27:00',NULL,NULL),
 (728,'A552','161b3b9b69bc2da0a9c188e265fd73b4','SANJAY BABU S','','2024-07-14 18:27:00',NULL,NULL),
 (729,'A553','83b8109060af2983f340802c1c96ddad','SARAN R','','2024-07-14 18:27:00',NULL,NULL),
 (730,'A554','591c2595cce346244a8dd82d376bfba4','SATHYA PRABHA A','','2024-07-14 18:27:00',NULL,NULL),
 (731,'A555','47ca5faaeb22d82aa0ceead1d71beb28','SHAM GANESH A','','2024-07-14 18:27:00',NULL,NULL),
 (732,'A556','b6e92f1de10d0578f7f82d6d0ef951e2','SIVARAMA KANNAN S','','2024-07-14 18:27:00',NULL,NULL),
 (733,'A557','79ffcbe533134e78780d0b2bcd6163b4','SIVARAMAKRISHNAN M','','2024-07-14 18:27:00',NULL,NULL),
 (734,'A558','896d1fbdffbcb59adc3f5f38b1ccdc96','SIVASHANKAR K','','2024-07-14 18:27:00',NULL,NULL),
 (735,'A559','ee3556fabb64f5968fb5c976eff9d221','SRIDHARSHINI S','','2024-07-14 18:27:00',NULL,NULL),
 (736,'A560','316d9bc4bbe8e3894d89a852090a08b3','SRIMATHI S','','2024-07-14 18:27:00',NULL,NULL),
 (737,'A561','eef7fe36f7f8a65b5be9c644638576d7','SUBHAHARNI S P','','2024-07-14 18:27:00',NULL,NULL),
 (738,'A562','ebabd0952abe56800027828b11fed858','SURYA L','','2024-07-14 18:27:00',NULL,NULL),
 (739,'A563','a05b9a5353800e7e6c2986833f35ac58','TAMILSELVAN K M','','2024-07-14 18:27:00',NULL,NULL),
 (740,'A564','1231d9f9a330c23ff47419c90e9b46b6','TRISHA V','','2024-07-14 18:27:00',NULL,NULL),
 (741,'A565','779f60e32212632c9a04f85f76ab4478','VIKNESH S','','2024-07-14 18:27:00',NULL,NULL),
 (742,'A566','366d2dfb2e368dcb1f77ce9451849a79','VISHNUVARDHAN M','','2024-07-14 18:27:00',NULL,NULL),
 (743,'A567','e416853b6d869439c61dbdd92ab73181','VISHALI S M','','2024-07-14 18:27:00',NULL,NULL),
 (744,'A568','4284d97d1ffdb46c96df84d4485c04dd','VISHALINI A','','2024-07-14 18:27:00',NULL,NULL),
 (745,'A569','39d7548e9ea247afc72b34d89e3ee4a8','ABARNA A J','','2024-07-14 18:27:00',NULL,NULL),
 (746,'A570','17083f5908b4a200c7c9d78037017b18','ABINESH R','','2024-07-14 18:27:00',NULL,NULL),
 (747,'A571','80bce2641353244688364b09b693e760','ABISHEK G','','2024-07-14 18:27:00',NULL,NULL),
 (748,'A572','4dba312027c8d4dd0b681ee13240acd8','BARATH C S','','2024-07-14 18:27:00',NULL,NULL),
 (749,'A573','184487ac8122b240c6b230c51a5ed861','DHANUSH P','','2024-07-14 18:27:00',NULL,NULL),
 (750,'A574','3688d0d72d2434fe085b3b3c8a109873','DINESH B','','2024-07-14 18:27:00',NULL,NULL),
 (751,'A575','8e596059e6315679834faa0c248be10f','DINESH S','','2024-07-14 18:27:00',NULL,NULL),
 (752,'A576','c2a0c6e110d86e62ec3ebc41e5963ce1','DINESHKUMAR P','','2024-07-14 18:27:00',NULL,NULL),
 (753,'A577','b43a6e6d0dcba0049b5a0bb7f9eda302','DIVIT K V','','2024-07-14 18:27:00',NULL,NULL),
 (754,'A578','10685b51ab7df64794a81dbea77eba0d','DURAIMURUGAN K','','2024-07-14 18:27:00',NULL,NULL),
 (755,'A579','651484a473d1cf41591dc2b438b51e5b','ESWARAN R','','2024-07-14 18:27:00',NULL,NULL),
 (756,'A580','9e277d51caa08f42697621584ed1c00d','GOBIKA N','','2024-07-14 18:27:00',NULL,NULL),
 (757,'A581','93009ee7e1ef2b26ade2dbcb27a4470b','HARAN AP','','2024-07-14 18:27:00',NULL,NULL),
 (758,'A582','be66914a9785053c42c7c42f715e625b','HARI VISHNU S M','','2024-07-14 18:27:00',NULL,NULL),
 (759,'A583','fef8600478a075a507756abeab3cc1fe','HARIHARAN R','','2024-07-14 18:27:00',NULL,NULL),
 (760,'A584','1b6b94073340d6e087b87e603a0a1c9f','HARINI M','','2024-07-14 18:27:00',NULL,NULL),
 (761,'A585','6ec22ff89278b48a8f7534e6646a9d19','JEEVAA N','','2024-07-14 18:27:00',NULL,NULL),
 (762,'A586','f8253a7e8a6d3b36e30af07e9e4372fb','JEEVIKA V','','2024-07-14 18:27:00',NULL,NULL),
 (763,'A587','1eed6a9169c06d30a98dbfd060095d9d','JEGADHISH G','','2024-07-14 18:27:00',NULL,NULL),
 (764,'A588','63e8a2ba98014f6749c0213208666281','JUDSON K','','2024-07-14 18:27:00',NULL,NULL),
 (765,'A589','3ee69c6b50df4d0392a3b76ea336a38b','KAMESH M','','2024-07-14 18:27:00',NULL,NULL),
 (766,'A590','41b52e7291c2ceb787b995afcfbdea81','KEERTHI V','','2024-07-14 18:27:00',NULL,NULL),
 (767,'A591','663bf904086e56a2c20f0cdc90fc5f29','LALETHAA R P','','2024-07-14 18:27:00',NULL,NULL),
 (768,'A592','fbc6604d88cc63be0da809c2b735ccdd','LOHITH L','','2024-07-14 18:27:00',NULL,NULL),
 (769,'A593','2aca222d62eaccf5a1d12451a2728a4c','MEGADARSHINI M','','2024-07-14 18:27:00',NULL,NULL),
 (770,'A594','b4d5f66e92662b3be07933d16572ebd3','MONISHA M','','2024-07-14 18:27:00',NULL,NULL),
 (771,'A595','493dbc64c6395d9824ca3b6c9b93496a','NARAYANA VIGNESH S','','2024-07-14 18:27:00',NULL,NULL),
 (772,'A596','42cb1f77b608426891bdb2bba0d1440f','NAVIN VIJEY N','','2024-07-14 18:27:00',NULL,NULL),
 (773,'A597','5b8116e5824092658461bab51db7c7b9','NISATH M K','','2024-07-14 18:27:00',NULL,NULL),
 (774,'A598','680953200cda98bcc577dbd042207a12','PONGIRI K','','2024-07-14 18:27:00',NULL,NULL),
 (775,'A599','76a9ef94dd47b5b23dd92993efb25c3b','PRIYANKA V','','2024-07-14 18:27:00',NULL,NULL),
 (776,'A600','338735d90197ce612b61413cb6635b0d','RAGUL S V','','2024-07-14 18:27:00',NULL,NULL),
 (777,'A601','97a27446e37e9c8e8c7bdbbeae8268fc','RAJAGOKUL R','','2024-07-14 18:27:00',NULL,NULL),
 (778,'A602','a518165498edd9590ed21579dd38bfe8','SANJEEV TV','','2024-07-14 18:27:00',NULL,NULL),
 (779,'A603','deaa7224728546a57cd9b7ee1aec04ee','SARANITH S B','','2024-07-14 18:27:00',NULL,NULL),
 (780,'A604','45f93265302731008a073435ccf96b48','SARITHASRI N','','2024-07-14 18:27:00',NULL,NULL),
 (781,'A605','b68eaed07bd105b73f80980d04569d74','SASIPRABHA E','','2024-07-14 18:27:00',NULL,NULL),
 (782,'A606','873bed9c40c58f50682b24b5be933437','SASMITHA J','','2024-07-14 18:27:00',NULL,NULL),
 (783,'A607','8c04b5ae3f056c8c3fccf9083bdab0d4','SATHYAPRIYA J S','','2024-07-14 18:27:00',NULL,NULL),
 (784,'A608','574d95a7de99060fb00d243a192d1d0e','SHRIVANTH KS','','2024-07-14 18:27:00',NULL,NULL),
 (785,'A609','915b2114fd5619b17958906ab08d2378','SIVABALAN T','','2024-07-14 18:27:00',NULL,NULL),
 (786,'A610','ed62fa1a2608c22f1a8ee579aa408786','SREE HARINEE S','','2024-07-14 18:27:00',NULL,NULL),
 (787,'A611','4b80dacfe73f31250b11e6ed3c727e6f','SRIRAM GANAPATHY M','','2024-07-14 18:27:00',NULL,NULL),
 (788,'A612','89b939ee68beca7dce7026f0bc669beb','SRIVISHNU S R','','2024-07-14 18:27:00',NULL,NULL),
 (789,'A613','ff95fb89c830693bd1a8558e02dd0781','SUBHASH K','','2024-07-14 18:27:00',NULL,NULL),
 (790,'A614','c652c20f858b54240fdac0c823c04c9d','SURENTHAR R','','2024-07-14 18:27:00',NULL,NULL),
 (791,'A615','e3120f1e3c89adbf0fc4b715f4f8df8b','VIDHYAVARSHINI P','','2024-07-14 18:27:00',NULL,NULL),
 (792,'A616','b0d32068c52e1fd15928e586400efa35','VIMAL T S','','2024-07-14 18:27:00',NULL,NULL),
 (793,'A617','67aefa7409ab1c7f10a32c37b863f188','VITHARSHANA B','','2024-07-14 18:27:00',NULL,NULL),
 (794,'A618','2acb9eff9e731e1d42cb0e82bc5cf889','SHEYAM D','','2024-07-14 18:27:00',NULL,NULL),
 (795,'A619','2f729c9d52d2159677fd26af138907ab','DHARSHINI A','','2024-07-14 18:27:00',NULL,NULL),
 (796,'A620','6e298367af34c090c4534fcfca07a07b','HEMA S','','2024-07-14 18:27:00',NULL,NULL),
 (797,'A621','c85c0a8927ad8aa013d09e853a34e37a','SURYA K','','2024-07-14 18:27:00',NULL,NULL),
 (798,'A622','f1451b80c40b715afd05145caa089b26','SWETHA G','','2024-07-14 18:27:00',NULL,NULL),
 (799,'A623','5c31b614e87eea9d1b3a60c8877e7e2a','HARSHINI K','','2024-07-14 18:27:00',NULL,NULL),
 (800,'A624','83eb891a33ef0d4059969d5fe110d7a4','ROSNI V S','','2024-07-14 18:27:00',NULL,NULL),
 (801,'A625','9e77568d04e5c7c5ece264859583dff7','ABHISHEAK M M','','2024-07-14 18:27:00',NULL,NULL),
 (802,'A626','311862c82693653af208ce62cc6566d2','ADITHI S','','2024-07-14 18:27:00',NULL,NULL),
 (803,'A627','9674f127ca17e36cf3304882203f451e','AKSHAYAPRIYAA M','','2024-07-14 18:27:00',NULL,NULL),
 (804,'A628','2e3a34b93c9a886570eb4ff30b074824','ANANDALAKSHMI S S','','2024-07-14 18:27:00',NULL,NULL),
 (805,'A629','545b47da271c802be600d7e98ce93de5','ANUSUYA S','','2024-07-14 18:27:00',NULL,NULL),
 (806,'A630','ba69657fb1be3655e223cb6d2cecff51','ARSHAD AHAMAD K','','2024-07-14 18:27:00',NULL,NULL),
 (807,'A631','c42327cea053da5c6b881f01c9719e62','ARUNTHATHI S','','2024-07-14 18:27:00',NULL,NULL),
 (808,'A632','2df2413ab90af60a723d30e64fe529e2','BANUMATHI P','','2024-07-14 18:27:00',NULL,NULL),
 (809,'A633','50f33f4ecd9eb6f0cc3b95dd4dc689ff','BHARATH S E','','2024-07-14 18:27:00',NULL,NULL),
 (810,'A634','adb7e7a140a638ac2e09deae99c4ab1a','BHARATHKUMAR K','','2024-07-14 18:27:00',NULL,NULL),
 (811,'A635','e107b6b42fe04b4f39a507c26487a7d2','CHANDRIKA R','','2024-07-14 18:27:00',NULL,NULL),
 (812,'A636','0cdb15060aa31c40757ceb626d5aaea8','DHARANEESH V D','','2024-07-14 18:27:00',NULL,NULL),
 (813,'A637','c1b8b182b02080f7cf4c4f7436fc6152','DHIVYADHARSHINI B','','2024-07-14 18:27:00',NULL,NULL),
 (814,'A638','b0853635b100055d6720d2977ef39af8','HARISHANKAR R S','','2024-07-14 18:27:00',NULL,NULL),
 (815,'A639','34680622eb04de1f21e500f3f55317f4','HARSHINI M','','2024-07-14 18:27:00',NULL,NULL),
 (816,'A640','cd868f25b05672d946c6890b60318abf','HEMA DHARSHINI B','','2024-07-14 18:27:00',NULL,NULL),
 (817,'A641','d7cd0ebf224f83cfdd31a7cd45cb5545','Mr.KANISH K','','2024-07-14 18:27:00',NULL,NULL),
 (818,'A642','38e3dc5487c25120ce11ed91195c6cda','KANISKA K','','2024-07-14 18:27:00',NULL,NULL),
 (819,'A643','2c47f71d4a9560c868ee6620f856755b','KARTHIK M','','2024-07-14 18:27:00',NULL,NULL),
 (820,'A644','78f72a696f0a6ae0bb6712ffa7031f61','KAVYA B K','','2024-07-14 18:27:00',NULL,NULL),
 (821,'A645','99a6c52db48080e2efd4710cf6181fa9','KISHORE M','','2024-07-14 18:27:00',NULL,NULL),
 (822,'A646','0f76274fc15e2cf0f3e1aaa6e78c02e2','KOUSIKA C','','2024-07-14 18:27:00',NULL,NULL),
 (823,'A647','7bd1e49812ca1df266b6c4a2fc523f64','LAVANYA N','','2024-07-14 18:27:00',NULL,NULL),
 (824,'A648','142fe857307b66291b7d860e8fe50185','MANOJ KUMAR M','','2024-07-14 18:27:00',NULL,NULL),
 (825,'A649','b5538d9918c386a641bd06ba1bd8ebbb','MOHAN PRASAD V','','2024-07-14 18:27:00',NULL,NULL),
 (826,'A650','303fa98ee00d786d55378a521a2a2b93','MOHANRAJ T','','2024-07-14 18:27:00',NULL,NULL),
 (827,'A651','703042f0276691bc35d8b8f1e26dd2f2','MONIKA S','','2024-07-14 18:27:00',NULL,NULL),
 (828,'A652','21189cd539f0e6208ac03d3bab613831','MOULISWARAN B','','2024-07-14 18:27:00',NULL,NULL),
 (829,'A653','a3e1c07f08ab78b2a23f1f11e283cca5','MUTHUKUMAR D','','2024-07-14 18:27:00',NULL,NULL),
 (830,'A654','e13569ebceee645bb56d3b6043d18e98','NAVARAJITH S','','2024-07-14 18:27:00',NULL,NULL),
 (831,'A655','5a049e5b6a6da8a4200faef1f2465967','NAVEENKUMAR R','','2024-07-14 18:27:00',NULL,NULL),
 (832,'A656','5e901c156f20d6f2ae3ea72aac1e9b62','NIDARSHANA S','','2024-07-14 18:27:00',NULL,NULL),
 (833,'A657','fdec0566d0273d67bffa989768896c55','NIKESH S','','2024-07-14 18:27:00',NULL,NULL),
 (834,'A658','debe80276661ae42192bbb0c69f5cf21','NISHANTH S','','2024-07-14 18:27:00',NULL,NULL),
 (835,'A659','9db774a46644049a3f270f7f699882da','PON PRIYA VARSHINI S','','2024-07-14 18:27:00',NULL,NULL),
 (836,'A660','e8713034300f4e5baba8fe9a9df633e4','POOJAA R','','2024-07-14 18:27:00',NULL,NULL),
 (837,'A661','d76f11fdec7b4af09f151e9057869621','PRANAV V','','2024-07-14 18:27:00',NULL,NULL),
 (838,'A662','20c3bfc3dbfcf78527bce548305a48d0','PRAVEEN A','','2024-07-14 18:27:00',NULL,NULL),
 (839,'A663','8984adb222a269f43277886944769cbb','RADHIKA S','','2024-07-14 18:27:00',NULL,NULL),
 (840,'A664','c612fc4354a63684c57ee59bdb19673c','RAGUL N','','2024-07-14 18:27:00',NULL,NULL),
 (841,'A665','436527d6da6e39b653a4a68a7d68bf6a','RAVINDHAR K','','2024-07-14 18:27:00',NULL,NULL),
 (842,'A666','5c743188d4e4aaeacab17218f2228ca3','RITHISH V','','2024-07-14 18:27:00',NULL,NULL),
 (843,'A667','d906dd29f7c1717d98cab5d31b74f7d9','SANJAY G','','2024-07-14 18:27:00',NULL,NULL),
 (844,'A668','45e2ec159a7213b18be168356c67109d','SARVESHWARAN M','','2024-07-14 18:27:00',NULL,NULL),
 (845,'A669','c01b7c9e49658bdd549203c36383d64c','SATHISH P','','2024-07-14 18:27:00',NULL,NULL),
 (846,'A670','0757d028578480b588beec1e75b512e4','SHRI KOWSHIKK RAJA V','','2024-07-14 18:27:00',NULL,NULL),
 (847,'A671','32b06b91fc8f0d0d92fced285fb6118a','SIVAPRIYA B','','2024-07-14 18:27:00',NULL,NULL),
 (848,'A672','2771478e94efb72bfebfee8dc4f2550b','SRI NEKA K','','2024-07-14 18:27:00',NULL,NULL),
 (849,'A673','7f4c189ab4e5ba93b293ac6097849f47','SWATHY V','','2024-07-14 18:27:00',NULL,NULL),
 (850,'A674','6b466dd874363c53c941dafe42e9e1b3','TAARINI V','','2024-07-14 18:27:00',NULL,NULL),
 (851,'A675','2e103aba36020706785e33851e9984ef','THANASHREE S P','','2024-07-14 18:27:00',NULL,NULL),
 (852,'A676','36625026e6ee2a62969f634004f4687a','THIRUVARUN G','','2024-07-14 18:27:00',NULL,NULL),
 (853,'A677','f8aba91736be4bad67181a8cce032337','UPENDHIRA M','','2024-07-14 18:27:00',NULL,NULL),
 (854,'A678','4da776d6234c72eaeda9448e05b51b61','VARSHINI M','','2024-07-14 18:27:00',NULL,NULL),
 (855,'A679','bf9929e283dd8f7739dea8e93dfabe06','VIKASHINI G','','2024-07-14 18:27:00',NULL,NULL),
 (856,'A680','46ad0c620c321dd0f9043f0b1ced2ddd','VINOTH KUMAR P','','2024-07-14 18:27:00',NULL,NULL),
 (857,'A681','93fe25103778db584e0b4d4ab987b298','VISALLI M K','','2024-07-14 18:27:00',NULL,NULL),
 (858,'A682','4a12d65da1d29a713b5ab1a305a5dfe1','YASWANTH S','','2024-07-14 18:27:00',NULL,NULL),
 (859,'A683','1e572738ef2fa907f88cafd6ee98b869','KAMINI M','','2024-07-14 18:27:00',NULL,NULL),
 (860,'A684','e0deed4c603333795fb9935d0d8d27cb','AASIGA SHRI R','','2024-07-14 18:27:00',NULL,NULL),
 (861,'A685','419f50347b706f95ecd415f78343e65d','GURUPRIYA G','','2024-07-14 18:27:00',NULL,NULL),
 (862,'A686','70e41cf01bbf4e3246b17f2ea3cf2742','KARTHIKA S','','2024-07-14 18:27:00',NULL,NULL),
 (863,'A687','c3e28b76e1253684e1ff2a1a5808e047','MEHALA P','','2024-07-14 18:27:00',NULL,NULL),
 (864,'A688','391ca6090c6ac200089d3e3d5e5fd8b6','NIVETHA S','','2024-07-14 18:27:00',NULL,NULL),
 (865,'A689','7e5f9db5614d8df5d16e0b0aee0176a1','PRADEEPA R','','2024-07-14 18:27:00',NULL,NULL),
 (866,'A690','b1425ed84a70d8782e393c6a3a42eb75','PRIYADARSHINI V R','','2024-07-14 18:27:00',NULL,NULL),
 (867,'A691','b76562ae633c073c45db84a2c453c56f','AJHAI V P','','2024-07-14 18:27:00',NULL,NULL),
 (868,'A692','8d758211fc98865fd1cb36d14f4d42e9','AKALYASRI S','','2024-07-14 18:27:00',NULL,NULL),
 (869,'A693','db4786dafe2ad3fe8956c8bdd79eee5f','ASWIN BALAJI.S','','2024-07-14 18:27:00',NULL,NULL),
 (870,'A694','5b4c48667c1ac7cf08ac35f8305f0df3','BAVATHARANI N','','2024-07-14 18:27:00',NULL,NULL),
 (871,'A695','6daa016f802eba415d5f710cbeb46190','BHAVAN SURIYA.S','','2024-07-14 18:27:00',NULL,NULL),
 (872,'A696','fc9aabd6c55467f99e89f01b6c792981','BOOMIKA J','','2024-07-14 18:27:01',NULL,NULL),
 (873,'A697','b3c1d1cf7b2878ee01095a84fa8a852a','BOOVENDRAN S','','2024-07-14 18:27:01',NULL,NULL),
 (874,'A698','fc6125c170647b6133cd612dbd71ab24','CHITRADEVI.M','','2024-07-14 18:27:01',NULL,NULL),
 (875,'A699','969ec475a948aded6d5ef3a2a7ff96ea','DHEEPTHI N','','2024-07-14 18:27:01',NULL,NULL),
 (876,'A700','055fd2b1114ef44e7060d0f76069b8d2','GAYATHIRI M','','2024-07-14 18:27:01',NULL,NULL),
 (877,'A701','e3d0371fb64315a62125aa6b1ecac503','GIRIDHAR T','','2024-07-14 18:27:01',NULL,NULL),
 (878,'A702','fe19662b057526de644f15dfea4437c8','GOKUL KANNAN.K','','2024-07-14 18:27:01',NULL,NULL),
 (879,'A703','9163fbf76f78ddd792779bbd4b28adf4','HAJIRA FATHIMA A','','2024-07-14 18:27:01',NULL,NULL),
 (880,'A704','a92722aa2d90f6e6af460c48a4417cf9','HARIPRIYA P','','2024-07-14 18:27:01',NULL,NULL),
 (881,'A705','6c231636d9fc7546adb4ad744b609a17','KARTHIKA D B','','2024-07-14 18:27:01',NULL,NULL),
 (882,'A706','52a60008db16a3e933bb53264c6ba9db','KAVISHNAA S T','','2024-07-14 18:27:01',NULL,NULL),
 (883,'A707','b11cc0094a28b26160ef5c652bd1e7e7','KAVIYARASU L','','2024-07-14 18:27:01',NULL,NULL),
 (884,'A708','b07143567f0a1b3c75475d0422d05849','KEERTHI S','','2024-07-14 18:27:01',NULL,NULL),
 (885,'A709','bb2f498e11d89065de6139e87cce9ae4','KESHIKA R','','2024-07-14 18:27:01',NULL,NULL),
 (886,'A710','5cc59a4ff5354f407a92bf6318253747','LOGESH D','','2024-07-14 18:27:01',NULL,NULL),
 (887,'A711','94662b696fe4587d9fb7f007902c855f','MUTHURAJA.M','','2024-07-14 18:27:01',NULL,NULL),
 (888,'A712','a5eb9367a731b5701d1e9646b25ab4c8','NAVEEN KIMAR P','','2024-07-14 18:27:01',NULL,NULL),
 (889,'A713','3c05f5e78e05e74a4139a049215a7eaf','NAVEEN KUMAR.V','','2024-07-14 18:27:01',NULL,NULL),
 (890,'A714','a1afb127d13e992e3fe5f2e09c5d1fed','POOJA YUVASREE K','','2024-07-14 18:27:01',NULL,NULL),
 (891,'A715','813b9ba36df46f1daee03b25d98e0310','PRADEEP.G','','2024-07-14 18:27:01',NULL,NULL),
 (892,'A716','3cc789a94c8533f525f1f591462682cb','PRATHISH .M','','2024-07-14 18:27:01',NULL,NULL),
 (893,'A717','d8b73088cb76aed761eb578e7fa34b83','RAGUL K.R.','','2024-07-14 18:27:01',NULL,NULL),
 (894,'A718','387b7627c7fb5d74f6bfb66135472026','RAMESH ARAVINDHAN M','','2024-07-14 18:27:01',NULL,NULL),
 (895,'A719','8646d62d6a2402d19ee81c6737ca2c60','RANJITH VEL K','','2024-07-14 18:27:01',NULL,NULL),
 (896,'A720','fd1eade0f006d6b5601b5ed2fa47f11b','ROHINTH.V','','2024-07-14 18:27:01',NULL,NULL),
 (897,'A721','3263b460204951ea8b785950ab78fa76','SAKTHIVEL.K','','2024-07-14 18:27:01',NULL,NULL),
 (898,'A722','c30c0ba3e700af0c61638b24af116742','SAMPATH KUMAR M','','2024-07-14 18:27:01',NULL,NULL),
 (899,'A723','b958919e98a99277150058da53e7772c','SANJITHA S','','2024-07-14 18:27:01',NULL,NULL),
 (900,'A724','579a530ce4ddb2681b12c02d0474b7e0','SANTHIKA E','','2024-07-14 18:27:01',NULL,NULL),
 (901,'A725','8f184b29b9eaf416aa75962398a93ed5','SELVA BRINDHA P','','2024-07-14 18:27:01',NULL,NULL),
 (902,'A726','83f5c3e82714fd809f19ce4d7ef7d87a','SHANKAR S','','2024-07-14 18:27:01',NULL,NULL),
 (903,'A727','d14e8151b4b492609ca2290a519eb431','SIDDARTH S','','2024-07-14 18:27:01',NULL,NULL),
 (904,'A728','4a386e946803a9f406060b8ee0f559ed','SRI MATHI P T','','2024-07-14 18:27:01',NULL,NULL),
 (905,'A729','2a517d298fdc58a5e88672ddbf8fa2f1','SRIVISHNU.S','','2024-07-14 18:27:01',NULL,NULL),
 (906,'A730','6378eeb5d57831b713d2ab1b32a1772e','SURENDHIRAN A','','2024-07-14 18:27:01',NULL,NULL),
 (907,'A731','13f3309cf59072c95f3edb6b0a74564c','SWATHINI S','','2024-07-14 18:27:01',NULL,NULL),
 (908,'A732','e309a760e4bdef0c7836b6de5d5e1c0f','VASANTH V.B.','','2024-07-14 18:27:01',NULL,NULL),
 (909,'A733','90b5b15ad4954dd5776c7394a8f33241','GOKUL RAJ R','','2024-07-14 18:27:01',NULL,NULL),
 (910,'A734','f8cef6bd050cb4db7f912ea99bf56626','ANISH K','','2024-07-14 18:27:01',NULL,NULL),
 (911,'A735','1b0879300fee2cda791041ea5dce669d','ARUNA A S','','2024-07-14 18:27:01',NULL,NULL),
 (912,'A736','ccb89f08aeb4e0fd10b6f99b2a9d9477','DHANUSHYANDHINI M','','2024-07-14 18:27:01',NULL,NULL),
 (913,'A737','6d2a0cbcacbba65a553262380fd0a078','DHARSHINI S','','2024-07-14 18:27:01',NULL,NULL),
 (914,'A738','a638f6be0a4b0c7bd044c7e8e16412fd','DHIVAKAR B','','2024-07-14 18:27:01',NULL,NULL),
 (915,'A739','5cdbe9c99a49355a3376b47c438a62da','ELAKKIYA S','','2024-07-14 18:27:01',NULL,NULL),
 (916,'A740','96929e3157d8bb867335273bceeafe64','GOKULANAND E','','2024-07-14 18:27:01',NULL,NULL),
 (917,'A741','df4243f0ec5381f783994c1b724aec54','GOWRI B','','2024-07-14 18:27:01',NULL,NULL),
 (918,'A742','8b357179a36afd83f7036b7c7a849ddb','GOWRI MANIKANDAN M','','2024-07-14 18:27:01',NULL,NULL),
 (919,'A743','cf9a9259e09a2a48d89feff8d46958cb','HARIHARAN C','','2024-07-14 18:27:01',NULL,NULL),
 (920,'A744','7698853e33ecab2aa14a6f08e22e3aeb','ILAKKIYA S','','2024-07-14 18:27:01',NULL,NULL),
 (921,'A745','115a18c1fe920552dff7e276a3e469ec','JENCY M','','2024-07-14 18:27:01',NULL,NULL),
 (922,'A746','25b481da9c820d2dc8baabad28457b9f','JOTHEESWARAN A','','2024-07-14 18:27:01',NULL,NULL),
 (923,'A747','18d3619d00645bf3723effa303b95453','KAMALESH S','','2024-07-14 18:27:01',NULL,NULL),
 (924,'A748','ceb08994e80ad303798fbbf5a0617d5d','KANISHKAA V','','2024-07-14 18:27:01',NULL,NULL),
 (925,'A749','b970a48afb9cc8158dd1af9975fe4d32','KAVIARASU R','','2024-07-14 18:27:01',NULL,NULL),
 (926,'A750','f41f8f9cf59c6d65bf937d9121f55539','KAVIYA K','','2024-07-14 18:27:01',NULL,NULL),
 (927,'A751','1d309303a8d6be8d94e8286979664fae','KEERTHI VARMEN K','','2024-07-14 18:27:01',NULL,NULL),
 (928,'A752','935eca4ff5fc130ee67e3d1a22b08726','KIRUBAKARAN K','','2024-07-14 18:27:01',NULL,NULL),
 (929,'A753','82d70f9493183725e4e9fb840aeb92c3','KOKILA N','','2024-07-14 18:27:01',NULL,NULL),
 (930,'A754','12ccd1a5912f6956e4f6babc7e7efa69','MITHUNA S','','2024-07-14 18:27:01',NULL,NULL),
 (931,'A755','f6c3a7b00c8efdd04f8814ed8e55ef22','MYTHILIDEVI S','','2024-07-14 18:27:01',NULL,NULL),
 (932,'A756','ea54e6be1794d06b0b400403e1088572','NITHIN SRIRAM S','','2024-07-14 18:27:01',NULL,NULL),
 (933,'A757','bb4d0645a2ac20bd5d9cfd79fbafcf49','NITHYA SREE C K','','2024-07-14 18:27:01',NULL,NULL),
 (934,'A758','5ba54761011004359555243334c6c20d','NIVETHA M','','2024-07-14 18:27:01',NULL,NULL),
 (935,'A759','1b32803001bcacf50486006f81e30533','PRAVEENA M','','2024-07-14 18:27:01',NULL,NULL),
 (936,'A760','5427507850449afa6fc3f2bb82827f25','RADHA V','','2024-07-14 18:27:01',NULL,NULL),
 (937,'A761','a01591e9c13e08c4d5a8c14feb917b0b','RITHANYA M','','2024-07-14 18:27:01',NULL,NULL),
 (938,'A762','6e8a9c94c777ca8edb1ccd1f4673979c','RITHIKA N','','2024-07-14 18:27:01',NULL,NULL),
 (939,'A763','b6440658db5fe64ad818b8b5b299e203','SABARINATHAN G','','2024-07-14 18:27:01',NULL,NULL),
 (940,'A764','3fb9e337490bbbac945d67b5f36570ee','SANKAR S','','2024-07-14 18:27:01',NULL,NULL),
 (941,'A765','0e619cd1ea6663e542058ae54343bf28','SANTHOSH M','','2024-07-14 18:27:01',NULL,NULL),
 (942,'A766','26beb11989ca86bcd031a3cee7437e4f','SHARATHIKA R','','2024-07-14 18:27:01',NULL,NULL),
 (943,'A767','17c6fc9a4d9cb8c1049da39caf3def22','SHREE VARSHINI K K','','2024-07-14 18:27:01',NULL,NULL),
 (944,'A768','9b45e2bb9fb3d33acdbe4680dc7c31e4','SOWMIYA M','','2024-07-14 18:27:01',NULL,NULL),
 (945,'A769','db882aef2d3391017d5c009544d126cf','SUBIKSHA S','','2024-07-14 18:27:01',NULL,NULL),
 (946,'A770','3c1c4feb80b2f79d51fd338d2c5c97be','TARANI M S','','2024-07-14 18:27:01',NULL,NULL),
 (947,'A771','beebb067a57b51e0428b9d42ea6ce5bd','VAIDEESHWARI S','','2024-07-14 18:27:01',NULL,NULL),
 (948,'A772','b9670148391aecb370f059d3448883a7','KARTHIKA S','','2024-07-14 18:27:01',NULL,NULL),
 (949,'A773','2fdca5dcff7beb0164b94e6f87f024fa','DHARANI V','','2024-07-14 18:27:01',NULL,NULL),
 (950,'A774','4674b46a71b844fa8067c36e2b683f0d','GAYATHRI P','','2024-07-14 18:27:01',NULL,NULL),
 (951,'A775','64d44125b1064b202f62455f30928ee4','GOKULA PRIYA E','','2024-07-14 18:27:01',NULL,NULL),
 (952,'A776','4321b498f0e05fcacc338ed81648121b','JAVIN V M','','2024-07-14 18:27:01',NULL,NULL),
 (953,'A777','5ab6a3099be7c70bc28e0157dd5d3789','JAYA PRABHA S','','2024-07-14 18:27:01',NULL,NULL),
 (954,'A778','1e877771cadf8a8626a54921d8f8a613','PAVIN R','','2024-07-14 18:27:01',NULL,NULL),
 (955,'A779','6ffc05ef5f4ccdb242b251d7635a7c36','PRIYADHARSHINI A','','2024-07-14 18:27:01',NULL,NULL),
 (956,'A780','ecdf086a28ab2f74aff8e988a229be85','RAHINI M K S','','2024-07-14 18:27:01',NULL,NULL),
 (957,'A781','0d467ce1aa278a512dc40434f0da9375','SANGAMITHIRA A','','2024-07-14 18:27:01',NULL,NULL),
 (958,'A782','b5325086c71c0e2834fc08496160d84d','THARUN B','','2024-07-14 18:27:01',NULL,NULL),
 (959,'A783','af0f9c798b9315e06c578d5b14cf5694','UDHAYASHRI T','','2024-07-14 18:27:01',NULL,NULL),
 (960,'A784','91e7a35a7e9fc7eab5ea3164e33e1102','YUVASRI P','','2024-07-14 18:27:01',NULL,NULL),
 (961,'A785','28abd26db93cfeef6a8cfc40e76474b2','ARBAAZ MEERAN M H','','2024-07-14 18:27:01',NULL,NULL),
 (962,'A786','246f4b648b57230663b2df0dfd90c003','ARUNKUMAR M','','2024-07-14 18:27:01',NULL,NULL),
 (963,'A787','7a098406bc977466ff96b7b782903bd2','CHARAN K','','2024-07-14 18:27:01',NULL,NULL),
 (964,'A788','68ac41125c2ea892347b236accc82443','DHARANI B','','2024-07-14 18:27:01',NULL,NULL),
 (965,'A789','0e26204e17ab6a8d2685f82a73398a14','GOKUL A','','2024-07-14 18:27:01',NULL,NULL),
 (966,'A790','1a3f30bcda0018d6c256eb950014d459','HARIHARAN A','','2024-07-14 18:27:01',NULL,NULL),
 (967,'A791','cef4325fdbde813abd3acb1bbf497d51','JEFRESEN J R','','2024-07-14 18:27:01',NULL,NULL),
 (968,'A792','5a20c6a64d0fb21bbfc677187471551a','MAGUDESWARI K','','2024-07-14 18:27:01',NULL,NULL),
 (969,'A793','db24a686c619b8117782ace9a728b8fe','MERLIN ANNIE CHRISTINA M','','2024-07-14 18:27:01',NULL,NULL),
 (970,'A794','526ddce21524725784c85267c1690907','NITHYANANTHAN S','','2024-07-14 18:27:01',NULL,NULL),
 (971,'A795','6b5020ed54683ee1b2b5cc7dd3454349','PRAKASH J','','2024-07-14 18:27:01',NULL,NULL),
 (972,'A796','3f593603712898c3f4ae5b615c95efe1','SANTHOSH S','','2024-07-14 18:27:01',NULL,NULL),
 (973,'A797','325ed22a1893434955813f95cc7e6e50','SETHUPATHY A G','','2024-07-14 18:27:01',NULL,NULL),
 (974,'A798','e56dd62410cdd9ff7a7cfb1dcb7a9195','SHOMESHWARAN R','','2024-07-14 18:27:01',NULL,NULL),
 (975,'A799','6b79bc6b0b658f510744bb12256d1b94','SUNIL KUMAR M','','2024-07-14 18:27:01',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;

--
-- Create schema aptonlineseven
--

CREATE DATABASE IF NOT EXISTS aptonlineseven;
USE aptonlineseven;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,2);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=151 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (2,1,'25 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (3,1,'16 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (4,1,'15 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (5,1,'10 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (6,2,'32 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (7,2,'25 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (8,2,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (9,2,'15 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (10,2,'10 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'1200 chairs',NULL,0,0,'',0,0,NULL,1,0,''),
 (12,3,'1380 chairs',NULL,1,0,'',0,0,NULL,1,0,''),
 (13,3,'380 chairs',NULL,0,0,'',0,0,NULL,1,0,''),
 (14,3,'1250 chairs',NULL,0,0,'',0,0,NULL,1,0,''),
 (15,3,'2000 chairs',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'10 binders',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,4,'5 binders',NULL,0,0,'',0,0,NULL,1,0,''),
 (18,4,'15 binders',NULL,0,0,'',0,0,NULL,1,0,''),
 (19,4,'11 binders',NULL,1,0,'',0,0,NULL,1,0,''),
 (20,4,'25 binders',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,5,'8 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,5,'9 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (23,5,'4 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (24,5,'5 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (25,5,'3 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (26,6,'120 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,6,'110 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (28,6,'115 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (29,6,'130 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (30,6,'95 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (31,7,'180 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,7,'250 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,7,'285 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (34,7,'165 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (35,7,'210 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (36,8,'3:5',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,8,'4:5',NULL,0,0,'',0,0,NULL,1,0,''),
 (38,8,'6:7',NULL,0,0,'',0,0,NULL,1,0,''),
 (39,8,'6:5',NULL,1,0,'',0,0,NULL,1,0,''),
 (40,8,'7:6',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,9,'10 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (42,9,'25 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (43,9,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (44,9,'15((1/2)) days',NULL,0,0,'',0,0,NULL,1,0,''),
 (45,9,'13(1/3) days',NULL,1,0,'',0,0,NULL,1,0,''),
 (46,10,'10 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (47,10,'25 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (48,10,'18 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (49,10,'15 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (50,10,'30 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (51,11,'12 mats',NULL,0,0,'',0,0,NULL,1,0,''),
 (52,11,'20 mats',NULL,0,0,'',0,0,NULL,1,0,''),
 (53,11,'16 mats',NULL,1,0,'',0,0,NULL,1,0,''),
 (54,11,'40 mats',NULL,0,0,'',0,0,NULL,1,0,''),
 (55,11,'52 mats',NULL,0,0,'',0,0,NULL,1,0,''),
 (56,12,'40 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (57,12,'25 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (58,12,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (59,12,'17 (1/2) days',NULL,0,0,'',0,0,NULL,1,0,''),
 (60,12,'10 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (61,13,'20 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,13,'30 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (63,13,'40 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (64,13,'50 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (65,13,'80 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (66,14,'36 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (67,14,'46 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (68,14,'56 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (69,14,'66 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,14,'76 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,15,'12 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (72,15,'13 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (73,15,'14 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (74,15,'15 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (75,15,'17 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (76,16,'40 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (77,16,'50 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (78,16,'60 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (79,16,'70 mts',NULL,1,0,'',0,0,NULL,1,0,''),
 (80,16,'75 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (81,17,'30 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (82,17,'40days',NULL,0,0,'',0,0,NULL,1,0,''),
 (83,17,'50days',NULL,0,0,'',0,0,NULL,1,0,''),
 (84,17,'60days',NULL,1,0,'',0,0,NULL,1,0,''),
 (85,17,'34 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (86,18,'Rs 71',NULL,0,0,'',0,0,NULL,1,0,''),
 (87,18,'Rs 81',NULL,0,0,'',0,0,NULL,1,0,''),
 (88,18,'Rs 91',NULL,1,0,'',0,0,NULL,1,0,''),
 (89,18,'Rs 101',NULL,0,0,'',0,0,NULL,1,0,''),
 (90,18,'Rs 101',NULL,0,0,'',0,0,NULL,1,0,''),
 (91,19,'350hectares',NULL,0,0,'',0,0,NULL,1,0,''),
 (92,19,'400hectares',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,19,'425hectares',NULL,0,0,'',0,0,NULL,1,0,''),
 (94,19,'450hectares',NULL,1,0,'',0,0,NULL,1,0,''),
 (95,19,'480hectares',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,20,'135 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (97,20,'165 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (98,20,'150 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (99,20,'180 men',NULL,0,0,'',0,0,NULL,1,0,''),
 (100,20,'300 men',NULL,1,0,'',0,0,NULL,1,0,''),
 (101,21,'1 day',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,21,'3 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (103,21,'7days',NULL,1,0,'',0,0,NULL,1,0,''),
 (104,21,'14 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (105,21,'12 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (106,22,'648 bottles',NULL,0,0,'',0,0,NULL,1,0,''),
 (107,22,'1,800bottles',NULL,1,0,'',0,0,NULL,1,0,''),
 (108,22,'2,700 bottles',NULL,0,0,'',0,0,NULL,1,0,''),
 (109,22,'10,800 bottles',NULL,0,0,'',0,0,NULL,1,0,''),
 (110,22,'10,400 bottles',NULL,0,0,'',0,0,NULL,1,0,''),
 (111,23,'1 day',NULL,0,0,'',0,0,NULL,1,0,''),
 (112,23,'7 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,23,'5 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (114,23,'8 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (115,23,'9 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (116,24,'46 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (117,24,'47 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,24,'48 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (119,24,'49 mts',NULL,1,0,'',0,0,NULL,1,0,''),
 (120,24,'45 mts',NULL,0,0,'',0,0,NULL,1,0,''),
 (121,25,'18 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (122,25,'21 days',NULL,1,0,'',0,0,NULL,1,0,''),
 (123,25,'24 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (124,25,'30 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,25,'32 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (126,26,'11 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (127,26,'12 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (128,26,'13days',NULL,1,0,'',0,0,NULL,1,0,''),
 (129,26,'14 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (130,26,'15 days',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,27,'9 hrs',NULL,0,0,'',0,0,NULL,1,0,''),
 (132,27,'10 hrs',NULL,0,0,'',0,0,NULL,1,0,''),
 (133,27,'11 hrs',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,27,'12 hrs',NULL,1,0,'',0,0,NULL,1,0,''),
 (135,27,'14 hrs',NULL,0,0,'',0,0,NULL,1,0,''),
 (136,28,'Rs (xy/d)',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,28,'Rs(xd)',NULL,0,0,'',0,0,NULL,1,0,''),
 (138,28,'Rs (yd)',NULL,0,0,'',0,0,NULL,1,0,''),
 (139,28,'Rs (yd/x)',NULL,1,0,'',0,0,NULL,1,0,''),
 (140,28,'Rs (yd/y)',NULL,0,0,'',0,0,NULL,1,0,''),
 (141,29,'14th element',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,29,'9th element',NULL,0,0,'',0,0,NULL,1,0,''),
 (143,29,'12th element',NULL,1,0,'',0,0,NULL,1,0,''),
 (144,29,'7th element',NULL,0,0,'',0,0,NULL,1,0,''),
 (145,29,'8th element',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,30,'18 boys',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,30,'14boys',NULL,1,0,'',0,0,NULL,1,0,''),
 (148,30,'22 boys',NULL,0,0,'',0,0,NULL,1,0,''),
 (149,30,'24 boys',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,30,'26 boys',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
INSERT INTO `apt_tp_rule` (`tp_id`,`rule`) VALUES 
 (1,''),
 (2,''),
 (3,''),
 (4,''),
 (5,''),
 (6,''),
 (7,''),
 (8,''),
 (9,''),
 (10,''),
 (11,''),
 (12,''),
 (13,''),
 (14,''),
 (15,''),
 (16,''),
 (17,''),
 (18,''),
 (19,''),
 (20,'');
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1012 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,2,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,2,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,2,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,2,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,2,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,2,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,2,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,2,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,2,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,2,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,2,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,2,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,2,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,2,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,2,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,2,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,2,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,2,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,2,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,2,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,2,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,2,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,2,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,2,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,2,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,2,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,2,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,2,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,2,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,2,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,2,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,2,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,2,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,2,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,2,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,2,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,2,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,2,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,2,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,2,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,2,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,2,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,2,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,2,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,2,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,2,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,2,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,2,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,2,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,2,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,2,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,2,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,2,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,2,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,2,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,2,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,2,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,2,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,2,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,2,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,2,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,2,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,2,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,2,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,2,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,2,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,2,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,2,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,2,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,2,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,2,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,2,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,2,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,2,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,2,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,2,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,2,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,2,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,2,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,2,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,2,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,2,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,2,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,2,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,2,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,2,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,2,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,2,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,2,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,2,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,2,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,2,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,2,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,2,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,2,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,2,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,2,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,2,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,2,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,2,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,2,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,2,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,2,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,2,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,2,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,2,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,2,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,2,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,2,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,2,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,2,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,2,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,2,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,2,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,2,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,2,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,2,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,2,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,2,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,2,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,2,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,2,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,2,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,2,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,2,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,2,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,2,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,2,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,2,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,2,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,2,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,2,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,2,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,2,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,2,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,2,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,2,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,2,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,2,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,2,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,2,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,2,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,2,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,2,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,2,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,2,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,2,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,2,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,2,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,2,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,2,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,2,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,2,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,2,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,2,1,306,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,2,1,307,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,2,1,308,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,2,1,309,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,2,1,310,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,2,1,311,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (311,2,1,312,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (312,2,1,313,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (313,2,1,314,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (314,2,1,315,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (315,2,1,316,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (316,2,1,317,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (317,2,1,318,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (318,2,1,319,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (319,2,1,320,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (320,2,1,321,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (321,2,1,322,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (322,2,1,323,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (323,2,1,324,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (324,2,1,325,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (325,2,1,326,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (326,2,1,327,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (327,2,1,328,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (328,2,1,329,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (329,2,1,330,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (330,2,1,331,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (331,2,1,332,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (332,2,1,333,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (333,2,1,334,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (334,2,1,335,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (335,2,1,336,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (336,2,1,337,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (337,2,1,338,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (338,2,1,339,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (339,2,1,340,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (340,2,1,341,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (341,2,1,342,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (342,2,1,343,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (343,2,1,344,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (344,2,1,345,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (345,2,1,346,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (346,2,1,347,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (347,2,1,348,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (348,2,1,349,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (349,2,1,350,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (350,2,1,351,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (351,2,1,352,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (352,2,1,353,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (353,2,1,354,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (354,2,1,355,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (355,2,1,356,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (356,2,1,357,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (357,2,1,358,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (358,2,1,359,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (359,2,1,360,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (360,2,1,361,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (361,2,1,362,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (362,2,1,363,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (363,2,1,364,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (364,2,1,365,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (365,2,1,366,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (366,2,1,367,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (367,2,1,368,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (368,2,1,369,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (369,2,1,370,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (370,2,1,371,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (371,2,1,372,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (372,2,1,373,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (373,2,1,374,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (374,2,1,375,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (375,2,1,376,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (376,2,1,377,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (377,2,1,378,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (378,2,1,379,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (379,2,1,380,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (380,2,1,381,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (381,2,1,382,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (382,2,1,383,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (383,2,1,384,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (384,2,1,385,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (385,2,1,386,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (386,2,1,387,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (387,2,1,388,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (388,2,1,389,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (389,2,1,390,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (390,2,1,391,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (391,2,1,392,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (392,2,1,393,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (393,2,1,394,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (394,2,1,395,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (395,2,1,396,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (396,2,1,397,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (397,2,1,398,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (398,2,1,399,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (399,2,1,400,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (400,2,1,401,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (401,2,1,402,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (402,2,1,403,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (403,2,1,404,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (404,2,1,405,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (405,2,1,406,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (406,2,1,407,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (407,2,1,408,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (408,2,1,409,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (409,2,1,410,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (410,2,1,411,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (411,2,1,412,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (412,2,1,413,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (413,2,1,414,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (414,2,1,415,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (415,2,1,416,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (416,2,1,417,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (417,2,1,418,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (418,2,1,419,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (419,2,1,420,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (420,2,1,421,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (421,2,1,422,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (422,2,1,423,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (423,2,1,424,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (424,2,1,425,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (425,2,1,426,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (426,2,1,427,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (427,2,1,428,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (428,2,1,429,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (429,2,1,430,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (430,2,1,431,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (431,2,1,432,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (432,2,1,433,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (433,2,1,434,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (434,2,1,435,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (435,2,1,436,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (436,2,1,437,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (437,2,1,438,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (438,2,1,439,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (439,2,1,440,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (440,2,1,441,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (441,2,1,442,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (442,2,1,443,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (443,2,1,444,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (444,2,1,445,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (445,2,1,446,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (446,2,1,447,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (447,2,1,448,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (448,2,1,449,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (449,2,1,450,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (450,2,1,451,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (451,2,1,452,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (452,2,1,453,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (453,2,1,454,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (454,2,1,455,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (455,2,1,456,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (456,2,1,457,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (457,2,1,458,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (458,2,1,459,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (459,2,1,460,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (460,2,1,461,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (461,2,1,462,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (462,2,1,463,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (463,2,1,464,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (464,2,1,465,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (465,2,1,466,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (466,2,1,467,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (467,2,1,468,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (468,2,1,469,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (469,2,1,470,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (470,2,1,471,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (471,2,1,472,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (472,2,1,473,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (473,2,1,474,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (474,2,1,475,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (475,2,1,476,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (476,2,1,477,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (477,2,1,478,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (478,2,1,479,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (479,2,1,480,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (480,2,1,481,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (481,2,1,482,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (482,2,1,483,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (483,2,1,484,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (484,2,1,485,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (485,2,1,486,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (486,2,1,487,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (487,2,1,488,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (488,2,1,489,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (489,2,1,490,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (490,2,1,491,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (491,2,1,492,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (492,2,1,493,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (493,2,1,494,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (494,2,1,495,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (495,2,1,496,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (496,2,1,497,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (497,2,1,498,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (498,2,1,499,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (499,2,1,500,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (500,2,1,501,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (501,2,1,502,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (502,2,1,503,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (503,2,1,504,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (504,2,1,505,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (505,2,1,506,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (506,2,1,507,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (507,2,1,508,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (508,2,1,509,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (509,2,1,510,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (510,2,1,511,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (511,2,1,512,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (512,2,1,513,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (513,2,1,514,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (514,2,1,515,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (515,2,1,516,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (516,2,1,517,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (517,2,1,518,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (518,2,1,519,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (519,2,1,520,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (520,2,1,521,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (521,2,1,522,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (522,2,1,523,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (523,2,1,524,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (524,2,1,525,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (525,2,1,526,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (526,2,1,527,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (527,2,1,528,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (528,2,1,529,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (529,2,1,530,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (530,2,1,531,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (531,2,1,532,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (532,2,1,533,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (533,2,1,534,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (534,2,1,535,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (535,2,1,536,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (536,2,1,537,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (537,2,1,538,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (538,2,1,539,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (539,2,1,540,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (540,2,1,541,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (541,2,1,542,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (542,2,1,543,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (543,2,1,544,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (544,2,1,545,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (545,2,1,546,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (546,2,1,547,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (547,2,1,548,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (548,2,1,549,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (549,2,1,550,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (550,2,1,551,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (551,2,1,552,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (552,2,1,553,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (553,2,1,554,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (554,2,1,555,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (555,2,1,556,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (556,2,1,557,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (557,2,1,558,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (558,2,1,559,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (559,2,1,560,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (560,2,1,561,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (561,2,1,562,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (562,2,1,563,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (563,2,1,564,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (564,2,1,565,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (565,2,1,566,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (566,2,1,567,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (567,2,1,568,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (568,2,1,569,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (569,2,1,570,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (570,2,1,571,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (571,2,1,572,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (572,2,1,573,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (573,2,1,574,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (574,2,1,575,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (575,2,1,576,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (576,2,1,577,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (577,2,1,578,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (578,2,1,579,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (579,2,1,580,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (580,2,1,581,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (581,2,1,582,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (582,2,1,583,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (583,2,1,584,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (584,2,1,585,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (585,2,1,586,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (586,2,1,587,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (587,2,1,588,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (588,2,1,589,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (589,2,1,590,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (590,2,1,591,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (591,2,1,592,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (592,2,1,593,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (593,2,1,594,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (594,2,1,595,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (595,2,1,596,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (596,2,1,597,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (597,2,1,598,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (598,2,1,599,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (599,2,1,600,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (600,2,1,601,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (601,2,1,602,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (602,2,1,603,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (603,2,1,604,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (604,2,1,605,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (605,2,1,606,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (606,2,1,607,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (607,2,1,608,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (608,2,1,609,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (609,2,1,610,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (610,2,1,611,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (611,2,1,612,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (612,2,1,613,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (613,2,1,614,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (614,2,1,615,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (615,2,1,616,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (616,2,1,617,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (617,2,1,618,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (618,2,1,619,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (619,2,1,620,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (620,2,1,621,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (621,2,1,622,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (622,2,1,623,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (623,2,1,624,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (624,2,1,625,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (625,2,1,626,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (626,2,1,627,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (627,2,1,628,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (628,2,1,629,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (629,2,1,630,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (630,2,1,631,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (631,2,1,632,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (632,2,1,633,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (633,2,1,634,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (634,2,1,635,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (635,2,1,636,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (636,2,1,637,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (637,2,1,638,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (638,2,1,639,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (639,2,1,640,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (640,2,1,641,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (641,2,1,642,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (642,2,1,643,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (643,2,1,644,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (644,2,1,645,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (645,2,1,646,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (646,2,1,647,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (647,2,1,648,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (648,2,1,649,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (649,2,1,650,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (650,2,1,651,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (651,2,1,652,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (652,2,1,653,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (653,2,1,654,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (654,2,1,655,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (655,2,1,656,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (656,2,1,657,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (657,2,1,658,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (658,2,1,659,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (659,2,1,660,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (660,2,1,661,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (661,2,1,662,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (662,2,1,663,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (663,2,1,664,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (664,2,1,665,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (665,2,1,666,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (666,2,1,667,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (667,2,1,668,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (668,2,1,669,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (669,2,1,670,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (670,2,1,671,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (671,2,1,672,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (672,2,1,673,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (673,2,1,674,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (674,2,1,675,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (675,2,1,676,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (676,2,1,677,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (677,2,1,678,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (678,2,1,679,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (679,2,1,680,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (680,2,1,681,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (681,2,1,682,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (682,2,1,683,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (683,2,1,684,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (684,2,1,685,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (685,2,1,686,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (686,2,1,687,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (687,2,1,688,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (688,2,1,689,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (689,2,1,690,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (690,2,1,691,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (691,2,1,692,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (692,2,1,693,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (693,2,1,694,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (694,2,1,695,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (695,2,1,696,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (696,2,1,697,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (697,2,1,698,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (698,2,1,699,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (699,2,1,700,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (700,2,1,701,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (701,2,1,702,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (702,2,1,703,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (703,2,1,704,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (704,2,1,705,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (705,2,1,706,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (706,2,1,707,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (707,2,1,708,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (708,2,1,709,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (709,2,1,710,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (710,2,1,711,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (711,2,1,712,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (712,2,1,713,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (713,2,1,714,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (714,2,1,715,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (715,2,1,716,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (716,2,1,717,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (717,2,1,718,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (718,2,1,719,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (719,2,1,720,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (720,2,1,721,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (721,2,1,722,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (722,2,1,723,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (723,2,1,724,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (724,2,1,725,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (725,2,1,726,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (726,2,1,727,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (727,2,1,728,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (728,2,1,729,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (729,2,1,730,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (730,2,1,731,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (731,2,1,732,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (732,2,1,733,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (733,2,1,734,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (734,2,1,735,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (735,2,1,736,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (736,2,1,737,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (737,2,1,738,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (738,2,1,739,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (739,2,1,740,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (740,2,1,741,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (741,2,1,742,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (742,2,1,743,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (743,2,1,744,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (744,2,1,745,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (745,2,1,746,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (746,2,1,747,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (747,2,1,748,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (748,2,1,749,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (749,2,1,750,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (750,2,1,751,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (751,2,1,752,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (752,2,1,753,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (753,2,1,754,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (754,2,1,755,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (755,2,1,756,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (756,2,1,757,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (757,2,1,758,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (758,2,1,759,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (759,2,1,760,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (760,2,1,761,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (761,2,1,762,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (762,2,1,763,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (763,2,1,764,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (764,2,1,765,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (765,2,1,766,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (766,2,1,767,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (767,2,1,768,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (768,2,1,769,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (769,2,1,770,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (770,2,1,771,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (771,2,1,772,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (772,2,1,773,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (773,2,1,774,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (774,2,1,775,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (775,2,1,776,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (776,2,1,777,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (777,2,1,778,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (778,2,1,779,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (779,2,1,780,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (780,2,1,781,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (781,2,1,782,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (782,2,1,783,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (783,2,1,784,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (784,2,1,785,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (785,2,1,786,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (786,2,1,787,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (787,2,1,788,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (788,2,1,789,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (789,2,1,790,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (790,2,1,791,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (791,2,1,792,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (792,2,1,793,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (793,2,1,794,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (794,2,1,795,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (795,2,1,796,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (796,2,1,797,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (797,2,1,798,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (798,2,1,799,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (799,2,1,800,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (800,2,1,801,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (801,2,1,802,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (802,2,1,803,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (803,2,1,804,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (804,2,1,805,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (805,2,1,806,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (806,2,1,807,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (807,2,1,808,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (808,2,1,809,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (809,2,1,810,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (810,2,1,811,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (811,2,1,812,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (812,2,1,813,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (813,2,1,814,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (814,2,1,815,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (815,2,1,816,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (816,2,1,817,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (817,2,1,818,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (818,2,1,819,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (819,2,1,820,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (820,2,1,821,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (821,2,1,822,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (822,2,1,823,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (823,2,1,824,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (824,2,1,825,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (825,2,1,826,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (826,2,1,827,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (827,2,1,828,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (828,2,1,829,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (829,2,1,830,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (830,2,1,831,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (831,2,1,832,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (832,2,1,833,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (833,2,1,834,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (834,2,1,835,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (835,2,1,836,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (836,2,1,837,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (837,2,1,838,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (838,2,1,839,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (839,2,1,840,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (840,2,1,841,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (841,2,1,842,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (842,2,1,843,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (843,2,1,844,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (844,2,1,845,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (845,2,1,846,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (846,2,1,847,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (847,2,1,848,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (848,2,1,849,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (849,2,1,850,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (850,2,1,851,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (851,2,1,852,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (852,2,1,853,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (853,2,1,854,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (854,2,1,855,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (855,2,1,856,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (856,2,1,857,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (857,2,1,858,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (858,2,1,859,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (859,2,1,860,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (860,2,1,861,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (861,2,1,862,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (862,2,1,863,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (863,2,1,864,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (864,2,1,865,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (865,2,1,866,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (866,2,1,867,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (867,2,1,868,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (868,2,1,869,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (869,2,1,870,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (870,2,1,871,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (871,2,1,872,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (872,2,1,873,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (873,2,1,874,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (874,2,1,875,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (875,2,1,876,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (876,2,1,877,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (877,2,1,878,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (878,2,1,879,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (879,2,1,880,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (880,2,1,881,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (881,2,1,882,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (882,2,1,883,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (883,2,1,884,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (884,2,1,885,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (885,2,1,886,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (886,2,1,887,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (887,2,1,888,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (888,2,1,889,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (889,2,1,890,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (890,2,1,891,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (891,2,1,892,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (892,2,1,893,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (893,2,1,894,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (894,2,1,895,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (895,2,1,896,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (896,2,1,897,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (897,2,1,898,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (898,2,1,899,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (899,2,1,900,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (900,2,1,901,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (901,2,1,902,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (902,2,1,903,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (903,2,1,904,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (904,2,1,905,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (905,2,1,906,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (906,2,1,907,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (907,2,1,908,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (908,2,1,909,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (909,2,1,910,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (910,2,1,911,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (911,2,1,912,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (912,2,1,913,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (913,2,1,914,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (914,2,1,915,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (915,2,1,916,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (916,2,1,917,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (917,2,1,918,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (918,2,1,919,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (919,2,1,920,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (920,2,1,921,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (921,2,1,922,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (922,2,1,923,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (923,2,1,924,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (924,2,1,925,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (925,2,1,926,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (926,2,1,927,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (927,2,1,928,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (928,2,1,929,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (929,2,1,930,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (930,2,1,931,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (931,2,1,932,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (932,2,1,933,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (933,2,1,934,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (934,2,1,935,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (935,2,1,936,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (936,2,1,937,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (937,2,1,938,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (938,2,1,939,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (939,2,1,940,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (940,2,1,941,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (941,2,1,942,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (942,2,1,943,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (943,2,1,944,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (944,2,1,945,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (945,2,1,946,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (946,2,1,947,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (947,2,1,948,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (948,2,1,949,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (949,2,1,950,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (950,2,1,951,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (951,2,1,952,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (952,2,1,953,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (953,2,1,954,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (954,2,1,955,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (955,2,1,956,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (956,2,1,957,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (957,2,1,958,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (958,2,1,959,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (959,2,1,960,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (960,2,1,961,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (961,2,1,962,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (962,2,1,963,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (963,2,1,964,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (964,2,1,965,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (965,2,1,966,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (966,2,1,967,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (967,2,1,968,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (968,2,1,969,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (969,2,1,970,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (970,2,1,971,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (971,2,1,972,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (972,2,1,973,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (973,2,1,974,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (974,2,1,975,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (975,2,1,976,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (976,2,1,977,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (977,2,1,978,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (978,2,1,979,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (979,2,1,980,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (980,2,1,981,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (981,2,1,982,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (982,2,1,983,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (983,2,1,984,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (984,2,1,985,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (985,2,1,986,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (986,2,1,987,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (987,2,1,988,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (988,2,1,989,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (989,2,1,990,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (990,2,1,991,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (991,2,1,992,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (992,2,1,993,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (993,2,1,994,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (994,2,1,995,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (995,2,1,996,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (996,2,1,997,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (997,2,1,998,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (998,2,1,999,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (999,2,1,1000,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1000,2,1,1001,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1001,2,1,1002,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1002,2,1,1003,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1003,2,1,1004,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1004,2,1,1005,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1005,2,1,1006,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1006,2,1,1007,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1007,2,1,1008,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1008,2,1,1009,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1009,2,1,1010,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1010,2,1,1011,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1011,2,1,1012,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-01-27 10:40:41',60,1,'30.00',1,0),
 (2,1,1,1,'2024-01-27 10:40:41',60,1,'30.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #012');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-01-27 10:40:34'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-01-27 10:40:34'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-01-27 10:40:34'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-01-27 10:40:34'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-01-27 10:40:34'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-01-27 10:40:34'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-01-27 10:40:34'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-01-27 10:40:34'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-01-27 10:40:34'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-01-27 10:40:34'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-01-27 10:40:34'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-01-27 10:40:34'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-01-27 10:40:34'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-01-27 10:40:34'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-01-27 10:40:34'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-01-27 10:40:34'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-01-27 10:40:34'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-01-27 10:40:34'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-01-27 10:40:34'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-01-27 10:40:34'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-01-27 10:40:34'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-01-27 10:40:34'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-01-27 10:40:34'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-01-27 10:40:34'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-01-27 10:40:34'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-01-27 10:40:34'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-01-27 10:40:34'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-01-27 10:40:34'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-01-27 10:40:34'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-01-27 10:40:34');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 20 men working together can finish a job in 20 days, then the no.of days taken by 25 men of the same capacity to finish the job is ___________ days?</div>\n',1,1,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 16 men working 7 hrs a day can plough a field in 48 days, in how many days will 14 men working 12 hrs a day, plough the same field?</div>\n',1,2,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 12 carpenters, working 6 hrs a day can make 460 chairs in 24 days, how many chairs will 18 carpenters make in 36 days, each working 8 hrs a day?</div>\n',1,3,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 18 binders bind 900 books in 10 days. How many binders will be required to bind 660 books in 12 days?</div>\n',1,4,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Some persons can do a piece of work in 12 days. Two times the no.of such persons will do half of the work in ___________ days?</div>\n',1,5,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A certain no.of men can finish a piece of work in 100 days. If howeverthere were 10 men less, it would take 10 days more for the work to finish. How many men were there originally?</div>\n',1,6,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">95 men have provisions for 200 days. After 5 days,30 men died due to an epidemic. For how many days will the remaining food last?</div>\n',1,7,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The rates of working of A & B are in the ratios 5: 6, the no. of days taken by them to finish the work are in the ratio _____ :_______?</div>\n',1,8,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">&ldquo;A&rdquo; does half as a much as work as &ldquo;B&rdquo;, & &ldquo;C&rdquo; does half as a much as work as &ldquo;A&rdquo; & &ldquo;B&rdquo; together. If &ldquo;C&rdquo; alone can finish the work in 40 days, then together all will finish the work in ___________ days? </div>\n',1,9,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a camp, there is meal available for 120 men (or) 200 children. If 150 children have taken the meal, how many men can be catered to with the remaining meal?</div>\n',1,10,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">4 mat weavers can weave 4 mats in 4 days. At the same rate, how many mats would be woven by 8 mat weavers in 8 days? </div>\n',1,11,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a dairy farm, 40 cows eat 40 bags of husk in 40 days. In how many days, one cow will eat one bag of husk?</div>\n',1,12,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 8 men working 9 hours a days can built a wall 18mts long, 2 mts broad and 12 mts high in 10 days, how many men will be required to build a wall 32mtslong , 3mts broad and 9mts high by working 6 hours a days in 8 days?</div>\n',1,13,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A contract was to be completed in 56 days and 104 men were set to work each working 8 hours per day. After 30 days, (2/5) of the work is completed. How many additional men may be employed, so that, the work may be completed in time, each man now working 9 hours a day?</div>\n',1,14,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">5 men (or) 9 women can do a piece of work in 19 days. In how many days will 3 men and 6 women do it?</div>\n',1,15,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 20 men can build a wall 112 mts long in 6 days, what length of a similar wall can be built by 25 men in 3 days?</div>\n',1,16,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 36 men can do a piece of work in 25 days, in how many days will 15 men do it?</div>\n',1,17,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 15 dolls cost Rs 35, what do 39 dolls cost?</div>\n',1,18,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 8 men can reap 80 hectares in 24 days, then how many hectares can 36 men reap in 30 days?</div>\n',1,19,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A certain number of men can complete a piece of work in 180 days. If there are 30 men less, it will take 20 days more for the work to be completed. How many men were there originally?</div>\n',1,20,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 7 spiders make 7 webs in 7 days, then 1 spider will make 1 web in how many days?</div>\n',1,21,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Running at the same constant rate, 6 identical machines can produce a total of 270 bottles per minute. At this rate, how many bottles could 10 such machines produce in 4 minutes?</div>\n',1,22,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">8 women can complete the work in 10 days and 10 children take 16 days to complete the same work. How many days will 10 women and 12 children take to complete the work?</div>\n',1,23,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If 20 men can build a wall 56 meters long in 6 days, what length of a similar wall can be built by 35 men in 3 days?</div>\n',1,24,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">2 men and 7 boys can do a piece of work in 14 days; 3 men and 8 boys can do the same in 11 days. Then, 8 men and 6 boys can do three times the amount of this work in________days?</div>\n',1,25,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">39 persons can repair a road in 12 days, working 5 hours a day. In how many days will 30 persons, working 6 hours a day, complete the work?</div>\n',1,26,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Pumps working 8 hours a day, can empty a tank in 2 days. How many hours a day must 4 pumps work to empty the tank in 1 day?</div>\n',1,27,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">If the cost of &lsquo;x&rsquo; metres of wire is &lsquo;d&rsquo; rupees, then what is the cost of &lsquo;y&rsquo; metres of wire at the same rate?</div>\n',1,28,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The sum of 3rd and 15th elements of an arithmetic progression is equal to the sum of 6th,11th and 13th elements of the same progression. Then, which element of the series should necessarily be equal to zero_____?</div>\n',1,29,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In a queue, Shankar is ninth from the rear end. Althaf\'s place is eighth from the front. Nitu is standing between the two. What could be the minimum numbers of boys standing in the queue?</div>\n',1,30,1,'1','2024-01-27 10:40:34',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #012','Assessment Test #012','2024-01-27 10:40:34',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 30 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL DEFAULT '',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=1013 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (1,'admin','baf71c021073a99609d073b6c7d2162a','admin','admin','2011-10-27 12:02:06',1,'admin'),
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','2024-07-12 14:56:23',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','2024-07-12 14:56:23',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','2024-07-12 14:56:23',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','2024-07-12 14:56:23',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','2024-07-12 14:56:23',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','2024-07-12 14:56:23',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','2024-07-12 14:56:23',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','2024-07-12 14:56:23',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','2024-07-12 14:56:23',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','2024-07-12 14:56:23',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','2024-07-12 14:56:23',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','2024-07-12 14:56:23',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','2024-07-12 14:56:23',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','2024-07-12 14:56:23',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','2024-07-12 14:56:23',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','2024-07-12 14:56:23',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','2024-07-12 14:56:23',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','2024-07-12 14:56:23',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','2024-07-12 14:56:23',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','2024-07-12 14:56:23',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','2024-07-12 14:56:23',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','2024-07-12 14:56:23',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','2024-07-12 14:56:23',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','2024-07-12 14:56:23',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','2024-07-12 14:56:23',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','2024-07-12 14:56:23',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','2024-07-12 14:56:23',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','2024-07-12 14:56:23',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','2024-07-12 14:56:23',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','2024-07-12 14:56:23',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','2024-07-12 14:56:23',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','2024-07-12 14:56:23',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','2024-07-12 14:56:23',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','2024-07-12 14:56:23',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','2024-07-12 14:56:23',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','2024-07-12 14:56:23',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','2024-07-12 14:56:23',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','2024-07-12 14:56:23',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','2024-07-12 14:56:23',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','2024-07-12 14:56:23',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','2024-07-12 14:56:23',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','2024-07-12 14:56:23',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','2024-07-12 14:56:23',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','2024-07-12 14:56:23',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','2024-07-12 14:56:23',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','2024-07-12 14:56:23',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','2024-07-12 14:56:23',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','2024-07-12 14:56:23',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','2024-07-12 14:56:23',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','2024-07-12 14:56:23',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','2024-07-12 14:56:23',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','2024-07-12 14:56:23',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','2024-07-12 14:56:23',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','2024-07-12 14:56:23',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','2024-07-12 14:56:23',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','2024-07-12 14:56:23',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','2024-07-12 14:56:23',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','2024-07-12 14:56:23',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','2024-07-12 14:56:23',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','2024-07-12 14:56:23',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','2024-07-12 14:56:23',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','2024-07-12 14:56:23',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','2024-07-12 14:56:23',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','2024-07-12 14:56:23',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','2024-07-12 14:56:23',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','2024-07-12 14:56:23',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','2024-07-12 14:56:23',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','2024-07-12 14:56:23',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','2024-07-12 14:56:23',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','2024-07-12 14:56:23',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','2024-07-12 14:56:23',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','2024-07-12 14:56:23',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','2024-07-12 14:56:23',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','2024-07-12 14:56:23',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','2024-07-12 14:56:23',NULL,NULL),
 (77,'TN301','1289ea6624789573dc7607c5233f3bca','TN301','','2024-07-12 14:56:23',NULL,NULL),
 (78,'TN302','e26b0aee894cc6f27fc242a434730645','TN302','','2024-07-12 14:56:23',NULL,NULL),
 (79,'TN303','97f1f9bedce6c3b9d3938d9d40f9d1de','TN303','','2024-07-12 14:56:23',NULL,NULL),
 (80,'TN304','3092223a86bf770e3c9c1a2351228bfe','TN304','','2024-07-12 14:56:23',NULL,NULL),
 (81,'TN305','661fc042c02eb6056e301405816fbd55','TN305','','2024-07-12 14:56:23',NULL,NULL),
 (82,'TN306','38f67721ed7ff9ef0a449ab6832235a3','TN306','','2024-07-12 14:56:23',NULL,NULL),
 (83,'TN307','5ef9db6c70b283266923ba74e546a266','TN307','','2024-07-12 14:56:23',NULL,NULL),
 (84,'TN308','8162c0ec1488a04f6c90e8642940eaa0','TN308','','2024-07-12 14:56:23',NULL,NULL),
 (85,'TN309','53e5940df269d0ec9523feb4fcdd7a22','TN309','','2024-07-12 14:56:23',NULL,NULL),
 (86,'TN310','aed205ee1ec7c212b0b5bdaf6b69af40','TN310','','2024-07-12 14:56:23',NULL,NULL),
 (87,'TN311','c15601a9f59790cb703c4bc0b00e0e20','TN311','','2024-07-12 14:56:23',NULL,NULL),
 (88,'TN312','09fda6e3878307e07b5990d8e66b1103','TN312','','2024-07-12 14:56:23',NULL,NULL),
 (89,'TN313','a5e74a5736c26c2cd770554886ad4154','TN313','','2024-07-12 14:56:23',NULL,NULL),
 (90,'TN314','bd3bd7adec1a7c068788b1a95ae95c20','TN314','','2024-07-12 14:56:23',NULL,NULL),
 (91,'TN315','be0b8c0ca16b0075e5913a351dab0b46','TN315','','2024-07-12 14:56:23',NULL,NULL),
 (92,'TN316','24fca42a296f9db5539073ef6ecae6f3','TN316','','2024-07-12 14:56:23',NULL,NULL),
 (93,'TN317','a6f9bc058b72fdae228c6cdd5dc2751b','TN317','','2024-07-12 14:56:23',NULL,NULL),
 (94,'TN318','ddecc6b257e9db543ff9cb9965717d00','TN318','','2024-07-12 14:56:23',NULL,NULL),
 (95,'TN319','35f235b5913004e66bcd1ecdc8fb3057','TN319','','2024-07-12 14:56:23',NULL,NULL),
 (96,'TN320','da070b79dbc003845178ab377868bdc6','TN320','','2024-07-12 14:56:23',NULL,NULL),
 (97,'TN321','4960df1341319307974d56d2ce268306','TN321','','2024-07-12 14:56:23',NULL,NULL),
 (98,'TN322','543d95db7f4c1008d42f5cfd22e7a5be','TN322','','2024-07-12 14:56:23',NULL,NULL),
 (99,'TN323','1d7a0bd046ce9876580eda3bedab79db','TN323','','2024-07-12 14:56:23',NULL,NULL),
 (100,'TN324','400510cd1d81a680a9e348620d351b25','TN324','','2024-07-12 14:56:23',NULL,NULL),
 (101,'TN325','b104b8b8e328266a31f9a46210f84953','TN325','','2024-07-12 14:56:23',NULL,NULL),
 (102,'TN326','5544253aa515158f2f453770eb33e51b','TN326','','2024-07-12 14:56:23',NULL,NULL),
 (103,'TN327','29c5e96a4b73c506f78673a39fa58b54','TN327','','2024-07-12 14:56:23',NULL,NULL),
 (104,'TN328','bff7cd809932aeab2fe07646e4453d88','TN328','','2024-07-12 14:56:23',NULL,NULL),
 (105,'TN329','f0cbb5ffcb613849e8c5d53965887ca9','TN329','','2024-07-12 14:56:23',NULL,NULL),
 (106,'TN330','1345e9aa4b81a4e8cd95883d12549b8a','TN330','','2024-07-12 14:56:23',NULL,NULL),
 (107,'TN331','0f149a1ac8d4cc16618c907f589147a9','TN331','','2024-07-12 14:56:23',NULL,NULL),
 (108,'TN332','f7133a8c457d92fd22cecc0c3b2efa04','TN332','','2024-07-12 14:56:23',NULL,NULL),
 (109,'TN333','9ee16ce2698fbd7cf97e23c3fe6b8740','TN333','','2024-07-12 14:56:23',NULL,NULL),
 (110,'TN334','93cf6ce6bd5f43a90eaa5de07057429c','TN334','','2024-07-12 14:56:23',NULL,NULL),
 (111,'TN335','24a6637f62b876ea63b4b6c4375362e3','TN335','','2024-07-12 14:56:23',NULL,NULL),
 (112,'TN336','d6ed57d5ed516d005339eb06240b45e6','TN336','','2024-07-12 14:56:23',NULL,NULL),
 (113,'TN337','acbdb66165f48dec35a94c7c6993c33e','TN337','','2024-07-12 14:56:23',NULL,NULL),
 (114,'TN338','fb42c54ecdaec0a7c1e65cadaa7e368b','TN338','','2024-07-12 14:56:23',NULL,NULL),
 (115,'TN339','42e4e7d643724f7b333d0900681f9411','TN339','','2024-07-12 14:56:23',NULL,NULL),
 (116,'TN340','0d53a379688407436ea33cfda2416c13','TN340','','2024-07-12 14:56:23',NULL,NULL),
 (117,'TN341','130192d08a11c1e8f5c256657119b320','TN341','','2024-07-12 14:56:23',NULL,NULL),
 (118,'TN342','a4f75e8cb6c2de78107ac2e989aa3010','TN342','','2024-07-12 14:56:23',NULL,NULL),
 (119,'TN343','01471f2d08b26e0cd0bacad956d44bdb','TN343','','2024-07-12 14:56:23',NULL,NULL),
 (120,'TN344','366e1c32b4cbd219df987a4dc2fed421','TN344','','2024-07-12 14:56:23',NULL,NULL),
 (121,'TN345','3e0a55cbcfea4c5ecadec9c688a33355','TN345','','2024-07-12 14:56:23',NULL,NULL),
 (122,'TN346','9b828b388ef5b87921b63e77bf1c22eb','TN346','','2024-07-12 14:56:23',NULL,NULL),
 (123,'TN347','0e22a00f1a09c3a38d565880a4e3966e','TN347','','2024-07-12 14:56:23',NULL,NULL),
 (124,'TN348','e4ca11b0dedc0b33e6566fc22249e1b2','TN348','','2024-07-12 14:56:23',NULL,NULL),
 (125,'TN349','45b51c7307b1ded7135ce37b16efb7be','TN349','','2024-07-12 14:56:23',NULL,NULL),
 (126,'TN350','9497b729f9d86e78f1a11a0d9d831c4d','TN350','','2024-07-12 14:56:23',NULL,NULL),
 (127,'TN351','fbd75180d9115527383a684ea69f0783','TN351','','2024-07-12 14:56:23',NULL,NULL),
 (128,'TN352','eb4f355e32fdef9d4a10d562b53a4d19','TN352','','2024-07-12 14:56:23',NULL,NULL),
 (129,'TN353','4883a15932e12d27f20f76f95c6611ff','TN353','','2024-07-12 14:56:23',NULL,NULL),
 (130,'TN354','fde7858c1eec55329bd8db4cb766ead2','TN354','','2024-07-12 14:56:23',NULL,NULL),
 (131,'TN355','231dae9001808862f6efddfff0e6a6e8','TN355','','2024-07-12 14:56:23',NULL,NULL),
 (132,'TN356','616ef83adaa44296b1b359feb5a011af','TN356','','2024-07-12 14:56:23',NULL,NULL),
 (133,'TN357','5a14e2bb7ffd9dca43d92a61e27a38f0','TN357','','2024-07-12 14:56:23',NULL,NULL),
 (134,'TN358','3d57651a7c50473ebcab7feab3331a93','TN358','','2024-07-12 14:56:23',NULL,NULL),
 (135,'TN359','62c1a47d5865d9b1ae5d588aa6ad18a4','TN359','','2024-07-12 14:56:23',NULL,NULL),
 (136,'TN360','f0eada9bd948cd7abebb8209526d0982','TN360','','2024-07-12 14:56:23',NULL,NULL),
 (137,'TN361','9852ea66aa61c7e3cb5af21154130baa','TN361','','2024-07-12 14:56:23',NULL,NULL),
 (138,'TN362','55b184d86c50fbe010e80070ef597d9e','TN362','','2024-07-12 14:56:23',NULL,NULL),
 (139,'TN363','030e1cb96e2ca4bdb8022bec52d7f025','TN363','','2024-07-12 14:56:23',NULL,NULL),
 (140,'TN364','c58c612aabc949ec19ee8a3a84222d18','TN364','','2024-07-12 14:56:23',NULL,NULL),
 (141,'TN365','c0b9d9812ecbc0d9cef1388b11016d9e','TN365','','2024-07-12 14:56:23',NULL,NULL),
 (142,'TN366','dd40de1e4bf7cbdaec1c941e402ec64b','TN366','','2024-07-12 14:56:23',NULL,NULL),
 (143,'TN367','b31061923364de8bdd79f779d2d89675','TN367','','2024-07-12 14:56:23',NULL,NULL),
 (144,'TN368','1b0be879a2be62199a4c05eafff09e57','TN368','','2024-07-12 14:56:23',NULL,NULL),
 (145,'TN369','e1eafa6e765a95a1d2792f813c2c0878','TN369','','2024-07-12 14:56:23',NULL,NULL),
 (146,'TN370','f0085044ffd672c73714006792c45658','TN370','','2024-07-12 14:56:23',NULL,NULL),
 (147,'TN371','6b888a8632b8e73f624eb27a25cb63d8','TN371','','2024-07-12 14:56:23',NULL,NULL),
 (148,'TN372','3e9c40acad5da943012f0dad2a382f48','TN372','','2024-07-12 14:56:23',NULL,NULL),
 (149,'TN373','f74059052ca4f8f8debab4f94fe60fee','TN373','','2024-07-12 14:56:23',NULL,NULL),
 (150,'TN374','d044d50d3a84ef2b83396df8435b2567','TN374','','2024-07-12 14:56:23',NULL,NULL),
 (151,'TN375','38b74a55960a640c8d4597de34c9dd64','TN375','','2024-07-12 14:56:23',NULL,NULL),
 (152,'TN376','4c12c516111aaac8525853a6d0d5096e','TN376','','2024-07-12 14:56:23',NULL,NULL),
 (153,'TN377','362a1d87a8c6284f2c7d861b819df5ed','TN377','','2024-07-12 14:56:23',NULL,NULL),
 (154,'TN378','9b25ff1ec23bc539354df9686cd89de5','TN378','','2024-07-12 14:56:23',NULL,NULL),
 (155,'TN379','ae6423f89f07c2e20561e08ef047b742','TN379','','2024-07-12 14:56:23',NULL,NULL),
 (156,'TN380','88d8c25bffa7a6c9575fbfe8f6d43f39','TN380','','2024-07-12 14:56:23',NULL,NULL),
 (157,'TN381','d23ce6d2f1ff27bbf0ebe2325ce9b2b2','TN381','','2024-07-12 14:56:23',NULL,NULL),
 (158,'TN382','e2c5f577217cc1922906d7d9dd42c449','TN382','','2024-07-12 14:56:23',NULL,NULL),
 (159,'TN383','f48fc1a9ef3b76018747f42d990a07aa','TN383','','2024-07-12 14:56:23',NULL,NULL),
 (160,'TN384','7b424c9ec3380d8c0477bdf186363a31','TN384','','2024-07-12 14:56:23',NULL,NULL),
 (161,'TN385','39427ade0baadc061c1dbecc8a1111e0','TN385','','2024-07-12 14:56:23',NULL,NULL),
 (162,'TN386','c9de880f84bc8efb35bbb35183e5f837','TN386','','2024-07-12 14:56:23',NULL,NULL),
 (163,'TN387','eb3504d64781f4186f94897184326fab','TN387','','2024-07-12 14:56:23',NULL,NULL),
 (164,'TN388','ca8e351d27baf506a08673c4b2e96ce0','TN388','','2024-07-12 14:56:23',NULL,NULL),
 (165,'TN389','6636b28d53227b585648fcc9f4458d58','TN389','','2024-07-12 14:56:23',NULL,NULL),
 (166,'TN390','6333af3816e3435142cfe4f77bfb91bf','TN390','','2024-07-12 14:56:23',NULL,NULL),
 (167,'TN391','ca5bb87cfbac4a3dcc1e414c4154eee3','TN391','','2024-07-12 14:56:23',NULL,NULL),
 (168,'TN392','9cef0c55596ba7198d1e8b19ca1c0c8c','TN392','','2024-07-12 14:56:23',NULL,NULL),
 (169,'TN393','b8799e1f36ae1504dc6ccdfe5b02446d','TN393','','2024-07-12 14:56:23',NULL,NULL),
 (170,'TN394','04ff4127b262503a03dbb0ced948fbf8','TN394','','2024-07-12 14:56:23',NULL,NULL),
 (171,'TN395','7422c5e9827367b10c9b445c7cce6a48','TN395','','2024-07-12 14:56:23',NULL,NULL),
 (172,'TN396','bcb94858b4ecf06a149f86779461a0ec','TN396','','2024-07-12 14:56:23',NULL,NULL),
 (173,'TN397','9cf2988dc3f6c7343b61a1e35f498f4f','TN397','','2024-07-12 14:56:23',NULL,NULL),
 (174,'TN398','9b79877cee0f888380277aa6bb14f9c5','TN398','','2024-07-12 14:56:23',NULL,NULL),
 (175,'TN399','5901bff9f8732fd05434a55ac49f3aec','TN399','','2024-07-12 14:56:23',NULL,NULL),
 (176,'TN400','e7bb4d93dd8fc29b6ab52c0e88273299','TN400','','2024-07-12 14:56:23',NULL,NULL),
 (177,'A1','2ede140e685bcb4debb312341bec721e','Swetha C','','2024-07-12 14:56:23',NULL,NULL),
 (178,'A2','f2b0901d3a3bf259c37d44cfaec1f32c','JAYALAKSHMI.V','','2024-07-12 14:56:23',NULL,NULL),
 (179,'A3','0dfeb65b5601085a63954aff0ba353cb','Vignesh V','','2024-07-12 14:56:23',NULL,NULL),
 (180,'A4','c95c5e6c2802ad00d8f0f46f43b47179','PERUMAL.P','','2024-07-12 14:56:23',NULL,NULL),
 (181,'A5','ef0660f7f6de2795d1a64dab278c1002','B prem','','2024-07-12 14:56:23',NULL,NULL),
 (182,'A6','9c914df6d14cd40682bc6d43f30a8f7f','Arunkanth.R','','2024-07-12 14:56:23',NULL,NULL),
 (183,'A7','e8d9d322e9f93829c6ca70fd971533d9','Nithyasri .S','','2024-07-12 14:56:23',NULL,NULL),
 (184,'A8','8494b78d68e052130883c6062e7c1030','Niranjana.K','','2024-07-12 14:56:23',NULL,NULL),
 (185,'A9','0e7dc7bb7db75071b07b4a2066778650','NIVETHA','','2024-07-12 14:56:23',NULL,NULL),
 (186,'A10','d48e93d140dfc6fa26b6a18217af978a','Prem Kumar K R','','2024-07-12 14:56:23',NULL,NULL),
 (187,'A11','2f31957753b0d34582454bf565d8a772','S.B.Charan','','2024-07-12 14:56:23',NULL,NULL),
 (188,'A12','bb9cd442b1e46c5127ed91508aa48b0e','Divyalakshmi P','','2024-07-12 14:56:23',NULL,NULL),
 (189,'A13','6f5abfae2530da4137167b1b6b48ebba','B. V. Lakshya','','2024-07-12 14:56:23',NULL,NULL),
 (190,'A14','12890fa77de9533908c26c8cc25c444d','Meena .s','','2024-07-12 14:56:23',NULL,NULL),
 (191,'A15','a4d65ea90dcff248e6304f1a5fbcc91f','Aishwarya DR','','2024-07-12 14:56:23',NULL,NULL),
 (192,'A16','26d46614d87a6aab6aa1f619fa826ae8','S.AAKASH','','2024-07-12 14:56:23',NULL,NULL),
 (193,'A17','b4815a25d9a3c4b594df11700c582fcb','S. HARIS SRIRAM','','2024-07-12 14:56:23',NULL,NULL),
 (194,'A18','bf68407f6e301fecde8588a63d8a114d','N karthik sundaram','','2024-07-12 14:56:23',NULL,NULL),
 (195,'A19','41908116e1bff61db95e539658393370','C. Iniyan magesh','','2024-07-12 14:56:23',NULL,NULL),
 (196,'A20','04a6361fd8e8cf7d2fc48085f812e876','Ruba shree CR','','2024-07-12 14:56:23',NULL,NULL),
 (197,'A21','dc4c398fba8468a82701d72320ac4865','Rahul Dravid M','','2024-07-12 14:56:23',NULL,NULL),
 (198,'A22','2ef6614e52037be61259254a7165fafb','MOHAMED ASHIK N','','2024-07-12 14:56:23',NULL,NULL),
 (199,'A23','a4dd938197fe9905e27b54ca6f61e31d','Renuka M','','2024-07-12 14:56:23',NULL,NULL),
 (200,'A24','e71ab64498562017acb19367fcc4ecaf','Yokesh v','','2024-07-12 14:56:23',NULL,NULL),
 (201,'A25','8429b72776a8004ba0dae0efc40113b2','Sujith D','','2024-07-12 14:56:23',NULL,NULL),
 (202,'A26','bb0f7054590782d5428b3c2b29761d4a','S.Sanath Krishna','','2024-07-12 14:56:23',NULL,NULL),
 (203,'A27','57d396f3930b0bf191394f19a9c4f5d8','D.HAREESH','','2024-07-12 14:56:23',NULL,NULL),
 (204,'A28','5344d5b00687d8403ef5637712ddfbf3','NAVEENKUMAR','','2024-07-12 14:56:23',NULL,NULL),
 (205,'A29','5f61c67b6bee326d4d2e9401ce33ccd3','Ramkumar K','','2024-07-12 14:56:23',NULL,NULL),
 (206,'A30','0eb0a4442205f9701035704cef5b8c07','MANOJ KUMAR. V','','2024-07-12 14:56:23',NULL,NULL),
 (207,'A31','9858b633782d8453a45cdc8d8f0d9591','NITHESH KUMAR V','','2024-07-12 14:56:23',NULL,NULL),
 (208,'A32','b2941dcd9a7b7b718bd003081006e85d','ABINESH S','','2024-07-12 14:56:23',NULL,NULL),
 (209,'A33','3e74b19f83ee77a8b0051059dea85a28','MUKESH. S','','2024-07-12 14:56:23',NULL,NULL),
 (210,'A34','a7389fd8318daf20bd36b6fcc17eeeb8','V. M. HARISH','','2024-07-12 14:56:23',NULL,NULL),
 (211,'A35','3a089a4b1e87dc0f81f454d5a170ac93','Sathish v','','2024-07-12 14:56:23',NULL,NULL),
 (212,'A36','9c294381a787293db1eb94d213d1f3b2','ACHYUT M','','2024-07-12 14:56:23',NULL,NULL),
 (213,'A37','5709a474e4957ad341eed8e4e13ea514','Priyadharshini S','','2024-07-12 14:56:23',NULL,NULL),
 (214,'A38','8704f7683d928c1f3a9c5c91a69d4224','Shreeman.S','','2024-07-12 14:56:23',NULL,NULL),
 (215,'A39','66e8c23c295091ed5be7c63f699712e4','Yugendran. S','','2024-07-12 14:56:23',NULL,NULL),
 (216,'A40','06abb1062f8db04f800c4d459c756adb','Ajai.R','','2024-07-12 14:56:23',NULL,NULL),
 (217,'A41','4b9dd2966dd70a0b40477c62491a672b','PRIYA S','','2024-07-12 14:56:23',NULL,NULL),
 (218,'A42','3ae9c28bed0635c0c809c30ca6e7d38f','Krishna priya. G','','2024-07-12 14:56:23',NULL,NULL),
 (219,'A43','b401bb55ca6e0af637633c2026f63586','VISHAL C','','2024-07-12 14:56:23',NULL,NULL),
 (220,'A44','3f2e1109e1312991d0f2cc386ae8a07f','Naveen.N M','','2024-07-12 14:56:23',NULL,NULL),
 (221,'A45','2fcc77d9725c371ef2b4c38ae4272fe1','koushik','','2024-07-12 14:56:23',NULL,NULL),
 (222,'A46','5ba5e7fd9c2827a8df6f20dd07f085c4','Lakshman Prasath GN','','2024-07-12 14:56:23',NULL,NULL),
 (223,'A47','0ee925dc001ec20451eee328d8358dcb','BHARATH KUMAR .C','','2024-07-12 14:56:23',NULL,NULL),
 (224,'A48','fc23fd547a6d69b38cea25d7a7564b34','SATHISH S','','2024-07-12 14:56:23',NULL,NULL),
 (225,'A49','676c47664886d669bdc30b5aaaaef6f4','R.Akash','','2024-07-12 14:56:23',NULL,NULL),
 (226,'A50','8ff7ac50acfab8f0f2573a74c69a4f80','Charan santhosh','','2024-07-12 14:56:23',NULL,NULL),
 (227,'A51','e9d4d59ebef7fbf61f253a980d33bf0e','KEVIN RAJ D','','2024-07-12 14:56:23',NULL,NULL),
 (228,'A52','8f1ca9be3680b0183c0a40dac4bf23f4','M.santosh kumar','','2024-07-12 14:56:23',NULL,NULL),
 (229,'A53','f403cb02becd1a5adc307a93841fc56c','Vignesh r','','2024-07-12 14:56:23',NULL,NULL),
 (230,'A54','204e1da89697415de1b5e836d8bb1a82','Thirumal v.m.v','','2024-07-12 14:56:23',NULL,NULL),
 (231,'A55','afafb4e01a93f50792fe2da8cb518004','K.Dhanush','','2024-07-12 14:56:23',NULL,NULL),
 (232,'B1','d5eadf9de39f4ab874e10790daa3e3bb','ARUNACHALESWARAN. S','','2024-07-12 14:56:23',NULL,NULL),
 (233,'B2','6096f5a266b4c4c76f7a69f8cdfb47aa','S.PRAGDEESHWAR','','2024-07-12 14:56:23',NULL,NULL),
 (234,'B3','dc390619f1497fb4897b3f1fbf1a5fc7','Aarav','','2024-07-12 14:56:23',NULL,NULL),
 (235,'B4','8e2880ba2aba429f2e861b94c620ff0c','M.AARTHI','','2024-07-12 14:56:23',NULL,NULL),
 (236,'B5','715dc74ce15ecdb8af63e8429e7567c5','Sakthi Sanjai.S','','2024-07-12 14:56:23',NULL,NULL),
 (237,'B6','8feb3205fb843b72ad750e8d2453e508','LOKESHWRAN R','','2024-07-12 14:56:23',NULL,NULL),
 (238,'B7','9fb9138eab4a1c751aa58c48bd2be230','Jai Ganesh S','','2024-07-12 14:56:23',NULL,NULL),
 (239,'B8','61a64c1c81da9f2f3b26634ad2aa007d','LK Narain karthigeyan','','2024-07-12 14:56:23',NULL,NULL),
 (240,'B9','0b5babd6364424252d629f6ca7fac2dd','Sathya Narayanan K','','2024-07-12 14:56:23',NULL,NULL),
 (241,'B10','91ca056ce29c911100963e6f07ba03f6','HARTHI.V','','2024-07-12 14:56:23',NULL,NULL),
 (242,'B11','ce6edc0f5d25ebf6c8ca93165522f2b8','Baradhi kannan RB','','2024-07-12 14:56:23',NULL,NULL),
 (243,'B12','36d1a9f36f48e4a92e15bb014f287e3f','Thrilok D','','2024-07-12 14:56:23',NULL,NULL),
 (244,'B13','a541f8fa245c03d270046c2bdf53f3cb','Prithive S','','2024-07-12 14:56:23',NULL,NULL),
 (245,'B14','d7129f1d536652cbfae5286dcb47bd96','Karan N','','2024-07-12 14:56:23',NULL,NULL),
 (246,'B15','298d0b0efeb9abf7c62124c1af660907','bharath raj k','','2024-07-12 14:56:23',NULL,NULL),
 (247,'B16','d3e0a19146e4f62c5b4a830962ebc1bd','kaviyashree','','2024-07-12 14:56:23',NULL,NULL),
 (248,'B17','96d3febcedecc91f3cd36a5e141761eb','Pranati P','','2024-07-12 14:56:23',NULL,NULL),
 (249,'B18','1b86f8a1c5195862540439fdb47b41b1','Rindhya .K','','2024-07-12 14:56:23',NULL,NULL),
 (250,'B19','a489d2ac5a02b67454c01ced56cc6ca0','Keerthana S','','2024-07-12 14:56:23',NULL,NULL),
 (251,'B20','21c673ace2b39f993e3250f4f9b518e9','Tharun kumar U','','2024-07-12 14:56:23',NULL,NULL),
 (252,'B21','6669b287f4778f1d45c94d024fd7f036','Shyamkumar A','','2024-07-12 14:56:23',NULL,NULL),
 (253,'B22','a03e5a2656f9cae7ecf6cca696717884','Venkatesh P N','','2024-07-12 14:56:23',NULL,NULL),
 (254,'B23','7c37640eae911ea061151730cae7fd4a','Eshwar R','','2024-07-12 14:56:23',NULL,NULL),
 (255,'B24','9cfb3c56ce80aa3292a6825b6a9eb73d','Danush P','','2024-07-12 14:56:23',NULL,NULL),
 (256,'B25','f4d4f78fb97db87d11477d050279b4c1','Abinayasree R','','2024-07-12 14:56:23',NULL,NULL),
 (257,'B26','e60c2466e7a4a95d17cdf7e54c35fae1','Pragadeesh J S','','2024-07-12 14:56:23',NULL,NULL),
 (258,'B27','d961f5f4b459015c8dcf97a237a6c5d5','Tholkappian R','','2024-07-12 14:56:23',NULL,NULL),
 (259,'B28','458a7f7ee7e772325c64846e771936cb','Rajesh kumar.M','','2024-07-12 14:56:23',NULL,NULL),
 (260,'B29','18bc92af8a7b125f65893b7bd6a9d735','SHRIKANTH N M','','2024-07-12 14:56:23',NULL,NULL),
 (261,'B30','2f131db77667d4bd8f62c0153e44279d','Divya D','','2024-07-12 14:56:23',NULL,NULL),
 (262,'B31','ce63bab66e4aa069eb037e9a1d4439a7','Aravindhan P','','2024-07-12 14:56:23',NULL,NULL),
 (263,'B32','719138b7eee9ad1749f527dfdb91f151','KISHORE RAM G M','','2024-07-12 14:56:23',NULL,NULL),
 (264,'B33','4a9f0e6e842735607351ab5622e43c38','Malathy.S','','2024-07-12 14:56:23',NULL,NULL),
 (265,'B34','6d573be7477feb56ffdbad3c65a94ba4','VINOTH. D','','2024-07-12 14:56:23',NULL,NULL),
 (266,'B35','a9faf0f54ec0f2be22f443e9be5661d7','Arockia Pauline A','','2024-07-12 14:56:23',NULL,NULL),
 (267,'B36','4ae28640e0b0db553753faaee53b393b','PRABHAKARAN.M','','2024-07-12 14:56:23',NULL,NULL),
 (268,'B37','a615c2e4399777fbfca0c81adec695b9','Murugan R','','2024-07-12 14:56:23',NULL,NULL),
 (269,'B38','bdd8051a5edc1105a3fb7c4d1d27b8a9','G. vignesh','','2024-07-12 14:56:23',NULL,NULL),
 (270,'B39','6efe7d5702fa7c39261d1494c6815831','Aniruthan R','','2024-07-12 14:56:23',NULL,NULL),
 (271,'B40','f64524bf1990a95a8f91f70bbca86468','JAGADESH. S','','2024-07-12 14:56:23',NULL,NULL),
 (272,'B41','e53cc999fc0a5e72d1e2b9ea781cd8ce','PASUPATHI.R','','2024-07-12 14:56:23',NULL,NULL),
 (273,'B42','c1a6a8874fa9e497bb8f2f109b4ed746','SARANYA DEVI B','','2024-07-12 14:56:23',NULL,NULL),
 (274,'B43','94f924019428ed6cfbb5304a4810175b','DHANUSHA S T','','2024-07-12 14:56:23',NULL,NULL),
 (275,'B44','a616828ebef5f2414f700a43eac63539','NIVETHITHA P','','2024-07-12 14:56:23',NULL,NULL),
 (276,'B45','531c27070ad315e41ab310072c371f50','Kaviya S','','2024-07-12 14:56:23',NULL,NULL),
 (277,'B46','1f97ed3339a00c0754ce3f4551cb48b8','Jeyalakshmi V','','2024-07-12 14:56:23',NULL,NULL),
 (278,'B47','73423bc4be0f11256ce3ac5a5f061f65','Sivaranjani K','','2024-07-12 14:56:23',NULL,NULL),
 (279,'B48','3fd7fb0e9b20c35331f34ee3bed707b1','Karthishwari S','','2024-07-12 14:56:23',NULL,NULL),
 (280,'B49','43d78e095793a594e54c835f79342dd1','KOKILA V','','2024-07-12 14:56:23',NULL,NULL),
 (281,'B50','17fb58ff27f0393fb6dfabb262530fef','Vivek Anand V','','2024-07-12 14:56:23',NULL,NULL),
 (282,'B51','a59b66ef297cd13d5125b1fa172a41c1','Shanmugapriyan M','','2024-07-12 14:56:23',NULL,NULL),
 (283,'B52','c3e434bb9d4343a1a54a11729f0f8db3','A.MADESHWARAN','','2024-07-12 14:56:23',NULL,NULL),
 (284,'B53','ce7583badc9e19b722e9c5247c09dc44','Athira.R','','2024-07-12 14:56:23',NULL,NULL),
 (285,'B54','38a38c062358131a1049b1eba39734fc','VINISHIYA.R','','2024-07-12 14:56:23',NULL,NULL),
 (286,'B55','fa2f1bbeb5da9c28e2b5724bd47e40eb','sanjay D','','2024-07-12 14:56:23',NULL,NULL),
 (287,'B56','ca5745f12e0950c512d178239e404e9a','Fathima R','','2024-07-12 14:56:23',NULL,NULL),
 (288,'B57','d3c496d5aecd36ef317f87dff892d5dc','R.NAVEEN KUMAR','','2024-07-12 14:56:23',NULL,NULL),
 (289,'B58','b508bcd8cc99a5a2d7ba477026141e8b','D.V.MOKSHIN VIGNESH','','2024-07-12 14:56:23',NULL,NULL),
 (290,'B59','7da3b0adbb0a22170b11ab79d65ade7b','APARNA.P','','2024-07-12 14:56:23',NULL,NULL),
 (291,'B60','94cd8c87450a7ee55e433fe31ed77727','RAGHUL KUMAR.R.N','','2024-07-12 14:56:23',NULL,NULL),
 (292,'C1','8fcf93882ed92cec1ddab0ed14808367','KARTHIKEYAN M','','2024-07-12 14:56:23',NULL,NULL),
 (293,'C2','af125b1a9abb97f5c7392c4634403151','KAVI PRIYA G','','2024-07-12 14:56:23',NULL,NULL),
 (294,'C3','8f86f4d679529e678967b83db98c1bcf','SAI KUMAR S','','2024-07-12 14:56:23',NULL,NULL),
 (295,'C4','691a5e6b35bcced8c70d4b689b602027','HARINI SHREE S','','2024-07-12 14:56:23',NULL,NULL),
 (296,'C5','aa4aaa3987166750fb47471def307257','JOSHEKA U S','','2024-07-12 14:56:23',NULL,NULL),
 (297,'C6','da0a1e6755c37462af317e38f771322c','KARTHIKEYAN S','','2024-07-12 14:56:23',NULL,NULL),
 (298,'C7','619d8fb5ce23b22065852eb4f4019409','GIRISH V K','','2024-07-12 14:56:23',NULL,NULL),
 (299,'C8','632bb5a5d2e7cf8bf839f51a23c6be38','MONIKA P V','','2024-07-12 14:56:23',NULL,NULL),
 (300,'C9','bc773ff56fd6a478382f51faf2ccc448','YESWANTH S','','2024-07-12 14:56:23',NULL,NULL),
 (301,'C10','981dc529177dca21bb4f3f37cfaf4cf7','KAMALESH P','','2024-07-12 14:56:23',NULL,NULL),
 (302,'C11','0d5e02200b357f3315ee5a09890d063e','DINESH BABU  B','','2024-07-12 14:56:23',NULL,NULL),
 (303,'C12','b1fcb43dfc0b254fdc0ff030d9b0d160','RITHISHBARATH  H','','2024-07-12 14:56:23',NULL,NULL),
 (304,'C13','8a15ed19f00feee3ad32ee8193df6daf','ANANTHAN T','','2024-07-12 14:56:23',NULL,NULL),
 (305,'C14','3c4bb531c342b9d10371b44101f89b35','NITHYASHRI A','','2024-07-12 14:56:23',NULL,NULL),
 (306,'C15','106a4972258230be9bb102a319b9684a','KARTHICK S','','2024-07-12 14:56:23',NULL,NULL),
 (307,'C16','15c4b5081ff196df47d8f3dfd28d4af0','SRILEKAA B','','2024-07-12 14:56:23',NULL,NULL),
 (308,'C17','0df7e47fbd1784db1293823d019e1d8f','BHADRI NARAYANAN A J','','2024-07-12 14:56:23',NULL,NULL),
 (309,'C18','82810eec2f102057ee2d537cb6b6d95e','PRADHEEP RAJ B K','','2024-07-12 14:56:23',NULL,NULL),
 (310,'C19','b452fdf4f02c1c07f1400adb434e7f25','AVINASH M','','2024-07-12 14:56:23',NULL,NULL),
 (311,'C20','8a99f32f034f525a95b7df835080a0c4','SRIRAM A','','2024-07-12 14:56:23',NULL,NULL),
 (312,'C21','28f9738c4f855be47bc929440900550d','SUBHASHREE S','','2024-07-12 14:56:23',NULL,NULL),
 (313,'C22','3658db85e9b7a3d9a369858094e392a0','RAGAVI D','','2024-07-12 14:56:23',NULL,NULL),
 (314,'C23','fcbf0229bc8adb75a09de3a454ae1047','JANUSRI V','','2024-07-12 14:56:23',NULL,NULL),
 (315,'C24','fa05153c57ce48587b95b0111fd977fb','SUJAN M','','2024-07-12 14:56:23',NULL,NULL),
 (316,'C25','b82d85abadc1c7cb71800ea56e0d8113','YAGNYA NARAYANAN B','','2024-07-12 14:56:23',NULL,NULL),
 (317,'C26','91a78725fc956029d8cfd3e848bd4487','RAGAVI S','','2024-07-12 14:56:23',NULL,NULL),
 (318,'C27','16efba41b78090669673c7f1a91ccf37','JAI ARVIND S','','2024-07-12 14:56:23',NULL,NULL),
 (319,'C28','66452909b31987040b85987ec17bb078','ASWIN I V','','2024-07-12 14:56:23',NULL,NULL),
 (320,'C29','1aa6852993e1518b787c571369a4899e','NITHIN DAS E S','','2024-07-12 14:56:23',NULL,NULL),
 (321,'C30','1d59f729d35361e3f6c9c98c9efc22c9','PUSHKALA L','','2024-07-12 14:56:23',NULL,NULL),
 (322,'C31','1d0c1f115fa15e1a6b707d3c3d5985ba','AKSHARA B','','2024-07-12 14:56:23',NULL,NULL),
 (323,'C32','d0a35d25fa42aecc3fc4c71c89d19f8b','SRUTHI Y','','2024-07-12 14:56:23',NULL,NULL),
 (324,'C33','e4b5f1bef17dcd404cadafef8acadb54','HARI KRISHNAN M','','2024-07-12 14:56:23',NULL,NULL),
 (325,'C34','b143b4cb5e98f53ff1760db0fd81cdf4','RANJITH KUMAR  R','','2024-07-12 14:56:23',NULL,NULL),
 (326,'C35','c1bfff13d2bf2d80ea000570b26cfd3e','PRASANTH V','','2024-07-12 14:56:23',NULL,NULL),
 (327,'C36','2ce5d48d6cb083e152e880e08eb7e4ac','SHIVANI S','','2024-07-12 14:56:23',NULL,NULL),
 (328,'C37','88ea2e8a6a8192dd1df5bde22f93aee1','SAISRIRAM S','','2024-07-12 14:56:23',NULL,NULL),
 (329,'C38','0b70f85fb74a19bc2cc7522642d769e0','SHIVA PRASAD B','','2024-07-12 14:56:23',NULL,NULL),
 (330,'C39','0240ef07c2999a5a6e3277b4a925fa0e','VISHNU NARAYANAN K  J','','2024-07-12 14:56:23',NULL,NULL),
 (331,'C40','f53aa9e5c797d6eb29eeca7d1a5d7c64','ARUNACHALAMOORTHY P.P.B','','2024-07-12 14:56:23',NULL,NULL),
 (332,'C41','a32190953e7086a61d7f5666de638b14','SIVAPRAKASH P','','2024-07-12 14:56:23',NULL,NULL),
 (333,'C42','82b4af74564a80fcb6590353ed2a0d62','SRINATH V','','2024-07-12 14:56:23',NULL,NULL),
 (334,'C43','c15249c8e474cbaae159e34bdb2eaee6','PRASANTH G','','2024-07-12 14:56:23',NULL,NULL),
 (335,'C44','15fad8569432ad277c59e086b556232e','NANDINI M','','2024-07-12 14:56:23',NULL,NULL),
 (336,'C45','ec6a49e7206f3228e2da0326e7e3f862','DHANYA SHREE V','','2024-07-12 14:56:23',NULL,NULL),
 (337,'C46','e19d6596bd2b3fac132984f3f5479dab','VARUN N','','2024-07-12 14:56:23',NULL,NULL),
 (338,'C47','b09aee222ea974cf181bf8ae024065e8','LEENASRI L','','2024-07-12 14:56:23',NULL,NULL),
 (339,'C48','4a922ef287b2dc3f5f821cab5554e27f','SIVASAILAM A','','2024-07-12 14:56:23',NULL,NULL),
 (340,'C49','d6398c8cf3f57f75d92c075468c41a85','SANJAY M','','2024-07-12 14:56:23',NULL,NULL),
 (341,'C50','42e535bbcae6ac2386b2df243e1327f5','ABISHEK V','','2024-07-12 14:56:23',NULL,NULL),
 (342,'C51','709bd950cc72040817d7ca351b40b67e','JEEVA T','','2024-07-12 14:56:23',NULL,NULL),
 (343,'C52','573166b7e8bf8eb7180a955bc654e76b','SWATHISHREE M','','2024-07-12 14:56:23',NULL,NULL),
 (344,'C53','f06d64106f23b77c1db4370426fb3e70','SANTHOSH KUMAR M','','2024-07-12 14:56:23',NULL,NULL),
 (345,'C54','0f97508412c1bf4b7eda64322e45662c','SANJAY B','','2024-07-12 14:56:23',NULL,NULL),
 (346,'C55','b17c52c1928b1912242856a03af2c494','ARUN PRASATH H','','2024-07-12 14:56:23',NULL,NULL),
 (347,'C56','8c0f11748e9a5d6d88eeba25062dcec6','VIGNESHWAR R','','2024-07-12 14:56:23',NULL,NULL),
 (348,'C57','d1fc8c4d9799049a07435cc9a47a2496','RAKESH K','','2024-07-12 14:56:23',NULL,NULL),
 (349,'C58','bf3cf891791adac6d8c4b729e9a7bd5f','MANOJ KUMAR D','','2024-07-12 14:56:23',NULL,NULL),
 (350,'C59','3bf4b1b78e04debfa1611dcb050c4d6d','GOKULPRASATH B','','2024-07-12 14:56:23',NULL,NULL),
 (351,'C60','67ed888eeb7415fd1b7728755848a870','ARJUN S','','2024-07-12 14:56:23',NULL,NULL),
 (352,'D1','ac06078d4638a9bc9aa1ea8ddc0110d0','AKASH S','','2024-07-12 14:56:23',NULL,NULL),
 (353,'D2','62cca1f4f820bf9b077d3eb2049122e8','LOKESWAR K R','','2024-07-12 14:56:23',NULL,NULL),
 (354,'D3','b0e17c19199775259d409a95e49cae1e','PRIYANKA T','','2024-07-12 14:56:23',NULL,NULL),
 (355,'D4','b360890b90e3e7ecc4d5b043112bbdee','HARISH M','','2024-07-12 14:56:23',NULL,NULL),
 (356,'D5','7e015e3ed14067228004786f0281a295','MADHURKANTH K','','2024-07-12 14:56:23',NULL,NULL),
 (357,'D6','a5b5bc8c758338c9e5d6ca5ff7364f16','JAYARAJ P','','2024-07-12 14:56:23',NULL,NULL),
 (358,'D7','7cd8dca55e97bddd8d7d5b42a33567d8','DIVYA R M','','2024-07-12 14:56:23',NULL,NULL),
 (359,'D8','12ea08b130b0d3fad63c5826dd70a6c2','AKSHARA V K','','2024-07-12 14:56:23',NULL,NULL),
 (360,'D9','83d5db977c993572a2f6563012fc57de','DEEKSHITHA K','','2024-07-12 14:56:23',NULL,NULL),
 (361,'D10','42ff716e547573cae565e80e0f7a6100','SUNIL KUMAR R','','2024-07-12 14:56:23',NULL,NULL),
 (362,'D11','975b6730a29986b93bf6e4b7418431ba','NANDITHA P G','','2024-07-12 14:56:23',NULL,NULL),
 (363,'D12','9ec78d1faf2b76325769baa30841ad0d','PRASSANNA S','','2024-07-12 14:56:23',NULL,NULL),
 (364,'D13','486b976d333d32794eccc5fb82143065','SASMITA S P','','2024-07-12 14:56:23',NULL,NULL),
 (365,'D14','7b83cf7f2c4e50eba206499013aae10f','HARIPRIYA G','','2024-07-12 14:56:23',NULL,NULL),
 (366,'D15','af1421c71322dd03479957fcbbec6f10','MIRUTHULA R','','2024-07-12 14:56:23',NULL,NULL),
 (367,'D16','7b35e37ce9e428dd66b6975ac286c252','DHIVYAPRAKASH V','','2024-07-12 14:56:23',NULL,NULL),
 (368,'D17','7384508c6b5887103f7e4fe999408f53','HARSH JAIN M','','2024-07-12 14:56:23',NULL,NULL),
 (369,'D18','538dbdd4319c46daeede1e2c2af213bb','GIRISHKUMAR S','','2024-07-12 14:56:23',NULL,NULL),
 (370,'D19','dfa9bac82395455b1302662efa61aad4','HEMANTH KUMAR B','','2024-07-12 14:56:23',NULL,NULL),
 (371,'D20','eee60af1d227dde44acd238cd923739d','NITHISH S','','2024-07-12 14:56:23',NULL,NULL),
 (372,'D21','d9984ab72c7e3ab74cb86f4ddce9ebc7','BRINDHA M','','2024-07-12 14:56:23',NULL,NULL),
 (373,'D22','f3d7002e079ab0000859f0d20563a15d','DEVANAND S','','2024-07-12 14:56:23',NULL,NULL),
 (374,'D23','f47393d97464093b48f4addb5eb62bc8','DIVYA SHREE S','','2024-07-12 14:56:23',NULL,NULL),
 (375,'D24','2aadc88d512d740cec8c822af8d2d7f5','SANTHOSHKUMAR M','','2024-07-12 14:56:23',NULL,NULL),
 (376,'D25','f891d92e8f6b31b07fd99bc6912a651e','GOUTHAM D','','2024-07-12 14:56:23',NULL,NULL),
 (377,'D26','9d7b954ae92bfa992b9b19d76f526856','SHRI VAISHALY V','','2024-07-12 14:56:23',NULL,NULL),
 (378,'D27','645b36f9cb04c1970ab3f31554500b5f','ELAMARAN R','','2024-07-12 14:56:23',NULL,NULL),
 (379,'D28','b35dc3f90a54ac9816d64a66c53054b3','GURUPRASATH M','','2024-07-12 14:56:23',NULL,NULL),
 (380,'D29','118a633601f7f73e506e38b7d01872cc','VARSHINE N L','','2024-07-12 14:56:23',NULL,NULL),
 (381,'D30','4c0852a2b934500b53da506dfea3c4ff','HARINI H','','2024-07-12 14:56:23',NULL,NULL),
 (382,'D31','375cb4c21628b52ecde3dc5631cd0ea9','AKSHAYA KUMAR S','','2024-07-12 14:56:23',NULL,NULL),
 (383,'D32','03cf283f675a0a7667929a05d506db72','DHANUSRI U','','2024-07-12 14:56:23',NULL,NULL),
 (384,'D33','60292e3b0872b4c6728687dfe4cfba12','JEEVITHA T','','2024-07-12 14:56:23',NULL,NULL),
 (385,'D34','6eba2f8389053f4a8a368babffc0b9fb','KRITHIKA S A','','2024-07-12 14:56:23',NULL,NULL),
 (386,'D35','83aacce00fdc558c417f08dc292a4ad0','NAVEEN KUMAR S','','2024-07-12 14:56:23',NULL,NULL),
 (387,'D36','3afcb9d7d7085217c4ff609e95f14820','MADHUMITHA N','','2024-07-12 14:56:23',NULL,NULL),
 (388,'D37','a3ba5840a216780b62e958f8f7c94a5b','EHAB IMTIAZ','','2024-07-12 14:56:23',NULL,NULL),
 (389,'D38','20e7cf332f0053749bb8ae43779ad4e5','KEERTHANA A S','','2024-07-12 14:56:23',NULL,NULL),
 (390,'D39','e5a72de4b435a23b8beb32f86fbe4147','SRI HARI V','','2024-07-12 14:56:23',NULL,NULL),
 (391,'D40','35b216b63fb4481f2f840b698562fb11','SARATH S','','2024-07-12 14:56:23',NULL,NULL),
 (392,'D41','1637782ad0f9bee2c85b1e7cc6c65651','SRINATH K S','','2024-07-12 14:56:23',NULL,NULL),
 (393,'D42','5cd5dee9655fab3339c3deeb0bff3611','MEHAVARSHINI S P','','2024-07-12 14:56:23',NULL,NULL),
 (394,'D43','fa3352b0b3c29cbb61835315c0c499ff','DHANUSH KODI K','','2024-07-12 14:56:23',NULL,NULL),
 (395,'D44','75e07c0a1c38ad9d44c7f68a567a9167','NISHWANTH KUMAR D','','2024-07-12 14:56:23',NULL,NULL),
 (396,'D45','8a18e253ba41f5f90bd85bea5df8593f','GANESH J','','2024-07-12 14:56:23',NULL,NULL),
 (397,'D46','dfa823c35cefc8fb84df8d492f1636a0','AGATHEESWARAN P','','2024-07-12 14:56:23',NULL,NULL),
 (398,'D47','be951ee23ccdf734bd06400bbbf441a0','ABINAYA SRI M','','2024-07-12 14:56:23',NULL,NULL),
 (399,'D48','88e32ed79e861b1884eda9430c0c9819','PRASANNA VISHWANATH J','','2024-07-12 14:56:23',NULL,NULL),
 (400,'D49','4eb1e41aa51280a20b41b07c7ea42986','ARUN KUMAR K','','2024-07-12 14:56:23',NULL,NULL),
 (401,'D50','6def4949ee4aaf67c87e5dcfcb72d97a','SIDDHARTH SHIVRAM  DAVEY','','2024-07-12 14:56:23',NULL,NULL),
 (402,'D51','7fa908ad7c622233680b6ec1d36e49ea','MADHAV PRAKASH PAREKH','','2024-07-12 14:56:23',NULL,NULL),
 (403,'D52','fc315b163077c4a925b20f4c241d9c5d','NAVEEN SAYEE  G','','2024-07-12 14:56:23',NULL,NULL),
 (404,'D53','c343a4086d84be61c78e5664b71ea29c','LOKESH K','','2024-07-12 14:56:23',NULL,NULL),
 (405,'D54','ecc1c50d5ab2f33096a33f4a42f57815','LOKESH KUMAR K','','2024-07-12 14:56:23',NULL,NULL),
 (406,'D55','e4589126f2fff6ecdb36b9c0386a9335','SREE C H','','2024-07-12 14:56:23',NULL,NULL),
 (407,'D56','8f1d119fdf0036d6bdb07e7b4f1ba0b9','KRISHNAKUMAR R','','2024-07-12 14:56:23',NULL,NULL),
 (408,'D57','4e074ee7596e194e672a17c65325e8e4','VISHALI R','','2024-07-12 14:56:23',NULL,NULL),
 (409,'D58','f399aabcd33ccad4ca95c9a2f8093c44','ARUNA NANDHINI R K','','2024-07-12 14:56:23',NULL,NULL),
 (410,'D59','f16fd88bbdceb1f4b50f997c59dba31d','KIRAN KUMAR S N','','2024-07-12 14:56:23',NULL,NULL),
 (411,'E1','11b1fe0d2e894d386dd87015e4a93b55','N.Saranya','','2024-07-12 14:56:23',NULL,NULL),
 (412,'E2','2db5385ac93711ae2b5175e3caafc0b3','Nalin  Bhutra','','2024-07-12 14:56:23',NULL,NULL),
 (413,'E3','7ea5cb4c465b9ac1cefd11961e9a40c8','Kavyansh Sharma S','','2024-07-12 14:56:23',NULL,NULL),
 (414,'E4','0ca8cd6740646470cd93c715705c517c','Jai rupesh k','','2024-07-12 14:56:23',NULL,NULL),
 (415,'E5','e7ddb328d038b85bd5579e7458180e48','N.Rajeshwari','','2024-07-12 14:56:23',NULL,NULL),
 (416,'E6','33784502629ea185942c5571353e1687','Nivetha.S','','2024-07-12 14:56:23',NULL,NULL),
 (417,'E7','15eb04f30a68972a325093e2f92adc63','Sowmiya.v','','2024-07-12 14:56:23',NULL,NULL),
 (418,'E8','4ebf61a1b0c10e6eee8c33e925c11e4f','S.keerthana','','2024-07-12 14:56:23',NULL,NULL),
 (419,'E9','2f362a2d6332f7c539e6cdc2c4fe886f','Mega. R','','2024-07-12 14:56:23',NULL,NULL),
 (420,'E10','718490cfc5f7bd91cb3930c27522b9b5','Urvashi Bhutra','','2024-07-12 14:56:23',NULL,NULL),
 (421,'E11','32f49ad9ada6965b3c75b5cc503c1815','DINESHKUMAR J','','2024-07-12 14:56:23',NULL,NULL),
 (422,'E12','51aa15f52bce06671d6af759fc8017f6','Dhivyesh.C','','2024-07-12 14:56:23',NULL,NULL),
 (423,'E13','6501f27f32d0defbe73e98ebb4e95c28','S Madesh','','2024-07-12 14:56:23',NULL,NULL),
 (424,'E14','04d01e2d781ec7515b8239e549a678df','Sasi Subikshan','','2024-07-12 14:56:23',NULL,NULL),
 (425,'E15','d07a7844e323bc85f47b5eb3377fbeec','Dhwani Bagada','','2024-07-12 14:56:23',NULL,NULL),
 (426,'E16','d15aa9e188ed54eee761d7d9fdda73e7','Harakesh','','2024-07-12 14:56:23',NULL,NULL),
 (427,'E17','f29b21357275c96e5e423a0d79cc4482','Swetha B.M','','2024-07-12 14:56:23',NULL,NULL),
 (428,'E18','ee808a8c976e51feed93cfce17cbf79b','Mothika','','2024-07-12 14:56:23',NULL,NULL),
 (429,'E19','5261a9ce26032c312d6a626a4681eded','Krishnakanth','','2024-07-12 14:56:23',NULL,NULL),
 (430,'E20','335897493391aba569d7099e234d2e7f','Varshini','','2024-07-12 14:56:23',NULL,NULL),
 (431,'E21','9d5ddc9ae357bdd2d61d0abccc1b484e','Priyanka','','2024-07-12 14:56:23',NULL,NULL),
 (432,'E22','c52214e3ea271a574f739a0a02db44f7','Mahesh Kumar','','2024-07-12 14:56:23',NULL,NULL),
 (433,'E23','cf0c9d28def040ac8abb2fa2d0f4943d','Amrutha Varshini','','2024-07-12 14:56:23',NULL,NULL),
 (434,'E24','f3ff36652efedcc6afa6b71859d15a02','Nithiya Sri. S','','2024-07-12 14:56:23',NULL,NULL),
 (435,'E25','679d775006477b85e67959110c28804d','Thilak.S','','2024-07-12 14:56:23',NULL,NULL),
 (436,'E26','a031b1a3bd3febeb5cd1d8767ebd0dba','Hemant Sri Kumar','','2024-07-12 14:56:23',NULL,NULL),
 (437,'E27','4073b55002b7356090373b201dbbfa21','Mythreyan','','2024-07-12 14:56:23',NULL,NULL),
 (438,'E28','5ff413d9139b1e8d5d9a124f35a0a5b6','G.Madhusudhanan','','2024-07-12 14:56:23',NULL,NULL),
 (439,'E29','e2c06103c7f849c70a2ec5b61502fe28','Anant Gautam','','2024-07-12 14:56:23',NULL,NULL),
 (440,'E30','8900b8d95b5a9c01294a5c98a7c2008f','A Yash','','2024-07-12 14:56:23',NULL,NULL),
 (441,'E31','ef151ae2338891fa89223f56cbc8c73f','SUBASH C','','2024-07-12 14:56:23',NULL,NULL),
 (442,'E32','6df30fd7e6a62f36dcc88f3041064733','Srija N','','2024-07-12 14:56:23',NULL,NULL),
 (443,'E33','481d8f1a49a0461a9664ddeb8eabf915','Thirish Kumar A','','2024-07-12 14:56:23',NULL,NULL),
 (444,'E34','5de26896c99b1e84f039841048225f22','Nanda Kumaran C','','2024-07-12 14:56:23',NULL,NULL),
 (445,'E35','1f5b192a0db8acdc66f1a4135bfa6916','Bhavya P','','2024-07-12 14:56:23',NULL,NULL),
 (446,'E36','aba0328448cda82d125ee3acccefc34e','Sai Manikandan S','','2024-07-12 14:56:23',NULL,NULL),
 (447,'E37','2615ae4abc1066a1955e2906bb36c623','Dinesh Kumar K','','2024-07-12 14:56:23',NULL,NULL),
 (448,'E38','3925fd0aede0f2af807f9a0b1f99dac3','Deenadhayalan','','2024-07-12 14:56:23',NULL,NULL),
 (449,'E39','9372c571c2ad11c1ca7f8b9bb49150f1','Abhyankar M','','2024-07-12 14:56:23',NULL,NULL),
 (450,'E40','c3f8ae97219b1c38687a815a3670cd3e','Reshmi S','','2024-07-12 14:56:23',NULL,NULL),
 (451,'E41','992260439f529dbede3679624f18f0db','B Navanesh','','2024-07-12 14:56:23',NULL,NULL),
 (452,'E42','5e8a8a23dc921b4f63a1e40087b2cb34','Karthikeyan S','','2024-07-12 14:56:23',NULL,NULL),
 (453,'E43','510b3646fd8feb900a3f0a54076b23eb','Lingeshwar  P','','2024-07-12 14:56:23',NULL,NULL),
 (454,'E44','de0e0b0a023375c08f9ab153e481f1a4','Lavanya M','','2024-07-12 14:56:23',NULL,NULL),
 (455,'E45','bb966fc2ee24dec995667e2938a5e553','Vikash N','','2024-07-12 14:56:23',NULL,NULL),
 (456,'E46','6c318dc4756fa80379f537cd50af7837','Aishwarya','','2024-07-12 14:56:23',NULL,NULL),
 (457,'E47','1156a054a95087decce2c16e47ac6a1a','Amirtha  M','','2024-07-12 14:56:23',NULL,NULL),
 (458,'E48','45e60a75d4436b77f1868e943963dc18','Subhashini R','','2024-07-12 14:56:23',NULL,NULL),
 (459,'E49','9a2e886cbf988a75ba4e1bde42b5e28d','Pavankumar J','','2024-07-12 14:56:23',NULL,NULL),
 (460,'E50','6be3bf94b300e898a2db61e50aded810','Aswath D','','2024-07-12 14:56:23',NULL,NULL),
 (461,'E51','f6fb01fbb1a8229a06868693fb3ffef2','Kishore Kumar M','','2024-07-12 14:56:23',NULL,NULL),
 (462,'E52','36c84153cb2dc8e4203073f5336114c7','Vishal J','','2024-07-12 14:56:23',NULL,NULL),
 (463,'E53','c63ad94a870699f89f196ebb3e258065','Richard Benjamin P','','2024-07-12 14:56:23',NULL,NULL),
 (464,'E54','f8c4cef13466468ce609ce2abe9bad71','M. Mahalakshmi','','2024-07-12 14:56:23',NULL,NULL),
 (465,'E55','29dc6a215b58f3428a1e3a3abd867ea1','D.Sangeetha','','2024-07-12 14:56:23',NULL,NULL),
 (466,'E56','3d895a5463dc99c11325db270a4c9823','Pushba Latha.R','','2024-07-12 14:56:23',NULL,NULL),
 (467,'E57','39d108ddc58ef7208ce49609fa6fb4d7','S.Siva Ranjani','','2024-07-12 14:56:23',NULL,NULL),
 (468,'E58','7a0ba625ab1c7a0d16858bf899ef11de','G.Dhanush','','2024-07-12 14:56:23',NULL,NULL),
 (469,'E59','30fd659f901103ce7ad9b6b962a4bb7f','ISHWARIYA B','','2024-07-12 14:56:23',NULL,NULL),
 (470,'E60','10eaa1e04608a412d5f83d71c9a05a65','AR.Visalakshi','','2024-07-12 14:56:23',NULL,NULL),
 (471,'E61','439bacb4e24d195255bf98c81a36623a','S.Pavithra','','2024-07-12 14:56:23',NULL,NULL),
 (472,'E62','434f87c8f5f7cad4085b03691acaeada','A.Mamatha','','2024-07-12 14:56:23',NULL,NULL),
 (473,'E63','998d303e4f5daee45fb895fe7234fcc4','H.Shrimathi','','2024-07-12 14:56:23',NULL,NULL),
 (474,'F1','5c6ff6d9de868e56c2520e9a7ac64605','KARTHICK D','','2024-07-12 14:56:23',NULL,NULL),
 (475,'F2','1c14052892d14ca395b29d6da79e3e77','ROSHAN KUMAR PANDIT K','','2024-07-12 14:56:23',NULL,NULL),
 (476,'F3','ea1272be6458dbba733c5886610442bd','SRIKHANTH R','','2024-07-12 14:56:23',NULL,NULL),
 (477,'F4','37741afbd7d6fbd72816eae77e5c6e65','RISHI ABINANDHAN S','','2024-07-12 14:56:23',NULL,NULL),
 (478,'F5','b5d5fe5bcf9c634dc02656cc6d630f31','NAVEEN KUMAR V','','2024-07-12 14:56:23',NULL,NULL),
 (479,'F6','24b665d3a806629113463b1901f3ba72','HARINI K','','2024-07-12 14:56:23',NULL,NULL),
 (480,'F7','c2c0c7dc0194cb18ac96cdacc9907088','MONIKA D','','2024-07-12 14:56:23',NULL,NULL),
 (481,'F8','98d6a996226de80cc98c752e75fef7cd','KAVI PRIYA K','','2024-07-12 14:56:23',NULL,NULL),
 (482,'F9','9754252bb5251426d9b134604950a5d1','KRISHNARAJ L','','2024-07-12 14:56:23',NULL,NULL),
 (483,'F10','c43882579c7869ef906cc6043d9aff21','AJAY KUMAR K S','','2024-07-12 14:56:23',NULL,NULL),
 (484,'F11','7c30cdfe2ece22fd331cc4d781ddc2e0','PRASANTH M','','2024-07-12 14:56:23',NULL,NULL),
 (485,'F12','8704f7683d928c1f3a9c5c91a69d4224','MEGHNA  LODHA  A','','2024-07-12 14:56:23',NULL,NULL),
 (486,'F13','5822326f1bbbad84c1369ed538805770','PRANAVANESH V','','2024-07-12 14:56:23',NULL,NULL),
 (487,'F14','d1dc04955418ff6b54d7713df1206f2b','SRAAVAN N','','2024-07-12 14:56:23',NULL,NULL),
 (488,'F15','4cc3f30ad849516a1fa3eefca48ab170','ASHWIN PRAKASH S','','2024-07-12 14:56:23',NULL,NULL),
 (489,'F16','8d2f81f7927d8879a688b13710be63e2','MOHAN RAJ J','','2024-07-12 14:56:23',NULL,NULL),
 (490,'F17','3976e9646e2b1556888347974d7ecb68','SAI KRISHNA G','','2024-07-12 14:56:23',NULL,NULL),
 (491,'F18','83c9f5692281bf59471b13dfddb3af91','LAKSHYA L JAIN','','2024-07-12 14:56:23',NULL,NULL),
 (492,'F19','21f51ce556fd14d756455e5519b5a4c2','NITHYA KUMAR R','','2024-07-12 14:56:23',NULL,NULL),
 (493,'F20','cff8029ebf9356030d94b9408e4156f7','PAVITHRA M','','2024-07-12 14:56:23',NULL,NULL),
 (494,'F21','1ad8120d2b1597023c1d521d63469544','GOBI KRISHNA V S','','2024-07-12 14:56:23',NULL,NULL),
 (495,'F22','01596fc2b34a9606a3ceb9531ee50895','ROSHAN KRISHNA S','','2024-07-12 14:56:23',NULL,NULL),
 (496,'F23','779237e7ffb5ab9422807f451ad92acc','DHEERAJ S','','2024-07-12 14:56:23',NULL,NULL),
 (497,'F24','ff7fb9c79fc9f0be1651f10e31d8b26f','SHRI VARSHINI P','','2024-07-12 14:56:23',NULL,NULL),
 (498,'F25','008459d2999eb84a992b11b8b43492f2','SESHAGOPALAN K S','','2024-07-12 14:56:23',NULL,NULL),
 (499,'F26','eb1b44f4fe50b4fbfa251b6e69079058','RACHAL MERLIN D S','','2024-07-12 14:56:23',NULL,NULL),
 (500,'F27','db1c5d2c58a3108f724221b42ff427a1','DEVINDRA M','','2024-07-12 14:56:23',NULL,NULL),
 (501,'F28','ef2af387c580692d05235fbda6291648','LINGESHWARAN SV','','2024-07-12 14:56:23',NULL,NULL),
 (502,'F29','e6a8906540fbbcefd9ec9b667b5b0aaa','GOKUL RAJ R','','2024-07-12 14:56:23',NULL,NULL),
 (503,'F30','0bcd35defefcfca97711312231bdb3f0','LAVANYA CHANDRA J T','','2024-07-12 14:56:23',NULL,NULL),
 (504,'F31','f11f8ab96500ec743144c93a724da2b8','MAGESH G','','2024-07-12 14:56:23',NULL,NULL),
 (505,'F32','395c286431d1b72622935f2aa10921a2','SHANMUGANATHAN S','','2024-07-12 14:56:23',NULL,NULL),
 (506,'F33','c1fb9f007c62d2d6a1b52ea3f40bd3f1','ABDUL AJEEZ N','','2024-07-12 14:56:23',NULL,NULL),
 (507,'F34','c2c8e3b637020bede070d9ecfee7f7b2','HEMANTH B','','2024-07-12 14:56:23',NULL,NULL),
 (508,'F35','9aba50a1a33a6b15048e268e9cfbd16d','YUVARAJ V','','2024-07-12 14:56:23',NULL,NULL),
 (509,'F36','89a15fce6031450c6b0bc5bb58de1405','CHANDRA SEKAR G M','','2024-07-12 14:56:23',NULL,NULL),
 (510,'F37','bc456ba814a15b8dbe8a7fb722179d36','YASODHA C','','2024-07-12 14:56:23',NULL,NULL),
 (511,'F38','892a8d41fe513ecd2d839f15e2269a6a','SURIYA KUMAR P','','2024-07-12 14:56:23',NULL,NULL),
 (512,'F39','3a1645172ca39a2e0690a95fd3e1368e','JAYARAM S','','2024-07-12 14:56:23',NULL,NULL),
 (513,'F40','43118d59ccd20a4262d28cc518d6d844','BARATH B','','2024-07-12 14:56:23',NULL,NULL),
 (514,'F41','a0173237e87238a1e35bbe59ebd8f239','DHANUSH M','','2024-07-12 14:56:23',NULL,NULL),
 (515,'F42','ddcc42bcf4b89f7d290887c9811bb927','ROHAN A','','2024-07-12 14:56:23',NULL,NULL),
 (516,'F43','82c80a586b71f4ed3407189b7e20e7d3','KAMU K R','','2024-07-12 14:56:23',NULL,NULL),
 (517,'F44','243b94bed741d109dd0cbc069073391b','BHUVANESH G','','2024-07-12 14:56:23',NULL,NULL),
 (518,'F45','5bf301b4f7e53301344dd7c0a73a2932','KAMALESH J','','2024-07-12 14:56:23',NULL,NULL),
 (519,'F46','46fe2b10bd1782dd174cf7110c0de53d','MOHANDAS P','','2024-07-12 14:56:23',NULL,NULL),
 (520,'F47','3f7162b6904ab5028dc57e362c6f9fa5','HARISH KARTHICK  A','','2024-07-12 14:56:23',NULL,NULL),
 (521,'F48','42cd32f025cee0b13920f54a01258bbe','MANOJKUMAR V','','2024-07-12 14:56:23',NULL,NULL),
 (522,'F49','ec5ebe1b6fe0f16158adaf8b5e5de149','KRITHIKA J','','2024-07-12 14:56:23',NULL,NULL),
 (523,'F50','b7fc69da2c1ae2b88473c3043c733d40','SHREYA M','','2024-07-12 14:56:23',NULL,NULL),
 (524,'F51','414c5085afda21cae63e45803affdb43','Pratikalpa RJ','','2024-07-12 14:56:23',NULL,NULL),
 (525,'F52','5dff468bc4ff7a71cd57c4bc38175bef','Harish kumar R','','2024-07-12 14:56:23',NULL,NULL),
 (526,'F53','fda5329c65a6d129b4602f79d423b2ec','Logeshwaran PS','','2024-07-12 14:56:23',NULL,NULL),
 (527,'F54','e73253447870f351651278e404726c0c','Preethi V','','2024-07-12 14:56:23',NULL,NULL),
 (528,'F55','8007cb9719e4149717719b1b2e90505b','M Kannan','','2024-07-12 14:56:23',NULL,NULL),
 (529,'F56','6b0b92fa3dbacf4abfe7ee5667706e6b','R swathi','','2024-07-12 14:56:23',NULL,NULL),
 (530,'F57','07b1962ae3aca8d91059e818b3bce1d9','Keerthi J','','2024-07-12 14:56:23',NULL,NULL),
 (531,'F58','a9298b8a944778ba567fc1b4e3117398','Monishvar E B','','2024-07-12 14:56:23',NULL,NULL),
 (532,'F59','f1c30576fde40a6474ecc110799151d6','S. Christon Manuel Raja','','2024-07-12 14:56:23',NULL,NULL),
 (533,'G1','63ac08fd2e224af3fe3348d8d9af1808','SAI CHARAN R','','2024-07-12 14:56:23',NULL,NULL),
 (534,'G2','ee5caca419a5df57ffd9d53dbfaa971a','DHEIVEEKA NACHIYAR P','','2024-07-12 14:56:23',NULL,NULL),
 (535,'G3','ffc7b91542e1e01bace700ef20837cb7','JANARTHANAN S','','2024-07-12 14:56:23',NULL,NULL),
 (536,'G4','a3d8c5575754cf0f9c14fe0379550614','KAPILDEV R','','2024-07-12 14:56:23',NULL,NULL),
 (537,'G5','725e5299df0c03388594cbd6e4f34137','DHASARATHY B','','2024-07-12 14:56:23',NULL,NULL),
 (538,'G6','dcb030cc67ef3865f821747b68e98aa3','RANJITH M','','2024-07-12 14:56:23',NULL,NULL),
 (539,'G7','8daec4e7167470cba91cbcbf4c3fd690','DHANUSH A','','2024-07-12 14:56:23',NULL,NULL),
 (540,'G8','21be262cce501d9ecc6d2fed4699bbd2','LAKSHMI PRATHA S','','2024-07-12 14:56:23',NULL,NULL),
 (541,'G9','83f12a72495f6f6d2c33cd8a754afaf6','DILIP','','2024-07-12 14:56:23',NULL,NULL),
 (542,'G10','c38d9166a534a6e8e2251d21835c6059','RUDRESH H VYAS','','2024-07-12 14:56:23',NULL,NULL),
 (543,'G11','5f1f9245af025fee5f1c6322ed9d3a63','HARSH GOEL','','2024-07-12 14:56:23',NULL,NULL),
 (544,'G12','28870fb558afa7f27825c67dd3f59cc9','HEMANTH T','','2024-07-12 14:56:23',NULL,NULL),
 (545,'G13','05ec40ffa84c71474ea4c534b115e8e8','SANTHOSH S','','2024-07-12 14:56:23',NULL,NULL),
 (546,'G14','53409d92d30acb2822ac7b24787f8089','VARSHITH S J','','2024-07-12 14:56:23',NULL,NULL),
 (547,'G15','cf60361deccf85da9d1dac102ee167b5','HAYAGREEV PARTHSARATHY','','2024-07-12 14:56:23',NULL,NULL),
 (548,'G16','bca4506d6ff3646c9c5b6af08fe0bb9d','JEEVANANDAN B K','','2024-07-12 14:56:23',NULL,NULL),
 (549,'G17','a8db197500754034f2eaa679252bdc9d','HARISH.R','','2024-07-12 14:56:23',NULL,NULL),
 (550,'G18','459c40ce7818314c53e378c54ee90e67','DHEENAN R','','2024-07-12 14:56:23',NULL,NULL),
 (551,'G19','4d91dbf5c697ed0b438b3dc40be03b8b','VIGNESH SAI','','2024-07-12 14:56:23',NULL,NULL),
 (552,'G20','0e8bdfc28bae58a2bac95498a7e3863c','KAMALI R','','2024-07-12 14:56:23',NULL,NULL),
 (553,'G21','63ef43ca91d8a7a9e129a340bc2e16fe','Deepika v','','2024-07-12 14:56:23',NULL,NULL),
 (554,'G22','7880141be2c1d333fc1880a8a49d7c36','Thakshina GB','','2024-07-12 14:56:23',NULL,NULL),
 (555,'G23','bd7d492d9c89fe8430ddde58e4877c9f','Sanjeev R','','2024-07-12 14:56:23',NULL,NULL),
 (556,'G24','e70d85ab4c64576a6e49e4830b975441','Ramya.B','','2024-07-12 14:56:23',NULL,NULL),
 (557,'G25','348c3c70f4178d4d44606fbfa58df1d4','S md jamal','','2024-07-12 14:56:23',NULL,NULL),
 (558,'G26','0ca509aef0d68fa8e40d82c19af26b77','Giridharan S','','2024-07-12 14:56:23',NULL,NULL),
 (559,'G27','0fb0d9d8d395c90aecae8ae55ae85e86','Yathish.V','','2024-07-12 14:56:23',NULL,NULL),
 (560,'G28','025a908903aa3cc6df40b1850e9966d4','Vaseegaran B','','2024-07-12 14:56:23',NULL,NULL),
 (561,'G29','61fc9be661d0456266a44437dc0a75fa','S. M. LAKSHMANAN','','2024-07-12 14:56:23',NULL,NULL),
 (562,'G30','40cbcda7266205444f9f0f5e2c571775','SURENDAR. D','','2024-07-12 14:56:23',NULL,NULL),
 (563,'G31','cb743fed4f2bb59f1fbd4e9f3568d984','Niranjan K','','2024-07-12 14:56:23',NULL,NULL),
 (564,'G32','85d755437c400a27360854112c65a959','Anush R','','2024-07-12 14:56:23',NULL,NULL),
 (565,'G33','90fbcbc178390cd1fbd5cec109f3a026','Abisha.P.V.','','2024-07-12 14:56:23',NULL,NULL),
 (566,'G34','eac173cae274e55072dbc1491868150f','V. Pranava','','2024-07-12 14:56:23',NULL,NULL),
 (567,'G35','01564e96c238c2305d7fd8560a09679a','Reena. S','','2024-07-12 14:56:23',NULL,NULL),
 (568,'G36','0d1ebcdf362562df610c996d1f42f629','M.Priyanga','','2024-07-12 14:56:23',NULL,NULL),
 (569,'G37','5a74dd5669edb0e08995568c338c9d76','Sorna Kumar V','','2024-07-12 14:56:23',NULL,NULL),
 (570,'G38','ecb0983e8b23c62b8810657689b8da1e','B. Logeshwari','','2024-07-12 14:56:23',NULL,NULL),
 (571,'G39','9c79c37c15df679c51cfe13500d6abb9','Nivetha k','','2024-07-12 14:56:23',NULL,NULL),
 (572,'G40','1905063316e7c42d4eb7eab735497e5c','A. Hema Abinaya Priya','','2024-07-12 14:56:23',NULL,NULL),
 (573,'G41','2ef9184789a137368982a22685123f27','Preethi S','','2024-07-12 14:56:23',NULL,NULL),
 (574,'G42','2e66ba374fd69e93d8a56bc2016ad16e','Vijayalakshmi.k','','2024-07-12 14:56:23',NULL,NULL),
 (575,'G43','d1a8b40935a31db679a4238ab29cefec','J. P. KOWSALYA','','2024-07-12 14:56:23',NULL,NULL),
 (576,'G44','a7c9a851feb5f1434b50b869832dd1e1','Lakshmi priya.M','','2024-07-12 14:56:23',NULL,NULL),
 (577,'G45','4570e48697db135cd73224ca77709f19','S SUBASRI','','2024-07-12 14:56:23',NULL,NULL),
 (578,'G46','de16253e53e6ec1de34b66c22ace3a8c','M. Logeshwari','','2024-07-12 14:56:23',NULL,NULL),
 (579,'G47','7f5c6eb89a5ebe941e306b65bee7505b','Anusuya R','','2024-07-12 14:56:23',NULL,NULL),
 (580,'G48','e7c81ab66c4e07c476e67e7da27b7807','Lavanya R','','2024-07-12 14:56:23',NULL,NULL),
 (581,'G49','82d035e6282251b41786c54089f44328','SUREKHA S','','2024-07-12 14:56:23',NULL,NULL),
 (582,'G50','36f555bf88f0f47662e2ea529e4bcf8f','C. Harinee','','2024-07-12 14:56:23',NULL,NULL),
 (583,'G51','f491bd960a2fa2d934d268839aff09e2','Muthu Karthika S','','2024-07-12 14:56:23',NULL,NULL),
 (584,'G52','8e1730619c2b62563f03b768eda45c9e','JAI KISHANN A S','','2024-07-12 14:56:23',NULL,NULL),
 (585,'G53','338b685a54f6631bc6cde578039c879f','Kalaivani P','','2024-07-12 14:56:23',NULL,NULL),
 (586,'G54','76e9f587dde79588dda6b2cbfaebadfb','M.Pragalthy','','2024-07-12 14:56:23',NULL,NULL),
 (587,'G55','d913ace606cb782623992f1202b463f8','Jayapraveen.K','','2024-07-12 14:56:23',NULL,NULL),
 (588,'G56','1197f26fcace539df504bd170716236a','Ahygrev.S.T.K','','2024-07-12 14:56:23',NULL,NULL),
 (589,'G57','6b7d60c136151064cf473ec49a9e2da4','R.Sushmitha','','2024-07-12 14:56:23',NULL,NULL),
 (590,'G58','b768142f53342798915824dad81ae507','Priya dharshini V','','2024-07-12 14:56:23',NULL,NULL),
 (591,'G59','82a9ed02056076e42c74544af1a2515e','S R Lakshmi priya','','2024-07-12 14:56:23',NULL,NULL),
 (592,'G60','4bd32015f5b693eb3509388137814f24','Shayaarthi Muralidharan','','2024-07-12 14:56:23',NULL,NULL),
 (593,'G61','15222ab64a36e8dc2104a37113127d8e','RUPALI RAVINDRA PHADTARE','','2024-07-12 14:56:23',NULL,NULL),
 (594,'G62','e04f94d67296596b3ad1d411205b9607','Janaki. R','','2024-07-12 14:56:23',NULL,NULL),
 (595,'G63','0c3775466321f1842efb71cd81057319','MEENAKSHI SUNDARAM C','','2024-07-12 14:56:23',NULL,NULL),
 (596,'H1','b1ce96d56fd9d6c3d56cd94b8e88eec1','Meera priyadharshini.K','','2024-07-12 14:56:23',NULL,NULL),
 (597,'H2','75e2dea88131059efd04d2f3798b3663','Soniya. S','','2024-07-12 14:56:23',NULL,NULL),
 (598,'H3','58518163c501361872cd5c7feba3ec10','S.Reshmaa','','2024-07-12 14:56:23',NULL,NULL),
 (599,'H4','6dae08f69e7c1fcc0ad69614c953886f','Harini R','','2024-07-12 14:56:23',NULL,NULL),
 (600,'H5','dbfa5c965d84218516fdc8febde799b5','Shalini.U.K','','2024-07-12 14:56:23',NULL,NULL),
 (601,'H6','bfb219bdc744f923a1e7e7e88b967945','S Navena Kumari','','2024-07-12 14:56:23',NULL,NULL),
 (602,'H7','c8ecfa957fd2423726b762ca8e9d3d1d','R HARITHA','','2024-07-12 14:56:23',NULL,NULL),
 (603,'H8','206ab6a11a1bef7991b38f55509cdc82','Anjali kumari. S','','2024-07-12 14:56:23',NULL,NULL),
 (604,'H9','41a9a87b8e823952822c2a95b665a2f8','SAKTHIVEL.R','','2024-07-12 14:56:23',NULL,NULL),
 (605,'H10','9ff91ddb007ed918d69dea63bc05a76e','V. ASHIKA','','2024-07-12 14:56:23',NULL,NULL),
 (606,'H11','8684da5fd3eab02e5213a8875a09b600','DURGA PRASAD','','2024-07-12 14:56:23',NULL,NULL),
 (607,'H12','ddd942385e987627fab1e9120cd3b37f','R SANTHIYA','','2024-07-12 14:56:23',NULL,NULL),
 (608,'H13','add93f5baeab8859f66d423499236dd5','Ashwin. S','','2024-07-12 14:56:23',NULL,NULL),
 (609,'H14','b6ea59aa81f2688bf3f9d371d5d64130','Swathi.R','','2024-07-12 14:56:23',NULL,NULL),
 (610,'H15','36cd3e4741013db4193a23e9447ffcc2','K.JAYASABARI','','2024-07-12 14:56:23',NULL,NULL),
 (611,'H16','c7736c774bb3b391525990649aa3a1d9','KEERTHI KUMAR V','','2024-07-12 14:56:23',NULL,NULL),
 (612,'H17','d1ac12d9c9d303536b20ba16a4ef1efb','DILIPKUMAR N T','','2024-07-12 14:56:23',NULL,NULL),
 (613,'H18','d226b4ff6c289c48f372b1351892da86','R LITHESH MANI KANDAN','','2024-07-12 14:56:23',NULL,NULL),
 (614,'H19','3b6d3c728e10cf8a3a9c04c2a957d271','LALITH','','2024-07-12 14:56:23',NULL,NULL),
 (615,'H20','2e5a9107ae67bedb4ab1c75c0f55fd20','Madhan G.R','','2024-07-12 14:56:23',NULL,NULL),
 (616,'H21','7a7e203ad7f0eb5b5343547153217836','G N DHANAVANDHAN','','2024-07-12 14:56:23',NULL,NULL),
 (617,'H22','1502304f6dffdf69636ddac8ffc9a06d','S.SOWNDHARYA','','2024-07-12 14:56:23',NULL,NULL),
 (618,'H23','0d53285f9581abbe3e95b2ce6769bb26','MONISH T N','','2024-07-12 14:56:23',NULL,NULL),
 (619,'H24','06e2000122a7b1d855e1435dbebd57e0','Thanusri K S','','2024-07-12 14:56:23',NULL,NULL),
 (620,'H25','68950ea9a6ce99a5dbe385b574f33b98','Ajay.R','','2024-07-12 14:56:23',NULL,NULL),
 (621,'H26','a5ad9c56af0643870c244d541c6c383e','S.Kiruthiga','','2024-07-12 14:56:23',NULL,NULL),
 (622,'H27','55869aa3fe9498b57f29e717d10acc6c','Dhanush Kumar S','','2024-07-12 14:56:23',NULL,NULL),
 (623,'H28','192c7e482190cfbfa524e9c3dfadd460','Kedarnath P','','2024-07-12 14:56:23',NULL,NULL),
 (624,'H29','e10572bd3a4172433691696ecc24ebf2','K.G.Hiren','','2024-07-12 14:56:23',NULL,NULL),
 (625,'H30','784d7572addac272ae0d808d1067b62b','J Shriram','','2024-07-12 14:56:23',NULL,NULL),
 (626,'H31','8bd79de41b37521147c0bb8b7c8501c2','VijayaVishnu TM','','2024-07-12 14:56:23',NULL,NULL),
 (627,'H32','85233a264d21eaf1cadfc37908aacbaa','Sasmita. J','','2024-07-12 14:56:23',NULL,NULL),
 (628,'H33','494041e9288cad46d5175fdeda473b33','Bavadhaarrani j','','2024-07-12 14:56:23',NULL,NULL),
 (629,'H34','8504aed696d072bfdb0b895436998fc0','Sarvesh Kannan S','','2024-07-12 14:56:23',NULL,NULL),
 (630,'H35','1b426ccacd4d908a52bd9f189781e3b6','M Kalai Vani','','2024-07-12 14:56:23',NULL,NULL),
 (631,'H36','36f045e4cc72cc2c56b640423d0d63e8','Amruth S K','','2024-07-12 14:56:23',NULL,NULL),
 (632,'H37','f2c88c93580a84b288c798b816bbcee7','L. Yuvashree','','2024-07-12 14:56:23',NULL,NULL),
 (633,'H38','2ff4cdd4b7f596cc9723c090640b57db','Nithish kumar. E','','2024-07-12 14:56:23',NULL,NULL),
 (634,'H39','517ba331477519de73a3c00dda5391a7','KEERTHI SRINIVASAN BD','','2024-07-12 14:56:23',NULL,NULL),
 (635,'H40','8cd2cdb25d7df5b659f6e83bb864428a','Anagha. A','','2024-07-12 14:56:23',NULL,NULL),
 (636,'H41','7e7a2055e996204287df47d0ab4e9909','Vignesh R K','','2024-07-12 14:56:23',NULL,NULL),
 (637,'H42','6a835e04445176d81b2068f02d4f885c','S Arunkumeren','','2024-07-12 14:56:23',NULL,NULL),
 (638,'H43','b9962dd307b655d6efd35fc40d94319c','Domavarapu Naveen','','2024-07-12 14:56:23',NULL,NULL),
 (639,'H44','a1bd9322a0b7d583716cb70c3f5a142f','shivaram','','2024-07-12 14:56:23',NULL,NULL),
 (640,'H45','607dd7f78e12116f6ce381217819b675','SUSHMITHA U','','2024-07-12 14:56:23',NULL,NULL),
 (641,'H46','540a5fc02a23327b20c313ae890a3ed6','MADHU MIDHA V','','2024-07-12 14:56:23',NULL,NULL),
 (642,'H47','96b5cb4e4f44a828f04a4d3a5620266f','G.Gayathri','','2024-07-12 14:56:23',NULL,NULL),
 (643,'H48','f5c56af0eccb3b4d8a1130029bb4e5cf','Devakumaran.V','','2024-07-12 14:56:23',NULL,NULL),
 (644,'H49','66b2b6eb07c9bf96c5caab17a3d69aeb','Madhumitha GR','','2024-07-12 14:56:23',NULL,NULL),
 (645,'H50','24a04491b9b8a29ebf2fb65a6a340fc5','Sanmai Ravindra Marla','','2024-07-12 14:56:23',NULL,NULL),
 (646,'H51','04a8dd2660a8f8f172ac014b0237ee1e','Naveen kumar v','','2024-07-12 14:56:23',NULL,NULL),
 (647,'H52','99261fffdf5fd5b3970fcf64133357c7','J. DEEPIKA','','2024-07-12 14:56:23',NULL,NULL),
 (648,'H53','68b0f0596900fcc7b9260aa41e0e5560','V.Ezhil','','2024-07-12 14:56:23',NULL,NULL),
 (649,'H54','a4622c7d11be6c6a5f8c3c52320105af','M. Abirami','','2024-07-12 14:56:23',NULL,NULL),
 (650,'H55','128015da8171f40eb28098917de55175','Thiyagarajan V','','2024-07-12 14:56:23',NULL,NULL),
 (651,'H56','874d0296adbb84a1c869298b0ed424ee','NANDHAKUMAR A','','2024-07-12 14:56:23',NULL,NULL),
 (652,'H57','54e0bdcda7b0d8dc68a56e5595984808','JASHWIN J','','2024-07-12 14:56:23',NULL,NULL),
 (653,'H58','fe2fdcc6ec6a1ac4615fb7dfe06584c9','MANIMARAN S','','2024-07-12 14:56:23',NULL,NULL),
 (654,'H59','50752238dc0f4793995deb586f6b47e4','NANDAKUMAR S','','2024-07-12 14:56:23',NULL,NULL);
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (655,'H60','e3b10739290612b1c426aedae9efa72b','Deepisala M','','2024-07-12 14:56:23',NULL,NULL),
 (656,'H61','7eb6174cb3333b6d79aa80843fcfae92','Reshma R','','2024-07-12 14:56:23',NULL,NULL),
 (657,'H62','1aeb5e5c0cd1cdd49bed046441e66a64','Muthuganesh M','','2024-07-12 14:56:23',NULL,NULL),
 (658,'H63','e86bf1ecb7ed95db1c1b0bbb2ef79a75','B.S. Prakalaya','','2024-07-12 14:56:23',NULL,NULL),
 (659,'J1','71996496f21a3e4ac0dc12f35b113128','Anirudh Narayanan A.','','2024-07-12 14:56:23',NULL,NULL),
 (660,'J2','0e701a9701dfce5d4a6cfc71e9639270','S Masooda Fathima','','2024-07-12 14:56:23',NULL,NULL),
 (661,'J3','75425325000b95ef1e5995d42221f82e','Sangeetha.B','','2024-07-12 14:56:23',NULL,NULL),
 (662,'J4','d0b5530ff674d772a245d0df3212093c','A.Nithya Sree','','2024-07-12 14:56:23',NULL,NULL),
 (663,'J5','d916a900b34df307448b801e5f132f3b','Bala Barathi. V','','2024-07-12 14:56:23',NULL,NULL),
 (664,'J6','0dd7c4c4a7127f0bed37b99d0811cd4f','A.Nanthini','','2024-07-12 14:56:23',NULL,NULL),
 (665,'J7','baed24486df22aa1ca3aec8a88857079','Santhiya M','','2024-07-12 14:56:23',NULL,NULL),
 (666,'J8','20f9ebeaad2b114617edeea5e32f71e4','Thilagavathy R','','2024-07-12 14:56:23',NULL,NULL),
 (667,'J9','08f6ea928e0e29f229c1cc9c22e20387','Keerthana R','','2024-07-12 14:56:23',NULL,NULL),
 (668,'J10','8e261b17ffc901ea2d64f47e55d68337','Divya R','','2024-07-12 14:56:23',NULL,NULL),
 (669,'J11','81dc75d9ff74f5bd3545a1f126cb3bb0','A. Shree Raghavan.R','','2024-07-12 14:56:23',NULL,NULL),
 (670,'J12','132561a728bcdc24b42b2f59ad812af3','Anandhakumar.B','','2024-07-12 14:56:23',NULL,NULL),
 (671,'J13','3f5f985512fb0f5138c6094209ef917d','Pavithra. R','','2024-07-12 14:56:23',NULL,NULL),
 (672,'J14','52f7f752831f73fcd6285f9551465d2e','Keerthana S','','2024-07-12 14:56:23',NULL,NULL),
 (673,'J15','fed04fb62c2a34d75555dae502725904','Uma.A','','2024-07-12 14:56:23',NULL,NULL),
 (674,'J16','c9ead8f08bada12e8145f6fbd898cccf','Ramya G K','','2024-07-12 14:56:23',NULL,NULL),
 (675,'J17','c901dea7ef35e309b58b8a15981852e4','Gowridevi V','','2024-07-12 14:56:23',NULL,NULL),
 (676,'J18','20476fe61d6a634807a96bde04c40e5f','Mohamed Aboobacker K','','2024-07-12 14:56:23',NULL,NULL),
 (677,'J19','24881c77292b573a16f502422d69c63b','Rushika Sri.D','','2024-07-12 14:56:23',NULL,NULL),
 (678,'J20','b1f4d6d368323a1c2a5d1486e52287dd','Sowmya Radha S','','2024-07-12 14:56:23',NULL,NULL),
 (679,'J21','3221abc88121b6a665a222386ce19f16','Swetha J','','2024-07-12 14:56:23',NULL,NULL),
 (680,'J22','99410bf0a71144a052ebce97d6a33744','Monica Seles K','','2024-07-12 14:56:23',NULL,NULL),
 (681,'J23','c081dffe7a4606425a1d502ef6c2722d','Suvetha. N','','2024-07-12 14:56:23',NULL,NULL),
 (682,'J24','3fa2cca20de335da02b842ecd11b3782','B.Sree Arthi','','2024-07-12 14:56:23',NULL,NULL),
 (683,'J25','d7ac2c137dcf5a97620a2f6b46ed7687','Dinesh V','','2024-07-12 14:56:23',NULL,NULL),
 (684,'J26','b8223efd08f1121cd919e1d2191dc893','Lakshmi Priya S','','2024-07-12 14:56:23',NULL,NULL),
 (685,'J27','464282df9f0de8de180b84e0a7f6631a','Suryanarayanan.D','','2024-07-12 14:56:23',NULL,NULL),
 (686,'J28','548a98e3ee757b16210eec173d97ea30','A. Sherly Keats','','2024-07-12 14:56:23',NULL,NULL),
 (687,'J29','5aa9a93099d8cffe97e8c5806fc35085','S. ANANTHA KRISHNAN','','2024-07-12 14:56:23',NULL,NULL),
 (688,'J30','fedcd7e33985013d1c5b23bb64468d94','V.Amirthavarshini','','2024-07-12 14:56:23',NULL,NULL),
 (689,'J31','a2de1bf4670d9479ea599e9793dd39af','Yazhini.V','','2024-07-12 14:56:23',NULL,NULL),
 (690,'J32','d8f02ba633be09878e521f8a34f7b23b','Rajakumari','','2024-07-12 14:56:23',NULL,NULL),
 (691,'J33','45c377a0d0050d846b331f0db44c32c0','R.K. VIGNESH','','2024-07-12 14:56:23',NULL,NULL),
 (692,'J34','42271ab603749f5ad18b476f293e9688','A.Shri Lalitha','','2024-07-12 14:56:23',NULL,NULL),
 (693,'J35','bc3d984e75f4cbcdd5d819f5f8b6236a','SAI KUMAR M','','2024-07-12 14:56:23',NULL,NULL),
 (694,'J36','9f31cb8cb3dda1e14169c5de1f2888d7','Aarthi. S. G','','2024-07-12 14:56:23',NULL,NULL),
 (695,'J37','2e80386ecaf7c8d20d4b10f3dfdabc1e','BRINDHA.P','','2024-07-12 14:56:23',NULL,NULL),
 (696,'J38','e040e8d90a0f0505e8c8cd52d9a3133f','A S RESHMA','','2024-07-12 14:56:23',NULL,NULL),
 (697,'J39','2c6e62b5c5059f0e783876a240f2e845','Ananya A','','2024-07-12 14:56:23',NULL,NULL),
 (698,'J40','eb94cb8c4db328758eeae4a26e351bca','Malathy. N','','2024-07-12 14:56:23',NULL,NULL),
 (699,'J41','df1775f965ac3ec09c35e865f63bca14','Ruba Devi. N. T','','2024-07-12 14:56:23',NULL,NULL),
 (700,'J42','e2ac2d20142b0bde5d67cbe58f41d9b6','JEEVAKUMARAN G','','2024-07-12 14:56:23',NULL,NULL),
 (701,'J43','d51a253ad2f6c1f3674ae803eb708d0d','Akshara Su','','2024-07-12 14:56:23',NULL,NULL),
 (702,'J44','75a2a8ead0fa225ac9ffc736089fd53c','GAYATHRI DHEVI G M','','2024-07-12 14:56:23',NULL,NULL),
 (703,'J45','74b71cd5af00b0f1f3b0df1b5ee6fb2d','R. SRIVATHSAN','','2024-07-12 14:56:23',NULL,NULL),
 (704,'J46','8149391b7f44bcfa6cdd7ba1e292fde8','M KAVIYA','','2024-07-12 14:56:23',NULL,NULL),
 (705,'J47','48f7f0809c880f0722c83e58cfc2768c','LEENA V S','','2024-07-12 14:56:23',NULL,NULL),
 (706,'J48','8df0438dd147db7e143da8390ae56b9d','JAYASHANKARI R','','2024-07-12 14:56:23',NULL,NULL),
 (707,'J49','d26b3c1fafe3eb798c014a644dcfe5ef','POOJA K','','2024-07-12 14:56:23',NULL,NULL),
 (708,'J50','8d6ba1b22aaaa27eb399d06074f51d08','ARUNIMA P M','','2024-07-12 14:56:23',NULL,NULL),
 (709,'J51','73ceda3a731d2679d3458a2c1c5410da','N.Sruthi','','2024-07-12 14:56:23',NULL,NULL),
 (710,'J52','c90c2ff1db5dd19d76e758ee61f9fee2','Charumathi J.J','','2024-07-12 14:56:23',NULL,NULL),
 (711,'J53','bfc67ef18e39dc8106684b8ce964f162','Dhivyapriya B','','2024-07-12 14:56:23',NULL,NULL),
 (712,'J54','38caaecd03e996df7c3deaa492cf9a18','Livitha A','','2024-07-12 14:56:23',NULL,NULL),
 (713,'J55','25bd149c498a4123d1b2915fab9d4baa','MALLIGA.P','','2024-07-12 14:56:23',NULL,NULL),
 (714,'J56','e952654b26198cbffe4b80ccb2210573','Abhi A','','2024-07-12 14:56:23',NULL,NULL),
 (715,'J57','b787475a2d65f129ce949e8d37d21a28','Hemashri.A','','2024-07-12 14:56:23',NULL,NULL),
 (716,'J58','3a357a469e53027b45167556f7feea98','Pavatharani.m','','2024-07-12 14:56:23',NULL,NULL),
 (717,'J59','ee16097e10f3918574a7481032cf9bb0','Bharath Kumar .S','','2024-07-12 14:56:23',NULL,NULL),
 (718,'J60','8cf6c3f86f8a5507136af373d233105f','S.Meera Jasmine','','2024-07-12 14:56:23',NULL,NULL),
 (719,'J61','6106202fda492a7abb4ab52bcf227359','Harini.R','','2024-07-12 14:56:23',NULL,NULL),
 (720,'J62','2219a1cad72ef7d93f108c74715b152c','Hemalatha D','','2024-07-12 14:56:23',NULL,NULL),
 (721,'J63','bd410e60f4466573b31a179d31c57d37','S.Sandhya','','2024-07-12 14:56:23',NULL,NULL),
 (722,'K1','2781a3699ab85ea1575ca906f808e40e','Dhanush. B','','2024-07-12 14:56:23',NULL,NULL),
 (723,'K2','f035c5e710b3ac337856154eac5c8eb4','Ganesh B','','2024-07-12 14:56:23',NULL,NULL),
 (724,'K3','04d5bb3e5f1dd70812bbf29f8955fcdc','G.Meenakshi','','2024-07-12 14:56:23',NULL,NULL),
 (725,'K4','2af459528e100f2d2dbc822276cba551','C. E. Giftlin Sheril','','2024-07-12 14:56:23',NULL,NULL),
 (726,'K5','2fe1939f083ba03cb82022a38a283ac7','Harshaa. V','','2024-07-12 14:56:23',NULL,NULL),
 (727,'K6','89cc69b0e2f1949b68e0df61cc6afc45','Manigandan T','','2024-07-12 14:56:23',NULL,NULL),
 (728,'K7','bfee71a6e7804643054597197716221d','Yaswanth K','','2024-07-12 14:56:23',NULL,NULL),
 (729,'K8','5ecf3eed549c631b435a13f733c9305b','Gayathri S','','2024-07-12 14:56:23',NULL,NULL),
 (730,'K9','0660d522e8cd3277518b9939c69e89b1','RESHMA.S','','2024-07-12 14:56:23',NULL,NULL),
 (731,'K10','6e3f12466dbc952b52983465850c7a74','HARISH.S','','2024-07-12 14:56:23',NULL,NULL),
 (732,'K11','4cf9e94d8ac872efc8aee931efaa54dc','VEDA PRAKASH .J','','2024-07-12 14:56:23',NULL,NULL),
 (733,'K12','370b857440c031ae0d3d1a165d2c6943','Divya.k','','2024-07-12 14:56:23',NULL,NULL),
 (734,'K13','f1902c8212c7846f7c32b4c2e4df0a95','S.YUVARAJ','','2024-07-12 14:56:23',NULL,NULL),
 (735,'K14','8ebf0558181fc8245b8899c734135823','Gayathri M','','2024-07-12 14:56:23',NULL,NULL),
 (736,'K15','24ef572c612f54015cc2f30e3c7e4c81','K.PRASANNA','','2024-07-12 14:56:23',NULL,NULL),
 (737,'K16','12ff70399a0e1f650d27ed9cf135ff4d','VIGNESH R','','2024-07-12 14:56:23',NULL,NULL),
 (738,'K17','fd50ab0af2b68ca24453598d80e5aed2','manimegalai','','2024-07-12 14:56:23',NULL,NULL),
 (739,'K18','e6a684d540670bed149eee6a1c0c4a9a','S.Saranya','','2024-07-12 14:56:23',NULL,NULL),
 (740,'K19','e9692a8835acc0bdabe5a06accec7d3b','MUKESHWAR.R','','2024-07-12 14:56:23',NULL,NULL),
 (741,'K20','74ca7e400af4921fa96ff8108101ddda','S. CHIRAAG JAIN','','2024-07-12 14:56:23',NULL,NULL),
 (742,'K21','91ffc5cf8095cede0c93dccb4786a7d7','Jayaa shri Y','','2024-07-12 14:56:23',NULL,NULL),
 (743,'K22','d91d432ba02b93aa1799ba9647ee8d5c','Aswin','','2024-07-12 14:56:23',NULL,NULL),
 (744,'K23','234fe81e8c412d227c71ca25d13ab09b','Mithun m','','2024-07-12 14:56:23',NULL,NULL),
 (745,'K24','b9a61fe8a05615510e2f985199976310','A.Thilak Balaji','','2024-07-12 14:56:23',NULL,NULL),
 (746,'K25','2ddfbb9a7ce1c461fb61977d8af9ca78','Kishore S','','2024-07-12 14:56:23',NULL,NULL),
 (747,'K26','8abd6185d7ccba502480917db3dd5e36','AJAY K.M','','2024-07-12 14:56:23',NULL,NULL),
 (748,'K27','4b7b31f8beedebd35f7b9df03379b9bc','Abinash.V','','2024-07-12 14:56:23',NULL,NULL),
 (749,'K28','b0bbc0383a1ed3c45c3ebe0500f95216','Hemanth V','','2024-07-12 14:56:23',NULL,NULL),
 (750,'K29','2d7e84392f676a1eb1786507e89bdb96','Santhosh kumar V','','2024-07-12 14:56:23',NULL,NULL),
 (751,'K30','e3b0d7e42aefef89bac7d05697af9eb5','C R Ram Monish','','2024-07-12 14:56:23',NULL,NULL),
 (752,'K31','58438d59b3134c3c2745183385167056','Jagannadhan mv','','2024-07-12 14:56:23',NULL,NULL),
 (753,'K32','d8326dab540284d239582726856a6e3d','vishal S','','2024-07-12 14:56:23',NULL,NULL),
 (754,'K33','a85779003304acd0282f3fbefd6243cc','BLESSED SAMUEL A','','2024-07-12 14:56:23',NULL,NULL),
 (755,'K34','9f57d13a84305d23079e89527966007d','N.Hari shanker','','2024-07-12 14:56:23',NULL,NULL),
 (756,'K35','faa06a0d4a5d626ebd0f1301fb8d73cd','Gururaghav P','','2024-07-12 14:56:23',NULL,NULL),
 (757,'K36','15768a72d02d893f32ace69b5fab5643','Monika. R','','2024-07-12 14:56:23',NULL,NULL),
 (758,'K37','b68d163bb34201d91661c2ecd40d73d2','Jai adithya ram kumar. P','','2024-07-12 14:56:23',NULL,NULL),
 (759,'K38','9b5e022100ba0dedad24bb8560e2b6b6','Mukund M','','2024-07-12 14:56:23',NULL,NULL),
 (760,'K39','fe4dd1c3b8e374171234c089d5c5b5b3','US Vishalragav','','2024-07-12 14:56:23',NULL,NULL),
 (761,'K40','3a2ce2f195085a9ecb12159573844595','Abhinaya P C','','2024-07-12 14:56:23',NULL,NULL),
 (762,'K41','1cdd7d8e4c63efcc88cc6f65a69aa6a4','Madhuvanthi M K','','2024-07-12 14:56:23',NULL,NULL),
 (763,'K42','94e8d5102e774c744ce22bbc649f29c4','K R Tejashree','','2024-07-12 14:56:23',NULL,NULL),
 (764,'K43','2df5e93cd19e2e599cb4ea878c4c4522','Affraa S','','2024-07-12 14:56:23',NULL,NULL),
 (765,'K44','299b51e8e8a69f3596419e16fc7443bc','P Neeshanth','','2024-07-12 14:56:23',NULL,NULL),
 (766,'K45','ac3745661adb311c31848a810268791a','Anjana R','','2024-07-12 14:56:23',NULL,NULL),
 (767,'K46','fded044ee1718adade88a5db572ff56f','R Sriharinandan','','2024-07-12 14:56:23',NULL,NULL),
 (768,'K47','b3b66b97edfb739abbbebc04611d1bc5','Lekha R','','2024-07-12 14:56:23',NULL,NULL),
 (769,'K48','401badf02c9224140849904c3b77ba4a','Krithika K','','2024-07-12 14:56:23',NULL,NULL),
 (770,'K49','837d354a85df6eb4711a830f97ac4af3','Nandidha G','','2024-07-12 14:56:23',NULL,NULL),
 (771,'K50','ae3c75ad2dd4586611fd83cc4f074a1c','Charanyeyan S','','2024-07-12 14:56:23',NULL,NULL),
 (772,'K51','379bfeb3093aa512fdfde2c2e9f3bddc','Subhika M','','2024-07-12 14:56:23',NULL,NULL),
 (773,'K52','af1e206a381903c73017c266d6ba3f59','Savitha Sri P B','','2024-07-12 14:56:23',NULL,NULL),
 (774,'K53','31d310da170650c601ed8a01e20e009a','Tejesve S','','2024-07-12 14:56:23',NULL,NULL),
 (775,'K54','80023ddb2410720c2f12d067e0fea1f7','Boomigha K','','2024-07-12 14:56:23',NULL,NULL),
 (776,'K55','5d366e94d9ec70ae782dcd1bcd3f3732','Sarvesh Chandar','','2024-07-12 14:56:23',NULL,NULL),
 (777,'K56','d217186449557ed403c7546e755f10b3','Lakshmipathy S','','2024-07-12 14:56:23',NULL,NULL),
 (778,'K57','48bdf7e1fb843a57f1080b4037bed30f','Logesh V','','2024-07-12 14:56:23',NULL,NULL),
 (779,'K58','7ba4889fbfb5c8dff45bfb67d1d1de4a','Dheekshidha K S','','2024-07-12 14:56:23',NULL,NULL),
 (780,'K59','303b3ea2f9b0c22ad24c1e2fadf6df4f','B Srilakshmi','','2024-07-12 14:56:23',NULL,NULL),
 (781,'K60','91e64684b1a9b515adc4b03e27b674ea','Aarthi S','','2024-07-12 14:56:23',NULL,NULL),
 (782,'K61','32c8928c8dee74756b6a56f5cd184a04','Sarankumar.K','','2024-07-12 14:56:23',NULL,NULL),
 (783,'K62','e0ccc6f227618b7cfe222e84ca6649d0','Sreeja','','2024-07-12 14:56:23',NULL,NULL),
 (784,'K63','a7c6b4ca8b301a734273fbff7a6e7404','Abhinav Praveen','','2024-07-12 14:56:23',NULL,NULL),
 (785,'L1','69a1eed464ea0ebfabaecac2b3bb3958','SHYAM. R','','2024-07-12 14:56:23',NULL,NULL),
 (786,'L2','5b4329108baaa9ab6080bce362995075','SAKTHIVEL B','','2024-07-12 14:56:23',NULL,NULL),
 (787,'L3','7200b38706a1c9c19fe693f048b3dcdc','GUHAN.L','','2024-07-12 14:56:23',NULL,NULL),
 (788,'L4','c72bfcbfc3f11b50a35d1b384ed79ca9','TARUN J','','2024-07-12 14:56:23',NULL,NULL),
 (789,'L5','64dea3c17f14784c6edaee4efbce4b46','Sharan','','2024-07-12 14:56:23',NULL,NULL),
 (790,'L6','59a4a3871c58a35f4bd0b40fe1152ae0','Akash k','','2024-07-12 14:56:23',NULL,NULL),
 (791,'L7','47536d338bbe12ff77bc3719faf4eeaa','Kathirvel.G','','2024-07-12 14:56:23',NULL,NULL),
 (792,'L8','146f5caac39d8f7f8c4b042a3aee36d9','LIBICA P','','2024-07-12 14:56:23',NULL,NULL),
 (793,'L9','432094be85d8f7465a9e4ae5a01969e8','Latesh S','','2024-07-12 14:56:23',NULL,NULL),
 (794,'L10','c269c04b6e3c2f6174923ed402ed6d38','Abinaya. A','','2024-07-12 14:56:23',NULL,NULL),
 (795,'L11','419d62ba7f2049f43b4a41e7a88c3832','Gopi M','','2024-07-12 14:56:23',NULL,NULL),
 (796,'L12','8d1154d4809b3b15ed79d842265bb000','Jeevitha. B','','2024-07-12 14:56:23',NULL,NULL),
 (797,'L13','19a60c0d0a561138e5cfd083b4274a4d','S.L.NITEESH','','2024-07-12 14:56:23',NULL,NULL),
 (798,'L14','66339d145f6059e544d2873941b3d1c4','Srivarman.V','','2024-07-12 14:56:23',NULL,NULL),
 (799,'L15','474b2077637a01f286dc253875f6f6e0','Rithika. S','','2024-07-12 14:56:23',NULL,NULL),
 (800,'L16','0948de1a97fb74cbe2006177d1df3356','Srimathi P','','2024-07-12 14:56:23',NULL,NULL),
 (801,'L17','1357794eef850e848b89705a4bd58ff7','R.Ashok Kumar','','2024-07-12 14:56:23',NULL,NULL),
 (802,'L18','ace90b6dc84950c21261dc7f285cc1f4','M.Thrisha','','2024-07-12 14:56:23',NULL,NULL),
 (803,'L19','0306089d5785a567aa4887d1ab90be76','Nithya shree R','','2024-07-12 14:56:23',NULL,NULL),
 (804,'L20','aef025b44372702c1a85a486fa8dd796','D.M.ROSHINI','','2024-07-12 14:56:23',NULL,NULL),
 (805,'L21','df62ca787b6a51b766b08fe43d391d6c','B. Mohit Sharma','','2024-07-12 14:56:23',NULL,NULL),
 (806,'L22','65180ad7698e1920d9774c6c758ff431','VIGNESH L','','2024-07-12 14:56:23',NULL,NULL),
 (807,'L23','d0d9d94a82635a4fd29dacea2c61d0d0','G.swetha','','2024-07-12 14:56:23',NULL,NULL),
 (808,'L24','fba7693310422f9bda43b71618de2c0b','S.Yuvashri','','2024-07-12 14:56:23',NULL,NULL),
 (809,'L25','1dc2d3cba6f09210562ffdfa0ee436ef','Madhan R','','2024-07-12 14:56:23',NULL,NULL),
 (810,'L26','d21b576f4c8d4d7ef32213e17c9f0f44','BALAJI. S','','2024-07-12 14:56:23',NULL,NULL),
 (811,'L27','2a8fe1e7d4a6d4192fff00027abf9b38','VIJAY S','','2024-07-12 14:56:23',NULL,NULL),
 (812,'L28','851ae753e3cb8fed9fb481b64d83a093','G.Amar nath','','2024-07-12 14:56:23',NULL,NULL),
 (813,'L29','5141db3acb51f500018906b1f5b7a4c0','V.Vignesh','','2024-07-12 14:56:23',NULL,NULL),
 (814,'L30','6ad1c3e82e7da83f10df9e8bc26a4b84','C D BASKAR','','2024-07-12 14:56:23',NULL,NULL),
 (815,'L31','342828c1cf48ce68c003a14900021132','Harish B','','2024-07-12 14:56:23',NULL,NULL),
 (816,'L32','4cda1d18c0409c29d1cb2a241d8ab827','HariPrasaad R K','','2024-07-12 14:56:23',NULL,NULL),
 (817,'L33','c1ac6fa4c1644b60f45ea386f3409442','Harish Narayan. S','','2024-07-12 14:56:23',NULL,NULL),
 (818,'L34','f64524bf1990a95a8f91f70bbca86468','Ilakkiya.B','','2024-07-12 14:56:23',NULL,NULL),
 (819,'L35','e4477bd852debd5aae38591eab6bb48f','Madhavan','','2024-07-12 14:56:23',NULL,NULL),
 (820,'L36','7f52ebc31f9aaf0f933799f6ef337dcb','RAVI PRAKASH M','','2024-07-12 14:56:23',NULL,NULL),
 (821,'L37','cb5e246b359764c71dabe6611d438fc8','Asish Kamalnath G','','2024-07-12 14:56:23',NULL,NULL),
 (822,'L38','f8de75d5cfafe66c6f42bcc9567c86fb','KEVIN JOSHUA','','2024-07-12 14:56:23',NULL,NULL),
 (823,'L39','1d534ae059f18200da33e2a5f67275f7','T SANTHOSH','','2024-07-12 14:56:23',NULL,NULL),
 (824,'L40','61ab4375dced27a46e74be9cb2a67caa','Monisha','','2024-07-12 14:56:23',NULL,NULL),
 (825,'L41','e161a67d4831560978e85826a3c503ad','Bala murali.P','','2024-07-12 14:56:23',NULL,NULL),
 (826,'L42','8da386d437d8f9d77100915211a709c9','Hiteshgourd','','2024-07-12 14:56:23',NULL,NULL),
 (827,'L43','b5f6374db247f5946444321f9686d216','Shree Balaji','','2024-07-12 14:56:23',NULL,NULL),
 (828,'L44','bd89a7e62c540a05a61332319c589ed2','Deepak S','','2024-07-12 14:56:23',NULL,NULL),
 (829,'L45','1a18c0131bf3f8527380068b8497c506','Dharshini','','2024-07-12 14:56:23',NULL,NULL),
 (830,'L46','fcbb34085158483791b74243d5e7c2c5','Punitha','','2024-07-12 14:56:23',NULL,NULL),
 (831,'L47','5e1102ecd8f7e852cd33b9f251a9f930','Maalavika','','2024-07-12 14:56:23',NULL,NULL),
 (832,'L48','c71cd0f002f8e2f979b9d7d6039cb7c2','Pavan Kumar','','2024-07-12 14:56:23',NULL,NULL),
 (833,'L49','00e10683154274f852eafe114ffdd5d3','Anadhakrishnan','','2024-07-12 14:56:23',NULL,NULL),
 (834,'L50','d8e878d4f66d0c8611e84cfd409ca247','Barath kumar.K','','2024-07-12 14:56:23',NULL,NULL),
 (835,'L51','462f1d653ba877edc5168741b0c30e9c','Srivarshan.B','','2024-07-12 14:56:23',NULL,NULL),
 (836,'L52','e6340fb871cd76e26a8ec71bf1d14a5b','Sivakishore A.S','','2024-07-12 14:56:23',NULL,NULL),
 (837,'L53','97d1c8292a27b67e5b424bf23633874e','ESHWAR R S','','2024-07-12 14:56:23',NULL,NULL),
 (838,'L54','c453246dc559811f059729bd9b273033','Hari haran.V','','2024-07-12 14:56:23',NULL,NULL),
 (839,'L55','230f76e2860232d48fe1404c49b5cfd8','Asha ayyanar','','2024-07-12 14:56:23',NULL,NULL),
 (840,'L56','2c070e073fc8d69e5c46d4330a81750e','Devadharshini.G','','2024-07-12 14:56:23',NULL,NULL),
 (841,'L57','73291a3bd6de084d6014dccae48ab8ec','S. ANANTHI','','2024-07-12 14:56:23',NULL,NULL),
 (842,'L58','64125a156b51ed6bcf7f1a66a85d6889','Janani Gr','','2024-07-12 14:56:23',NULL,NULL),
 (843,'L59','5dcdda7e0c6621ff1869d47ca7171716','R.Yuvanshankaran','','2024-07-12 14:56:23',NULL,NULL),
 (844,'L60','de7ff92e8b2febaa153abc5513719c5f','Vinoth.S','','2024-07-12 14:56:23',NULL,NULL),
 (845,'M1','d3a8f27db9a415ad30804cf3de960ebb','TRIBUVAN G R','','2024-07-12 14:56:23',NULL,NULL),
 (846,'M2','f5b44b27ad2bece86d6f5349aa8b4ca5','J MONICA','','2024-07-12 14:56:23',NULL,NULL),
 (847,'M3','099ab1e192a352c58bf22c7e222f8b0d','J JAYAKANTH','','2024-07-12 14:56:23',NULL,NULL),
 (848,'M4','190e21434ee7bc2ba6782584059e0aa0','Ashwin K','','2024-07-12 14:56:23',NULL,NULL),
 (849,'M5','f2f92d5df1776cb42646ebaa6b246e54','PRAVEEN R','','2024-07-12 14:56:23',NULL,NULL),
 (850,'M6','81365a6a6d6b2ccaa50af0d9d6a782dd','Sumeesha T','','2024-07-12 14:56:23',NULL,NULL),
 (851,'M7','ccfe26118c82689ebb9434a6019ae005','Mohanapriya.V','','2024-07-12 14:56:23',NULL,NULL),
 (852,'M8','77fc9d5af05a6f4c1acb2338b0899c3c','Yuvashree','','2024-07-12 14:56:23',NULL,NULL),
 (853,'M9','721a5c43671883b24378bcad709997ed','Kaviya DC','','2024-07-12 14:56:23',NULL,NULL),
 (854,'M10','6af639902c643bf9107afec93b5a7094','Kalyan Kumar .v','','2024-07-12 14:56:23',NULL,NULL),
 (855,'M11','fdcc929829fe8fbdec50ca1f6280d9a4','NIRANJAN PRASAAD RG','','2024-07-12 14:56:23',NULL,NULL),
 (856,'M12','dda7584d8fd6e8b5a23c7fabae644218','Srinath S','','2024-07-12 14:56:23',NULL,NULL),
 (857,'M13','4637a1881cd754eacc483e410b014487','Akalya','','2024-07-12 14:56:23',NULL,NULL),
 (858,'M14','d8dc7125adbaa100cc093ed4589b7601','Monica.S','','2024-07-12 14:56:23',NULL,NULL),
 (859,'M15','392e1940ecd3f28c7bdb33ad7cfa1de5','Aravind B','','2024-07-12 14:56:23',NULL,NULL),
 (860,'M16','2b1a3ca3bd9a5bb0bc8326ce157df4a2','Raahulraj S','','2024-07-12 14:56:23',NULL,NULL),
 (861,'M17','073a8ec7dfe5fe7a1d475ff45e7f3b67','Mohamad Arshath','','2024-07-12 14:56:23',NULL,NULL),
 (862,'M18','71a38132880a0a9b49e801bd511dca15','Neroshan','','2024-07-12 14:56:23',NULL,NULL),
 (863,'M19','f6ffaf7ad21a339c9b5625093ef4e937','KIRTHIKA S','','2024-07-12 14:56:23',NULL,NULL),
 (864,'M20','0af317235d0edd1cd87ee4316ca3bc6a','S.SURASH KUMAR','','2024-07-12 14:56:23',NULL,NULL),
 (865,'M21','faa30884b53428a2337b31c4de685dec','Akash selvan K','','2024-07-12 14:56:23',NULL,NULL),
 (866,'M22','d89e1e50236f84581cfbd210439e6af7','Vinoth.R','','2024-07-12 14:56:23',NULL,NULL),
 (867,'M23','2458ef6831c6fcc9714a06a98766332f','M.Srivardan','','2024-07-12 14:56:23',NULL,NULL),
 (868,'M24','05b131e3964cd0f8676e40ce0f2cf6f6','Sankhesh Jain','','2024-07-12 14:56:23',NULL,NULL),
 (869,'M25','0874386808d288f7991c0131adf113b3','Grandhi Abhinav Gupta','','2024-07-12 14:56:23',NULL,NULL),
 (870,'M26','621d707b658958c6cee3959e6b1326e7','srinithy','','2024-07-12 14:56:23',NULL,NULL),
 (871,'M27','0850afcaeedf9f9168bbcc32bfad731e','K.kishore giri','','2024-07-12 14:56:23',NULL,NULL),
 (872,'M28','a474c2b7796b59d384a53d9ba0059a1e','K.Gayathri','','2024-07-12 14:56:23',NULL,NULL),
 (873,'M29','86444f7193ded034b09bba1a9bf6a023','R. Siddharth','','2024-07-12 14:56:23',NULL,NULL),
 (874,'M30','e10333dea51949a40139be240a5cbb27','Vishal.E','','2024-07-12 14:56:23',NULL,NULL),
 (875,'M31','fec5115f31c6b6076ade3fe6bc853eb0','D.Manav kothari','','2024-07-12 14:56:23',NULL,NULL),
 (876,'M32','fedd4c5dc015d5feaa6a106b878df2ad','Jinish S Jain','','2024-07-12 14:56:23',NULL,NULL),
 (877,'M33','8ea6fe4e0892d590b25640ff718dc3ff','NARESH KUMAR','','2024-07-12 14:56:23',NULL,NULL),
 (878,'M34','9ba45340532fbacaaabcb2450d5c229c','Dhanush Suriya. L','','2024-07-12 14:56:23',NULL,NULL),
 (879,'M35','28a3b974f77f16bd92d22783a3cb37eb','Anush chandak','','2024-07-12 14:56:23',NULL,NULL),
 (880,'M36','58490899460bd9b8151e6a15e8929193','Darsh R Bafna','','2024-07-12 14:56:23',NULL,NULL),
 (881,'M37','c60e521794742f9f3ca2429d2f0f6998','Tilak Sharma','','2024-07-12 14:56:23',NULL,NULL),
 (882,'M38','712275b5f057b633ee03b8ab3cfff6e9','Mugesh kumar K.R','','2024-07-12 14:56:23',NULL,NULL),
 (883,'M39','89323f2d31c70da2db940bee235aa836','Harsith s','','2024-07-12 14:56:23',NULL,NULL),
 (884,'M40','bc9d49aef881e28c5f9b0cd4b2a3c1f9','Bharath S','','2024-07-12 14:56:23',NULL,NULL),
 (885,'M41','b498336893e6f6dce0cf0b55e327c158','N.S.Reshwan lal','','2024-07-12 14:56:23',NULL,NULL),
 (886,'M42','e6cf0b7e335a5d72761206aa1515074a','B.Rahul','','2024-07-12 14:56:23',NULL,NULL),
 (887,'M43','5080fd517ba16a60c1190dd62b52958f','Sunita Baug. S','','2024-07-12 14:56:23',NULL,NULL),
 (888,'M44','911561c64409abb442a145698d60af3a','Prishna S','','2024-07-12 14:56:23',NULL,NULL),
 (889,'M45','860536e67a1d247dbec3e1e214c1d8e0','Sanath Mahendra Pujari','','2024-07-12 14:56:23',NULL,NULL),
 (890,'M46','84e1f54309ab9ecd74c62ecf37305c38','Baranidharan.s','','2024-07-12 14:56:23',NULL,NULL),
 (891,'M47','38db2b823554e5dbf0aa667ac8961779','D.Vijay','','2024-07-12 14:56:23',NULL,NULL),
 (892,'M48','e34bcf4db01a54caab3fe92f1e1c7e8a','Lingeshwaran .T','','2024-07-12 14:56:23',NULL,NULL),
 (893,'M49','dc7bc6117c94a3931b193319dcaf3b32','Oviya S','','2024-07-12 14:56:23',NULL,NULL),
 (894,'M50','35ac8fd1621ecb5cf88780dbb3f457ca','Kumaresan P','','2024-07-12 14:56:23',NULL,NULL),
 (895,'M51','566ee4800b4b7acad0af63b328b037a1','Srinivasan. B','','2024-07-12 14:56:23',NULL,NULL),
 (896,'M52','1c2a076560091275fb68f86d11180524','Kamesh.v','','2024-07-12 14:56:23',NULL,NULL),
 (897,'M53','303c5c560448092c2c5f9a2171f15914','Mithun kumar','','2024-07-12 14:56:23',NULL,NULL),
 (898,'M54','d2bdf3a66ef0c94d9ebbde2ca1cc8117','viyanka','','2024-07-12 14:56:23',NULL,NULL),
 (899,'M55','7688b60b67280d89b3024ec4accb6b92','manu prasad','','2024-07-12 14:56:23',NULL,NULL),
 (900,'M56','435089f6780aabc30b3492fecd09d572','Parathick','','2024-07-12 14:56:23',NULL,NULL),
 (901,'M57','5e61dfc4d7a7e47f993fd91173bc215a','Rahul kamesh','','2024-07-12 14:56:23',NULL,NULL),
 (902,'M58','a3dc06d06cf7b2bbb7c83d793ca5c4fb','Praveen Kumar R','','2024-07-12 14:56:23',NULL,NULL),
 (903,'M59','e74110c67e3f6ee56ccbf153aefb95be','Sangeetha.C','','2024-07-12 14:56:23',NULL,NULL),
 (904,'M60','734122a8333bb69429597d75eab6a0c0','R. Swetha','','2024-07-12 14:56:23',NULL,NULL),
 (905,'M61','1048b207b759e832e28f403ad42b8625','Nandhini. V','','2024-07-12 14:56:23',NULL,NULL),
 (906,'M62','71d4fd9682fca982a564f57ddcd8fa1c','D.Harini','','2024-07-12 14:56:23',NULL,NULL),
 (907,'N1','201f1e3d6af6b3785375d8d311cbb414','VS Tarun','','2024-07-12 14:56:23',NULL,NULL),
 (908,'N2','75afca7825447118acb5fa9092e27f77','Sanjay Kumar.S','','2024-07-12 14:56:23',NULL,NULL),
 (909,'N3','2d49b94fe6cc64b44bba402b7c10235a','PAVAN PRASAD V','','2024-07-12 14:56:23',NULL,NULL),
 (910,'N4','73a36e63bcd4438b5198ee59f5a07604','ROHITH.M','','2024-07-12 14:56:23',NULL,NULL),
 (911,'N5','3ef9218af91416a04eeb523fadf1a518','P Madhavan','','2024-07-12 14:56:23',NULL,NULL),
 (912,'N6','f7f91d391ae39c029300f49ae48f3298','Avinas','','2024-07-12 14:56:23',NULL,NULL),
 (913,'N7','dbdfa7c9a257bf6975bc28a1cb4c1f35','Dayanesh','','2024-07-12 14:56:23',NULL,NULL),
 (914,'N8','6c6f227dcb4b8f7e307c54cffc793284','S.NITESH JAIN','','2024-07-12 14:56:23',NULL,NULL),
 (915,'N9','6a4d578810be62ad7cc6bff237c4529a','K.S.PURUSHOTHAM','','2024-07-12 14:56:23',NULL,NULL),
 (916,'N10','5904d53a92614a5507822ff2f0bb24b5','Priyadharshini.R','','2024-07-12 14:56:23',NULL,NULL),
 (917,'N11','6d9b6cde00c108cca6d1857f3a71604e','Siddarth.R','','2024-07-12 14:56:23',NULL,NULL),
 (918,'N12','64a0f2f43131a6bd5c6144ac80e7b787','JAI KARTHIK PG','','2024-07-12 14:56:23',NULL,NULL),
 (919,'N13','541e8655a7d9ea642535a3193b38eff1','R GOWTHAM','','2024-07-12 14:56:23',NULL,NULL),
 (920,'N14','d1741eecd3f0c53d29518f1732727c9f','Deepthy. N','','2024-07-12 14:56:23',NULL,NULL),
 (921,'N15','3bf104fc55892c60fa0531a01e4ebe94','Adithya Amrutrao Gaikwad','','2024-07-12 14:56:23',NULL,NULL),
 (922,'N16','a11303f3e804fe6950ff8c994cd1ac2f','S Kethan Rao','','2024-07-12 14:56:23',NULL,NULL),
 (923,'N17','40c56b7da2200759ac5c749fa26a087e','Prakash Kumar C','','2024-07-12 14:56:23',NULL,NULL),
 (924,'N18','1b40f59a7d10195fff101ea0f75f8f03','M Vishal','','2024-07-12 14:56:23',NULL,NULL),
 (925,'N19','0c5f7359bb8715cc2c46201cfed6ad9b','Siva Kumar S','','2024-07-12 14:56:23',NULL,NULL),
 (926,'N20','ce1b4b028e83edc8cc77158bf95309b4','Lalith Kumar M','','2024-07-12 14:56:23',NULL,NULL),
 (927,'N21','8d7c5587c2daebef89e2f4cb40de3b83','Advaith','','2024-07-12 14:56:23',NULL,NULL),
 (928,'N22','31b78a4068a9314b4c05f5fa477ebf3c','R Harish Ragavendar','','2024-07-12 14:56:23',NULL,NULL),
 (929,'N23','fe46ea669c92dc4ca26ef8ecef64901c','Deepak Muralidharan','','2024-07-12 14:56:23',NULL,NULL),
 (930,'N24','67fa0cad3cb2a08d411809b779225446','Janani.S','','2024-07-12 14:56:23',NULL,NULL),
 (931,'N25','e381cbd87d579428847e3b8170282879','Harini.S','','2024-07-12 14:56:23',NULL,NULL),
 (932,'N26','baba47270c25e874ab7067fa5284da80','Jayashree. R','','2024-07-12 14:56:23',NULL,NULL),
 (933,'N27','6f4b8dff9d4a3c9584df52df311b357e','Sridevi. A','','2024-07-12 14:56:23',NULL,NULL),
 (934,'N28','9c1604c2a61f5c0a04827241dbec1238','Abhishek Mani','','2024-07-12 14:56:23',NULL,NULL),
 (935,'N29','83977194c4e11a87fe39cd3b79b484b9','Naresh Chowdry. S','','2024-07-12 14:56:23',NULL,NULL),
 (936,'N30','d998a9881214b79aa613e2bd438d075d','Vasanth Kumar S','','2024-07-12 14:56:23',NULL,NULL),
 (937,'N31','2a4844781b0af9361ef31ad1d98dd0b2','Firdus A','','2024-07-12 14:56:23',NULL,NULL),
 (938,'N32','ca56b8652e3ce0c04044b0abb6fd9350','Ayush singhi','','2024-07-12 14:56:23',NULL,NULL),
 (939,'N33','8a119d551e303712335ee331855c5d64','GOWTHAM P','','2024-07-12 14:56:23',NULL,NULL),
 (940,'N34','7ebff3bbba99ea44c103516332ec40ff','Gayathri S','','2024-07-12 14:56:23',NULL,NULL),
 (941,'N35','3c50af9371dd0e3f3a3830e7fe051c5d','Divyadharshini.s','','2024-07-12 14:56:23',NULL,NULL),
 (942,'N36','fab5916f701d5d464438c32bb638eacc','R ROHAN JOHN FREDRICK','','2024-07-12 14:56:23',NULL,NULL),
 (943,'N37','52d4146b6389214f9fd4c7932d83fd2e','John samvel P','','2024-07-12 14:56:23',NULL,NULL),
 (944,'N38','ee25d89d01d16aea08eb31d391813dda','S.HARI HARAN','','2024-07-12 14:56:23',NULL,NULL),
 (945,'N39','fc969769a637e3100ab6d4db98916dcc','M . Jasmitha','','2024-07-12 14:56:23',NULL,NULL),
 (946,'N40','e82d21c3693261d61dab7388cb676b8c','Suzanne Ameen','','2024-07-12 14:56:23',NULL,NULL),
 (947,'N41','3445530a382fe390189fab53a8732b03','Chris rock','','2024-07-12 14:56:23',NULL,NULL),
 (948,'N42','134daecefd8cb8c49d2d0ccdc6e2b3fb','Thilak babu.A','','2024-07-12 14:56:23',NULL,NULL),
 (949,'N43','1de17875ea41d02d709b4f0e15c3adb2','Saran v','','2024-07-12 14:56:23',NULL,NULL),
 (950,'N44','89b7b812a2926823bef407d7e081b6b5','SHRINIVAS N','','2024-07-12 14:56:23',NULL,NULL),
 (951,'N45','62f40baff0b3a59acdbfc7147b960187','Vignesh.M','','2024-07-12 14:56:23',NULL,NULL),
 (952,'N46','8b9102097c971d216331d167fbbadff5','Aswath s','','2024-07-12 14:56:23',NULL,NULL),
 (953,'N47','b8fd6cf72918e7c99977f81e4610e2e5','L.kinjal','','2024-07-12 14:56:23',NULL,NULL),
 (954,'N48','3d4b428be69c71e55f4155d846a741b1','P.Harsh','','2024-07-12 14:56:23',NULL,NULL),
 (955,'N49','c5b7c1a30f705f568be2751da5bb966a','Akshay V Harihara','','2024-07-12 14:56:23',NULL,NULL),
 (956,'N50','77f5b89a13d741846c7300ab8ca7ac6e','Ritish Kumar','','2024-07-12 14:56:23',NULL,NULL),
 (957,'N51','f37269e1c3ca4a860fc11ab55b748d5f','Elanthiraiyan.T','','2024-07-12 14:56:23',NULL,NULL),
 (958,'N52','a1fcb6d5ff67ef4c07e73024cc947320','Sujitha S','','2024-07-12 14:56:23',NULL,NULL),
 (959,'N53','72bd42915b37898cff2b5427111c4c6f','Vaishnavi S','','2024-07-12 14:56:23',NULL,NULL),
 (960,'N54','0164228360e226a63c2b43d08309058d','Jai Vishnu','','2024-07-12 14:56:23',NULL,NULL),
 (961,'N55','5bdcbbe4f8371b0492d22d2c45905118','Snega C','','2024-07-12 14:56:23',NULL,NULL),
 (962,'N56','abac6b793c1a2c058ad8eb028c48932f','Dharshitha V','','2024-07-12 14:56:23',NULL,NULL),
 (963,'N57','6acf491f8f78594d6548af893967bb8a','Siva Sarvesh','','2024-07-12 14:56:23',NULL,NULL),
 (964,'N58','fbb26b5d3ecf437580f6100b05a3da64','Monisha R','','2024-07-12 14:56:23',NULL,NULL),
 (965,'N59','5d2fcf699ef57655c140f2d05741ae4e','Shreenath B','','2024-07-12 14:56:23',NULL,NULL),
 (966,'N60','0962da37be6328a1dddecd70a752842b','Srijayanth P','','2024-07-12 14:56:23',NULL,NULL),
 (967,'N61','56160504f2db274654123954ecb8bea6','Vishwa Renganathan','','2024-07-12 14:56:23',NULL,NULL),
 (968,'N62','5b9941e237dc07434e67dcc81e389732','Vishva R','','2024-07-12 14:56:23',NULL,NULL),
 (969,'Q1','ac28d15a717749c213047431532ad06e','Uma Kathirvel','','2024-07-12 14:56:23',NULL,NULL),
 (970,'Q2','184981f688bf5b71337d4946bfc7c226','Pavithra R','','2024-07-12 14:56:23',NULL,NULL),
 (971,'Q3','4ed49775abc8353a1712bb3393dd98eb','Maadesh Kumar','','2024-07-12 14:56:23',NULL,NULL),
 (972,'Q4','6417f4ef8f500d0b5f9bb2871c890fbf','Varsha Mishra','','2024-07-12 14:56:23',NULL,NULL),
 (973,'Q5','88b270f42d41dbcdaf9c976b2ff4c826','Rohit Sharma','','2024-07-12 14:56:23',NULL,NULL),
 (974,'Q6','7485591cac504cfddfdb4d2722c8b1c2','Sakthi umadevi.B','','2024-07-12 14:56:23',NULL,NULL),
 (975,'Q7','46e39d3a4c6694ab5d186ccef514e7a3','Karishma Saini','','2024-07-12 14:56:23',NULL,NULL),
 (976,'Q8','3bc6918b2c03d8d18195fb17a762956b','S Krishna Kumar','','2024-07-12 14:56:23',NULL,NULL),
 (977,'Q9','c32a242015d74ce3f2361c7565294fc1','MURUGANANDAN.N.B','','2024-07-12 14:56:23',NULL,NULL),
 (978,'Q10','f50831bdad73e45a9412a9e8f378c139','Sangeethraj Hopper. S','','2024-07-12 14:56:23',NULL,NULL),
 (979,'Q11','0077585db1c8d33665e1561ff7b5e628','Santhosh Kumar.c','','2024-07-12 14:56:23',NULL,NULL),
 (980,'Q12','8ed42183f08e1c1fab38a874fc5bbe6d','Monisha. D','','2024-07-12 14:56:23',NULL,NULL),
 (981,'Q13','3dc57d233cf43682d6e87ccdf09ed81a','BHAVANA K','','2024-07-12 14:56:23',NULL,NULL),
 (982,'Q14','27d67972188165990f507cdce568c7f5','Akash prem B','','2024-07-12 14:56:23',NULL,NULL),
 (983,'Q15','78b60d64faf20032a1bb14f150367cbb','Lakshimi S','','2024-07-12 14:56:23',NULL,NULL),
 (984,'Q16','96dc8c50e31dbe38cb4df27af7fcbb6d','Abinaya P','','2024-07-12 14:56:23',NULL,NULL),
 (985,'Q17','e6ec8a1f4b242b7705aa75baa7534f0e','Govardhini.K.M','','2024-07-12 14:56:23',NULL,NULL),
 (986,'Q18','969a85d0802cd20c9dc3a447d521e33b','Mahakarthick k','','2024-07-12 14:56:23',NULL,NULL),
 (987,'Q19','6aa748fc7e513f6a1d70aa44eb4b33dc','Sushmitha M','','2024-07-12 14:56:23',NULL,NULL),
 (988,'Q20','97ccc6b792acb9dc233e935ffe755c15','Manjula L','','2024-07-12 14:56:23',NULL,NULL),
 (989,'Q21','1f0924249a7f58ff74adb5b0143c65b7','Kanthana K D','','2024-07-12 14:56:23',NULL,NULL),
 (990,'Q22','3c0e41c984fd196edd4cf03c252ba764','S SNEHA','','2024-07-12 14:56:23',NULL,NULL),
 (991,'Q23','c88674eff15454339cafb43613711352','Ashrutha Sharadha S','','2024-07-12 14:56:23',NULL,NULL),
 (992,'Q24','1ad12c3a86670271fbb89baa8335e739','Kaviya K','','2024-07-12 14:56:23',NULL,NULL),
 (993,'Q25','44657d22212dae2a1b0c005b2fc08d15','N.SANJAI','','2024-07-12 14:56:23',NULL,NULL),
 (994,'Q26','1b8003ae8123a136760db615227ccc41','Lokeshviswa M','','2024-07-12 14:56:23',NULL,NULL),
 (995,'Q27','d2bf8c3f19e7e0a5c7e68746d4dd99e5','ABIRAMI RAMANATHAN','','2024-07-12 14:56:23',NULL,NULL),
 (996,'Q28','e316a01d1277bac7fd328429aa9a2560','Pavithra.M','','2024-07-12 14:56:23',NULL,NULL),
 (997,'Q29','18f623e7af37788064d6e12ebe964d72','Vibhu P','','2024-07-12 14:56:23',NULL,NULL),
 (998,'Q30','cf4f4c65e7f00b6f8653f69543decb67','Srinath M','','2024-07-12 14:56:23',NULL,NULL),
 (999,'Q31','68a5ec4ba70a6386896d59e8e7056d7f','Megalakshmi M','','2024-07-12 14:56:23',NULL,NULL),
 (1000,'Q32','a4b82c495776797cdb0ab922188feee8','Ramya Priya B.K','','2024-07-12 14:56:23',NULL,NULL),
 (1001,'Q33','25242963a4b47a1bdff3201848feea3f','Yamini P','','2024-07-12 14:56:23',NULL,NULL),
 (1002,'Q34','7381b81cf95047bb7cd332ba4716dadc','Priyanka R','','2024-07-12 14:56:23',NULL,NULL),
 (1003,'Q35','d4ce20c6e2a0d754a80122699b3e2ea1','Sukanya R','','2024-07-12 14:56:23',NULL,NULL),
 (1004,'Q36','ed9cb76da31280b16f94114d191f0895','Harihara sudhan.G','','2024-07-12 14:56:23',NULL,NULL),
 (1005,'Q37','4efd929dedc3c782c2ea7783bb53275c','Chandramouleeswaran B','','2024-07-12 14:56:23',NULL,NULL),
 (1006,'Q38','585a4f0a927d87cc1ee10d1319c56adb','Prerana bagri','','2024-07-12 14:56:23',NULL,NULL),
 (1007,'Q39','8a47f797460775497ba596a91e934f69','Aswin R','','2024-07-12 14:56:23',NULL,NULL),
 (1008,'Q40','a392edb6110d1bc8ce811925c93e5939','Keerthi sree hashni M','','2024-07-12 14:56:23',NULL,NULL),
 (1009,'Q41','aec8179499e147c8e32abff35160706d','Sakthivel V.J','','2024-07-12 14:56:23',NULL,NULL),
 (1010,'Q42','d71de1c52d7afb63b28caf1510668086','Amrithaa B','','2024-07-12 14:56:23',NULL,NULL),
 (1011,'Q43','e4d8bfe36c5bb080b270199f7f8d6051','Kishore M','','2024-07-12 14:56:23',NULL,NULL),
 (1012,'Q44','704b46673412b61272e2e5e1ce1f15bc','S.Priyadharshini','','2024-07-12 14:56:23',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;

--
-- Create schema aptonlineeight
--

CREATE DATABASE IF NOT EXISTS aptonlineeight;
USE aptonlineeight;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called findprime(), to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,2);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=401 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (2,1,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (3,1,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (4,1,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (5,1,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (6,2,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (7,2,'1 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (8,2,'2 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (9,2,'13',NULL,1,0,'',0,0,NULL,1,0,''),
 (10,2,'1 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'1time',NULL,1,0,'',0,0,NULL,1,0,''),
 (12,3,'Infinite times',NULL,0,0,'',0,0,NULL,1,0,''),
 (13,3,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (14,3,'Prints nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (15,3,'Execution error',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'1 1 1 1 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,4,'1 0 0 0 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (18,4,'1 followed by 4 Garbage values',NULL,1,0,'',0,0,NULL,1,0,''),
 (19,4,'All are Garbage values',NULL,0,0,'',0,0,NULL,1,0,''),
 (20,4,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,5,'Compile erro',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,5,'0 1 2 ... infinite times',NULL,0,0,'',0,0,NULL,1,0,''),
 (23,5,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (24,5,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (25,5,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (26,6,'Hi is printed 10 times, hello 7 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,6,'Hi is printed 8 times, hello 7 times and then hi 2 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (28,6,'Hi is printed once, hello 7 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (29,6,'Hi is printed once, hello 7 times and then hi 2 times',NULL,1,0,'',0,0,NULL,1,0,''),
 (30,6,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (31,7,'1 2 3 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,7,'1 1 2 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,7,'1 3 1 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (34,7,'Compile error',NULL,1,0,'',0,0,NULL,1,0,''),
 (35,7,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (36,8,'1 2 3 4 5 15',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,8,'2 3 4 5 6 16',NULL,0,0,'',0,0,NULL,1,0,''),
 (38,8,'1 2 3 4 5 16',NULL,0,0,'',0,0,NULL,1,0,''),
 (39,8,'2 3 4 5 6 17',NULL,1,0,'',0,0,NULL,1,0,''),
 (40,8,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,9,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (42,9,'Syntax error',NULL,0,0,'',0,0,NULL,1,0,''),
 (43,9,'Hello',NULL,1,0,'',0,0,NULL,1,0,''),
 (44,9,'10 times hello will be printed',NULL,0,0,'',0,0,NULL,1,0,''),
 (45,9,'None',NULL,0,0,'',0,0,NULL,1,0,''),
 (46,10,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (47,10,'Runtime error',NULL,0,0,'',0,0,NULL,1,0,''),
 (48,10,'Infinite times hello will be printed',NULL,0,0,'',0,0,NULL,1,0,''),
 (49,10,'prints nothing',NULL,1,0,'',0,0,NULL,1,0,''),
 (50,10,'Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (51,11,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (52,11,'prints nothing',NULL,1,0,'',0,0,NULL,1,0,''),
 (53,11,'Infinite',NULL,0,0,'',0,0,NULL,1,0,''),
 (54,11,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (55,11,'None',NULL,0,0,'',0,0,NULL,1,0,''),
 (56,12,'Hello will be printed one time',NULL,0,0,'',0,0,NULL,1,0,''),
 (57,12,'Hello will be printed infinite times',NULL,0,0,'',0,0,NULL,1,0,''),
 (58,12,'Compile Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (59,12,'Prints nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (60,12,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (61,13,'2 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,13,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (63,13,'2 4 6',NULL,1,0,'',0,0,NULL,1,0,''),
 (64,13,'Program never ends',NULL,0,0,'',0,0,NULL,1,0,''),
 (65,13,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (66,14,'8 5 2',NULL,1,0,'',0,0,NULL,1,0,''),
 (67,14,'7 4 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (68,14,'6 3 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (69,14,'3 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,14,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,15,'0 1 2 3 4 5 6 7 8 9',NULL,0,0,'',0,0,NULL,1,0,''),
 (72,15,'C for loop0 1 2 3 4 5 6 7 8 9 a',NULL,1,0,'',0,0,NULL,1,0,''),
 (73,15,'0 1 2 3 4 5 6 7 8 9 a',NULL,0,0,'',0,0,NULL,1,0,''),
 (74,15,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (75,15,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (76,16,'1 3 5',NULL,0,0,'',0,0,NULL,1,0,''),
 (77,16,'1 2 3 4 5',NULL,0,0,'',0,0,NULL,1,0,''),
 (78,16,'1 3',NULL,1,0,'',0,0,NULL,1,0,''),
 (79,16,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (80,16,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (81,17,'Infinite Loop',NULL,1,0,'',0,0,NULL,1,0,''),
 (82,17,'inside loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (83,17,'inside loop inside loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (84,17,'Compilation Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (85,17,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (86,18,'Prints Nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (87,18,'Loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (88,18,'Loop Loop Loop Loop Loop',NULL,1,0,'',0,0,NULL,1,0,''),
 (89,18,'Compilation Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (90,18,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (91,19,'Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (92,19,'Hello Hello Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,19,'Compiler Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (94,19,'Infinite Loop',NULL,1,0,'',0,0,NULL,1,0,''),
 (95,19,'Hello Hello Hello Hello Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,20,'1 2 3 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (97,20,'1 1 2 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (98,20,'2 1 3 0',NULL,1,0,'',0,0,NULL,1,0,''),
 (99,20,'0 1 2 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (100,20,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (101,21,'gramming',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,21,'gramm',NULL,0,0,'',0,0,NULL,1,0,''),
 (103,21,'mming',NULL,1,0,'',0,0,NULL,1,0,''),
 (104,21,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (105,21,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (106,22,'hi',NULL,0,0,'',0,0,NULL,1,0,''),
 (107,22,'hi will be printed recursively',NULL,0,0,'',0,0,NULL,1,0,''),
 (108,22,'Compile Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (109,22,'Prints nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (110,22,'Garbage value',NULL,0,0,'',0,0,NULL,1,0,''),
 (111,23,'11 11',NULL,0,0,'',0,0,NULL,1,0,''),
 (112,23,'11 12',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,23,'12 11',NULL,1,0,'',0,0,NULL,1,0,''),
 (114,23,'12 12',NULL,0,0,'',0,0,NULL,1,0,''),
 (115,23,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (116,24,'Progr',NULL,0,0,'',0,0,NULL,1,0,''),
 (117,24,'Progra',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,24,'aaaaa',NULL,0,0,'',0,0,NULL,1,0,''),
 (119,24,'rrrrr',NULL,0,0,'',0,0,NULL,1,0,''),
 (120,24,'None of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (121,25,'String is a new Data Type in C',NULL,0,0,'',0,0,NULL,1,0,''),
 (122,25,'String is an array of Characters with null character as the last element of array.',NULL,1,0,'',0,0,NULL,1,0,''),
 (123,25,'String is an array of Characters with null character as the first element of array',NULL,0,0,'',0,0,NULL,1,0,''),
 (124,25,'String is an array of Integers with 0 as the last element of array.',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,25,'All the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (126,26,'Character array, ary is a string.',NULL,1,0,'',0,0,NULL,1,0,''),
 (127,26,'ary has no Null character at the end',NULL,0,0,'',0,0,NULL,1,0,''),
 (128,26,'String size is not mentioned',NULL,0,0,'',0,0,NULL,1,0,''),
 (129,26,'String can not contain special characters.',NULL,0,0,'',0,0,NULL,1,0,''),
 (130,26,'All the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,27,'D',NULL,0,0,'',0,0,NULL,1,0,''),
 (132,27,'Discovery Channel',NULL,1,0,'',0,0,NULL,1,0,''),
 (133,27,'Discovery',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,27,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (135,27,'Channel',NULL,0,0,'',0,0,NULL,1,0,''),
 (136,28,'g',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,28,'globe',NULL,0,0,'',0,0,NULL,1,0,''),
 (138,28,'globe\\\\0',NULL,0,0,'',0,0,NULL,1,0,''),
 (139,28,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (140,28,'None of the above',NULL,1,0,'',0,0,NULL,1,0,''),
 (141,29,'str[5] = 0;',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,29,'str[5] = \'\\\\0\'',NULL,0,0,'',0,0,NULL,1,0,''),
 (143,29,'str[]={\'g\',\'l\',\'o\',\'b\',\'y\',\'\\\\0\'};',NULL,0,0,'',0,0,NULL,1,0,''),
 (144,29,'All the above',NULL,1,0,'',0,0,NULL,1,0,''),
 (145,29,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,30,'A A A',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,30,'A Ag Ag',NULL,0,0,'',0,0,NULL,1,0,''),
 (148,30,'A*randomchar* Ag Ag',NULL,1,0,'',0,0,NULL,1,0,''),
 (149,30,'Ag Ag',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,30,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (151,31,'32 characters',NULL,0,0,'',0,0,NULL,1,0,''),
 (152,31,'64 characters',NULL,0,0,'',0,0,NULL,1,0,''),
 (153,31,'256 characters',NULL,0,0,'',0,0,NULL,1,0,''),
 (154,31,'16 characters',NULL,0,0,'',0,0,NULL,1,0,''),
 (155,31,'None of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (156,32,'strnstr()',NULL,0,0,'',0,0,NULL,1,0,''),
 (157,32,'laststr()',NULL,0,0,'',0,0,NULL,1,0,''),
 (158,32,'strrchr()',NULL,1,0,'',0,0,NULL,1,0,''),
 (159,32,'strstr()',NULL,0,0,'',0,0,NULL,1,0,''),
 (160,32,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (161,33,'strrchr()',NULL,0,0,'',0,0,NULL,1,0,''),
 (162,33,'strchr()',NULL,0,0,'',0,0,NULL,1,0,''),
 (163,33,'strnset()',NULL,0,0,'',0,0,NULL,1,0,''),
 (164,33,'strstr()',NULL,1,0,'',0,0,NULL,1,0,''),
 (165,33,'strnstr()',NULL,0,0,'',0,0,NULL,1,0,''),
 (166,34,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (167,34,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (168,34,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (169,34,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (170,34,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (171,35,'The code converts a string in to an integer',NULL,0,0,'',0,0,NULL,1,0,''),
 (172,35,'The code converts lower case character to upper case',NULL,1,0,'',0,0,NULL,1,0,''),
 (173,35,'The code converts upper case character to lower case',NULL,0,0,'',0,0,NULL,1,0,''),
 (174,35,'Error in code',NULL,0,0,'',0,0,NULL,1,0,''),
 (175,35,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (176,36,'1,2',NULL,0,0,'',0,0,NULL,1,0,''),
 (177,36,'3,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (178,36,'1,3',NULL,0,0,'',0,0,NULL,1,0,''),
 (179,36,'2,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (180,36,'2,3,4',NULL,1,0,'',0,0,NULL,1,0,''),
 (181,37,'1,2',NULL,0,0,'',0,0,NULL,1,0,''),
 (182,37,'3,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (183,37,'1,3',NULL,0,0,'',0,0,NULL,1,0,''),
 (184,37,'1,2,3',NULL,1,0,'',0,0,NULL,1,0,''),
 (185,37,'2,3,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (186,38,'strcmp(s1, s2) returns a number less than 0 if s1>s2',NULL,0,0,'',0,0,NULL,1,0,''),
 (187,38,'strcmp(s1, s2) returns a number greater than 0 if s1<s2',NULL,0,0,'',0,0,NULL,1,0,''),
 (188,38,'strcmp(s1, s2) returns 0 if s1==s2',NULL,1,0,'',0,0,NULL,1,0,''),
 (189,38,'strcmp(s1, s2) returns 1 if s1==s2',NULL,0,0,'',0,0,NULL,1,0,''),
 (190,38,'All the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (191,39,'Run time error',NULL,0,0,'',0,0,NULL,1,0,''),
 (192,39,'Yes',NULL,1,0,'',0,0,NULL,1,0,''),
 (193,39,'No',NULL,0,0,'',0,0,NULL,1,0,''),
 (194,39,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (195,39,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (196,40,'Before memmove place= string1, src = string2 After memmove place = string2, src = string2',NULL,1,0,'',0,0,NULL,1,0,''),
 (197,40,'Before memmove place = string2, src = string2 After memmove place= string1, src = string2',NULL,0,0,'',0,0,NULL,1,0,''),
 (198,40,'Before memmove place = string2, src = string1 After memmove place= string2, src =string2',NULL,0,0,'',0,0,NULL,1,0,''),
 (199,40,'Before memmove place= string1, src = string2 After memmove place=string1, src = string1',NULL,0,0,'',0,0,NULL,1,0,''),
 (200,40,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (201,41,'Insertion sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (202,41,'Selection sort',NULL,1,0,'',0,0,NULL,1,0,''),
 (203,41,'Bubble sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (204,41,'Merge sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (205,41,'Heap sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (206,42,'Merge sort',NULL,1,0,'',0,0,NULL,1,0,''),
 (207,42,'Typical in-place quick sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (208,42,'Heap sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (209,42,'Selection sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (210,42,'Insertion sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (211,43,'Selection sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (212,43,'Heap sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (213,43,'Quick sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (214,43,'Merge sort',NULL,1,0,'',0,0,NULL,1,0,''),
 (215,43,'Insertion sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (216,44,'O(n)',NULL,0,0,'',0,0,NULL,1,0,''),
 (217,44,'O(nlogn)',NULL,1,0,'',0,0,NULL,1,0,''),
 (218,44,'O(n2)',NULL,0,0,'',0,0,NULL,1,0,''),
 (219,44,'O',NULL,0,0,'',0,0,NULL,1,0,''),
 (220,44,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (221,45,'&theta; (n)',NULL,1,0,'',0,0,NULL,1,0,''),
 (222,45,'&theta; (nlogn)',NULL,0,0,'',0,0,NULL,1,0,''),
 (223,45,'&theta; (n2)',NULL,0,0,'',0,0,NULL,1,0,''),
 (224,45,'&theta; (n( log n^2))',NULL,0,0,'',0,0,NULL,1,0,''),
 (225,45,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (226,46,'5 and 4',NULL,1,0,'',0,0,NULL,1,0,''),
 (227,46,'4 and 5',NULL,0,0,'',0,0,NULL,1,0,''),
 (228,46,'2 and 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (229,46,'2 and 5',NULL,0,0,'',0,0,NULL,1,0,''),
 (230,46,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (231,47,'N',NULL,0,0,'',0,0,NULL,1,0,''),
 (232,47,'N-1',NULL,1,0,'',0,0,NULL,1,0,''),
 (233,47,'N+1',NULL,0,0,'',0,0,NULL,1,0,''),
 (234,47,'N^2',NULL,0,0,'',0,0,NULL,1,0,''),
 (235,47,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (236,48,'Simple algorithm which require the order of n2 comparisons to sort n items.',NULL,0,0,'',0,0,NULL,1,0,''),
 (237,48,'Sophisticated algorithms that require the O(n log2 ^n) comparisons to sort items.',NULL,0,0,'',0,0,NULL,1,0,''),
 (238,48,'Both a and b',NULL,1,0,'',0,0,NULL,1,0,''),
 (239,48,'&theta;  (n^2)',NULL,0,0,'',0,0,NULL,1,0,''),
 (240,48,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (241,49,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (242,49,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (243,49,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (244,49,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (245,49,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (246,50,'False',NULL,0,0,'',0,0,NULL,1,0,''),
 (247,50,'True',NULL,1,0,'',0,0,NULL,1,0,''),
 (248,50,'Depends on list',NULL,0,0,'',0,0,NULL,1,0,''),
 (249,50,'Maybe',NULL,0,0,'',0,0,NULL,1,0,''),
 (250,50,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (251,51,'Selection Sort',NULL,1,0,'',0,0,NULL,1,0,''),
 (252,51,'Insertion Sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (253,51,'Bubble Sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (254,51,'Merge sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (255,51,'Heap sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (256,52,'Sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (257,52,'Swap',NULL,1,0,'',0,0,NULL,1,0,''),
 (258,52,'Both a and b',NULL,0,0,'',0,0,NULL,1,0,''),
 (259,52,'Heap',NULL,0,0,'',0,0,NULL,1,0,''),
 (260,52,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (261,53,'It is faster',NULL,0,0,'',0,0,NULL,1,0,''),
 (262,53,'Consumes less memory',NULL,0,0,'',0,0,NULL,1,0,''),
 (263,53,'Detects whether the input is already sorted',NULL,1,0,'',0,0,NULL,1,0,''),
 (264,53,'Consumes less time',NULL,0,0,'',0,0,NULL,1,0,''),
 (265,53,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (266,54,'4',NULL,1,0,'',0,0,NULL,1,0,''),
 (267,54,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (268,54,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (269,54,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (270,54,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (271,55,'It requires no additional storage space',NULL,1,0,'',0,0,NULL,1,0,''),
 (272,55,'It is scalable',NULL,0,0,'',0,0,NULL,1,0,''),
 (273,55,'It works best for inputs which are already sorted',NULL,0,0,'',0,0,NULL,1,0,''),
 (274,55,'It is faster than any other sorting technique',NULL,0,0,'',0,0,NULL,1,0,''),
 (275,55,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (276,56,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (277,56,'2',NULL,1,0,'',0,0,NULL,1,0,''),
 (278,56,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (279,56,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (280,56,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (281,57,'3,3',NULL,0,0,'',0,0,NULL,1,0,''),
 (282,57,'4,4',NULL,1,0,'',0,0,NULL,1,0,''),
 (283,57,'3,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (284,57,'4,3',NULL,0,0,'',0,0,NULL,1,0,''),
 (285,57,'5,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (286,58,'Heap sort',NULL,1,0,'',0,0,NULL,1,0,''),
 (287,58,'Quick sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (288,58,'Selection sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (289,58,'Insertion sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (290,58,'Merge sort',NULL,0,0,'',0,0,NULL,1,0,''),
 (291,59,'Binary tree sort and quick sort have same running time',NULL,0,0,'',0,0,NULL,1,0,''),
 (292,59,'Binary tree sort used BST as work area',NULL,0,0,'',0,0,NULL,1,0,''),
 (293,59,'As the number of elements to sort gets larger, binary tree sort gets more and more efficient',NULL,0,0,'',0,0,NULL,1,0,''),
 (294,59,'Both quick sort and binary tree are in place sorting algorithms',NULL,1,0,'',0,0,NULL,1,0,''),
 (295,59,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (296,60,'It requires auxiliary memory',NULL,0,0,'',0,0,NULL,1,0,''),
 (297,60,'It is not scalable',NULL,1,0,'',0,0,NULL,1,0,''),
 (298,60,'It can be used for small keys',NULL,0,0,'',0,0,NULL,1,0,''),
 (299,60,'It takes linear time to sort the elements',NULL,0,0,'',0,0,NULL,1,0,''),
 (300,60,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (301,61,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (302,61,'40',NULL,1,0,'',0,0,NULL,1,0,''),
 (303,61,'35',NULL,0,0,'',0,0,NULL,1,0,''),
 (304,61,'510',NULL,0,0,'',0,0,NULL,1,0,''),
 (305,61,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (306,62,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (307,62,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (308,62,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (309,62,'-1',NULL,0,0,'',0,0,NULL,1,0,''),
 (310,62,'Compile Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (311,63,'11 12 12',NULL,0,0,'',0,0,NULL,1,0,''),
 (312,63,'12 12 12',NULL,1,0,'',0,0,NULL,1,0,''),
 (313,63,'11 12 13',NULL,0,0,'',0,0,NULL,1,0,''),
 (314,63,'12 12 13',NULL,0,0,'',0,0,NULL,1,0,''),
 (315,63,'12 13 14',NULL,0,0,'',0,0,NULL,1,0,''),
 (316,64,'Yes, and we can use the function value conveniently',NULL,0,0,'',0,0,NULL,1,0,''),
 (317,64,'Yes, but we call the function again to get the value, not as convenient as in using variable',NULL,0,0,'',0,0,NULL,1,0,''),
 (318,64,'No, C does not support it',NULL,1,0,'',0,0,NULL,1,0,''),
 (319,64,'This case is compiler dependent',NULL,0,0,'',0,0,NULL,1,0,''),
 (320,64,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (321,65,'6 6 7 7 8',NULL,0,0,'',0,0,NULL,1,0,''),
 (322,65,'5 5 6 6 7',NULL,0,0,'',0,0,NULL,1,0,''),
 (323,65,'7 7 8 8 9',NULL,0,0,'',0,0,NULL,1,0,''),
 (324,65,'6 7 8 9 9',NULL,1,0,'',0,0,NULL,1,0,''),
 (325,65,'Garbage values',NULL,0,0,'',0,0,NULL,1,0,''),
 (326,66,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (327,66,'Prints nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (328,66,'Address of main',NULL,1,0,'',0,0,NULL,1,0,''),
 (329,66,'Garbage value',NULL,0,0,'',0,0,NULL,1,0,''),
 (330,66,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (331,67,'All the values',NULL,0,0,'',0,0,NULL,1,0,''),
 (332,67,'First element',NULL,0,0,'',0,0,NULL,1,0,''),
 (333,67,'Starting address',NULL,1,0,'',0,0,NULL,1,0,''),
 (334,67,'Last element',NULL,0,0,'',0,0,NULL,1,0,''),
 (335,67,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (336,68,'Compilation error',NULL,0,0,'',0,0,NULL,1,0,''),
 (337,68,'Execution error',NULL,0,0,'',0,0,NULL,1,0,''),
 (338,68,'2 4 6 8',NULL,0,0,'',0,0,NULL,1,0,''),
 (339,68,'2 3',NULL,1,0,'',0,0,NULL,1,0,''),
 (340,68,'3 6 9',NULL,0,0,'',0,0,NULL,1,0,''),
 (341,69,'One',NULL,0,0,'',0,0,NULL,1,0,''),
 (342,69,'Two',NULL,0,0,'',0,0,NULL,1,0,''),
 (343,69,'Three',NULL,1,0,'',0,0,NULL,1,0,''),
 (344,69,'Four',NULL,0,0,'',0,0,NULL,1,0,''),
 (345,69,'None',NULL,0,0,'',0,0,NULL,1,0,''),
 (346,70,'func(a1,a2,a3);',NULL,0,0,'',0,0,NULL,1,0,''),
 (347,70,'*func(a1,a2,a3);',NULL,0,0,'',0,0,NULL,1,0,''),
 (348,70,'(*func)(a1,a2,a3);',NULL,0,0,'',0,0,NULL,1,0,''),
 (349,70,'Both a and b',NULL,0,0,'',0,0,NULL,1,0,''),
 (350,70,'Both a and c',NULL,1,0,'',0,0,NULL,1,0,''),
 (351,71,'a only',NULL,1,0,'',0,0,NULL,1,0,''),
 (352,71,'b only',NULL,0,0,'',0,0,NULL,1,0,''),
 (353,71,'c only',NULL,0,0,'',0,0,NULL,1,0,''),
 (354,71,'a and c only',NULL,0,0,'',0,0,NULL,1,0,''),
 (355,71,'d only',NULL,0,0,'',0,0,NULL,1,0,''),
 (356,72,'The portion of a program in which the variable may be visible.',NULL,0,0,'',0,0,NULL,1,0,''),
 (357,72,'The duration for which the variable retains a given value during the execution of a program.',NULL,1,0,'',0,0,NULL,1,0,''),
 (358,72,'Internal linkage of a variable.',NULL,0,0,'',0,0,NULL,1,0,''),
 (359,72,'External linkage of a variable.',NULL,0,0,'',0,0,NULL,1,0,''),
 (360,72,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (361,73,'t only',NULL,0,0,'',0,0,NULL,1,0,''),
 (362,73,'s only',NULL,1,0,'',0,0,NULL,1,0,''),
 (363,73,'u only',NULL,0,0,'',0,0,NULL,1,0,''),
 (364,73,'s and t only',NULL,0,0,'',0,0,NULL,1,0,''),
 (365,73,'s and u only',NULL,0,0,'',0,0,NULL,1,0,''),
 (366,74,'only i',NULL,0,0,'',0,0,NULL,1,0,''),
 (367,74,'only ii',NULL,0,0,'',0,0,NULL,1,0,''),
 (368,74,'both i and ii',NULL,1,0,'',0,0,NULL,1,0,''),
 (369,74,'neither i nor ii',NULL,0,0,'',0,0,NULL,1,0,''),
 (370,74,'either i or ii',NULL,0,0,'',0,0,NULL,1,0,''),
 (371,75,'The code reports an error as expression syntax',NULL,0,0,'',0,0,NULL,1,0,''),
 (372,75,'The code gets compiled successfully but will not give any output.',NULL,0,0,'',0,0,NULL,1,0,''),
 (373,75,'The code gives an output as 6.',NULL,0,0,'',0,0,NULL,1,0,''),
 (374,75,'The code reports an error as bomb undefined',NULL,1,0,'',0,0,NULL,1,0,''),
 (375,75,'both a and d',NULL,0,0,'',0,0,NULL,1,0,''),
 (376,76,'int 2bhk(int*, int []);',NULL,0,0,'',0,0,NULL,1,0,''),
 (377,76,'int 1bhk(int a);',NULL,0,0,'',0,0,NULL,1,0,''),
 (378,76,'int 1bhk(int);',NULL,0,0,'',0,0,NULL,1,0,''),
 (379,76,'All of the above',NULL,1,0,'',0,0,NULL,1,0,''),
 (380,76,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (381,77,'Returns an integer value',NULL,0,0,'',0,0,NULL,1,0,''),
 (382,77,'Is not defined in the same file',NULL,0,0,'',0,0,NULL,1,0,''),
 (383,77,'Returns a non-integer value',NULL,1,0,'',0,0,NULL,1,0,''),
 (384,77,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (385,77,'All of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (386,78,'return-type function-name(argument type);',NULL,1,0,'',0,0,NULL,1,0,''),
 (387,78,'return-type function-name(argument type){}',NULL,0,0,'',0,0,NULL,1,0,''),
 (388,78,'return-type (argument type)function-name;',NULL,0,0,'',0,0,NULL,1,0,''),
 (389,78,'all of the mentioned',NULL,0,0,'',0,0,NULL,1,0,''),
 (390,78,'none of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (391,79,'Function can only be called without any parameter',NULL,0,0,'',0,0,NULL,1,0,''),
 (392,79,'Function can be called with any number of parameters of any types',NULL,1,0,'',0,0,NULL,1,0,''),
 (393,79,'Function can be called with any number of integer parameters.',NULL,0,0,'',0,0,NULL,1,0,''),
 (394,79,'Function can be called with one integer parameter',NULL,0,0,'',0,0,NULL,1,0,''),
 (395,79,'All of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (396,80,'bc',NULL,0,0,'',0,0,NULL,1,0,''),
 (397,80,'bb',NULL,1,0,'',0,0,NULL,1,0,''),
 (398,80,'cd',NULL,0,0,'',0,0,NULL,1,0,''),
 (399,80,'cc',NULL,0,0,'',0,0,NULL,1,0,''),
 (400,80,'dd',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1217 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,3,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,3,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,3,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,3,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,3,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,3,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,3,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,3,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,3,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,3,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,3,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,3,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,3,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,3,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,3,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,3,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,3,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,3,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,3,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,3,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,3,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,3,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,3,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,3,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,3,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,3,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,3,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,3,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,3,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,3,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,3,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,3,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,3,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,3,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,3,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,3,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,3,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,3,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,3,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,3,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,3,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,3,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,3,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,3,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,3,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,3,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,3,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,3,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,3,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,3,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,3,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,3,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,3,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,3,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,3,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,3,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,3,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,3,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,3,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,3,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,3,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,3,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,3,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,3,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,3,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,3,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,3,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,3,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,3,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,3,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,3,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,3,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,3,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,3,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,3,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,4,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,4,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,4,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,4,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,4,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,4,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,4,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,4,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,4,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,4,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,4,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,4,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,4,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,4,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,4,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,4,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,4,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,4,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,4,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,4,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,4,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,4,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,4,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,4,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,4,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,4,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,4,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,4,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,4,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,4,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,4,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,4,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,4,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,4,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,4,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,4,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,4,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,4,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,4,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,4,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,4,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,4,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,4,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,4,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,4,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,4,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,4,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,4,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,4,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,4,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,4,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,4,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,4,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,4,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,4,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,4,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,4,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,4,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,4,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,4,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,4,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,4,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,4,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,4,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,4,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,4,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,4,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,4,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,4,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,4,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,4,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,4,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,4,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,4,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,4,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,5,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,5,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,5,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,5,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,5,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,5,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,5,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,5,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,5,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,5,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (311,5,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (312,5,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (313,5,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (314,5,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (315,5,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (316,5,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (317,5,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (318,5,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (319,5,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (320,5,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (321,5,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (322,5,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (323,5,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (324,5,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (325,5,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (326,5,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (327,5,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (328,5,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (329,5,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (330,5,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (331,5,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (332,5,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (333,5,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (334,5,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (335,5,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (336,5,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (337,5,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (338,5,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (339,5,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (340,5,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (341,5,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (342,5,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (343,5,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (344,5,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (345,5,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (346,5,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (347,5,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (348,5,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (349,5,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (350,5,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (351,5,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (352,5,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (353,5,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (354,5,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (355,5,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (356,5,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (357,5,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (358,5,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (359,5,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (360,5,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (361,5,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (362,5,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (363,5,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (364,5,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (365,5,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (366,5,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (367,5,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (368,5,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (369,5,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (370,5,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (371,5,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (372,5,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (373,5,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (374,5,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (375,5,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (376,5,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (377,5,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (378,5,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (379,5,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (380,5,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (381,5,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (382,5,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (383,5,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (384,5,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (385,5,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (386,5,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (387,5,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (388,5,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (389,5,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (390,5,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (391,5,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (392,5,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (393,5,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (394,5,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (395,5,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (396,5,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (397,5,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (398,5,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (399,5,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (400,5,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (401,5,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (402,5,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (403,5,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (404,5,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (405,5,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (406,5,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (407,5,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (408,5,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (409,5,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (410,5,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (411,5,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (412,5,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (413,5,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (414,5,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (415,5,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (416,5,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (417,5,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (418,5,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (419,5,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (420,5,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (421,5,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (422,5,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (423,5,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (424,5,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (425,5,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (426,5,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (427,5,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (428,5,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (429,5,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (430,5,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (431,5,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (432,5,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (433,5,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (434,5,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (435,5,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (436,5,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (437,5,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (438,5,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (439,5,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (440,5,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (441,5,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (442,5,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (443,5,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (444,5,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (445,5,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (446,5,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (447,5,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (448,5,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (449,5,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (450,5,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (451,5,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (452,5,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (453,5,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (454,5,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (455,5,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (456,5,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (457,5,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (458,5,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (459,5,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (460,5,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (461,5,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (462,5,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (463,5,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (464,5,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (465,5,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (466,5,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (467,5,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (468,5,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (469,5,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (470,5,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (471,5,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (472,5,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (473,5,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (474,5,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (475,5,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (476,5,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (477,5,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (478,5,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (479,5,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (480,5,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (481,5,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (482,5,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (483,5,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (484,5,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (485,5,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (486,5,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (487,5,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (488,5,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (489,5,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (490,5,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (491,5,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (492,5,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (493,5,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (494,5,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (495,5,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (496,5,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (497,5,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (498,5,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (499,5,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (500,5,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (501,5,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (502,5,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (503,5,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (504,5,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (505,5,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (506,5,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (507,5,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (508,5,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (509,5,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (510,5,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (511,5,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (512,5,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (513,5,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (514,5,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (515,5,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (516,5,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (517,5,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (518,5,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (519,5,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (520,5,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (521,5,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (522,5,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (523,5,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (524,5,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (525,5,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (526,5,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (527,5,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (528,5,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (529,5,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (530,6,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (531,6,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (532,6,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (533,6,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (534,6,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (535,6,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (536,6,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (537,6,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (538,6,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (539,6,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (540,6,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (541,6,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (542,6,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (543,6,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (544,6,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (545,6,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (546,6,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (547,6,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (548,6,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (549,6,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (550,6,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (551,6,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (552,6,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (553,6,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (554,6,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (555,6,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (556,6,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (557,6,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (558,6,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (559,6,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (560,6,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (561,6,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (562,6,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (563,6,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (564,6,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (565,6,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (566,6,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (567,6,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (568,6,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (569,6,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (570,6,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (571,6,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (572,6,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (573,6,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (574,6,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (575,6,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (576,6,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (577,6,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (578,6,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (579,6,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (580,6,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (581,6,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (582,6,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (583,6,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (584,6,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (585,6,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (586,6,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (587,6,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (588,6,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (589,6,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (590,6,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (591,6,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (592,6,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (593,6,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (594,6,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (595,6,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (596,6,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (597,6,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (598,6,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (599,6,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (600,6,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (601,6,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (602,6,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (603,6,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (604,6,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (605,6,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (606,6,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (607,6,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (608,6,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (609,6,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (610,6,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (611,6,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (612,6,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (613,6,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (614,6,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (615,6,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (616,6,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (617,6,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (618,6,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (619,6,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (620,6,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (621,6,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (622,6,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (623,6,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (624,6,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (625,6,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (626,6,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (627,6,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (628,6,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (629,6,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (630,6,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (631,6,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (632,6,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (633,6,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (634,6,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (635,6,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (636,6,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (637,6,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (638,6,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (639,6,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (640,6,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (641,6,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (642,6,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (643,6,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (644,6,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (645,6,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (646,6,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (647,6,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (648,6,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (649,6,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (650,6,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (651,6,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (652,6,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (653,6,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (654,6,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (655,6,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (656,6,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (657,6,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (658,6,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (659,6,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (660,6,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (661,6,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (662,6,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (663,6,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (664,6,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (665,6,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (666,6,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (667,6,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (668,6,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (669,6,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (670,6,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (671,6,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (672,6,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (673,6,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (674,6,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (675,6,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (676,6,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (677,6,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (678,6,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (679,6,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (680,6,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (681,6,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (682,6,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (683,6,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (684,6,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (685,6,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (686,6,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (687,6,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (688,6,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (689,6,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (690,6,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (691,6,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (692,6,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (693,6,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (694,6,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (695,6,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (696,6,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (697,6,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (698,6,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (699,6,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (700,6,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (701,6,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (702,6,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (703,6,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (704,6,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (705,6,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (706,6,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (707,6,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (708,6,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (709,6,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (710,6,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (711,6,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (712,6,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (713,6,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (714,6,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (715,6,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (716,6,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (717,6,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (718,6,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (719,6,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (720,6,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (721,6,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (722,6,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (723,6,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (724,6,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (725,6,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (726,6,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (727,6,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (728,6,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (729,6,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (730,6,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (731,6,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (732,6,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (733,6,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (734,6,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (735,6,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (736,6,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (737,6,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (738,6,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (739,6,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (740,6,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (741,6,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (742,6,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (743,6,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (744,6,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (745,6,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (746,6,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (747,6,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (748,6,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (749,6,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (750,6,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (751,6,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (752,6,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (753,6,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (754,6,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (755,6,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (756,6,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (757,6,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (758,6,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (759,7,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (760,7,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (761,7,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (762,7,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (763,7,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (764,7,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (765,7,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (766,7,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (767,7,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (768,7,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (769,7,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (770,7,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (771,7,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (772,7,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (773,7,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (774,7,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (775,7,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (776,7,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (777,7,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (778,7,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (779,7,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (780,7,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (781,7,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (782,7,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (783,7,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (784,7,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (785,7,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (786,7,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (787,7,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (788,7,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (789,7,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (790,7,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (791,7,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (792,7,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (793,7,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (794,7,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (795,7,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (796,7,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (797,7,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (798,7,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (799,7,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (800,7,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (801,7,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (802,7,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (803,7,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (804,7,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (805,7,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (806,7,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (807,7,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (808,7,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (809,7,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (810,7,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (811,7,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (812,7,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (813,7,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (814,7,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (815,7,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (816,7,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (817,7,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (818,7,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (819,7,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (820,7,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (821,7,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (822,7,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (823,7,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (824,7,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (825,7,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (826,7,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (827,7,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (828,7,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (829,7,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (830,7,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (831,7,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (832,7,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (833,7,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (834,7,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (835,7,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (836,7,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (837,7,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (838,7,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (839,7,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (840,7,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (841,7,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (842,7,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (843,7,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (844,7,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (845,7,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (846,7,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (847,7,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (848,7,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (849,7,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (850,7,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (851,7,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (852,7,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (853,7,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (854,7,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (855,7,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (856,7,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (857,7,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (858,7,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (859,7,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (860,7,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (861,7,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (862,7,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (863,7,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (864,7,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (865,7,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (866,7,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (867,7,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (868,7,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (869,7,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (870,7,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (871,7,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (872,7,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (873,7,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (874,7,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (875,7,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (876,7,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (877,7,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (878,7,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (879,7,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (880,7,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (881,7,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (882,7,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (883,7,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (884,7,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (885,7,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (886,7,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (887,7,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (888,7,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (889,7,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (890,7,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (891,7,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (892,7,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (893,7,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (894,7,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (895,7,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (896,7,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (897,7,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (898,7,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (899,7,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (900,7,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (901,7,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (902,7,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (903,7,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (904,7,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (905,7,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (906,7,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (907,7,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (908,7,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (909,7,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (910,7,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (911,7,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (912,7,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (913,7,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (914,7,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (915,7,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (916,7,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (917,7,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (918,7,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (919,7,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (920,7,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (921,7,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (922,7,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (923,7,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (924,7,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (925,7,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (926,7,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (927,7,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (928,7,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (929,7,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (930,7,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (931,7,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (932,7,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (933,7,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (934,7,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (935,7,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (936,7,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (937,7,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (938,7,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (939,7,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (940,7,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (941,7,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (942,7,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (943,7,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (944,7,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (945,7,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (946,7,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (947,7,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (948,7,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (949,7,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (950,7,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (951,7,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (952,7,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (953,7,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (954,7,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (955,7,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (956,7,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (957,7,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (958,7,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (959,7,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (960,7,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (961,7,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (962,7,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (963,7,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (964,7,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (965,7,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (966,7,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (967,7,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (968,7,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (969,7,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (970,7,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (971,7,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (972,7,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (973,7,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (974,7,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (975,7,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (976,7,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (977,7,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (978,7,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (979,7,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (980,7,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (981,7,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (982,7,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (983,7,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (984,7,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (985,7,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (986,7,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (987,7,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (988,8,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (989,8,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (990,8,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (991,8,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (992,8,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (993,8,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (994,8,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (995,8,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (996,8,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (997,8,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (998,8,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (999,8,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1000,8,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1001,8,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1002,8,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1003,8,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1004,8,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1005,8,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1006,8,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1007,8,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1008,8,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1009,8,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1010,8,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1011,8,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1012,8,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1013,8,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1014,8,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1015,8,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1016,8,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1017,8,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1018,8,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1019,8,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1020,8,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1021,8,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1022,8,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1023,8,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1024,8,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1025,8,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1026,8,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1027,8,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1028,8,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1029,8,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1030,8,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1031,8,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1032,8,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1033,8,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1034,8,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1035,8,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1036,8,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1037,8,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1038,8,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1039,8,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1040,8,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1041,8,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1042,8,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1043,8,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1044,8,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1045,8,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1046,8,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1047,8,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1048,8,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1049,8,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1050,8,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1051,8,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1052,8,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1053,8,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1054,8,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1055,8,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1056,8,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1057,8,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1058,8,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1059,8,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1060,8,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1061,8,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1062,8,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1063,8,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1064,8,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1065,8,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1066,8,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1067,8,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1068,8,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1069,8,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1070,8,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1071,8,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1072,8,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1073,8,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1074,8,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1075,8,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1076,8,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1077,8,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1078,8,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1079,8,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1080,8,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1081,8,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1082,8,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1083,8,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1084,8,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1085,8,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1086,8,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1087,8,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1088,8,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1089,8,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1090,8,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1091,8,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1092,8,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1093,8,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1094,8,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1095,8,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1096,8,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1097,8,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1098,8,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1099,8,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1100,8,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1101,8,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1102,8,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1103,8,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1104,8,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1105,8,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1106,8,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1107,8,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1108,8,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1109,8,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1110,8,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1111,8,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1112,8,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1113,8,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1114,8,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1115,8,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1116,8,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1117,8,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1118,8,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1119,8,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1120,8,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1121,8,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1122,8,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1123,8,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1124,8,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1125,8,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1126,8,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1127,8,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1128,8,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1129,8,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1130,8,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1131,8,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1132,8,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1133,8,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1134,8,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1135,8,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1136,8,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1137,8,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1138,8,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1139,8,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1140,8,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1141,8,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1142,8,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1143,8,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1144,8,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1145,8,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1146,8,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1147,8,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1148,8,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1149,8,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1150,8,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1151,8,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1152,8,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1153,8,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1154,8,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1155,8,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1156,8,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1157,8,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1158,8,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1159,8,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1160,8,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1161,8,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1162,8,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1163,8,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1164,8,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1165,8,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1166,8,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1167,8,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1168,8,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1169,8,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1170,8,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1171,8,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1172,8,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1173,8,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1174,8,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1175,8,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1176,8,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1177,8,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1178,8,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1179,8,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1180,8,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1181,8,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1182,8,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1183,8,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1184,8,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1185,8,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1186,8,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1187,8,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1188,8,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1189,8,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1190,8,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1191,8,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1192,8,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1193,8,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1194,8,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1195,8,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1196,8,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1197,8,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1198,8,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1199,8,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1200,8,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1201,8,1,290,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1202,8,1,291,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1203,8,1,292,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1204,8,1,293,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1205,8,1,294,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1206,8,1,295,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1207,8,1,296,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1208,8,1,297,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1209,8,1,298,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1210,8,1,299,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1211,8,1,300,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1212,8,1,301,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1213,8,1,302,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1214,8,1,303,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1215,8,1,304,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1216,8,1,305,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-07-14 18:42:00',60,1,'20.00',1,0),
 (2,2,2,1,'2024-07-14 18:42:00',60,1,'20.00',1,0),
 (3,3,3,1,'2024-07-14 18:42:01',60,1,'20.00',1,0),
 (4,4,4,1,'2024-07-14 18:42:01',60,1,'20.00',1,0),
 (5,1,1,1,'2024-07-14 18:42:02',60,1,'20.00',1,0),
 (6,2,2,1,'2024-07-14 18:42:03',60,1,'20.00',1,0),
 (7,3,3,1,'2024-07-14 18:42:04',60,1,'20.00',1,0),
 (8,4,4,1,'2024-07-14 18:42:05',60,1,'20.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #012'),
 (2,'Assessment Test #013'),
 (3,'Assessment Test #014'),
 (4,'Assessment Test #015');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-07-14 18:41:54'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-07-14 18:41:54'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-07-14 18:41:54'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-07-14 18:41:54'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-07-14 18:41:55'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-07-14 18:41:55'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-07-14 18:41:55'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-07-14 18:41:55'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-07-14 18:41:55'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-07-14 18:41:55'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-07-14 18:41:55'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-07-14 18:41:55'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-07-14 18:41:55'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-07-14 18:41:55'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-07-14 18:41:55'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-07-14 18:41:55'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-07-14 18:41:55'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-07-14 18:41:55'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-07-14 18:41:55'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-07-14 18:41:55'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-07-14 18:41:56'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-07-14 18:41:56'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-07-14 18:41:56'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-07-14 18:41:56'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-07-14 18:41:56'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-07-14 18:41:56'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-07-14 18:41:56'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-07-14 18:41:56'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-07-14 18:41:56'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-07-14 18:41:56'),
 (31,'',0,'0',NULL,NULL,31,0,NULL,'2024-07-14 18:41:56'),
 (32,'',0,'0',NULL,NULL,32,0,NULL,'2024-07-14 18:41:56'),
 (33,'',0,'0',NULL,NULL,33,0,NULL,'2024-07-14 18:41:56'),
 (34,'',0,'0',NULL,NULL,34,0,NULL,'2024-07-14 18:41:56'),
 (35,'',0,'0',NULL,NULL,35,0,NULL,'2024-07-14 18:41:56'),
 (36,'',0,'0',NULL,NULL,36,0,NULL,'2024-07-14 18:41:56'),
 (37,'',0,'0',NULL,NULL,37,0,NULL,'2024-07-14 18:41:56'),
 (38,'',0,'0',NULL,NULL,38,0,NULL,'2024-07-14 18:41:56'),
 (39,'',0,'0',NULL,NULL,39,0,NULL,'2024-07-14 18:41:56'),
 (40,'',0,'0',NULL,NULL,40,0,NULL,'2024-07-14 18:41:56'),
 (41,'',0,'0',NULL,NULL,41,0,NULL,'2024-07-14 18:41:56'),
 (42,'',0,'0',NULL,NULL,42,0,NULL,'2024-07-14 18:41:56'),
 (43,'',0,'0',NULL,NULL,43,0,NULL,'2024-07-14 18:41:56'),
 (44,'',0,'0',NULL,NULL,44,0,NULL,'2024-07-14 18:41:57'),
 (45,'',0,'0',NULL,NULL,45,0,NULL,'2024-07-14 18:41:57'),
 (46,'',0,'0',NULL,NULL,46,0,NULL,'2024-07-14 18:41:57'),
 (47,'',0,'0',NULL,NULL,47,0,NULL,'2024-07-14 18:41:57'),
 (48,'',0,'0',NULL,NULL,48,0,NULL,'2024-07-14 18:41:57'),
 (49,'',0,'0',NULL,NULL,49,0,NULL,'2024-07-14 18:41:57'),
 (50,'',0,'0',NULL,NULL,50,0,NULL,'2024-07-14 18:41:57'),
 (51,'',0,'0',NULL,NULL,51,0,NULL,'2024-07-14 18:41:57'),
 (52,'',0,'0',NULL,NULL,52,0,NULL,'2024-07-14 18:41:57'),
 (53,'',0,'0',NULL,NULL,53,0,NULL,'2024-07-14 18:41:57'),
 (54,'',0,'0',NULL,NULL,54,0,NULL,'2024-07-14 18:41:57'),
 (55,'',0,'0',NULL,NULL,55,0,NULL,'2024-07-14 18:41:57'),
 (56,'',0,'0',NULL,NULL,56,0,NULL,'2024-07-14 18:41:57'),
 (57,'',0,'0',NULL,NULL,57,0,NULL,'2024-07-14 18:41:57'),
 (58,'',0,'0',NULL,NULL,58,0,NULL,'2024-07-14 18:41:57'),
 (59,'',0,'0',NULL,NULL,59,0,NULL,'2024-07-14 18:41:57'),
 (60,'',0,'0',NULL,NULL,60,0,NULL,'2024-07-14 18:41:57'),
 (61,'',0,'0',NULL,NULL,61,0,NULL,'2024-07-14 18:41:59'),
 (62,'',0,'0',NULL,NULL,62,0,NULL,'2024-07-14 18:41:59'),
 (63,'',0,'0',NULL,NULL,63,0,NULL,'2024-07-14 18:41:59'),
 (64,'',0,'0',NULL,NULL,64,0,NULL,'2024-07-14 18:41:59'),
 (65,'',0,'0',NULL,NULL,65,0,NULL,'2024-07-14 18:41:59'),
 (66,'',0,'0',NULL,NULL,66,0,NULL,'2024-07-14 18:41:59'),
 (67,'',0,'0',NULL,NULL,67,0,NULL,'2024-07-14 18:41:59'),
 (68,'',0,'0',NULL,NULL,68,0,NULL,'2024-07-14 18:41:59'),
 (69,'',0,'0',NULL,NULL,69,0,NULL,'2024-07-14 18:41:59'),
 (70,'',0,'0',NULL,NULL,70,0,NULL,'2024-07-14 18:41:59'),
 (71,'',0,'0',NULL,NULL,71,0,NULL,'2024-07-14 18:41:59'),
 (72,'',0,'0',NULL,NULL,72,0,NULL,'2024-07-14 18:41:59'),
 (73,'',0,'0',NULL,NULL,73,0,NULL,'2024-07-14 18:41:59'),
 (74,'',0,'0',NULL,NULL,74,0,NULL,'2024-07-14 18:41:59'),
 (75,'',0,'0',NULL,NULL,75,0,NULL,'2024-07-14 18:41:59'),
 (76,'',0,'0',NULL,NULL,76,0,NULL,'2024-07-14 18:41:59'),
 (77,'',0,'0',NULL,NULL,77,0,NULL,'2024-07-14 18:42:00'),
 (78,'',0,'0',NULL,NULL,78,0,NULL,'2024-07-14 18:42:00'),
 (79,'',0,'0',NULL,NULL,79,0,NULL,'2024-07-14 18:42:00'),
 (80,'',0,'0',NULL,NULL,80,0,NULL,'2024-07-14 18:42:00');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=81 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"font-weight:bold;\">How many times the following loop will get executed?</div>\n<div style=\"font-weight:bold;\">int i=2,j=2;</div>\n<div style=\"font-weight:bold;\">while(i+1?--i:j++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",i);</div>\n',1,1,1,'1','2024-07-14 18:41:54',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">intx,y;</div>\n<div style=\"font-weight:bold;\">x=y=2,3;;</div>\n<div style=\"font-weight:bold;\">while(--x && y++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d %d\",x,y);</div>\n',1,2,1,'1','2024-07-14 18:41:54',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"font-weight:bold;\">How many times Hello is printed on console?</div>\n<div style=\"font-weight:bold;\">int a=0;</div>\n<div style=\"font-weight:bold;\">while(!(a++))</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;Hello&rdquo;);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,3,1,'1','2024-07-14 18:41:54',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"font-weight:bold;\">What will be the output of the following snippet?</div>\n<div style=\"font-weight:bold;\">    int i;</div>\n<div style=\"font-weight:bold;\">intarr[5] = {1};</div>\n<div style=\"font-weight:bold;\">    for (i = 0; i < 5; i++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", arr[i]);</div>\n',1,4,1,'1','2024-07-14 18:41:54',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">    int i=0;</div>\n<div style=\"font-weight:bold;\">    for(;i++;printf(\"%d\",i));       ; </div>\n<div style=\"font-weight:bold;\">printf(\"%d\",i);</div>\n',1,5,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">int i = 0;</div>\n<div style=\"font-weight:bold;\">while (i < 10)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">i++;</div>\n<div style=\"font-weight:bold;\">printf(\"hi?\\n?\");</div>\n<div style=\"font-weight:bold;\">while (i < 8)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">i++;</div>\n<div style=\"font-weight:bold;\">printf(\"hello?\\n?\");</div>\n<div style=\"font-weight:bold;\">} }</div>\n',1,6,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"font-weight:bold;\">What will be the output of the following code?</div>\n<div style=\"font-weight:bold;\">int a[][] = {{1,2},{3,4}},i,j;</div>\n<div style=\"font-weight:bold;\">    for (i = 0; i < 2; i++)</div>\n<div style=\"font-weight:bold;\">        for (j = 0; j < 2; j++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", a[i][j]);</div>\n',1,7,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">int x=1</div>\n<div style=\"font-weight:bold;\">while(a++<=5)</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",a);</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",a+10);</div>\n',1,8,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">for(i=1;i<=10;i++);</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;Hello&rdquo;)</div>\n',1,9,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">for(; ;);</div>\n<div style=\"font-weight:bold;\">for(; ;);</div>\n<div style=\"font-weight:bold;\">printf(\"Hello\");</div>\n',1,10,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div style=\"font-weight:bold;\">How many times value of x will be printed?</div>\n<div style=\"font-weight:bold;\">int x=1;</div>\n<div style=\"font-weight:bold;\">   for( ;  ; );</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",x++);</div>\n',1,11,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div style=\"font-weight:bold;\">What will be the output of the following code?</div>\n<div style=\"font-weight:bold;\">int k =0;</div>\n<div style=\"font-weight:bold;\">for(k)</div>\n<div style=\"font-weight:bold;\">printf(\"Hello\");</div>\n',1,12,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	static int i;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(i++;++i;i++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d &quot;, i);</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(i == 6)</div>\r\n<div style=\"font-weight:bold;\">\r\n	break;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,13,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program, if input is 6?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int fun();</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main(){</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(fun();fun();fun())</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d &quot;, fun());</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	int fun()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int static num = 10;</div>\r\n<div style=\"font-weight:bold;\">\r\n	return num--;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,14,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int fun = {</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;C for loop &quot;)</div>\r\n<div style=\"font-weight:bold;\">\r\n	};</div>\r\n<div style=\"font-weight:bold;\">\r\n	int x = 5;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(x=0;x&lt;=fun;x++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%x &quot;, x);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,15,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program by considering &#39;b&#39; as a User input?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(i = 0;i&lt;(i++, 5);i++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d &quot;,i);</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,16,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i;</div>\r\n<div style=\"font-weight:bold;\">\r\n	while(sizeof(NULL))</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;inside loop&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	continue;</div>\r\n<div style=\"font-weight:bold;\">\r\n	break;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,17,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program ?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main(){</div>\r\n<div style=\"font-weight:bold;\">\r\n	float ft = 7.5;</div>\r\n<div style=\"font-weight:bold;\">\r\n	while(ft)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;Loop&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	ft = ft - .5;</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(ft == 5.0f)</div>\r\n<div style=\"font-weight:bold;\">\r\n	break;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,18,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div style=\"font-weight:bold;\">What will be the output of the C program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int i = 0;</div>\n<div style=\"font-weight:bold;\">while(i+1)</div>\n<div style=\"font-weight:bold;\">while(i<<2)</div>\n<div style=\"font-weight:bold;\">while(i4)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(\"Hello \");</div>\n<div style=\"font-weight:bold;\">if(i == 3)</div>\n<div style=\"font-weight:bold;\">break;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,19,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i = 1, j = 1;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(;j;printf(&quot;%d %d &quot;,i, j))</div>\r\n<div style=\"font-weight:bold;\">\r\n	j = i++ &lt;= 1;</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,20,1,'1','2024-07-14 18:41:55',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">printf(3+&rdquo;Programming&rdquo;+3);</div>\n',1,1,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div style=\"font-weight:bold;\">What will be the output of the following C code?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">m();</div>\n<div style=\"font-weight:bold;\">void m()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(\"hi\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,2,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">#include<string.h></div>\n<div style=\"font-weight:bold;\">int main(){</div>\n<div style=\"font-weight:bold;\">char arr[]=\"MysticRiver\";</div>\n<div style=\"font-weight:bold;\">printf(\"%d %d\",sizeof(arr),strlen(arr));</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,3,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">printf(\"%c\",\"Programming\"[5]);</div>\n',1,4,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is a String in C Language.?</div>\n',1,5,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div style=\"font-weight:bold;\">Choose a correct statement about C String. </div>\n<div style=\"font-weight:bold;\">char ary[]=\"Hello..!\";</div>\n',1,6,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with Strings?</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	char ary[]=&quot;Discovery Channel&quot;;</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%s&quot;,ary);</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,7,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with Strings?</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	char str[]={&#39;g&#39;,&#39;l&#39;,&#39;o&#39;,&#39;b&#39;,&#39;e&#39;};</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%s&quot;,str);</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;&nbsp;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,8,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div style=\"font-weight:bold;\">\r\n	How do you convert this char array to string?</div>\r\n<div style=\"font-weight:bold;\">\r\n	char str[]={&#39;g&#39;,&#39;l&#39;,&#39;o&#39;,&#39;b&#39;,&#39;y&#39;};</div>',1,9,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div style=\"font-weight:bold;\">What is the output of C Program? </div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int str[]={\'g\',\'l\',\'o\',\'b\',\'y\'};</div>\n<div style=\"font-weight:bold;\">printf(\"A%c \",str);</div>\n<div style=\"font-weight:bold;\">printf(\"A%s \",str);</div>\n<div style=\"font-weight:bold;\">printf(\"A%c \",str[0]);</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,10,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (31,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the maximum length of a C String?</div>\n',1,11,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (32,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The library function used to find the last occurrence of a character in a string?</div>\n',1,12,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (33,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following function is used to find the first occurrence of a given string in another string?</div>\n',1,13,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (34,'<div style=\"font-weight:bold;\">Which of the following function is correct that finds the length of a string?</div>\n<div style=\"font-weight:bold;\">a) </div>\n<div style=\"font-weight:bold;\">int xstrlen(char *s)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int length=0;</div>\n<div style=\"font-weight:bold;\">while(*s!=\'\\0\')</div>\n<div style=\"font-weight:bold;\">{    length++; s++; }</div>\n<div style=\"font-weight:bold;\">return (length);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">b) </div>\n<div style=\"font-weight:bold;\">int xstrlen(char s)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int length=0;</div>\n<div style=\"font-weight:bold;\">while(*s!=\'\\0\')</div>\n<div style=\"font-weight:bold;\">length++; s++;</div>\n<div style=\"font-weight:bold;\">return (length);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">c) int xstrlen(char *s)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int length=0;</div>\n<div style=\"font-weight:bold;\">while(*s!=\'\\0\')</div>\n<div style=\"font-weight:bold;\">length++;</div>\n<div style=\"font-weight:bold;\">return (length);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">d) int xstrlen(char *s)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int length=0;</div>\n<div style=\"font-weight:bold;\">while(*s!=\'\\0\')</div>\n<div style=\"font-weight:bold;\">s++;</div>\n<div style=\"font-weight:bold;\">return (length);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">e) None of these</div>\n',1,14,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (35,'<div style=\"font-weight:bold;\">Which of the following statements are correct about the program below?</div>\n<div style=\"font-weight:bold;\">#include<stdio.h></div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">char str[20], *s;</div>\n<div style=\"font-weight:bold;\">printf(\"Enter a string\\n\");</div>\n<div style=\"font-weight:bold;\">scanf(\"%s\", str);</div>\n<div style=\"font-weight:bold;\">s=str;</div>\n<div style=\"font-weight:bold;\">while(*s != \'\\0\')</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">if(*s >= 97 && *s <= 122)</div>\n<div style=\"font-weight:bold;\">*s = *s-32;</div>\n<div style=\"font-weight:bold;\">s++;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">printf(\"%s\",str);</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,15,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (36,'<div style=\"font-weight:bold;\">Which of the following statements are correct about the below declarations?</div>\n<div style=\"font-weight:bold;\">char *p = \"Sanjay\";</div>\n<div style=\"font-weight:bold;\">char a[] = \"Sanjay\";</div>\n<div style=\"font-weight:bold;\">1. There is no difference in the declarations and both serve the same purpose.</div>\n<div style=\"font-weight:bold;\">2. p is a non-const pointer pointing to a non-const string, whereas a is a const pointer pointing to a non-const pointer.</div>\n<div style=\"font-weight:bold;\">3. The pointer p can be modified to point to another string, whereas the individual characters within array a can be changed.</div>\n<div style=\"font-weight:bold;\">4. In both cases the \'\\0\' will be added at the end of the string \"Sanjay\".</div>\n',1,16,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (37,'<div style=\"font-weight:bold;\">Which of the following statements are correct?</div>\n<div style=\"font-weight:bold;\">1. A string is a collection of characters terminated by \'\\0\'</div>\n<div style=\"font-weight:bold;\">2. The format specifier %s is used to print a string.</div>\n<div style=\"font-weight:bold;\">3. The length of the string can be obtained by strlen().</div>\n<div style=\"font-weight:bold;\">4. The pointer CANNOT work on string.</div>\n',1,17,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (38,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following statement is correct?</div>\n',1,18,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (39,'<div style=\"font-weight:bold;\">For the following statements will arr[3] and ptr[3] fetch the same character?</div>\n<div style=\"font-weight:bold;\">char arr[] = \"IndiaBIX\";</div>\n<div style=\"font-weight:bold;\">char *ptr = \"IndiaBIX\";</div>\n',1,19,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (40,'<div style=\"font-weight:bold;\">What will be the output of the following C code?</div>\n<div style=\"font-weight:bold;\">const char pla[] = \"string1\";</div>\n<div style=\"font-weight:bold;\">const char src[] = \"string2\";</div>\n<div style=\"font-weight:bold;\">printf(\"Before memmove place= %s, src = %s\\n\", pla, src);</div>\n<div style=\"font-weight:bold;\">memmove(pla, src, 7);</div>\n<div style=\"font-weight:bold;\">printf(\"After memmove place = %s, src = %s\\n\", pla, src);</div>\n',1,20,2,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (41,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Which of the following is not a stable sorting algorithm?</div>',1,1,3,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (42,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is a stable sorting algorithm?</div>\n',1,2,3,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (43,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Running merge sort on an array of size n which is already sorted is</div>\n',1,3,3,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (44,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Running merge sort on an array of size n which is already sorted is?</div>\n',1,4,3,'1','2024-07-14 18:41:56',0,NULL,NULL,'','',NULL,NULL),
 (45,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Time complexity of bubble sort in best case is</div>',1,5,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (46,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The given array is arr = {3,4,5,2,1}. The number of iterations in bubble sort and selection sort respectively are?</div>\n',1,6,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (47,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	How many passes does an insertion sort algorithm consist of?</div>',1,7,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (48,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Sorting algorithm can be characterized as .......</div>',1,8,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (49,'<div style=\"font-weight:bold;\">What will be the output of the program?</div>\n<div style=\"font-weight:bold;\">#include <stdio.h></div>\n<div style=\"font-weight:bold;\">int main()    </div>\n<div style=\"font-weight:bold;\">{    </div>\n<div style=\"font-weight:bold;\">//Initialize array     </div>\n<div style=\"font-weight:bold;\">int arr[] = {5, 2, 8, 7, 1};     </div>\n<div style=\"font-weight:bold;\">int temp = 0;    </div>\n<div style=\"font-weight:bold;\">int length = sizeof(arr)/sizeof(arr[0]);    </div>\n<div style=\"font-weight:bold;\">printf(\"Elements of original array: \\n\");    </div>\n<div style=\"font-weight:bold;\">for (int i = 0; i < length; i++) {     </div>\n<div style=\"font-weight:bold;\">printf(\"%d \", arr[i]);     </div>\n<div style=\"font-weight:bold;\">}      </div>\n<div style=\"font-weight:bold;\">for (int i = 0; i < length; i++) {     </div>\n<div style=\"font-weight:bold;\">for (int j = i+1; j < length; j++) {     </div>\n<div style=\"font-weight:bold;\">if(arr[i] > arr[j]) {    </div>\n<div style=\"font-weight:bold;\">temp = arr[i];    </div>\n<div style=\"font-weight:bold;\">arr[i] = arr[j];    </div>\n<div style=\"font-weight:bold;\">arr[j] = temp;    </div>\n<div style=\"font-weight:bold;\">}     </div>\n<div style=\"font-weight:bold;\">}     </div>\n<div style=\"font-weight:bold;\">}    </div>\n<div style=\"font-weight:bold;\">printf(\"\\n\");    </div>\n<div style=\"font-weight:bold;\">printf(\"Elements of array sorted in ascending order: \\n\");    </div>\n<div style=\"font-weight:bold;\">for (int i = 0; i < length; i++) {     </div>\n<div style=\"font-weight:bold;\">printf(\"%d \", arr[i]);    </div>\n<div style=\"font-weight:bold;\">}    </div>\n<div style=\"font-weight:bold;\">return 0;    </div>\n<div style=\"font-weight:bold;\">}     </div>\n<div style=\"font-weight:bold;\">a) Elements of original array:</div>\n<div style=\"font-weight:bold;\">5 2 8 7 1</div>\n<div style=\"font-weight:bold;\">Elements of array sorted in ascending order:</div>\n<div style=\"font-weight:bold;\">1 2 5 7 8</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">b) Elements of original array:</div>\n<div style=\"font-weight:bold;\">5 2 8 7 1</div>\n<div style=\"font-weight:bold;\">Elements of array sorted in ascending order:2 5 1 7 8</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">c) Elements of original array:</div>\n<div style=\"font-weight:bold;\">5 2 8 7 1</div>\n<div style=\"font-weight:bold;\">Elements of array sorted in ascending order:1 5 8 2 7</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">d) Elements of original array:</div>\n<div style=\"font-weight:bold;\">5 2 8 7 1</div>\n<div style=\"font-weight:bold;\">Elements of array sorted in ascending order:</div>\n<div style=\"font-weight:bold;\">8 7 5 2 1</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">e) None of these</div>\n',1,9,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (50,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The efficiency of the selection sort algorithm is same as that of the bubble sort algorithm.</div>\n',1,10,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (51,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The following process depicts which sorting algorithm: first find the smallest in the array and exchange it with the elementin the first position, then find the second smallest element and exchange it with the element in the second position, andcontinue in this way until the entire array is sorted.</div>\n',1,11,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (52,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which operation does the Selection Sort use to move numbers from the unsorted section to the sorted section of the list?</div>\n',1,12,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (53,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is not an advantage of optimised bubble sort over other sorting techniques in case of sorted elements?</div>\n',1,13,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (54,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The given array is arr = {1, 2, 4, 3}. Bubble sort is used to sort the array elements. How many iterations will be done to sort the array?</div>\n',1,14,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (55,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the advantage of selection sort over other sorting techniques?</div>\n',1,15,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (56,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The given array is arr = {1,2,4,3}. Bubble sort is used to sort the array elements. How many iterations will be done to sort the array with improvised version?</div>\n',1,16,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (57,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">How many odd and even phases are required respectively to sort the given array using odd-even sort.arr={3,2,3,8,5,6,2,1}.</div>\n',1,17,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (58,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following sorting algorithms can be considered as improvement to the binary tree sort?</div>\n',1,18,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (59,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is false?</div>\n',1,19,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (60,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the disadvantage of selection sort?</div>\n',1,20,3,'1','2024-07-14 18:41:57',0,NULL,NULL,'','',NULL,NULL),
 (61,'<div style=\"font-weight:bold;\">#define call(x,y) x##y</div>\n<div style=\"font-weight:bold;\">int main(){</div>\n<div style=\"font-weight:bold;\">int x=5,y=10,xy=20;</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",xy+call(x,y));</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,1,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (62,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">int a=5;</div>\n<div style=\"font-weight:bold;\">int main(){</div>\n<div style=\"font-weight:bold;\">int x;</div>\n<div style=\"font-weight:bold;\">x=!a+change();</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",x);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">int change(){</div>\n<div style=\"font-weight:bold;\">a=0;</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,2,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (63,'<div style=\"font-weight:bold;\">What will be the output of the following code?</div>\n<div style=\"font-weight:bold;\">void abc(int x){</div>\n<div style=\"font-weight:bold;\"> ++x;</div>\n<div style=\"font-weight:bold;\">printf(\"%d \",x);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">void main(){</div>\n<div style=\"font-weight:bold;\">  int x=10;</div>\n<div style=\"font-weight:bold;\">abc(++x);</div>\n<div style=\"font-weight:bold;\">abc(x++);</div>\n<div style=\"font-weight:bold;\">printf(\"%d \",x);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,3,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (64,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Can we use a function as a parameter of another function? [ Eg: void wow(intfunc()) ]</div>\n',1,4,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (65,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the following snippet?</div>\r\n<div style=\"font-weight:bold;\">\r\n	void fun(int x1, int *x2){</div>\r\n<div style=\"font-weight:bold;\">\r\n	++x1;</div>\r\n<div style=\"font-weight:bold;\">\r\n	++*x2;</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d %d &quot;,x1,*x2);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	void main(){</div>\r\n<div style=\"font-weight:bold;\">\r\n	int n=5;</div>\r\n<div style=\"font-weight:bold;\">\r\n	fun(n++,&amp;n);</div>\r\n<div style=\"font-weight:bold;\">\r\n	fun(n++,&amp;n);</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d &quot;,n);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,5,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (66,'<div style=\"font-weight:bold;\">\r\n	<div>\r\n		What is the output of the following code?</div>\r\n	<div>\r\n		int main()&nbsp;</div>\r\n	<div>\r\n		{&nbsp;</div>\r\n	<div>\r\n		&nbsp; printf(&quot;%d&quot;, main);&nbsp; &nbsp;</div>\r\n	<div>\r\n		&nbsp;}&nbsp;</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,6,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (67,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In C, if you pass an array as an arguments to a function, what actually gets passed?</div>\n',1,7,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (68,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">void dynamic(int s, ...) </div>\n<div style=\"font-weight:bold;\">{ </div>\n<div style=\"font-weight:bold;\">printf(\"%d \", s); </div>\n<div style=\"font-weight:bold;\">} </div>\n<div style=\"font-weight:bold;\">void main() { </div>\n<div style=\"font-weight:bold;\">    dynamic(2, 4, 6, 8); </div>\n<div style=\"font-weight:bold;\">    dynamic(3, 6, 9); </div>\n<div style=\"font-weight:bold;\">}</div>\n',1,8,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (69,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">How many ways are there to return a value to the calling function?</div>\n',1,9,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (70,'<div style=\"font-weight:bold;\">\r\n	<div>\r\n		If func is a function needing three arguments a1, a2 and a3 then func can be invoked by_________?</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,10,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (71,'<div style=\"font-weight:bold;\"> Which of the following macros would properly return the number of element in an array(not a pointer, an actual array)?</div>\n<div style=\"font-weight:bold;\">a) #define NUM_ELEM(x) (sizeof(x)/ sizeof(x[0])).</div>\n<div style=\"font-weight:bold;\">b) #define NUM_ELEM(x) (sizeof(x))</div>\n<div style=\"font-weight:bold;\">c) #define NUM_ELEM(x) (sizeof(x[0])/ sizeof(x)).</div>\n<div style=\"font-weight:bold;\">d) #define NUM_ELEM(x) (sizeof(x)%sizeof(x[0])</div>\n',1,11,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (72,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Longevity of a variable refers to_____?</div>\n',1,12,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (73,'<div style=\"font-weight:bold;\">extern int s;</div>\n<div style=\"font-weight:bold;\">int t;</div>\n<div style=\"font-weight:bold;\">static int u;</div>\n<div style=\"font-weight:bold;\">main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">Which of s, t and u are available to a function present in another file?</div>\n',1,13,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (74,'<div style=\"font-weight:bold;\"> Which of the following statement is correct?</div>\n<div style=\"font-weight:bold;\">(i) A function can also be declared as static.</div>\n<div style=\"font-weight:bold;\">(ii) The default value of an external storage class variable is zero.</div>\n',1,14,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (75,'<div style=\"font-weight:bold;\">Which of the following statement is correct about the code snippet given below?</div>\n<div style=\"font-weight:bold;\">extern int p;</div>\n<div style=\"font-weight:bold;\">int sum = 5;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">p = bomb();</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d %d&rdquo;, sum, p);</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">bomb()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">sum ++;</div>\n<div style=\"font-weight:bold;\">return (sum);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,15,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (76,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Point out the illegal function declaration </div>\n',1,16,4,'1','2024-07-14 18:41:59',0,NULL,NULL,'','',NULL,NULL),
 (77,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">It is necessary to declare the type of a function in the calling program if the function</div>\n',1,17,4,'1','2024-07-14 18:42:00',0,NULL,NULL,'','',NULL,NULL),
 (78,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is a correct format for declaration of function?</div>\n',1,18,4,'1','2024-07-14 18:42:00',0,NULL,NULL,'','',NULL,NULL),
 (79,'<div style=\"font-weight:bold;\">In C, what is the meaning of following function prototype with empty parameter list</div>\n<div style=\"font-weight:bold;\">void fun()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">/* .... */</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,19,4,'1','2024-07-14 18:42:00',0,NULL,NULL,'','',NULL,NULL),
 (80,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include&lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	char arr[100];</div>\r\n<div style=\"font-weight:bold;\">\r\n	arr[0] = &#39;a&#39;;</div>\r\n<div style=\"font-weight:bold;\">\r\n	arr[1] = &#39;b&#39;;</div>\r\n<div style=\"font-weight:bold;\">\r\n	arr[2] = &#39;c&#39;;</div>\r\n<div style=\"font-weight:bold;\">\r\n	arr[4] = &#39;d&#39;;</div>\r\n<div style=\"font-weight:bold;\">\r\n	abc(arr);</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	abc(char arr[]){</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%c&quot;, *++arr);</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%c&quot;, *arr++);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,20,4,'1','2024-07-14 18:42:00',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #012','Assessment Test #012','2024-07-14 18:41:54',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (2,2,'Assessment Test #013','Assessment Test #013','2024-07-14 18:41:56',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (3,3,'Assessment Test #014','Assessment Test #014','2024-07-14 18:41:56',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (4,4,'Assessment Test #015','Assessment Test #015','2024-07-14 18:41:59',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 20 Questions</b></h2>\n<h2><b>Maximum Time Limit: 60 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL DEFAULT '',
  `added_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=306 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','2024-07-14 18:41:51',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','2024-07-14 18:41:51',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','2024-07-14 18:41:51',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','2024-07-14 18:41:51',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','2024-07-14 18:41:51',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','2024-07-14 18:41:51',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','2024-07-14 18:41:51',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','2024-07-14 18:41:51',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','2024-07-14 18:41:51',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','2024-07-14 18:41:51',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','2024-07-14 18:41:51',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','2024-07-14 18:41:51',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','2024-07-14 18:41:51',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','2024-07-14 18:41:51',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','2024-07-14 18:41:51',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','2024-07-14 18:41:51',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','2024-07-14 18:41:51',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','2024-07-14 18:41:51',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','2024-07-14 18:41:51',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','2024-07-14 18:41:51',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','2024-07-14 18:41:51',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','2024-07-14 18:41:51',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','2024-07-14 18:41:52',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','2024-07-14 18:41:52',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','2024-07-14 18:41:52',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','2024-07-14 18:41:52',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','2024-07-14 18:41:52',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','2024-07-14 18:41:52',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','2024-07-14 18:41:52',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','2024-07-14 18:41:52',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','2024-07-14 18:41:52',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','2024-07-14 18:41:52',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','2024-07-14 18:41:52',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','2024-07-14 18:41:52',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','2024-07-14 18:41:52',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','2024-07-14 18:41:52',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','2024-07-14 18:41:52',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','2024-07-14 18:41:52',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','2024-07-14 18:41:52',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','2024-07-14 18:41:52',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','2024-07-14 18:41:52',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','2024-07-14 18:41:52',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','2024-07-14 18:41:52',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','2024-07-14 18:41:52',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','2024-07-14 18:41:52',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','2024-07-14 18:41:52',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','2024-07-14 18:41:52',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','2024-07-14 18:41:52',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','2024-07-14 18:41:52',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','2024-07-14 18:41:52',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','2024-07-14 18:41:52',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','2024-07-14 18:41:52',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','2024-07-14 18:41:52',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','2024-07-14 18:41:52',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','2024-07-14 18:41:52',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','2024-07-14 18:41:52',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','2024-07-14 18:41:52',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','2024-07-14 18:41:52',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','2024-07-14 18:41:52',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','2024-07-14 18:41:52',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','2024-07-14 18:41:52',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','2024-07-14 18:41:52',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','2024-07-14 18:41:52',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','2024-07-14 18:41:52',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','2024-07-14 18:41:52',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','2024-07-14 18:41:52',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','2024-07-14 18:41:52',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','2024-07-14 18:41:52',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','2024-07-14 18:41:52',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','2024-07-14 18:41:52',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','2024-07-14 18:41:52',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','2024-07-14 18:41:52',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','2024-07-14 18:41:52',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','2024-07-14 18:41:52',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','2024-07-14 18:41:52',NULL,NULL),
 (77,'TN301','91ae9a3ee8965246a39580da47119154','TN301','','2024-07-14 18:41:52',NULL,NULL),
 (78,'TN302','cbfe9312b34be3a1f98e8301d2f947fe','TN302','','2024-07-14 18:41:52',NULL,NULL),
 (79,'TN303','bfe2745ea51c5d35e6bf1f528c1e131f','TN303','','2024-07-14 18:41:52',NULL,NULL),
 (80,'TN304','d026543d89f9143a38413eeb46c23acb','TN304','','2024-07-14 18:41:52',NULL,NULL),
 (81,'TN305','20a213ee1dc29a2b6179878b908b993f','TN305','','2024-07-14 18:41:52',NULL,NULL),
 (82,'TN306','84c0a76777cb3a2357834d07b37b1389','TN306','','2024-07-14 18:41:52',NULL,NULL),
 (83,'TN307','587a57baee568eaa7a688369bdae6648','TN307','','2024-07-14 18:41:52',NULL,NULL),
 (84,'TN308','e4cf0fc30ea59dad31c3269226d9a021','TN308','','2024-07-14 18:41:52',NULL,NULL),
 (85,'TN309','197c41e87d120d190fb2cc31ddd5caa8','TN309','','2024-07-14 18:41:52',NULL,NULL),
 (86,'TN310','bc1ef0734f46148c5414204c554ca9be','TN310','','2024-07-14 18:41:52',NULL,NULL),
 (87,'TN311','9cb492e7debc3d485b81e2cacbeb5342','TN311','','2024-07-14 18:41:52',NULL,NULL),
 (88,'TN312','fdbd482b84dcd0a746d3dcbe95a5080d','TN312','','2024-07-14 18:41:52',NULL,NULL),
 (89,'TN313','10824f3fb091562967d5b40a9509301d','TN313','','2024-07-14 18:41:52',NULL,NULL),
 (90,'TN314','45f63a82b37b3f7b006e00f8935a63d7','TN314','','2024-07-14 18:41:52',NULL,NULL),
 (91,'TN315','b224c59de8608611fce7f6a047ef607b','TN315','','2024-07-14 18:41:52',NULL,NULL),
 (92,'TN316','e3bac92fd55049b8a36fa58914cbed6b','TN316','','2024-07-14 18:41:52',NULL,NULL),
 (93,'TN317','91ac0668312708b5c97ac2d1d674bf85','TN317','','2024-07-14 18:41:52',NULL,NULL),
 (94,'TN318','5a5950aa1639de4290982518a3a8d137','TN318','','2024-07-14 18:41:52',NULL,NULL),
 (95,'TN319','40e55a11350884cc82c1f369ec07bc46','TN319','','2024-07-14 18:41:52',NULL,NULL),
 (96,'TN320','3f05908924eaaf75e8870f9e806a48cc','TN320','','2024-07-14 18:41:52',NULL,NULL),
 (97,'TN321','9c7ca4eed27f6da533e5408dee23428f','TN321','','2024-07-14 18:41:52',NULL,NULL),
 (98,'TN322','553076f58d15dc8d4388f21054cc51c6','TN322','','2024-07-14 18:41:52',NULL,NULL),
 (99,'TN323','288d7a0bc714cb93d46b572ccfc63b37','TN323','','2024-07-14 18:41:52',NULL,NULL),
 (100,'TN324','2197d56de2026cf2a7ec1a88b9607bd1','TN324','','2024-07-14 18:41:52',NULL,NULL),
 (101,'TN325','a9d979e30342b3f89b311a0a9a2a3b1f','TN325','','2024-07-14 18:41:52',NULL,NULL),
 (102,'TN326','b5929b0a78d2995f5c9a6e88a8acd630','TN326','','2024-07-14 18:41:52',NULL,NULL),
 (103,'TN327','d89034d69c3a3b76abe1acdf0418124b','TN327','','2024-07-14 18:41:52',NULL,NULL),
 (104,'TN328','ba3094817364b818dddf30da7036d799','TN328','','2024-07-14 18:41:52',NULL,NULL),
 (105,'TN329','30c66083fb90363332a00d15a38c385e','TN329','','2024-07-14 18:41:52',NULL,NULL),
 (106,'TN330','b634249e718d88164a26b7f7f9bcb00d','TN330','','2024-07-14 18:41:52',NULL,NULL),
 (107,'TN331','c6caf4ecfdb634228636797fb27b90b6','TN331','','2024-07-14 18:41:52',NULL,NULL),
 (108,'TN332','7a407075a1ca0a514bd3e2938ab3651c','TN332','','2024-07-14 18:41:52',NULL,NULL),
 (109,'TN333','c9a92b8f125e8039edf001efff1d83a7','TN333','','2024-07-14 18:41:52',NULL,NULL),
 (110,'TN334','ddc74d2fbec09817b56706e82f93804e','TN334','','2024-07-14 18:41:52',NULL,NULL),
 (111,'TN335','c5021fe2c4c1d5f838ef1c6d8d7ea376','TN335','','2024-07-14 18:41:52',NULL,NULL),
 (112,'TN336','0f2555f88b796e7552283622827dc522','TN336','','2024-07-14 18:41:52',NULL,NULL),
 (113,'TN337','f442576282120c2002df123224571e8b','TN337','','2024-07-14 18:41:52',NULL,NULL),
 (114,'TN338','6f065b3131e5965da535d6fbcca5a54f','TN338','','2024-07-14 18:41:52',NULL,NULL),
 (115,'TN339','02765ce2fdfc72300f5c59c39a60e4a7','TN339','','2024-07-14 18:41:52',NULL,NULL),
 (116,'TN340','afeb1f679632d5577f4efdc5d4cadb60','TN340','','2024-07-14 18:41:52',NULL,NULL),
 (117,'TN341','159a071dd6698862cc9b418c8c6b6fd4','TN341','','2024-07-14 18:41:52',NULL,NULL),
 (118,'TN342','55e94cce54b67ac8895d7a38b62803d0','TN342','','2024-07-14 18:41:52',NULL,NULL),
 (119,'TN343','7817e6b156997fd310c0f42cd9feab21','TN343','','2024-07-14 18:41:52',NULL,NULL),
 (120,'TN344','65d60e152e06f877c399b57b845e2172','TN344','','2024-07-14 18:41:52',NULL,NULL),
 (121,'TN345','c6e1a36fa47f43a666d2ea1f5e031515','TN345','','2024-07-14 18:41:52',NULL,NULL),
 (122,'TN346','65d2ea7f4ad6b248076f19febb24a5c3','TN346','','2024-07-14 18:41:52',NULL,NULL),
 (123,'TN347','4ce529ab52a07273ccf4e67ca52f442b','TN347','','2024-07-14 18:41:52',NULL,NULL),
 (124,'TN348','dc8b6d4190530520a26576ff87abf26a','TN348','','2024-07-14 18:41:52',NULL,NULL),
 (125,'TN349','54115bb06615b4405cd25a3d6136f1e3','TN349','','2024-07-14 18:41:52',NULL,NULL),
 (126,'TN350','457e8d740100e3ce26550ba4e63e5bb3','TN350','','2024-07-14 18:41:52',NULL,NULL),
 (127,'TN351','dfe722d9c84232f06f3c723232d2fe0f','TN351','','2024-07-14 18:41:52',NULL,NULL),
 (128,'TN352','aa49b0ed26ce6108c03ba74289b14b60','TN352','','2024-07-14 18:41:52',NULL,NULL),
 (129,'TN353','f4992a58f2f019ef50c4249f70a62833','TN353','','2024-07-14 18:41:52',NULL,NULL),
 (130,'TN354','b9cfda762285d5d9dd5529dc86e96a74','TN354','','2024-07-14 18:41:52',NULL,NULL),
 (131,'TN355','894cc72fa8cedc5f34b8d260cce0c788','TN355','','2024-07-14 18:41:52',NULL,NULL),
 (132,'TN356','e286673b31fc0d96387e7200f899977d','TN356','','2024-07-14 18:41:52',NULL,NULL),
 (133,'TN357','427764b35b9bad7dd7e59195b26c8c97','TN357','','2024-07-14 18:41:52',NULL,NULL),
 (134,'TN358','2ee10325418b57c3783461baeb55c26d','TN358','','2024-07-14 18:41:52',NULL,NULL),
 (135,'TN359','eeca0eb2be5888b3a32a25919972e37c','TN359','','2024-07-14 18:41:52',NULL,NULL),
 (136,'TN360','0f268cd1ce637716c84e1cb959160dc3','TN360','','2024-07-14 18:41:52',NULL,NULL),
 (137,'TN361','8053b459aab4f0f2c9406a98efa7c395','TN361','','2024-07-14 18:41:52',NULL,NULL),
 (138,'TN362','2eb60301322711c72e257bd76b9788bf','TN362','','2024-07-14 18:41:52',NULL,NULL),
 (139,'TN363','3dcb317a5049cc1995cc8b3479b172f1','TN363','','2024-07-14 18:41:52',NULL,NULL),
 (140,'TN364','48db0cceff9fbd751b3bdc3d1b006552','TN364','','2024-07-14 18:41:52',NULL,NULL),
 (141,'TN365','ef5f7e578351dc1d66b65cd4e828d1a9','TN365','','2024-07-14 18:41:52',NULL,NULL),
 (142,'TN366','5a6faa450f0686a07f460d847dabe9c0','TN366','','2024-07-14 18:41:52',NULL,NULL),
 (143,'TN367','7559ab50746c44c0400e66ed1dc7ad17','TN367','','2024-07-14 18:41:52',NULL,NULL),
 (144,'TN368','bd5d6a0cfc2dbcb73719a9649d726d6f','TN368','','2024-07-14 18:41:52',NULL,NULL),
 (145,'TN369','1221fc3079cabe99379da22e55622e28','TN369','','2024-07-14 18:41:52',NULL,NULL),
 (146,'TN370','1a9c4fdc2810aa920b3c47fd486365ba','TN370','','2024-07-14 18:41:52',NULL,NULL),
 (147,'TN371','5a64468c654f7ec31186383a37c8713b','TN371','','2024-07-14 18:41:52',NULL,NULL),
 (148,'TN372','5e7ab7716fe858018ce0ef26c941f554','TN372','','2024-07-14 18:41:52',NULL,NULL),
 (149,'TN373','a762cdd7f738fac5c342f79f4a103bc1','TN373','','2024-07-14 18:41:52',NULL,NULL),
 (150,'TN374','3549617fb4c128f9a549a032cda2b6f1','TN374','','2024-07-14 18:41:52',NULL,NULL),
 (151,'TN375','453f563afb3a2bd4efc788d5b37997ab','TN375','','2024-07-14 18:41:52',NULL,NULL),
 (152,'TN376','f950f29edd3c26e75b37e562ae4e3e25','TN376','','2024-07-14 18:41:52',NULL,NULL),
 (153,'TN377','78976b20628a42c31ae35cb2de25be41','TN377','','2024-07-14 18:41:52',NULL,NULL),
 (154,'TN378','5b31d7b935db9188490f06880756cf8c','TN378','','2024-07-14 18:41:52',NULL,NULL),
 (155,'TN379','206f4e6b957bef1d75ce9062973fbab6','TN379','','2024-07-14 18:41:52',NULL,NULL),
 (156,'TN380','344334785e67a21c91bc11c14b2b8c73','TN380','','2024-07-14 18:41:52',NULL,NULL),
 (157,'TN381','bee4743b966a41f0b4c69614e6ef6015','TN381','','2024-07-14 18:41:52',NULL,NULL),
 (158,'TN382','80a79e2ab22ec6c325c18ca909746cf3','TN382','','2024-07-14 18:41:52',NULL,NULL),
 (159,'TN383','eb7a265459e5056fa3682cd7b6e6dec1','TN383','','2024-07-14 18:41:52',NULL,NULL),
 (160,'TN384','90e61aae8f42e79317cc4e68f37c829e','TN384','','2024-07-14 18:41:52',NULL,NULL),
 (161,'TN385','956b0dc11a0c4230d994c00d055bb9fa','TN385','','2024-07-14 18:41:52',NULL,NULL),
 (162,'TN386','0061387582b1822a4b0d1d1e499b83f0','TN386','','2024-07-14 18:41:52',NULL,NULL),
 (163,'TN387','9f6f8049af82b7670f9521424ead3a7d','TN387','','2024-07-14 18:41:52',NULL,NULL),
 (164,'TN388','e0919b11bf7da8926cd21d0222aca6b9','TN388','','2024-07-14 18:41:52',NULL,NULL),
 (165,'TN389','5c65c4ff0957a0acb2267bf6d945a3b3','TN389','','2024-07-14 18:41:52',NULL,NULL),
 (166,'TN390','cbaaa63e5836e51fe9e4868650486efe','TN390','','2024-07-14 18:41:52',NULL,NULL),
 (167,'TN391','17efe2e6695232ae036f04ec0b4c26fd','TN391','','2024-07-14 18:41:52',NULL,NULL),
 (168,'TN392','6a5b5375137ab52529c342680976dc82','TN392','','2024-07-14 18:41:52',NULL,NULL),
 (169,'TN393','799dd607b5c049126059d6aaaf72cf89','TN393','','2024-07-14 18:41:52',NULL,NULL),
 (170,'TN394','23c00d263e234c9bc5b0f7a2fb46a30b','TN394','','2024-07-14 18:41:52',NULL,NULL),
 (171,'TN395','9047b9aa61bd85142c63dc73839809f3','TN395','','2024-07-14 18:41:52',NULL,NULL),
 (172,'TN396','b0f5cc845c41480963cdcf6a3c024e10','TN396','','2024-07-14 18:41:52',NULL,NULL),
 (173,'TN397','f5c0e21ce7ead90d1cf66caf2ff163c7','TN397','','2024-07-14 18:41:52',NULL,NULL),
 (174,'TN398','30589ea034fc3a60b6c1228248d4f914','TN398','','2024-07-14 18:41:52',NULL,NULL),
 (175,'TN399','9480a2dcd123a048467319e33364175a','TN399','','2024-07-14 18:41:53',NULL,NULL),
 (176,'TN400','097cd06a2bd8800d6be9034d83fd7384','TN400','','2024-07-14 18:41:53',NULL,NULL),
 (177,'H1','9c7852e00ff6c30652305c9fe1502d07','NITISH KUMAR','','2024-07-14 18:41:53',NULL,NULL),
 (178,'H2','cd52a3741975c282984fa0711660e0f3','PAVITHRA S','','2024-07-14 18:41:53',NULL,NULL),
 (179,'H3','d0c2d1936fe7d3bb79669dd21b017ec1','PRAGATHEESWARAN M','','2024-07-14 18:41:53',NULL,NULL),
 (180,'H4','fa157f24486837c8a894d34a26dc490e','PRAVEEN KUMAR K','','2024-07-14 18:41:53',NULL,NULL),
 (181,'H5','29cdadc97bdf1a572a5b30ddcfe31844','RAGHAV A B','','2024-07-14 18:41:53',NULL,NULL),
 (182,'H6','a78139568ac6786980ba7d6ee40b2ca3','RAGHUL M','','2024-07-14 18:41:53',NULL,NULL),
 (183,'H7','973349f28fd0c5048b309d9b06853f15','RAGURAM P','','2024-07-14 18:41:53',NULL,NULL),
 (184,'H8','c84f22eb9bd4b9b63e05be3f861af1a3','RAHUL KUMAR','','2024-07-14 18:41:53',NULL,NULL),
 (185,'H9','faa3c71954119747251ec83481254086','RAJESH KUMAR','','2024-07-14 18:41:53',NULL,NULL),
 (186,'H10','2f79ede021fe8275c47b57339c640826','RAJKUMAR P','','2024-07-14 18:41:53',NULL,NULL),
 (187,'H11','4eb5bf6d01b34149ee54bb5673e1ab7a','RAMAMOORTHI K','','2024-07-14 18:41:53',NULL,NULL),
 (188,'H12','1153f4953a36e0b22bbaed4a8a2541f0','SACHIN KUMAR S','','2024-07-14 18:41:53',NULL,NULL),
 (189,'H13','68b5d6c3c8c13b90114ca182b42fc129','SAHIL KUMAR R','','2024-07-14 18:41:53',NULL,NULL),
 (190,'H14','87a4224c14522da52348ce78f32d0f49','SAHIL RAJ','','2024-07-14 18:41:53',NULL,NULL),
 (191,'H15','feaefe39a40e9733a44f5cf916fe3b20','SANDHIYA S','','2024-07-14 18:41:53',NULL,NULL),
 (192,'H16','6d01e7f1a0aae7f67755e2e7cc76bae4','SANTHOSH V','','2024-07-14 18:41:53',NULL,NULL),
 (193,'H17','6719d4bca5fdff08071eba0f827f3c16','SANTHOSHKUMAR J','','2024-07-14 18:41:53',NULL,NULL),
 (194,'H18','832551b1eebf39b76fce34ab862ecb52','SATHIYA PRAKASH S','','2024-07-14 18:41:53',NULL,NULL),
 (195,'H19','edf5dbafa8fa3489c77e712b3378c419','SIVAPERUMAL C','','2024-07-14 18:41:53',NULL,NULL),
 (196,'H20','a610f2b2fb419cd9c90394fa65f00943','SRIRAM R','','2024-07-14 18:41:53',NULL,NULL),
 (197,'H21','004f6e523b6081c92b5c554da8ca586d','SUBASRI P','','2024-07-14 18:41:53',NULL,NULL),
 (198,'H22','00f8d63472917755a5d138f2fdc52e68','SUCHITRA V','','2024-07-14 18:41:53',NULL,NULL),
 (199,'H23','a89b96ec5b1166618a19526c68d702cc','SUJITHKUMAR A.S','','2024-07-14 18:41:53',NULL,NULL),
 (200,'H24','a1a6668c16ca99150ceeae7f5aa88a3c','SURENDAR V','','2024-07-14 18:41:53',NULL,NULL),
 (201,'H25','41ee6dccef7955272757c39f0b296687','SURESH K','','2024-07-14 18:41:53',NULL,NULL),
 (202,'H26','e690e19327167787e00cbcced5165b50','SURIYA S','','2024-07-14 18:41:53',NULL,NULL),
 (203,'H27','bef7d999916807801008da619d442683','SWETHA R','','2024-07-14 18:41:53',NULL,NULL),
 (204,'H28','768f55fdf1b33698367f79ed053302b4','THAMARAIKANNAN T','','2024-07-14 18:41:53',NULL,NULL),
 (205,'H29','94ec9670a9851b4b35660869850fb8aa','THANUSH R M','','2024-07-14 18:41:53',NULL,NULL),
 (206,'H30','f7d0f0105f179327e1d7ea51ee743f70','UMASHANKAR V','','2024-07-14 18:41:53',NULL,NULL),
 (207,'H31','3c3b9d05ecf9653908c57f38679d27b9','VARUN G','','2024-07-14 18:41:53',NULL,NULL),
 (208,'H32','f46c5a6e0b6c89e733f5b32ce1ae1e05','VASUPATHI N','','2024-07-14 18:41:53',NULL,NULL),
 (209,'H33','48b93f80123fd04dec7890778ea8cae1','VENKATESH PRASANA T','','2024-07-14 18:41:53',NULL,NULL),
 (210,'H34','0d551bca7f186bc8d4e5ff24df3c1079','VIDHUBALA G','','2024-07-14 18:41:53',NULL,NULL),
 (211,'H35','d7e8af81b02715d3a86fb82d4e3925d9','VIGNESH M','','2024-07-14 18:41:53',NULL,NULL),
 (212,'H36','5326f3723c9a4afb14a98ba9537ce82c','VIGNESH V','','2024-07-14 18:41:53',NULL,NULL),
 (213,'H37','ed4170aad9deff2ec3b57e0464160424','VIVEK P','','2024-07-14 18:41:53',NULL,NULL),
 (214,'H38','3940bd468d884f05cf1c789a5e32c57d','YOGESHWARAN M','','2024-07-14 18:41:53',NULL,NULL),
 (215,'H39','96186a948e49607382da75faa2888f58','AZEEM W','','2024-07-14 18:41:53',NULL,NULL),
 (216,'H40','8e7cc2145a6f46b85ea2eb921125ec54','DHAYANITHI S','','2024-07-14 18:41:53',NULL,NULL),
 (217,'H41','96ed6c950a58564c3e002c9430595314','GOPAL S','','2024-07-14 18:41:53',NULL,NULL),
 (218,'H42','71a37387c00fbe07527554891d0a7a9d','KALAIARASAN S','','2024-07-14 18:41:53',NULL,NULL),
 (219,'H43','62873bee84d762e35480e9a0a931ed91','KALPANA CHETTRI','','2024-07-14 18:41:53',NULL,NULL),
 (220,'H44','64061f4c5c0f2543f6688da0946dc2ee','KARTHIK RAJA S','','2024-07-14 18:41:53',NULL,NULL),
 (221,'H45','1b4730035c8a15a52783dc81d634c078','KAVIYARASU R','','2024-07-14 18:41:53',NULL,NULL),
 (222,'H46','30bfd45f52997f2c33d93d16cae41a97','KOMALA E','','2024-07-14 18:41:53',NULL,NULL),
 (223,'H47','986e7c97cc70855ed51b6c0c9d9fb52c','MAHAANAND R','','2024-07-14 18:41:53',NULL,NULL),
 (224,'H48','a4167b95332b7bad4147374e89b45a99','MAHALINGAM A','','2024-07-14 18:41:53',NULL,NULL),
 (225,'H49','4d684d9dfab0e6ff6c808722d89aaf26','MANOVASALOM V','','2024-07-14 18:41:53',NULL,NULL),
 (226,'H50','68d88469ea9d9dde3c97d9f0bbf44ac6','MOHAMMED NIHAL K M','','2024-07-14 18:41:53',NULL,NULL),
 (227,'H51','a413f25e00c68dd04d7d1eaba6781dcb','NANDHINI M','','2024-07-14 18:41:53',NULL,NULL),
 (228,'H52','ff7564be6ecee0093169d26faabd729a','NAVEEN P','','2024-07-14 18:41:53',NULL,NULL),
 (229,'H53','51a2d4eaa90c6d4ada3e96720801ce5a','NISHANTH S','','2024-07-14 18:41:53',NULL,NULL),
 (230,'H54','be7d52c5f2cce08eb81b371814c34114','SANTHOSH P','','2024-07-14 18:41:53',NULL,NULL),
 (231,'H55','e6b81e3b1b088011ca852ee91e2d60c5','SANU HANGMA SUBBA LIMBOO','','2024-07-14 18:41:53',NULL,NULL),
 (232,'H56','47cff52728199079e4c67fd3a5864739','SENGOTTAIYAN K','','2024-07-14 18:41:53',NULL,NULL),
 (233,'H57','3c71667a4f1e3d288cb026ab7aa9e925','SRIDHAR S','','2024-07-14 18:41:53',NULL,NULL),
 (234,'H58','90007d664b0f66aac3a60518bc56d17d','THIRUMURUGAN T','','2024-07-14 18:41:53',NULL,NULL),
 (235,'H59','750c645d8b0f8698e106f30ffa3682ee','VIGNESHWARAN S','','2024-07-14 18:41:53',NULL,NULL),
 (236,'H60','daae9503305cbd5105c20a8d62f19172','VISU C','','2024-07-14 18:41:53',NULL,NULL),
 (237,'H61','e5a6ced882d5fcf1c662cfe0ede44a46','AATRALARASU E','','2024-07-14 18:41:53',NULL,NULL),
 (238,'H62','973630d3b3105c5453b5d1b643d669fa','DHARANYA M','','2024-07-14 18:41:53',NULL,NULL),
 (239,'H63','d6f108715634c2a491f1521a0a7872d2','NIRMALA KUMARI','','2024-07-14 18:41:53',NULL,NULL),
 (240,'H64','0bac1fb8dfe497fd36543c38dce66d8d','SWEATHA R','','2024-07-14 18:41:53',NULL,NULL),
 (241,'H65','b979898c2d7802638b6926cc1c2914ca','NISANTH K','','2024-07-14 18:41:53',NULL,NULL),
 (242,'J1','7458af0574a5f676123d7babbf854bd6','ABINAYA K','','2024-07-14 18:41:53',NULL,NULL),
 (243,'J2','3969c4e8f0f432fbe23935996a7ce0a6','AJAI S V','','2024-07-14 18:41:53',NULL,NULL),
 (244,'J3','65a74f38959431c7dadc977f087e3fc6','AJAY KUMAR M','','2024-07-14 18:41:53',NULL,NULL),
 (245,'J4','92aac66673987cdbc08637f7e186052f','BALAJI S','','2024-07-14 18:41:53',NULL,NULL),
 (246,'J5','51ff98dc7a2a841e3a10a7df789d8fb0','DHANU SRI J','','2024-07-14 18:41:53',NULL,NULL),
 (247,'J6','ac3304de4b5316ec1cade29da1c2412b','DHANUSH K','','2024-07-14 18:41:53',NULL,NULL),
 (248,'J7','b26c7a367571de20026e3db6c576e87e','DHARUNSANKAR M','','2024-07-14 18:41:53',NULL,NULL),
 (249,'J8','537a85138dd3b33f12c3d1347c989411','DINESH R','','2024-07-14 18:41:53',NULL,NULL),
 (250,'J9','6df921f22649eb0d7a59e9899a3584cb','DIVYA BHARATHI R','','2024-07-14 18:41:53',NULL,NULL),
 (251,'J10','efda2919c70d020e8c87f4f1d311b6f8','DURAIPANDI S','','2024-07-14 18:41:53',NULL,NULL),
 (252,'J11','93d61e1c022f6e8a464080d3b41aef16','GIRI R','','2024-07-14 18:41:53',NULL,NULL),
 (253,'J12','670fc5c7e148fabe04199c87fe8ad619','GNANASELVI R','','2024-07-14 18:41:53',NULL,NULL),
 (254,'J13','e11f51a92f4ba10ebca44d10269f73c8','GOPINATH P','','2024-07-14 18:41:53',NULL,NULL),
 (255,'J14','6c8371b2783606a5b81bbea720799ac3','GOWTHAM S','','2024-07-14 18:41:53',NULL,NULL),
 (256,'J15','3b35b652651e6f45a6a05d98dcb6eba6','HARINISREE M','','2024-07-14 18:41:53',NULL,NULL),
 (257,'J16','5f5d9a6a3892f58404d0065d655d858d','HARISHREE A','','2024-07-14 18:41:53',NULL,NULL),
 (258,'J17','7ecc6b512c19b9935edf1d655a1a12e0','HEMAPRIYA S','','2024-07-14 18:41:53',NULL,NULL),
 (259,'J18','01273204db32ee8d59e4d681aff9fa8c','IBRAHEEM I','','2024-07-14 18:41:53',NULL,NULL),
 (260,'J19','f64524bf1990a95a8f91f70bbca86468','ILAMATHI R','','2024-07-14 18:41:53',NULL,NULL),
 (261,'J20','20935469e94a57cca986136669e4e78d','IMRANA KHATOON F','','2024-07-14 18:41:53',NULL,NULL),
 (262,'J21','51f19cb228eba96d9820ca7a0a568939','KALAISELVAN S','','2024-07-14 18:41:53',NULL,NULL),
 (263,'J22','1bef2c04f8bb74d8e90f5249edb015d0','KARTHIK R','','2024-07-14 18:41:53',NULL,NULL),
 (264,'J23','5df5a3979069673debff7970a3764aae','KATHIRESAN R','','2024-07-14 18:41:53',NULL,NULL),
 (265,'J24','b803f3e9d96ac67c56e38d85cdc7c3b3','KAYAL M','','2024-07-14 18:41:53',NULL,NULL),
 (266,'J25','03271ce9726d808d56d7111612131033','LOKESH KANNAN S','','2024-07-14 18:41:53',NULL,NULL),
 (267,'J26','bfa6086e140d6c8f9b38a5a79819403e','MILAN KUMAR','','2024-07-14 18:41:53',NULL,NULL),
 (268,'J27','4e81e4046ef7e3760ff2da5f5ec0a69d','MOHAMED JASEEL CK','','2024-07-14 18:41:53',NULL,NULL),
 (269,'J28','225cd06f5f577e5abee9f0384498902f','MOHAMED NAFAL','','2024-07-14 18:41:53',NULL,NULL),
 (270,'J29','8310ab8ac99e5a58a072cf165d6e0efb','MOHTASHIM SAQIB','','2024-07-14 18:41:53',NULL,NULL),
 (271,'J30','5f50d7efeeadc520b4cc1695335fcf38','NAVIN C','','2024-07-14 18:41:53',NULL,NULL),
 (272,'J31','3899dc63840645267caabdd26377b544','NISHANTHINI S','','2024-07-14 18:41:53',NULL,NULL),
 (273,'J32','236542ce60b93c67888fe5daaaf1bcb3','NITHIN R','','2024-07-14 18:41:53',NULL,NULL),
 (274,'J33','66fc78b38d7cb5a99d468a8666d5e8e0','PALANIVELU M','','2024-07-14 18:41:53',NULL,NULL),
 (275,'J34','349ea6b593f99d02b463156aee1a688f','PAVITHRA M','','2024-07-14 18:41:53',NULL,NULL),
 (276,'J35','3363a588e8c64d6b76ddc65371c679b3','POOVARASAN G','','2024-07-14 18:41:53',NULL,NULL),
 (277,'J36','086eb0718311f8efd8d8410075d8fd15','PRADUM KUMAR','','2024-07-14 18:41:53',NULL,NULL),
 (278,'J37','87df2a248ed396557043c471be7d746c','PRANAV N','','2024-07-14 18:41:53',NULL,NULL),
 (279,'J38','35ac8f994cf48a7453214af34751bc50','PRAVEEN KUMAR S','','2024-07-14 18:41:53',NULL,NULL),
 (280,'J39','62299198e59793525b731c1046761c44','PRAVEEN S','','2024-07-14 18:41:53',NULL,NULL),
 (281,'J40','1339eac2244f9d90d65af35052edf082','ROSHNIPRIYA S','','2024-07-14 18:41:53',NULL,NULL),
 (282,'J41','edc1023a8a98e9241216e5525a3dd433','SAKTHI PALANIVEL S','','2024-07-14 18:41:53',NULL,NULL),
 (283,'J42','c4983d685c2f08f0556cffcc910f759f','SANGISHWARAN M.V','','2024-07-14 18:41:53',NULL,NULL),
 (284,'J43','6e88de2d291ad96b1a61672dd4b5c79a','SANTHOSH S','','2024-07-14 18:41:53',NULL,NULL),
 (285,'J44','8901ec2b0d4cb25b54c87dda43913dc2','SATHEESH KUMAR A','','2024-07-14 18:41:53',NULL,NULL),
 (286,'J45','648a0e3359643235cb5d581c412c52ed','SELVA KARTHIGA T','','2024-07-14 18:41:53',NULL,NULL),
 (287,'J46','69dfd1fe381fd30302f3bc6ad4100b34','SETHU RADHAKRISHNAN','','2024-07-14 18:41:53',NULL,NULL),
 (288,'J47','f40c262d2fa3b6316bd92315177b9b02','SIBIRAJ S','','2024-07-14 18:41:53',NULL,NULL),
 (289,'J48','cc1821cd48b6f36b3f521b68384e58e4','SOWBARNIKA S','','2024-07-14 18:41:53',NULL,NULL),
 (290,'J49','7e70974d35a48113c112dc738c756f1e','SOWMIYA M','','2024-07-14 18:41:53',NULL,NULL),
 (291,'J50','6b77be9a03e118d184c28b4d341dd77c','SUSHIL KUMAR','','2024-07-14 18:41:53',NULL,NULL),
 (292,'J51','7ca12fd82dcb12bc81eb597daf2d500c','UMAR KATHAF A','','2024-07-14 18:41:53',NULL,NULL),
 (293,'J52','50b44fa924d10bab1d2da4d0faf6813f','UMESH U','','2024-07-14 18:41:53',NULL,NULL),
 (294,'J53','08afd4107236eb9ffe5a86f4b1cf26b6','VANITHA P','','2024-07-14 18:41:53',NULL,NULL),
 (295,'J54','6a845e510f8ab91d8207665b835d8055','VEDHASHINI R','','2024-07-14 18:41:53',NULL,NULL),
 (296,'J55','65a11bc4e78e0d8dc955f50e973d1251','VENU KRISHNAN B','','2024-07-14 18:41:53',NULL,NULL),
 (297,'J56','08eedb6a936eeb655ddbbebadbc2bbb6','VIDHYASRI M','','2024-07-14 18:41:53',NULL,NULL),
 (298,'J57','1b5eb3ece4b18b99e55cef6096817ee7','VIGNESH K','','2024-07-14 18:41:53',NULL,NULL),
 (299,'J58','11bab16c35b842b7237129565bd9a54e','AKASH G','','2024-07-14 18:41:53',NULL,NULL),
 (300,'J59','5cc073d158f132db32759dccb3a7e7d1','ADARSH SHARMA','','2024-07-14 18:41:53',NULL,NULL),
 (301,'J60','8e519d99bdc87e119059946dd5032c1a','AZARUDDIN R','','2024-07-14 18:41:53',NULL,NULL),
 (302,'J61','e5b18c3c5ee818086f0e4ecccdc35d58','DHINESHKUMAR M','','2024-07-14 18:41:53',NULL,NULL),
 (303,'J62','3af0f0297f94659f1d2dbbf3eaf4b9dc','EVANGELINE CHRISTINA J','','2024-07-14 18:41:53',NULL,NULL),
 (304,'J63','269a4d3b2ecce7c1d0247c0b1bac120f','PRASANTH M','','2024-07-14 18:41:53',NULL,NULL),
 (305,'J64','0d3a794e4701961935786e12ac301eab','SUHANA KHANUM','','2024-07-14 18:41:53',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;




/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
