-- MySQL Administrator dump 1.4
--
-- ------------------------------------------------------
-- Server version	5.5.8-log


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


--
-- Create schema aptonlineone
--

CREATE DATABASE IF NOT EXISTS aptonlineone;
USE aptonlineone;

--
-- Definition of table `aa_link`
--

DROP TABLE IF EXISTS `aa_link`;
CREATE TABLE `aa_link` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_text` varchar(1000) NOT NULL DEFAULT ' ',
  `link_url` varchar(1000) NOT NULL DEFAULT ' ',
  `order_no` int(11) NOT NULL DEFAULT '0',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_link`
--

/*!40000 ALTER TABLE `aa_link` DISABLE KEYS */;
/*!40000 ALTER TABLE `aa_link` ENABLE KEYS */;


--
-- Definition of table `aa_make_score`
--

DROP TABLE IF EXISTS `aa_make_score`;
CREATE TABLE `aa_make_score` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `report_name` varchar(100) NOT NULL DEFAULT ' ',
  `test_papers` varchar(2000) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`report_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_make_score`
--

/*!40000 ALTER TABLE `aa_make_score` DISABLE KEYS */;
INSERT INTO `aa_make_score` (`report_id`,`report_name`,`test_papers`,`field_list`,`field_caption`,`user_list`,`is_active`) VALUES 
 (15,'Assessment Test #001','Assessment Test #001','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID','*',1);
/*!40000 ALTER TABLE `aa_make_score` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_field`
--

DROP TABLE IF EXISTS `aa_mkrpt_field`;
CREATE TABLE `aa_mkrpt_field` (
  `field_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_name` varchar(250) NOT NULL DEFAULT ' ',
  `field_list` varchar(1000) NOT NULL DEFAULT ' ',
  `field_caption` varchar(1000) NOT NULL DEFAULT ' ',
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_field`
--

/*!40000 ALTER TABLE `aa_mkrpt_field` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_field` (`field_id`,`field_name`,`field_list`,`field_caption`,`is_active`) VALUES 
 (1,'Single Test Paper - Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Login User ID',0),
 (2,'Single Test Paper - Test Started At(OFF), Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (3,'Two Test Paper - Test Started At, Time Spent, Login ID at Last','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (4,'Three Test Paper - Test Started At(OFF), Time Spent, Login ID at Last','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, answered_2, score_2, attendance_2, TimeSpent_2, answered_3, score_3, attendance_3, TimeSpent_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins)',0),
 (5,'Seven Test Paper - Scores Only, Login ID at Last','sno, fullname, score_1, score_2, score_3, score_4, score_5, score_6, score_7, username','S. No., Name of Student, Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Score (Out of ~qn_count~), Login User ID',0),
 (6,'Four Test Paper - Test Started At, Time Spent, Login ID Bef Name','sno, fullname, answered_1, score_1, attendance_1, TestStartedAt_1, TimeSpent_1, answered_2, score_2, attendance_2, TestStartedAt_2, TimeSpent_2, answered_3, score_3, attendance_3, TestStartedAt_3, TimeSpent_3, answered_4, score_4, attendance_4, TestStartedAt_4, TimeSpent_4, username','S. No., Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Test Started At, Time Spent (Max ~time_limit~ mins), Login User ID',0),
 (7,'Analysis - Three Test Paper - (+Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_1, ScorePer_1, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_1, ScorePer_1, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Remark',0),
 (8,'Analysis + Rule - Three Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0),
 (9,'Analysis + Rule - One Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rules For Remark, Remarks',1),
 (10,'Analysis + Rule - Four Test Paper - (+Rule For Remark +Remark) Test Started At, Time Spent, Login ID Bef Name','sno, username, fullname, answered_1, score_1, attendance_1, TimeSpent_1, TimePer_1, ScorePer_1, RuleRemark_1, Remark_1, answered_2, score_2, attendance_2, TimeSpent_2, TimePer_2, ScorePer_2, RuleRemark_2, Remark_2, answered_3, score_3, attendance_3, TimeSpent_3, TimePer_3, ScorePer_3, RuleRemark_3, Remark_3, answered_4, score_4, attendance_4, TimeSpent_4, TimePer_4, ScorePer_4, RuleRemark_4, Remark_4','S. No., Login ID, Name of Student, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins), Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark, Qns Answered (Out of ~qn_count~), Score (Out of ~qn_count~), Attendance, Time Spent (Max ~time_limit~ mins),Time %(Max 100%), Score %(Max 100%), Rule For Remark, Remark',0);
/*!40000 ALTER TABLE `aa_mkrpt_field` ENABLE KEYS */;


--
-- Definition of table `aa_mkrpt_usrgroup`
--

DROP TABLE IF EXISTS `aa_mkrpt_usrgroup`;
CREATE TABLE `aa_mkrpt_usrgroup` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL DEFAULT ' ',
  `user_list` varchar(8000) NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aa_mkrpt_usrgroup`
--

/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` DISABLE KEYS */;
INSERT INTO `aa_mkrpt_usrgroup` (`group_id`,`group_name`,`user_list`,`is_active`) VALUES 
 (2,'Ultra','*',0),
 (11,'Ultra','*',1);
/*!40000 ALTER TABLE `aa_mkrpt_usrgroup` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_edit`
--

DROP TABLE IF EXISTS `aaaq_bridge_edit`;
CREATE TABLE `aaaq_bridge_edit` (
  `edit_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL,
  `src_text` longtext NOT NULL,
  `edited_text` longtext,
  `has_edited` int(11) DEFAULT '0',
  PRIMARY KEY (`edit_id`),
  UNIQUE KEY `edit_number` (`edit_number`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_edit`
--

/*!40000 ALTER TABLE `aaaq_bridge_edit` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_edit` (`edit_id`,`edit_number`,`src_text`,`edited_text`,`has_edited`) VALUES 
 (1,1,'<div>\n	<p>\n		Get elements into 2 dimensional matrix. Print the element only if it is prime number.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get row and column value of a 2 dimensional matrix.</p>\n	<p>\n		In second line, get the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print only prime numbers from the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>findprime()</strong>, to find the prime numbers from the matrix and there is no negative prime number.</p>\n	<p>\n		3.&nbsp;Array size should not exceed 5 x 5.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 2\n10 6 5 8 7 2</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>5 7 2 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>3 3\n8 12 13 9 7 29 2 5 25</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>13 7 29 2 5 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.&nbsp;String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 2\n10 6 5 8 7 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n5 7 2 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n3 3\n8 12 13 9 7 29 2 5 25</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n13 7 29 2 5 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (2,2,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>16</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Perfect Square root</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>-1</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get list of values into an array and find perfect square root number or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer that indicates no of elements.</p>\n	<p>\n		In second line give list of values one by one.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the perfect square root numbers.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Get values one by one. After getting all the values, that must be passed to one function called checksquareroot(). If the number is perfect square root then print the number otherwise don&rsquo;t print that number. If there is no perfect number in that list print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n16</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nPerfect Square root</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n-1</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (3,3,'<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>2 3</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>8</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>2 -3</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0.12</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the marks of the student and find the maximum mark.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the maximum value from the list.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Allocates n memory allocations dynamically and get the values. Then find the maximum value from the list&nbsp;</p>\n	<p>\n		3. Maximum no of elements should not exceed 100.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 3</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n8</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 -3</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0.12</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (4,4,'<div>\n	<p>\n		Get two strings from the user as input and check anagram or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one string.</p>\n	<p>\n		In second line, get another string.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the string is anagram or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. After getting two strings, sort the two strings character sequence using sort() function and compare two strings using compare() if the two strings are equal only. Otherwise don&rsquo;t start the process.</p>\n	<p>\n		3.String.h is not permitted. String maximum length is 20.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>Program\nrogpmar</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Not Anagram</pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>abcd\nbdca</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>Anagram</pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values and print the unique values from the list.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no. of elements.</p>\n	<p>\n		In second line, give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		Print the unique values of the matrix.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Allocate the memory dynamically for n values. If matrix is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.You have to write a program using function removeduplicate() and you have to pass two arguments. First argument is array and second one is no of values.</p>\n	<p>\n		4.Array size should not exceed 100.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\nProgram\nrogpmar</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot Anagram</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\nabcd\nbdca</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nAnagram</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (5,5,'<div>\n <p>\n  Get two marks from the user and find the two marks are equal or not.</p>\n <div>\n  <strong>Input Format:</strong></div>\n <p>\n  In the first line, get the input for two integers <strong>m1</strong> and <strong>m2</strong>.</p>\n <div>\n  <strong>Output Format:</strong></div>\n <p>\n  In the second line, print the output <strong>Equal</strong> or <strong>Not equal</strong></p>\n <div>\n  <strong>Note (Important Instruction):</strong></div>\n <p>\n  1. Do not give extra text during input and output, other than in the test cases.</p>\n <p>\n  2. Don&rsquo;t use relational operators for checking the condition.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>10 12</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Not equal</pre>\n  </div>\n </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\"><div>\n   <strong>Input</strong></div>\n  <div>\n   <pre>2 2</pre>\n  </div>\n  <div>\n   <strong>Output</strong></div>\n  <div>\n   <pre>Equal</pre>\n  </div>\n </div>','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (6,6,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square</strong> root. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (7,7,'<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n','<div>\n	<p>\n		Get the positive integer from the user and find the number is perfect square root or not.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the second line, Print perfect square or not.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Write a function called <strong>checksqrt()</strong> and pass one positive integer as an argument. Check that number is perfect square root or not. If it is so, print <strong>Perfect Square root</strong>. Otherwise, print -1.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10 12</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nNot equal</pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n2 2</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\nEqual</pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1),
 (8,8,'<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ','<h2>\n        <strong>Test Organized by</strong></h2>\n    <h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\">\n        <span style=\"color:red\">Apt Training Resources</span></h2>\n    <h2>\n        <strong>Total number of questions: 10 Questions</strong></h2>\n    <h2>\n        <strong>Maximum Time Limit: 20 minutes</strong></h2>\n    <p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\n        Please click on the&nbsp;<strong>Continue</strong>&nbsp;button only after reading the instructions thoroughly.</p>\n    <p>\n        <strong><u>Instructions:</u></strong></p>\n    <p>\n        1. For every question, click the answer option &amp; then click the&nbsp;<strong>Save</strong>&nbsp;button to save the answer for that particular question. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        2. Do not keep on pressing the&nbsp;<strong>Save </strong>button for the same question again &amp; again. Clicking once is enough.</p>\n    <p>\n        3. Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the&nbsp;<strong>Save </strong>button for that question, that you are currently attending in the test.&nbsp;</p>\n    <p>\n        4. If after choosing the correct option, you click on the&nbsp;<strong>Previous</strong>&nbsp;button, instead of the&nbsp;<strong>Save </strong>button, even then answers will be saved. Don&rsquo;t worry.</p>\n    <p>\n        5. If you click the correct option and then click the&nbsp;<strong>Question number link</strong>&nbsp;in the right or in the bottom or if u click the <strong>Instruction page link</strong>, without pressing the&nbsp;<strong>Save </strong>button, answer won&rsquo;t be saved. Clicking on the&nbsp;<strong>Save </strong>button is essential for the answer to be saved.</p>\n    <p>\n        6. If you exceed the time limit for the test, the answers for which u have clicked the&nbsp;<strong>Save </strong>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n    <p>\n        7. If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n    <p>\n        8. Once you have finished the test, click the&nbsp;<strong>Finish</strong>&nbsp;button available in the top right corner.</p>\n        ',0),
 (9,9,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>',0),
 (10,10,'<div>\n	<p>\n		Get the list of values into an array. Print the unique values only.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get one positive integer, that indicates no of elements.</p>\n	<p>\n		In second line give the list of values.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In the third line, Print the unique values of the array.</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. If array is having duplicate values, that values will be printed only once.</p>\n	<p>\n		3.&nbsp;You have to write a program using function <strong>removeduplicate()</strong> and you have to pass two arguments. First argument is array name and second one is number of values.</p>\n	<p>\n		4. Array size should not exceed 100.</p>\n</div>\n<div><strong>Test Case 1</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>10\n1 2 3 1 8 2 3 9 4 5</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>1 2 3 8 9 4 5 </pre>\n     </div>\n    </div><div><strong>Test Case 2</strong></div><div  style=\"margin-left:0.5in;\">\n    <div><strong>Input</strong></div>\n   <div>\n    <pre>5\n0 1 0 1 1</pre>\n    </div>\n    <div>\n     <strong>Output</strong></div>\n    <div>\n     <pre>0 1 </pre>\n     </div>\n    </div>','<div>\n	<p>\n		Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.</p>\n	<div>\n		<strong>Input Format:</strong></div>\n	<p>\n		In the first line, get two integers.</p>\n	<div>\n		<strong>Output Format:</strong></div>\n	<p>\n		In second line,&nbsp;Print the power(a,b).</p>\n	<div>\n		<strong>Note (Important Instruction):</strong></div>\n	<p>\n		1. Do not give extra text during input and output, other than in the test cases.</p>\n	<p>\n		2. Find the power(a,b) without using pow() in math.h&nbsp;</p>\n	<p>\n		3. You have to write a program using function called power() and you have to pass two arguments. First argument is the base value and second argument is power value.</p>\n	<p>\n		4. Positive and negative values are applicable.</p>\n</div>\n<div>\n	<strong>Test Case 1</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n10\n1 2 3 1 8 2 3 9 4 5</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n1 2 3 8 9 4 5 </pre>\n	</div>\n</div>\n<div>\n	<strong>Test Case 2</strong></div>\n<div style=\"margin-left:0.5in;\">\n	<div>\n		<strong>Input</strong></div>\n	<div>\n		<pre>\n5\n0 1 0 1 1</pre>\n	</div>\n	<div>\n		<strong>Output</strong></div>\n	<div>\n		<pre>\n0 1 </pre>\n	</div>\n</div>\n<p>\n	&nbsp;</p>\n',1);
/*!40000 ALTER TABLE `aaaq_bridge_edit` ENABLE KEYS */;


--
-- Definition of table `aaaq_bridge_pref`
--

DROP TABLE IF EXISTS `aaaq_bridge_pref`;
CREATE TABLE `aaaq_bridge_pref` (
  `pref_id` int(11) NOT NULL AUTO_INCREMENT,
  `edit_number` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`pref_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aaaq_bridge_pref`
--

/*!40000 ALTER TABLE `aaaq_bridge_pref` DISABLE KEYS */;
INSERT INTO `aaaq_bridge_pref` (`pref_id`,`edit_number`) VALUES 
 (1,4);
/*!40000 ALTER TABLE `aaaq_bridge_pref` ENABLE KEYS */;


--
-- Definition of table `answers`
--

DROP TABLE IF EXISTS `answers`;
CREATE TABLE `answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_image` varchar(450) CHARACTER SET utf8 DEFAULT NULL,
  `correct_answer` int(11) NOT NULL,
  `priority` int(11) DEFAULT NULL,
  `correct_answer_text` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `answer_pos` int(11) NOT NULL DEFAULT '0',
  `parent_id` int(11) NOT NULL,
  `answer_text_eng` varchar(800) CHARACTER SET utf8 DEFAULT NULL,
  `control_type` int(11) DEFAULT NULL,
  `answer_parent_id` int(11) DEFAULT NULL,
  `text_unit` char(10) CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`id`),
  KEY `group_id` (`group_id`),
  CONSTRAINT `answers_ibfk_1` FOREIGN KEY (`group_id`) REFERENCES `question_groups` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1241 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

/*!40000 ALTER TABLE `answers` DISABLE KEYS */;
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1,1,'startle',NULL,0,0,'',0,0,NULL,1,0,''),
 (2,1,'fix',NULL,1,0,'',0,0,NULL,1,0,''),
 (3,1,'trouble',NULL,0,0,'',0,0,NULL,1,0,''),
 (4,1,'confusion',NULL,0,0,'',0,0,NULL,1,0,''),
 (5,2,'replace',NULL,0,0,'',0,0,NULL,1,0,''),
 (6,2,'repeat',NULL,0,0,'',0,0,NULL,1,0,''),
 (7,2,'restore',NULL,0,0,'',0,0,NULL,1,0,''),
 (8,2,'regain',NULL,1,0,'',0,0,NULL,1,0,''),
 (9,3,'gained',NULL,0,0,'',0,0,NULL,1,0,''),
 (10,3,'remunerated',NULL,0,0,'',0,0,NULL,1,0,''),
 (11,3,'recalled',NULL,1,0,'',0,0,NULL,1,0,''),
 (12,3,'recovered',NULL,0,0,'',0,0,NULL,1,0,''),
 (13,4,'acronym',NULL,1,0,'',0,0,NULL,1,0,''),
 (14,4,'termin',NULL,0,0,'',0,0,NULL,1,0,''),
 (15,4,'malaprop',NULL,0,0,'',0,0,NULL,1,0,''),
 (16,4,'collocation',NULL,0,0,'',0,0,NULL,1,0,''),
 (17,5,'off',NULL,0,0,'',0,0,NULL,1,0,''),
 (18,5,'of',NULL,1,0,'',0,0,NULL,1,0,''),
 (19,5,'to',NULL,0,0,'',0,0,NULL,1,0,''),
 (20,5,'with',NULL,0,0,'',0,0,NULL,1,0,''),
 (21,6,'Ninth',NULL,0,0,'',0,0,NULL,1,0,''),
 (22,6,'the Nine',NULL,0,0,'',0,0,NULL,1,0,''),
 (23,6,'Nine',NULL,1,0,'',0,0,NULL,1,0,''),
 (24,6,'Nineth',NULL,0,0,'',0,0,NULL,1,0,''),
 (25,7,'of',NULL,0,0,'',0,0,NULL,1,0,''),
 (26,7,'in',NULL,0,0,'',0,0,NULL,1,0,''),
 (27,7,'about',NULL,0,0,'',0,0,NULL,1,0,''),
 (28,7,'at',NULL,1,0,'',0,0,NULL,1,0,''),
 (29,8,'of',NULL,1,0,'',0,0,NULL,1,0,''),
 (30,8,'by',NULL,0,0,'',0,0,NULL,1,0,''),
 (31,8,'in',NULL,0,0,'',0,0,NULL,1,0,''),
 (32,8,'to',NULL,0,0,'',0,0,NULL,1,0,''),
 (33,9,'on',NULL,0,0,'',0,0,NULL,1,0,''),
 (34,9,'in',NULL,0,0,'',0,0,NULL,1,0,''),
 (35,9,'over',NULL,1,0,'',0,0,NULL,1,0,''),
 (36,9,'by',NULL,0,0,'',0,0,NULL,1,0,''),
 (37,10,'deflected',NULL,0,0,'',0,0,NULL,1,0,''),
 (38,10,'diverted',NULL,1,0,'',0,0,NULL,1,0,''),
 (39,10,'shifted',NULL,0,0,'',0,0,NULL,1,0,''),
 (40,10,'reverted',NULL,0,0,'',0,0,NULL,1,0,''),
 (41,11,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (42,11,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (43,11,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (44,11,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (45,12,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (46,12,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (47,12,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (48,12,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (49,13,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (50,13,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (51,13,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (52,13,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (53,14,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (54,14,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (55,14,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (56,14,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (57,15,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (58,15,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (59,15,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (60,15,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (61,16,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (62,16,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (63,16,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (64,16,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (65,17,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (66,17,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (67,17,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (68,17,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (69,18,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (70,18,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (71,18,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (72,18,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (73,19,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (74,19,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (75,19,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (76,19,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (77,20,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (78,20,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (79,20,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (80,20,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (81,21,'Madhya Pradesh : Diamond',NULL,1,0,'',0,0,NULL,1,0,''),
 (82,21,'Madhya Pradesh : Iron',NULL,0,0,'',0,0,NULL,1,0,''),
 (83,21,'Madhya Pradesh : Copper',NULL,0,0,'',0,0,NULL,1,0,''),
 (84,21,'Madhya Pradesh : Silver',NULL,0,0,'',0,0,NULL,1,0,''),
 (85,22,'Play',NULL,1,0,'',0,0,NULL,1,0,''),
 (86,22,'Activity',NULL,0,0,'',0,0,NULL,1,0,''),
 (87,22,'Book',NULL,0,0,'',0,0,NULL,1,0,''),
 (88,22,'Text',NULL,0,0,'',0,0,NULL,1,0,''),
 (89,23,'Metal',NULL,0,0,'',0,0,NULL,1,0,''),
 (90,23,'Directions',NULL,0,0,'',0,0,NULL,1,0,''),
 (91,23,'Attraction',NULL,1,0,'',0,0,NULL,1,0,''),
 (92,23,'Desert',NULL,0,0,'',0,0,NULL,1,0,''),
 (93,24,'Music',NULL,0,0,'',0,0,NULL,1,0,''),
 (94,24,'Painter',NULL,1,0,'',0,0,NULL,1,0,''),
 (95,24,'Pallet',NULL,0,0,'',0,0,NULL,1,0,''),
 (96,24,'Appreciation',NULL,0,0,'',0,0,NULL,1,0,''),
 (97,25,'First : second',NULL,0,0,'',0,0,NULL,1,0,''),
 (98,25,'Present : Past',NULL,0,0,'',0,0,NULL,1,0,''),
 (99,25,'Contemporary : Historic',NULL,0,0,'',0,0,NULL,1,0,''),
 (100,25,'Successor : Predecessor',NULL,1,0,'',0,0,NULL,1,0,''),
 (101,26,'Weight',NULL,0,0,'',0,0,NULL,1,0,''),
 (102,26,'Flavour',NULL,0,0,'',0,0,NULL,1,0,''),
 (103,26,'Complexion',NULL,1,0,'',0,0,NULL,1,0,''),
 (104,26,'Puzzle',NULL,0,0,'',0,0,NULL,1,0,''),
 (105,27,'Liquid : Litre',NULL,1,0,'',0,0,NULL,1,0,''),
 (106,27,'Bushel :corn',NULL,0,0,'',0,0,NULL,1,0,''),
 (107,27,'Weight : Scale',NULL,0,0,'',0,0,NULL,1,0,''),
 (108,27,'Fame : Television',NULL,0,0,'',0,0,NULL,1,0,''),
 (109,28,'Work : Environment',NULL,0,0,'',0,0,NULL,1,0,''),
 (110,28,'Work : Engagement',NULL,0,0,'',0,0,NULL,1,0,''),
 (111,28,'Work : Experience',NULL,1,0,'',0,0,NULL,1,0,''),
 (112,28,'Work : Experiment',NULL,0,0,'',0,0,NULL,1,0,''),
 (113,29,'Water',NULL,0,0,'',0,0,NULL,1,0,''),
 (114,29,'Crow',NULL,0,0,'',0,0,NULL,1,0,''),
 (115,29,'Farm',NULL,0,0,'',0,0,NULL,1,0,''),
 (116,29,'Reap',NULL,1,0,'',0,0,NULL,1,0,''),
 (117,30,'Septet',NULL,0,0,'',0,0,NULL,1,0,''),
 (118,30,'Quartet',NULL,0,0,'',0,0,NULL,1,0,''),
 (119,30,'Binary',NULL,1,0,'',0,0,NULL,1,0,''),
 (120,30,'Quince',NULL,0,0,'',0,0,NULL,1,0,''),
 (121,31,'lastly',NULL,0,0,'',0,0,NULL,1,0,''),
 (122,31,'commonly',NULL,0,0,'',0,0,NULL,1,0,''),
 (123,31,'simply',NULL,1,0,'',0,0,NULL,1,0,''),
 (124,31,'uniquely',NULL,0,0,'',0,0,NULL,1,0,''),
 (125,32,'common',NULL,0,0,'',0,0,NULL,1,0,''),
 (126,32,'last',NULL,1,0,'',0,0,NULL,1,0,''),
 (127,32,'simple',NULL,0,0,'',0,0,NULL,1,0,''),
 (128,32,'unique',NULL,0,0,'',0,0,NULL,1,0,''),
 (129,33,'do',NULL,0,0,'',0,0,NULL,1,0,''),
 (130,33,'select',NULL,0,0,'',0,0,NULL,1,0,''),
 (131,33,'prepare',NULL,0,0,'',0,0,NULL,1,0,''),
 (132,33,'make',NULL,1,0,'',0,0,NULL,1,0,''),
 (133,34,'over',NULL,0,0,'',0,0,NULL,1,0,''),
 (134,34,'against',NULL,0,0,'',0,0,NULL,1,0,''),
 (135,34,'to',NULL,1,0,'',0,0,NULL,1,0,''),
 (136,34,'in',NULL,0,0,'',0,0,NULL,1,0,''),
 (137,35,'had',NULL,1,0,'',0,0,NULL,1,0,''),
 (138,35,'was',NULL,0,0,'',0,0,NULL,1,0,''),
 (139,35,'is',NULL,0,0,'',0,0,NULL,1,0,''),
 (140,35,'have',NULL,0,0,'',0,0,NULL,1,0,''),
 (141,36,'nor',NULL,0,0,'',0,0,NULL,1,0,''),
 (142,36,'but',NULL,0,0,'',0,0,NULL,1,0,''),
 (143,36,'or',NULL,1,0,'',0,0,NULL,1,0,''),
 (144,36,'and',NULL,0,0,'',0,0,NULL,1,0,''),
 (145,37,'with',NULL,0,0,'',0,0,NULL,1,0,''),
 (146,37,'by',NULL,0,0,'',0,0,NULL,1,0,''),
 (147,37,'in',NULL,0,0,'',0,0,NULL,1,0,''),
 (148,37,'of',NULL,1,0,'',0,0,NULL,1,0,''),
 (149,38,'listen',NULL,0,0,'',0,0,NULL,1,0,''),
 (150,38,'get',NULL,1,0,'',0,0,NULL,1,0,''),
 (151,38,'understood',NULL,0,0,'',0,0,NULL,1,0,''),
 (152,38,'understand',NULL,0,0,'',0,0,NULL,1,0,''),
 (153,39,'know',NULL,1,0,'',0,0,NULL,1,0,''),
 (154,39,'knew',NULL,0,0,'',0,0,NULL,1,0,''),
 (155,39,'knows',NULL,0,0,'',0,0,NULL,1,0,''),
 (156,39,'known',NULL,0,0,'',0,0,NULL,1,0,''),
 (157,40,'going',NULL,0,0,'',0,0,NULL,1,0,''),
 (158,40,'go',NULL,0,0,'',0,0,NULL,1,0,''),
 (159,40,'gone',NULL,1,0,'',0,0,NULL,1,0,''),
 (160,40,'went',NULL,0,0,'',0,0,NULL,1,0,''),
 (161,41,'crowd',NULL,0,0,'',0,0,NULL,1,0,''),
 (162,41,'groups',NULL,0,0,'',0,0,NULL,1,0,''),
 (163,41,'men',NULL,1,0,'',0,0,NULL,1,0,''),
 (164,41,'mobs',NULL,0,0,'',0,0,NULL,1,0,''),
 (165,42,'impossible',NULL,1,0,'',0,0,NULL,1,0,''),
 (166,42,'likely',NULL,0,0,'',0,0,NULL,1,0,''),
 (167,42,'unlikely',NULL,0,0,'',0,0,NULL,1,0,''),
 (168,42,'possible',NULL,0,0,'',0,0,NULL,1,0,''),
 (169,43,'cruelties',NULL,0,0,'',0,0,NULL,1,0,''),
 (170,43,'misdeeds',NULL,0,0,'',0,0,NULL,1,0,''),
 (171,43,'brutalities',NULL,1,0,'',0,0,NULL,1,0,''),
 (172,43,'actions',NULL,0,0,'',0,0,NULL,1,0,''),
 (173,44,'stands',NULL,0,0,'',0,0,NULL,1,0,''),
 (174,44,'hearts',NULL,1,0,'',0,0,NULL,1,0,''),
 (175,44,'minds',NULL,0,0,'',0,0,NULL,1,0,''),
 (176,44,'decisions',NULL,0,0,'',0,0,NULL,1,0,''),
 (177,45,'you',NULL,0,0,'',0,0,NULL,1,0,''),
 (178,45,'us',NULL,0,0,'',0,0,NULL,1,0,''),
 (179,45,'people',NULL,0,0,'',0,0,NULL,1,0,''),
 (180,45,'them',NULL,1,0,'',0,0,NULL,1,0,''),
 (181,46,'humanity',NULL,1,0,'',0,0,NULL,1,0,''),
 (182,46,'nature',NULL,0,0,'',0,0,NULL,1,0,''),
 (183,46,'life',NULL,0,0,'',0,0,NULL,1,0,''),
 (184,46,'behaviour',NULL,0,0,'',0,0,NULL,1,0,''),
 (185,47,'continue',NULL,0,0,'',0,0,NULL,1,0,''),
 (186,47,'cease',NULL,1,0,'',0,0,NULL,1,0,''),
 (187,47,'start',NULL,0,0,'',0,0,NULL,1,0,''),
 (188,47,'begin',NULL,0,0,'',0,0,NULL,1,0,''),
 (189,48,'committee',NULL,0,0,'',0,0,NULL,1,0,''),
 (190,48,'government',NULL,0,0,'',0,0,NULL,1,0,''),
 (191,48,'organisation',NULL,0,0,'',0,0,NULL,1,0,''),
 (192,48,'body',NULL,1,0,'',0,0,NULL,1,0,''),
 (193,49,'less',NULL,0,0,'',0,0,NULL,1,0,''),
 (194,49,'further',NULL,0,0,'',0,0,NULL,1,0,''),
 (195,49,'longer',NULL,1,0,'',0,0,NULL,1,0,''),
 (196,49,'more',NULL,0,0,'',0,0,NULL,1,0,''),
 (197,50,'men',NULL,1,0,'',0,0,NULL,1,0,''),
 (198,50,'man',NULL,0,0,'',0,0,NULL,1,0,''),
 (199,50,'god',NULL,0,0,'',0,0,NULL,1,0,''),
 (200,50,'gods',NULL,0,0,'',0,0,NULL,1,0,''),
 (201,51,'active',NULL,0,0,'',0,0,NULL,1,0,''),
 (202,51,'advanced',NULL,0,0,'',0,0,NULL,1,0,''),
 (203,51,'expert',NULL,1,0,'',0,0,NULL,1,0,''),
 (204,51,'experienced',NULL,0,0,'',0,0,NULL,1,0,''),
 (205,52,'certain',NULL,0,0,'',0,0,NULL,1,0,''),
 (206,52,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (207,52,'some',NULL,0,0,'',0,0,NULL,1,0,''),
 (208,52,'the',NULL,0,0,'',0,0,NULL,1,0,''),
 (209,53,'calculate',NULL,1,0,'',0,0,NULL,1,0,''),
 (210,53,'prophesy',NULL,0,0,'',0,0,NULL,1,0,''),
 (211,53,'suggest',NULL,0,0,'',0,0,NULL,1,0,''),
 (212,53,'predict',NULL,0,0,'',0,0,NULL,1,0,''),
 (213,54,'will',NULL,0,0,'',0,0,NULL,1,0,''),
 (214,54,'might',NULL,0,0,'',0,0,NULL,1,0,''),
 (215,54,'should',NULL,0,0,'',0,0,NULL,1,0,''),
 (216,54,'must',NULL,1,0,'',0,0,NULL,1,0,''),
 (217,55,'all',NULL,0,0,'',0,0,NULL,1,0,''),
 (218,55,'some',NULL,1,0,'',0,0,NULL,1,0,''),
 (219,55,'most',NULL,0,0,'',0,0,NULL,1,0,''),
 (220,55,'more',NULL,0,0,'',0,0,NULL,1,0,''),
 (221,56,'involve',NULL,0,0,'',0,0,NULL,1,0,''),
 (222,56,'entrust',NULL,0,0,'',0,0,NULL,1,0,''),
 (223,56,'confine',NULL,1,0,'',0,0,NULL,1,0,''),
 (224,56,'keep',NULL,0,0,'',0,0,NULL,1,0,''),
 (225,57,'some',NULL,1,0,'',0,0,NULL,1,0,''),
 (226,57,'others',NULL,0,0,'',0,0,NULL,1,0,''),
 (227,57,'few',NULL,0,0,'',0,0,NULL,1,0,''),
 (228,57,'they',NULL,0,0,'',0,0,NULL,1,0,''),
 (229,58,'autumn',NULL,0,0,'',0,0,NULL,1,0,''),
 (230,58,'spring',NULL,0,0,'',0,0,NULL,1,0,''),
 (231,58,'summer',NULL,0,0,'',0,0,NULL,1,0,''),
 (232,58,'winter',NULL,1,0,'',0,0,NULL,1,0,''),
 (233,59,'food',NULL,1,0,'',0,0,NULL,1,0,''),
 (234,59,'fruit',NULL,0,0,'',0,0,NULL,1,0,''),
 (235,59,'crops',NULL,0,0,'',0,0,NULL,1,0,''),
 (236,59,'seeds',NULL,0,0,'',0,0,NULL,1,0,''),
 (237,60,'until',NULL,0,0,'',0,0,NULL,1,0,''),
 (238,60,'when',NULL,1,0,'',0,0,NULL,1,0,''),
 (239,60,'after',NULL,0,0,'',0,0,NULL,1,0,''),
 (240,60,'while',NULL,0,0,'',0,0,NULL,1,0,''),
 (241,61,'31',NULL,0,0,'',0,0,NULL,1,0,''),
 (242,61,'63',NULL,1,0,'',0,0,NULL,1,0,''),
 (243,61,'64',NULL,0,0,'',0,0,NULL,1,0,''),
 (244,61,'32',NULL,0,0,'',0,0,NULL,1,0,''),
 (245,61,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (246,62,'31',NULL,1,0,'',0,0,NULL,1,0,''),
 (247,62,'63',NULL,0,0,'',0,0,NULL,1,0,''),
 (248,62,'12',NULL,0,0,'',0,0,NULL,1,0,''),
 (249,62,'14',NULL,0,0,'',0,0,NULL,1,0,''),
 (250,62,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (251,63,'int _3a',NULL,0,0,'',0,0,NULL,1,0,''),
 (252,63,'int _a3',NULL,0,0,'',0,0,NULL,1,0,''),
 (253,63,'int a_3',NULL,0,0,'',0,0,NULL,1,0,''),
 (254,63,'int 3_a',NULL,1,0,'',0,0,NULL,1,0,''),
 (255,63,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (256,64,'It is not standardized',NULL,0,0,'',0,0,NULL,1,0,''),
 (257,64,'To avoid conflicts since assemblers and loaders use such names',NULL,0,0,'',0,0,NULL,1,0,''),
 (258,64,'To avoid conflicts since library routines use such names',NULL,1,0,'',0,0,NULL,1,0,''),
 (259,64,'To avoid conflicts with environment variables of an operating system',NULL,0,0,'',0,0,NULL,1,0,''),
 (260,64,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (261,65,'lowercase',NULL,1,0,'',0,0,NULL,1,0,''),
 (262,65,'uppercase',NULL,0,0,'',0,0,NULL,1,0,''),
 (263,65,'toggle case',NULL,0,0,'',0,0,NULL,1,0,''),
 (264,65,'title case',NULL,0,0,'',0,0,NULL,1,0,''),
 (265,65,'all of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (266,66,'Compiler and linker implementations',NULL,1,0,'',0,0,NULL,1,0,''),
 (267,66,'Assemblers and loaders implementations',NULL,0,0,'',0,0,NULL,1,0,''),
 (268,66,'C language',NULL,0,0,'',0,0,NULL,1,0,''),
 (269,66,'both a and b',NULL,0,0,'',0,0,NULL,1,0,''),
 (270,66,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (271,67,'int number;',NULL,0,0,'',0,0,NULL,1,0,''),
 (272,67,'float rate;',NULL,0,0,'',0,0,NULL,1,0,''),
 (273,67,'int var_count;',NULL,0,0,'',0,0,NULL,1,0,''),
 (274,67,'int $main;',NULL,1,0,'',0,0,NULL,1,0,''),
 (275,67,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (276,68,'They can contain alphanumeric characters as well as special characters',NULL,0,0,'',0,0,NULL,1,0,''),
 (277,68,'It is not an error to declare a variable to be one of the keywords(like goto, static)',NULL,0,0,'',0,0,NULL,1,0,''),
 (278,68,'Variable names cannot start with a digit',NULL,1,0,'',0,0,NULL,1,0,''),
 (279,68,'Variable can be of any length',NULL,0,0,'',0,0,NULL,1,0,''),
 (280,68,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (281,69,'typedef int Boolean;',NULL,0,0,'',0,0,NULL,1,0,''),
 (282,69,'typedef enum {Mon, Tue, Wed, Thu, Fri} Workdays;',NULL,0,0,'',0,0,NULL,1,0,''),
 (283,69,'struct {char name[10], int age};',NULL,0,0,'',0,0,NULL,1,0,''),
 (284,69,'all of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (285,69,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (286,70,'2 bytes',NULL,0,0,'',0,0,NULL,1,0,''),
 (287,70,'4 bytes',NULL,0,0,'',0,0,NULL,1,0,''),
 (288,70,'8 bytes',NULL,0,0,'',0,0,NULL,1,0,''),
 (289,70,'depends on compiler',NULL,1,0,'',0,0,NULL,1,0,''),
 (290,70,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (291,71,'String str;',NULL,1,0,'',0,0,NULL,1,0,''),
 (292,71,'char *str;',NULL,0,0,'',0,0,NULL,1,0,''),
 (293,71,'float str = 3e2;',NULL,0,0,'',0,0,NULL,1,0,''),
 (294,71,'both a and b',NULL,0,0,'',0,0,NULL,1,0,''),
 (295,71,'both b and c',NULL,0,0,'',0,0,NULL,1,0,''),
 (296,72,'char',NULL,0,0,'',0,0,NULL,1,0,''),
 (297,72,'int',NULL,1,0,'',0,0,NULL,1,0,''),
 (298,72,'float',NULL,0,0,'',0,0,NULL,1,0,''),
 (299,72,'double',NULL,0,0,'',0,0,NULL,1,0,''),
 (300,72,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (301,73,'int my_num = 100,000;',NULL,0,0,'',0,0,NULL,1,0,''),
 (302,73,'int my_num = 100000;',NULL,1,0,'',0,0,NULL,1,0,''),
 (303,73,'int my num = 1000;',NULL,0,0,'',0,0,NULL,1,0,''),
 (304,73,'int $my_num = 10000;',NULL,0,0,'',0,0,NULL,1,0,''),
 (305,73,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (306,74,'volatile',NULL,1,0,'',0,0,NULL,1,0,''),
 (307,74,'string',NULL,0,0,'',0,0,NULL,1,0,''),
 (308,74,'true',NULL,0,0,'',0,0,NULL,1,0,''),
 (309,74,'friend',NULL,0,0,'',0,0,NULL,1,0,''),
 (310,74,'export',NULL,0,0,'',0,0,NULL,1,0,''),
 (311,75,'int',NULL,0,0,'',0,0,NULL,1,0,''),
 (312,75,'float',NULL,0,0,'',0,0,NULL,1,0,''),
 (313,75,'double',NULL,0,0,'',0,0,NULL,1,0,''),
 (314,75,'char',NULL,0,0,'',0,0,NULL,1,0,''),
 (315,75,'struct',NULL,1,0,'',0,0,NULL,1,0,''),
 (316,76,'Constant variables need not be defined as they are declared and can be defined later',NULL,1,0,'',0,0,NULL,1,0,''),
 (317,76,'Global constant variables are initialised to zero',NULL,0,0,'',0,0,NULL,1,0,''),
 (318,76,'const keyword is used to define constant values',NULL,0,0,'',0,0,NULL,1,0,''),
 (319,76,'You cannot reassign a value to a constant variable',NULL,0,0,'',0,0,NULL,1,0,''),
 (320,76,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (321,77,'editor',NULL,0,0,'',0,0,NULL,1,0,''),
 (322,77,'compiler',NULL,1,0,'',0,0,NULL,1,0,''),
 (323,77,'linker',NULL,0,0,'',0,0,NULL,1,0,''),
 (324,77,'OS',NULL,0,0,'',0,0,NULL,1,0,''),
 (325,77,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (326,78,'System programming language',NULL,1,0,'',0,0,NULL,1,0,''),
 (327,78,'General purpose language',NULL,0,0,'',0,0,NULL,1,0,''),
 (328,78,'Data processing language',NULL,0,0,'',0,0,NULL,1,0,''),
 (329,78,'Object oriented purpose',NULL,0,0,'',0,0,NULL,1,0,''),
 (330,78,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (331,79,'30',NULL,0,0,'',0,0,NULL,1,0,''),
 (332,79,'24',NULL,0,0,'',0,0,NULL,1,0,''),
 (333,79,'32',NULL,1,0,'',0,0,NULL,1,0,''),
 (334,79,'36',NULL,0,0,'',0,0,NULL,1,0,''),
 (335,79,'40',NULL,0,0,'',0,0,NULL,1,0,''),
 (336,80,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (337,80,'13',NULL,1,0,'',0,0,NULL,1,0,''),
 (338,80,'25',NULL,0,0,'',0,0,NULL,1,0,''),
 (339,80,'28',NULL,0,0,'',0,0,NULL,1,0,''),
 (340,80,'31',NULL,0,0,'',0,0,NULL,1,0,''),
 (341,81,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (342,81,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (343,81,'l value required',NULL,1,0,'',0,0,NULL,1,0,''),
 (344,81,'r value required',NULL,0,0,'',0,0,NULL,1,0,''),
 (345,81,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (346,82,'++p',NULL,0,0,'',0,0,NULL,1,0,''),
 (347,82,'p++',NULL,0,0,'',0,0,NULL,1,0,''),
 (348,82,'both a and b',NULL,1,0,'',0,0,NULL,1,0,''),
 (349,82,'p+1',NULL,0,0,'',0,0,NULL,1,0,''),
 (350,82,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (351,83,'-2',NULL,0,0,'',0,0,NULL,1,0,''),
 (352,83,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (353,83,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (354,83,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (355,83,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (356,84,'4  10',NULL,1,0,'',0,0,NULL,1,0,''),
 (357,84,'4  12',NULL,0,0,'',0,0,NULL,1,0,''),
 (358,84,'3  11',NULL,0,0,'',0,0,NULL,1,0,''),
 (359,84,'3  10',NULL,0,0,'',0,0,NULL,1,0,''),
 (360,84,'4  11',NULL,0,0,'',0,0,NULL,1,0,''),
 (361,85,'-2  1',NULL,0,0,'',0,0,NULL,1,0,''),
 (362,85,'6  5',NULL,1,0,'',0,0,NULL,1,0,''),
 (363,85,'4  5',NULL,0,0,'',0,0,NULL,1,0,''),
 (364,85,'5  5',NULL,0,0,'',0,0,NULL,1,0,''),
 (365,85,'5  4',NULL,0,0,'',0,0,NULL,1,0,''),
 (366,86,'1  3  0',NULL,1,0,'',0,0,NULL,1,0,''),
 (367,86,'0  3  1',NULL,0,0,'',0,0,NULL,1,0,''),
 (368,86,'0 1 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (369,86,'0  1  3',NULL,0,0,'',0,0,NULL,1,0,''),
 (370,86,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (371,87,'0  0',NULL,0,0,'',0,0,NULL,1,0,''),
 (372,87,'1  1',NULL,1,0,'',0,0,NULL,1,0,''),
 (373,87,'3  2',NULL,0,0,'',0,0,NULL,1,0,''),
 (374,87,'1  2',NULL,0,0,'',0,0,NULL,1,0,''),
 (375,87,'2  3',NULL,0,0,'',0,0,NULL,1,0,''),
 (376,88,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (377,88,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (378,88,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (379,88,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (380,88,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (381,89,'x & 0xFF00',NULL,0,0,'',0,0,NULL,1,0,''),
 (382,89,'x >> 24',NULL,0,0,'',0,0,NULL,1,0,''),
 (383,89,'x >> ( CHAR_BIT * (sizeof(int) - 3))',NULL,0,0,'',0,0,NULL,1,0,''),
 (384,89,'x >> ( CHAR_BIT * (sizeof(int) - 1))',NULL,1,0,'',0,0,NULL,1,0,''),
 (385,89,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (386,90,'(x - (x/y) * y)',NULL,1,0,'',0,0,NULL,1,0,''),
 (387,90,'(x - (x/y))',NULL,0,0,'',0,0,NULL,1,0,''),
 (388,90,'(y - (x/y))',NULL,0,0,'',0,0,NULL,1,0,''),
 (389,90,'(y - (x/y) * y)',NULL,0,0,'',0,0,NULL,1,0,''),
 (390,90,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (391,91,'13',NULL,0,0,'',0,0,NULL,1,0,''),
 (392,91,'19',NULL,0,0,'',0,0,NULL,1,0,''),
 (393,91,'23',NULL,0,0,'',0,0,NULL,1,0,''),
 (394,91,'25',NULL,1,0,'',0,0,NULL,1,0,''),
 (395,91,'27',NULL,0,0,'',0,0,NULL,1,0,''),
 (396,92,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (397,92,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (398,92,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (399,92,'-1',NULL,0,0,'',0,0,NULL,1,0,''),
 (400,92,'-2',NULL,0,0,'',0,0,NULL,1,0,''),
 (401,93,'p uses registers',NULL,0,0,'',0,0,NULL,1,0,''),
 (402,93,'p uses pointers',NULL,0,0,'',0,0,NULL,1,0,''),
 (403,93,'both a and b',NULL,0,0,'',0,0,NULL,1,0,''),
 (404,93,'Single machine instruction required for p++',NULL,1,0,'',0,0,NULL,1,0,''),
 (405,93,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (406,94,'6  5  4',NULL,0,0,'',0,0,NULL,1,0,''),
 (407,94,'6  6  4',NULL,0,0,'',0,0,NULL,1,0,''),
 (408,94,'4  4  4',NULL,1,0,'',0,0,NULL,1,0,''),
 (409,94,'4  3  4',NULL,0,0,'',0,0,NULL,1,0,''),
 (410,94,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (411,95,'a and b only',NULL,0,0,'',0,0,NULL,1,0,''),
 (412,95,'a and c only',NULL,0,0,'',0,0,NULL,1,0,''),
 (413,95,'b and c only',NULL,0,0,'',0,0,NULL,1,0,''),
 (414,95,'a, b and c',NULL,1,0,'',0,0,NULL,1,0,''),
 (415,95,'d only',NULL,0,0,'',0,0,NULL,1,0,''),
 (416,96,'compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (417,96,'14',NULL,0,0,'',0,0,NULL,1,0,''),
 (418,96,'41',NULL,1,0,'',0,0,NULL,1,0,''),
 (419,96,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (420,96,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (421,97,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (422,97,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (423,97,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (424,97,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (425,97,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (426,98,'0 0 1 2 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (427,98,'0 0 1 3 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (428,98,'0 0 1 3 1',NULL,1,0,'',0,0,NULL,1,0,''),
 (429,98,'0 1 1 3 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (430,98,'0 1 2 1 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (431,99,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (432,99,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (433,99,'7',NULL,0,0,'',0,0,NULL,1,0,''),
 (434,99,'8',NULL,1,0,'',0,0,NULL,1,0,''),
 (435,99,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (436,100,'* has higher priority than / which has higher priority than %',NULL,0,0,'',0,0,NULL,1,0,''),
 (437,100,'% has higher priority than * which has higher priority than /',NULL,0,0,'',0,0,NULL,1,0,''),
 (438,100,'% has same priority of / which has higher priority than *',NULL,0,0,'',0,0,NULL,1,0,''),
 (439,100,'All three operators *, / and % have same priority',NULL,1,0,'',0,0,NULL,1,0,''),
 (440,100,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (441,101,'It is the best',NULL,0,0,'',0,0,NULL,1,0,''),
 (442,101,'He is good',NULL,1,0,'',0,0,NULL,1,0,''),
 (443,101,'She is better',NULL,0,0,'',0,0,NULL,1,0,''),
 (444,101,'He is good it is the best',NULL,0,0,'',0,0,NULL,1,0,''),
 (445,101,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (446,102,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (447,102,'8',NULL,0,0,'',0,0,NULL,1,0,''),
 (448,102,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (449,102,'12',NULL,1,0,'',0,0,NULL,1,0,''),
 (450,102,'14',NULL,0,0,'',0,0,NULL,1,0,''),
 (451,103,'Executes all the statements in the switch case construct',NULL,0,0,'',0,0,NULL,1,0,''),
 (452,103,'No statement within switch case will be executed',NULL,1,0,'',0,0,NULL,1,0,''),
 (453,103,'Syntax error is produced',NULL,0,0,'',0,0,NULL,1,0,''),
 (454,103,'Executes the last case statement only',NULL,0,0,'',0,0,NULL,1,0,''),
 (455,103,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (456,104,'7',NULL,0,0,'',0,0,NULL,1,0,''),
 (457,104,'8',NULL,0,0,'',0,0,NULL,1,0,''),
 (458,104,'9',NULL,1,0,'',0,0,NULL,1,0,''),
 (459,104,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (460,104,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (461,105,'5 7 6',NULL,0,0,'',0,0,NULL,1,0,''),
 (462,105,'5 6 7',NULL,1,0,'',0,0,NULL,1,0,''),
 (463,105,'6 6 6',NULL,0,0,'',0,0,NULL,1,0,''),
 (464,105,'5 7 7',NULL,0,0,'',0,0,NULL,1,0,''),
 (465,105,'5 7 7',NULL,0,0,'',0,0,NULL,1,0,''),
 (466,106,'Hello...',NULL,0,0,'',0,0,NULL,1,0,''),
 (467,106,'Hello...OK',NULL,0,0,'',0,0,NULL,1,0,''),
 (468,106,'OK',NULL,0,0,'',0,0,NULL,1,0,''),
 (469,106,'Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (470,106,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (471,107,'abd',NULL,0,0,'',0,0,NULL,1,0,''),
 (472,107,'cd',NULL,0,0,'',0,0,NULL,1,0,''),
 (473,107,'Compile time error',NULL,1,0,'',0,0,NULL,1,0,''),
 (474,107,'ab',NULL,0,0,'',0,0,NULL,1,0,''),
 (475,107,'bc',NULL,0,0,'',0,0,NULL,1,0,''),
 (476,108,'1, 3 and 4',NULL,1,0,'',0,0,NULL,1,0,''),
 (477,108,'1, 2, 3 and 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (478,108,'2 , 3and 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (479,108,'1 and 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (480,108,'2 and 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (481,109,'Hi',NULL,1,0,'',0,0,NULL,1,0,''),
 (482,109,'Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (483,109,'Hi Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (484,109,'Compile time error',NULL,0,0,'',0,0,NULL,1,0,''),
 (485,109,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (486,110,'Output: Have a nice day',NULL,0,0,'',0,0,NULL,1,0,''),
 (487,110,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (488,110,'Error: Expression syntax',NULL,1,0,'',0,0,NULL,1,0,''),
 (489,110,'Error: Undeclared identifier if',NULL,0,0,'',0,0,NULL,1,0,''),
 (490,110,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (491,111,'Error: Expression syntax',NULL,0,0,'',0,0,NULL,1,0,''),
 (492,111,'Error: Lvalue required',NULL,1,0,'',0,0,NULL,1,0,''),
 (493,111,'Error: Rvalue required',NULL,0,0,'',0,0,NULL,1,0,''),
 (494,111,'The Code runs successfully',NULL,0,0,'',0,0,NULL,1,0,''),
 (495,111,'Compile time error',NULL,0,0,'',0,0,NULL,1,0,''),
 (496,112,'Error: Statement missing',NULL,1,0,'',0,0,NULL,1,0,''),
 (497,112,'Error: Expression syntax',NULL,0,0,'',0,0,NULL,1,0,''),
 (498,112,'Error: Lvalue required',NULL,0,0,'',0,0,NULL,1,0,''),
 (499,112,'Error: Rvalue required',NULL,0,0,'',0,0,NULL,1,0,''),
 (500,112,'Compile time error',NULL,0,0,'',0,0,NULL,1,0,''),
 (501,113,'I know c',NULL,0,0,'',0,0,NULL,1,0,''),
 (502,113,'I know c++',NULL,0,0,'',0,0,NULL,1,0,''),
 (503,113,'cquestionbankI know c',NULL,1,0,'',0,0,NULL,1,0,''),
 (504,113,'cquestionbankI know c++',NULL,0,0,'',0,0,NULL,1,0,''),
 (505,113,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (506,114,'error',NULL,0,0,'',0,0,NULL,1,0,''),
 (507,114,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (508,114,'ab',NULL,0,0,'',0,0,NULL,1,0,''),
 (509,114,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (510,114,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (511,115,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (512,115,'1,3',NULL,1,0,'',0,0,NULL,1,0,''),
 (513,115,'3,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (514,115,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (515,115,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (516,116,'Equal',NULL,0,0,'',0,0,NULL,1,0,''),
 (517,116,'Greater than',NULL,0,0,'',0,0,NULL,1,0,''),
 (518,116,'Less than',NULL,0,0,'',0,0,NULL,1,0,''),
 (519,116,'Compiler error',NULL,1,0,'',0,0,NULL,1,0,''),
 (520,116,'Error: Statement missing',NULL,0,0,'',0,0,NULL,1,0,''),
 (521,117,'if (if (a == 1)){}',NULL,1,0,'',0,0,NULL,1,0,''),
 (522,117,'if (a){}',NULL,0,0,'',0,0,NULL,1,0,''),
 (523,117,'if ((char) a){}',NULL,0,0,'',0,0,NULL,1,0,''),
 (524,117,'if (func1 (a)){}',NULL,0,0,'',0,0,NULL,1,0,''),
 (525,117,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (526,118,'Welcome Programmer',NULL,0,0,'',0,0,NULL,1,0,''),
 (527,118,'Error: Undeclared identifier if',NULL,0,0,'',0,0,NULL,1,0,''),
 (528,118,'Error: Expression syntax',NULL,1,0,'',0,0,NULL,1,0,''),
 (529,118,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (530,118,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (531,119,'Compile time error',NULL,0,0,'',0,0,NULL,1,0,''),
 (532,119,'yz',NULL,0,0,'',0,0,NULL,1,0,''),
 (533,119,'xy',NULL,0,0,'',0,0,NULL,1,0,''),
 (534,119,'xyz',NULL,0,0,'',0,0,NULL,1,0,''),
 (535,119,'z',NULL,1,0,'',0,0,NULL,1,0,''),
 (536,120,'TRUE 1 TRUE 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (537,120,'TRUE 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (538,120,'Compiler Dependent',NULL,1,0,'',0,0,NULL,1,0,''),
 (539,120,'TRUE 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (540,120,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (541,121,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (542,121,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (543,121,'3',NULL,1,0,'',0,0,NULL,1,0,''),
 (544,121,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (545,121,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (546,122,'Compile time error',NULL,1,0,'',0,0,NULL,1,0,''),
 (547,122,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (548,122,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (549,122,'Varies',NULL,0,0,'',0,0,NULL,1,0,''),
 (550,122,'None   of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (551,123,'Two Three default',NULL,1,0,'',0,0,NULL,1,0,''),
 (552,123,'Two',NULL,0,0,'',0,0,NULL,1,0,''),
 (553,123,'Two default',NULL,0,0,'',0,0,NULL,1,0,''),
 (554,123,'Two Two default',NULL,0,0,'',0,0,NULL,1,0,''),
 (555,123,'Three',NULL,0,0,'',0,0,NULL,1,0,''),
 (556,124,'1,2',NULL,0,0,'',0,0,NULL,1,0,''),
 (557,124,'1,2,3,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (558,124,'2,4',NULL,0,0,'',0,0,NULL,1,0,''),
 (559,124,'1,3',NULL,0,0,'',0,0,NULL,1,0,''),
 (560,124,'1,3,4',NULL,1,0,'',0,0,NULL,1,0,''),
 (561,125,'yes',NULL,0,0,'',0,0,NULL,1,0,''),
 (562,125,'yes no',NULL,0,0,'',0,0,NULL,1,0,''),
 (563,125,'Duplicate case value error',NULL,1,0,'',0,0,NULL,1,0,''),
 (564,125,'Character case value error',NULL,0,0,'',0,0,NULL,1,0,''),
 (565,125,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (566,126,'RABBIT',NULL,0,0,'',0,0,NULL,1,0,''),
 (567,126,'ZERO RABBIT',NULL,0,0,'',0,0,NULL,1,0,''),
 (568,126,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (569,126,'Compiler error',NULL,1,0,'',0,0,NULL,1,0,''),
 (570,126,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (571,127,'ANT KING PALACE',NULL,0,0,'',0,0,NULL,1,0,''),
 (572,127,'KING PALACE',NULL,0,0,'',0,0,NULL,1,0,''),
 (573,127,'ANT PALACE',NULL,1,0,'',0,0,NULL,1,0,''),
 (574,127,'Compiler error for using expressions',NULL,0,0,'',0,0,NULL,1,0,''),
 (575,127,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (576,128,'Switch between function in a program',NULL,0,0,'',0,0,NULL,1,0,''),
 (577,128,'Switch from one variable to another variable',NULL,0,0,'',0,0,NULL,1,0,''),
 (578,128,'To choose from multiple possibilities which may arise due to different values of a single variable',NULL,1,0,'',0,0,NULL,1,0,''),
 (579,128,'To use switching variable',NULL,0,0,'',0,0,NULL,1,0,''),
 (580,128,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (581,129,'three',NULL,0,0,'',0,0,NULL,1,0,''),
 (582,129,'three three odd',NULL,0,0,'',0,0,NULL,1,0,''),
 (583,129,'three odd',NULL,0,0,'',0,0,NULL,1,0,''),
 (584,129,'three five odd',NULL,1,0,'',0,0,NULL,1,0,''),
 (585,129,'odd',NULL,0,0,'',0,0,NULL,1,0,''),
 (586,130,'SHIP CHILLY',NULL,0,0,'',0,0,NULL,1,0,''),
 (587,130,'BOAT CHILLY',NULL,0,0,'',0,0,NULL,1,0,''),
 (588,130,'BOAT PETROL CHILLY',NULL,0,0,'',0,0,NULL,1,0,''),
 (589,130,'CHILLY',NULL,0,0,'',0,0,NULL,1,0,''),
 (590,130,'Compiler error',NULL,1,0,'',0,0,NULL,1,0,''),
 (591,131,'Character',NULL,0,0,'',0,0,NULL,1,0,''),
 (592,131,'Integer',NULL,0,0,'',0,0,NULL,1,0,''),
 (593,131,'Float',NULL,1,0,'',0,0,NULL,1,0,''),
 (594,131,'enum',NULL,0,0,'',0,0,NULL,1,0,''),
 (595,131,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (596,132,'yes',NULL,0,0,'',0,0,NULL,1,0,''),
 (597,132,'no',NULL,0,0,'',0,0,NULL,1,0,''),
 (598,132,'Compile time error',NULL,1,0,'',0,0,NULL,1,0,''),
 (599,132,'yes no',NULL,0,0,'',0,0,NULL,1,0,''),
 (600,132,'Duplicate case value error',NULL,0,0,'',0,0,NULL,1,0,''),
 (601,133,'Duplicate case value error',NULL,0,0,'',0,0,NULL,1,0,''),
 (602,133,'Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (603,133,'HelloHai',NULL,0,0,'',0,0,NULL,1,0,''),
 (604,133,'Haigoodbye',NULL,0,0,'',0,0,NULL,1,0,''),
 (605,133,'Errormessage: Misplaced continue in function main',NULL,1,0,'',0,0,NULL,1,0,''),
 (606,134,'GOOD',NULL,0,0,'',0,0,NULL,1,0,''),
 (607,134,'BAD',NULL,0,0,'',0,0,NULL,1,0,''),
 (608,134,'GOODBAD',NULL,0,0,'',0,0,NULL,1,0,''),
 (609,134,'Compile time error',NULL,1,0,'',0,0,NULL,1,0,''),
 (610,134,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (611,135,'Error: No case statement specified',NULL,0,0,'',0,0,NULL,1,0,''),
 (612,135,'Error: No default specified',NULL,0,0,'',0,0,NULL,1,0,''),
 (613,135,'No Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (614,135,'Duplicate case value error',NULL,0,0,'',0,0,NULL,1,0,''),
 (615,135,'Error: infinite loop occurs',NULL,0,0,'',0,0,NULL,1,0,''),
 (616,136,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (617,136,'abc',NULL,0,0,'',0,0,NULL,1,0,''),
 (618,136,'abcdefault',NULL,0,0,'',0,0,NULL,1,0,''),
 (619,136,'default',NULL,0,0,'',0,0,NULL,1,0,''),
 (620,136,'Compilation Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (621,137,'Output: Case A',NULL,0,0,'',0,0,NULL,1,0,''),
 (622,137,'Output: Default',NULL,0,0,'',0,0,NULL,1,0,''),
 (623,137,'Output: Case A Default',NULL,0,0,'',0,0,NULL,1,0,''),
 (624,137,'Compile time error',NULL,1,0,'',0,0,NULL,1,0,''),
 (625,137,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (626,138,'if (ch == \'a\' &&ch == \'A\') printf(\"true\");',NULL,0,0,'',0,0,NULL,1,0,''),
 (627,138,'if (ch == \'a\')if (ch == \'a\') printf(\"true\");',NULL,0,0,'',0,0,NULL,1,0,''),
 (628,138,'if (ch == \'a\' || ch == \'A\') printf(\"true\");',NULL,1,0,'',0,0,NULL,1,0,''),
 (629,138,'Compile time error',NULL,0,0,'',0,0,NULL,1,0,''),
 (630,138,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (631,139,'default case is optional inside switch.',NULL,0,0,'',0,0,NULL,1,0,''),
 (632,139,'break; causes the control to exit the switch immediately and avoid fall down to other CASE statements.',NULL,0,0,'',0,0,NULL,1,0,''),
 (633,139,'You can not use duplicate CASE Constants inside a Switch construct.',NULL,0,0,'',0,0,NULL,1,0,''),
 (634,139,'All ofthese.',NULL,1,0,'',0,0,NULL,1,0,''),
 (635,139,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (636,140,'SILVER COPPER',NULL,0,0,'',0,0,NULL,1,0,''),
 (637,140,'TIN COPPER',NULL,0,0,'',0,0,NULL,1,0,''),
 (638,140,'COPPER',NULL,0,0,'',0,0,NULL,1,0,''),
 (639,140,'TIN',NULL,0,0,'',0,0,NULL,1,0,''),
 (640,140,'Compiler error',NULL,1,0,'',0,0,NULL,1,0,''),
 (641,141,'zero',NULL,1,0,'',0,0,NULL,1,0,''),
 (642,141,'one',NULL,0,0,'',0,0,NULL,1,0,''),
 (643,141,'non zero',NULL,0,0,'',0,0,NULL,1,0,''),
 (644,141,'-1',NULL,0,0,'',0,0,NULL,1,0,''),
 (645,141,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (646,142,'13',NULL,0,0,'',0,0,NULL,1,0,''),
 (647,142,'34',NULL,0,0,'',0,0,NULL,1,0,''),
 (648,142,'33',NULL,1,0,'',0,0,NULL,1,0,''),
 (649,142,'31',NULL,0,0,'',0,0,NULL,1,0,''),
 (650,142,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (651,143,'ABCDEF',NULL,0,0,'',0,0,NULL,1,0,''),
 (652,143,'EFG',NULL,0,0,'',0,0,NULL,1,0,''),
 (653,143,'FG',NULL,1,0,'',0,0,NULL,1,0,''),
 (654,143,'G',NULL,0,0,'',0,0,NULL,1,0,''),
 (655,143,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (656,144,'Infinite loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (657,144,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (658,144,'99..99..99.',NULL,1,0,'',0,0,NULL,1,0,''),
 (659,144,'3..2..1',NULL,0,0,'',0,0,NULL,1,0,''),
 (660,144,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (661,145,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (662,145,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (663,145,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (664,145,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (665,145,'None',NULL,1,0,'',0,0,NULL,1,0,''),
 (666,146,'RABBIT',NULL,0,0,'',0,0,NULL,1,0,''),
 (667,146,'RABBIT is printed unlimited number of times.',NULL,0,0,'',0,0,NULL,1,0,''),
 (668,146,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (669,146,'Compiler error',NULL,1,0,'',0,0,NULL,1,0,''),
 (670,146,'Duplicate case value error',NULL,0,0,'',0,0,NULL,1,0,''),
 (671,147,'25 25 25',NULL,0,0,'',0,0,NULL,1,0,''),
 (672,147,'25 26 27',NULL,1,0,'',0,0,NULL,1,0,''),
 (673,147,'27 27 27',NULL,0,0,'',0,0,NULL,1,0,''),
 (674,147,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (675,147,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (676,148,'32',NULL,1,0,'',0,0,NULL,1,0,''),
 (677,148,'33',NULL,0,0,'',0,0,NULL,1,0,''),
 (678,148,'30',NULL,0,0,'',0,0,NULL,1,0,''),
 (679,148,'No Output',NULL,0,0,'',0,0,NULL,1,0,''),
 (680,148,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (681,149,'continue; statement',NULL,0,0,'',0,0,NULL,1,0,''),
 (682,149,'break; statement',NULL,1,0,'',0,0,NULL,1,0,''),
 (683,149,'leave; statement',NULL,0,0,'',0,0,NULL,1,0,''),
 (684,149,'quit; statement',NULL,0,0,'',0,0,NULL,1,0,''),
 (685,149,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (686,150,'for',NULL,0,0,'',0,0,NULL,1,0,''),
 (687,150,'while',NULL,0,0,'',0,0,NULL,1,0,''),
 (688,150,'do while',NULL,1,0,'',0,0,NULL,1,0,''),
 (689,150,'nested for',NULL,0,0,'',0,0,NULL,1,0,''),
 (690,150,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (691,151,'Prints Nothing',NULL,1,0,'',0,0,NULL,1,0,''),
 (692,151,'loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (693,151,'loop loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (694,151,'loop loop loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (695,151,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (696,152,'\"break\" and \"continue\" can be used in \"for\", \"while\", \"do-while\" loop body and \"switch\" body.',NULL,0,0,'',0,0,NULL,1,0,''),
 (697,152,'\"break\" and \"continue\" can be used in \"for\", \"while\" and \"do-while\" loop body. But only \"break\" can be used in \"switch\" body.',NULL,1,0,'',0,0,NULL,1,0,''),
 (698,152,'\"break\" and \"continue\" can be used in \"for\", \"while\" and \"do-while\" loop body. Besides, \"continue\" and \"break\" can be used in \"switch\" and \"if-else\" body.',NULL,0,0,'',0,0,NULL,1,0,''),
 (699,152,'\"break\" can be used in \"for\", \"while\" and \"do-while\" loop body.',NULL,0,0,'',0,0,NULL,1,0,''),
 (700,152,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (701,153,'You are in b',NULL,0,0,'',0,0,NULL,1,0,''),
 (702,153,'You are in c',NULL,0,0,'',0,0,NULL,1,0,''),
 (703,153,'You are in default',NULL,0,0,'',0,0,NULL,1,0,''),
 (704,153,'Compilation Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (705,153,'You are in c and default',NULL,0,0,'',0,0,NULL,1,0,''),
 (706,154,'Compiler Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (707,154,'Infinite Loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (708,154,'Loop Loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (709,154,'Loop',NULL,1,0,'',0,0,NULL,1,0,''),
 (710,154,'None of the above.',NULL,0,0,'',0,0,NULL,1,0,''),
 (711,155,'5 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (712,155,'10 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (713,155,'0 times',NULL,1,0,'',0,0,NULL,1,0,''),
 (714,155,'15 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (715,155,'Infinite times',NULL,0,0,'',0,0,NULL,1,0,''),
 (716,156,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (717,156,'Runtime Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (718,156,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (719,156,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (720,156,'Compiler Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (721,157,'5 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (722,157,'2 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (723,157,'10 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (724,157,'0 times',NULL,1,0,'',0,0,NULL,1,0,''),
 (725,157,'Compiler Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (726,158,'0 1 2 3 1 2 3 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (727,158,'1 2 3 1 2 3 4',NULL,1,0,'',0,0,NULL,1,0,''),
 (728,158,'1 2 3 4 1 2 3 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (729,158,'1 2 3 4 0 1 2 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (730,158,'0 2 1 4 3 1 2 1 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (731,159,'Loop LoopLoopLoop',NULL,0,0,'',0,0,NULL,1,0,''),
 (732,159,'Loop Looploop',NULL,0,0,'',0,0,NULL,1,0,''),
 (733,159,'c)  Compilation Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (734,159,'Prints Nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (735,159,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (736,160,'In while loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (737,160,'In while loopafter loop',NULL,1,0,'',0,0,NULL,1,0,''),
 (738,160,'After loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (739,160,'Infinite loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (740,160,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (741,161,'exp1',NULL,1,0,'',0,0,NULL,1,0,''),
 (742,161,'exp2',NULL,0,0,'',0,0,NULL,1,0,''),
 (743,161,'exp3',NULL,0,0,'',0,0,NULL,1,0,''),
 (744,161,'exp1 and exp2',NULL,0,0,'',0,0,NULL,1,0,''),
 (745,161,'exp1 and exp3',NULL,0,0,'',0,0,NULL,1,0,''),
 (746,162,'127',NULL,0,0,'',0,0,NULL,1,0,''),
 (747,162,'128',NULL,0,0,'',0,0,NULL,1,0,''),
 (748,162,'256',NULL,0,0,'',0,0,NULL,1,0,''),
 (749,162,'infinite',NULL,1,0,'',0,0,NULL,1,0,''),
 (750,162,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (751,163,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (752,163,'5',NULL,1,0,'',0,0,NULL,1,0,''),
 (753,163,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (754,163,'Infinite',NULL,0,0,'',0,0,NULL,1,0,''),
 (755,163,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (756,164,'0  2',NULL,0,0,'',0,0,NULL,1,0,''),
 (757,164,'1  1',NULL,0,0,'',0,0,NULL,1,0,''),
 (758,164,'2  1',NULL,1,0,'',0,0,NULL,1,0,''),
 (759,164,'2  2',NULL,0,0,'',0,0,NULL,1,0,''),
 (760,164,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (761,165,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (762,165,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (763,165,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (764,165,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (765,165,'5',NULL,1,0,'',0,0,NULL,1,0,''),
 (766,166,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (767,166,'2,3',NULL,0,0,'',0,0,NULL,1,0,''),
 (768,166,'2,3,4',NULL,1,0,'',0,0,NULL,1,0,''),
 (769,166,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (770,166,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (771,167,'it is assumed to be present and taken to be false',NULL,0,0,'',0,0,NULL,1,0,''),
 (772,167,'it is assumed to be present and taken to the true',NULL,1,0,'',0,0,NULL,1,0,''),
 (773,167,'it result in a syntax error',NULL,0,0,'',0,0,NULL,1,0,''),
 (774,167,'execution will be terminated abruptly',NULL,0,0,'',0,0,NULL,1,0,''),
 (775,167,'All the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (776,168,'Index value is retained outside the loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (777,168,'Index value can be changed from within the loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (778,168,'Goto can be used to jump, out of the loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (779,168,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (780,168,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (781,169,'Three times',NULL,0,0,'',0,0,NULL,1,0,''),
 (782,169,'Four times',NULL,0,0,'',0,0,NULL,1,0,''),
 (783,169,'one time',NULL,0,0,'',0,0,NULL,1,0,''),
 (784,169,'Never',NULL,1,0,'',0,0,NULL,1,0,''),
 (785,169,'Forever',NULL,0,0,'',0,0,NULL,1,0,''),
 (786,170,'10',NULL,1,0,'',0,0,NULL,1,0,''),
 (787,170,'0123456789',NULL,0,0,'',0,0,NULL,1,0,''),
 (788,170,'Syntax error',NULL,0,0,'',0,0,NULL,1,0,''),
 (789,170,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (790,170,'Infinite loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (791,171,'-1',NULL,0,0,'',0,0,NULL,1,0,''),
 (792,171,'17',NULL,0,0,'',0,0,NULL,1,0,''),
 (793,171,'19',NULL,1,0,'',0,0,NULL,1,0,''),
 (794,171,'16',NULL,0,0,'',0,0,NULL,1,0,''),
 (795,171,'15',NULL,0,0,'',0,0,NULL,1,0,''),
 (796,172,'Using break is equivalent to using a goto that jumps to the statement immediately following the loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (797,172,'Continue is used to by-pass the remainder of the current pass of the loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (798,172,'If comma operator is used, then the value returned is the value of the right operand',NULL,0,0,'',0,0,NULL,1,0,''),
 (799,172,'All of the these',NULL,1,0,'',0,0,NULL,1,0,''),
 (800,172,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (801,173,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (802,173,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (803,173,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (804,173,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (805,173,'Infinite',NULL,1,0,'',0,0,NULL,1,0,''),
 (806,174,'0 1 2 ... 127',NULL,0,0,'',0,0,NULL,1,0,''),
 (807,174,'0 1 2 ... infinite times',NULL,1,0,'',0,0,NULL,1,0,''),
 (808,174,'Compilation Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (809,174,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (810,174,'Runtime Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (811,175,'1 2 3',NULL,1,0,'',0,0,NULL,1,0,''),
 (812,175,'0 1 2 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (813,175,'1 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (814,175,'Compilation Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (815,175,'1  3',NULL,0,0,'',0,0,NULL,1,0,''),
 (816,176,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (817,176,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (818,176,'4',NULL,1,0,'',0,0,NULL,1,0,''),
 (819,176,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (820,176,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (821,177,'break',NULL,1,0,'',0,0,NULL,1,0,''),
 (822,177,'exit(0)',NULL,0,0,'',0,0,NULL,1,0,''),
 (823,177,'abort()',NULL,0,0,'',0,0,NULL,1,0,''),
 (824,177,'terminate',NULL,0,0,'',0,0,NULL,1,0,''),
 (825,177,'continue',NULL,0,0,'',0,0,NULL,1,0,''),
 (826,178,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (827,178,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (828,178,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (829,178,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (830,178,'None of the mentioned',NULL,0,0,'',0,0,NULL,1,0,''),
 (831,179,'for (i = n; i>0; i--)',NULL,0,0,'',0,0,NULL,1,0,''),
 (832,179,'for (i = n; i >= 0; i--)',NULL,0,0,'',0,0,NULL,1,0,''),
 (833,179,'for (i = n-1; i>0; i--)',NULL,0,0,'',0,0,NULL,1,0,''),
 (834,179,'for (i = n-1; i>-1; i--)',NULL,1,0,'',0,0,NULL,1,0,''),
 (835,179,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (836,180,'variable',NULL,0,0,'',0,0,NULL,1,0,''),
 (837,180,'function',NULL,0,0,'',0,0,NULL,1,0,''),
 (838,180,'typedef',NULL,0,0,'',0,0,NULL,1,0,''),
 (839,180,'macros',NULL,1,0,'',0,0,NULL,1,0,''),
 (840,180,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (841,181,'0  0',NULL,0,0,'',0,0,NULL,1,0,''),
 (842,181,'0  6',NULL,0,0,'',0,0,NULL,1,0,''),
 (843,181,'0  12',NULL,1,0,'',0,0,NULL,1,0,''),
 (844,181,'12  12',NULL,0,0,'',0,0,NULL,1,0,''),
 (845,181,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (846,182,'1 2 3 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (847,182,'1 1 2 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (848,182,'1 3 1 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (849,182,'Compile error',NULL,1,0,'',0,0,NULL,1,0,''),
 (850,182,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (851,183,'1@2@',NULL,0,0,'',0,0,NULL,1,0,''),
 (852,183,'1@2@1@',NULL,0,0,'',0,0,NULL,1,0,''),
 (853,183,'1@1@2@',NULL,1,0,'',0,0,NULL,1,0,''),
 (854,183,'1@2@2@',NULL,0,0,'',0,0,NULL,1,0,''),
 (855,183,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (856,184,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (857,184,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (858,184,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (859,184,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (860,184,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (861,185,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (862,185,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (863,185,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (864,185,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (865,185,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (866,186,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (867,186,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (868,186,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (869,186,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (870,186,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (871,187,'Outer Loop runs 5 timesInner Loop runs 25 times',NULL,1,0,'',0,0,NULL,1,0,''),
 (872,187,'Outer Loop runs 3 timesInner Loop runs 15 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (873,187,'Outer Loop runs 2 timesInner Loop runs 13 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (874,187,'Outer Loop runs 1 timeInner Loop runs 1 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (875,187,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (876,188,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (877,188,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (878,188,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (879,188,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (880,188,'ne of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (881,189,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (882,189,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (883,189,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (884,189,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (885,189,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (886,190,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (887,190,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (888,190,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (889,190,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (890,190,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (891,191,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (892,191,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (893,191,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (894,191,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (895,191,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (896,192,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (897,192,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (898,192,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (899,192,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (900,192,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (901,193,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (902,193,'b',NULL,1,0,'',0,0,NULL,1,0,''),
 (903,193,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (904,193,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (905,193,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (906,194,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (907,194,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (908,194,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (909,194,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (910,194,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (911,195,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (912,195,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (913,195,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (914,195,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (915,195,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (916,196,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (917,196,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (918,196,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (919,196,'d',NULL,1,0,'',0,0,NULL,1,0,''),
 (920,196,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (921,197,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (922,197,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (923,197,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (924,197,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (925,197,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (926,198,'3 5 4 6',NULL,0,0,'',0,0,NULL,1,0,''),
 (927,198,'3 3 5 7',NULL,1,0,'',0,0,NULL,1,0,''),
 (928,198,'2 4 5 6',NULL,0,0,'',0,0,NULL,1,0,''),
 (929,198,'2 2 4 7',NULL,0,0,'',0,0,NULL,1,0,''),
 (930,198,'4 3 7 8',NULL,0,0,'',0,0,NULL,1,0,''),
 (931,199,'a',NULL,0,0,'',0,0,NULL,1,0,''),
 (932,199,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (933,199,'c',NULL,1,0,'',0,0,NULL,1,0,''),
 (934,199,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (935,199,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (936,200,'a',NULL,1,0,'',0,0,NULL,1,0,''),
 (937,200,'b',NULL,0,0,'',0,0,NULL,1,0,''),
 (938,200,'c',NULL,0,0,'',0,0,NULL,1,0,''),
 (939,200,'d',NULL,0,0,'',0,0,NULL,1,0,''),
 (940,200,'e',NULL,0,0,'',0,0,NULL,1,0,''),
 (941,201,'2  0',NULL,0,0,'',0,0,NULL,1,0,''),
 (942,201,'0  2',NULL,0,0,'',0,0,NULL,1,0,''),
 (943,201,'4  0',NULL,0,0,'',0,0,NULL,1,0,''),
 (944,201,'4  4',NULL,1,0,'',0,0,NULL,1,0,''),
 (945,201,'0  4',NULL,0,0,'',0,0,NULL,1,0,''),
 (946,202,'20',NULL,0,0,'',0,0,NULL,1,0,''),
 (947,202,'30',NULL,0,0,'',0,0,NULL,1,0,''),
 (948,202,'40',NULL,1,0,'',0,0,NULL,1,0,''),
 (949,202,'50',NULL,0,0,'',0,0,NULL,1,0,''),
 (950,202,'Segment fault',NULL,0,0,'',0,0,NULL,1,0,''),
 (951,203,'a and b only',NULL,0,0,'',0,0,NULL,1,0,''),
 (952,203,'a and c only',NULL,0,0,'',0,0,NULL,1,0,''),
 (953,203,'a and d only',NULL,1,0,'',0,0,NULL,1,0,''),
 (954,203,'b and d only',NULL,0,0,'',0,0,NULL,1,0,''),
 (955,203,'a,b and d only',NULL,0,0,'',0,0,NULL,1,0,''),
 (956,204,'11  11',NULL,0,0,'',0,0,NULL,1,0,''),
 (957,204,'10  10',NULL,0,0,'',0,0,NULL,1,0,''),
 (958,204,'11  4',NULL,1,0,'',0,0,NULL,1,0,''),
 (959,204,'10  4',NULL,0,0,'',0,0,NULL,1,0,''),
 (960,204,'4  11',NULL,0,0,'',0,0,NULL,1,0,''),
 (961,205,'Expression syntax error',NULL,0,0,'',0,0,NULL,1,0,''),
 (962,205,'l value required',NULL,1,0,'',0,0,NULL,1,0,''),
 (963,205,'21  12  34  45  56',NULL,0,0,'',0,0,NULL,1,0,''),
 (964,205,'56  45  34  12  21',NULL,0,0,'',0,0,NULL,1,0,''),
 (965,205,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (966,206,'Ramko',NULL,0,0,'',0,0,NULL,1,0,''),
 (967,206,'System',NULL,0,0,'',0,0,NULL,1,0,''),
 (968,206,'run time error',NULL,0,0,'',0,0,NULL,1,0,''),
 (969,206,'compile error',NULL,1,0,'',0,0,NULL,1,0,''),
 (970,206,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (971,207,'*(num+i)',NULL,0,0,'',0,0,NULL,1,0,''),
 (972,207,'i[num]',NULL,0,0,'',0,0,NULL,1,0,''),
 (973,207,'*(i+num)',NULL,0,0,'',0,0,NULL,1,0,''),
 (974,207,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (975,207,'none of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (976,208,'19  11',NULL,0,0,'',0,0,NULL,1,0,''),
 (977,208,'10  10',NULL,0,0,'',0,0,NULL,1,0,''),
 (978,208,'11  19',NULL,0,0,'',0,0,NULL,1,0,''),
 (979,208,'Error invalid pointer arithmetic',NULL,1,0,'',0,0,NULL,1,0,''),
 (980,208,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (981,209,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (982,209,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (983,209,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (984,209,'4',NULL,0,0,'',0,0,NULL,1,0,''),
 (985,209,'None of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (986,210,'1264',NULL,1,0,'',0,0,NULL,1,0,''),
 (987,210,'1164',NULL,0,0,'',0,0,NULL,1,0,''),
 (988,210,'1167',NULL,0,0,'',0,0,NULL,1,0,''),
 (989,210,'1267',NULL,0,0,'',0,0,NULL,1,0,''),
 (990,210,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (991,211,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (992,211,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (993,211,'0',NULL,1,0,'',0,0,NULL,1,0,''),
 (994,211,'Garbage Value',NULL,0,0,'',0,0,NULL,1,0,''),
 (995,211,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (996,212,'0 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (997,212,'Garbage value 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (998,212,'Garbage value Garbage value',NULL,0,0,'',0,0,NULL,1,0,''),
 (999,212,'Compilation Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (1000,212,'10',NULL,0,0,'',0,0,NULL,1,0,''),
 (1001,213,'3 4 5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1002,213,'3 4 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1003,213,'4 3 4',NULL,1,0,'',0,0,NULL,1,0,''),
 (1004,213,'4 4 5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1005,213,'5 3 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1006,214,'100',NULL,1,0,'',0,0,NULL,1,0,''),
 (1007,214,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (1008,214,'Garbage Value',NULL,0,0,'',0,0,NULL,1,0,''),
 (1009,214,'Compilation Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1010,214,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1011,215,'1004',NULL,0,0,'',0,0,NULL,1,0,''),
 (1012,215,'1002',NULL,0,0,'',0,0,NULL,1,0,''),
 (1013,215,'1008',NULL,0,0,'',0,0,NULL,1,0,''),
 (1014,215,'Lvalue Required',NULL,1,0,'',0,0,NULL,1,0,''),
 (1015,215,'1001',NULL,0,0,'',0,0,NULL,1,0,''),
 (1016,216,'Compilation Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1017,216,'Run-time Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1018,216,'This is allowed in C',NULL,1,0,'',0,0,NULL,1,0,''),
 (1019,216,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (1020,216,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1021,217,'GATE2011',NULL,0,0,'',0,0,NULL,1,0,''),
 (1022,217,'E2011',NULL,0,0,'',0,0,NULL,1,0,''),
 (1023,217,'2011',NULL,1,0,'',0,0,NULL,1,0,''),
 (1024,217,'11',NULL,0,0,'',0,0,NULL,1,0,''),
 (1025,217,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1026,218,'98',NULL,0,0,'',0,0,NULL,1,0,''),
 (1027,218,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (1028,218,'98766',NULL,0,0,'',0,0,NULL,1,0,''),
 (1029,218,'90765',NULL,1,0,'',0,0,NULL,1,0,''),
 (1030,218,'65',NULL,0,0,'',0,0,NULL,1,0,''),
 (1031,219,'5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1032,219,'6',NULL,0,0,'',0,0,NULL,1,0,''),
 (1033,219,'9',NULL,1,0,'',0,0,NULL,1,0,''),
 (1034,219,'7',NULL,0,0,'',0,0,NULL,1,0,''),
 (1035,219,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1036,220,'3,2,15',NULL,1,0,'',0,0,NULL,1,0,''),
 (1037,220,'2,3,20',NULL,0,0,'',0,0,NULL,1,0,''),
 (1038,220,'2,1,15',NULL,0,0,'',0,0,NULL,1,0,''),
 (1039,220,'1,2,5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1040,220,'3,5,1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1041,221,'*(*((arr+2)+2)+4)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1042,221,'*(*(*(arr+3)+3)+4)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1043,221,'*(*(*(arr+2)+3)+4)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1044,221,'*(*(*(arr+2)+2)+3)',NULL,1,0,'',0,0,NULL,1,0,''),
 (1045,221,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1046,222,'1 2 3 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1047,222,'1 1 1 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1048,222,'4 3 2 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1049,222,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (1050,222,'Compile error',NULL,1,0,'',0,0,NULL,1,0,''),
 (1051,223,'2  2  2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1052,223,'1  2  3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1053,223,'3  2  1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1054,223,'1  2  4',NULL,1,0,'',0,0,NULL,1,0,''),
 (1055,223,'1  3  2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1056,224,'2048',NULL,0,0,'',0,0,NULL,1,0,''),
 (1057,224,'2056',NULL,0,0,'',0,0,NULL,1,0,''),
 (1058,224,'2052',NULL,1,0,'',0,0,NULL,1,0,''),
 (1059,224,'2042',NULL,0,0,'',0,0,NULL,1,0,''),
 (1060,224,'2032',NULL,0,0,'',0,0,NULL,1,0,''),
 (1061,225,'p is a pointer to a 2-D array of 3 rows and 4 columns.',NULL,1,0,'',0,0,NULL,1,0,''),
 (1062,225,'p is a function pointer to a 2D array of 3 rows and 4 columns.',NULL,0,0,'',0,0,NULL,1,0,''),
 (1063,225,'p is a pointer to array of 4 elements.',NULL,0,0,'',0,0,NULL,1,0,''),
 (1064,225,'p is a function pointer to a 2D array of 4 rows and 3 columns.',NULL,0,0,'',0,0,NULL,1,0,''),
 (1065,225,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1066,226,'One is z',NULL,0,0,'',0,0,NULL,1,0,''),
 (1067,226,'Two is z',NULL,0,0,'',0,0,NULL,1,0,''),
 (1068,226,'Three is z',NULL,0,0,'',0,0,NULL,1,0,''),
 (1069,226,'Four is z',NULL,1,0,'',0,0,NULL,1,0,''),
 (1070,226,'none of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1071,227,'2048',NULL,0,0,'',0,0,NULL,1,0,''),
 (1072,227,'2056',NULL,0,0,'',0,0,NULL,1,0,''),
 (1073,227,'2052',NULL,1,0,'',0,0,NULL,1,0,''),
 (1074,227,'2042',NULL,0,0,'',0,0,NULL,1,0,''),
 (1075,227,'2049',NULL,0,0,'',0,0,NULL,1,0,''),
 (1076,228,'1004 1008',NULL,1,0,'',0,0,NULL,1,0,''),
 (1077,228,'1002 1008',NULL,0,0,'',0,0,NULL,1,0,''),
 (1078,228,'1002 1002',NULL,0,0,'',0,0,NULL,1,0,''),
 (1079,228,'1008 1002',NULL,0,0,'',0,0,NULL,1,0,''),
 (1080,228,'1003 10008',NULL,0,0,'',0,0,NULL,1,0,''),
 (1081,229,'printf(\"%d\",*(((a+3)+2)+1));',NULL,0,0,'',0,0,NULL,1,0,''),
 (1082,229,'printf(\"%d\",***((a+3)+2)+1);',NULL,0,0,'',0,0,NULL,1,0,''),
 (1083,229,'printf(\"%d\",*(*(*(a+3)+2)+1));',NULL,1,0,'',0,0,NULL,1,0,''),
 (1084,229,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1085,229,'None of the these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1086,230,'ary[10] is a single dimensional array. cry[10][10] is a Multidimensional array.',NULL,1,0,'',0,0,NULL,1,0,''),
 (1087,230,'ary[10] is a multidimensional array. cry[10][10] is a single dimensional array.',NULL,0,0,'',0,0,NULL,1,0,''),
 (1088,230,'Size of ary[10] is sizeof(10* int). Size of cry[10][10] is sizeof(10*int).',NULL,0,0,'',0,0,NULL,1,0,''),
 (1089,230,'None of the these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1090,230,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1091,231,'Multi Data Array',NULL,0,0,'',0,0,NULL,1,0,''),
 (1092,231,'Multi Size Array',NULL,0,0,'',0,0,NULL,1,0,''),
 (1093,231,'Multi Dimensional Array',NULL,1,0,'',0,0,NULL,1,0,''),
 (1094,231,'Multi Byte Array',NULL,0,0,'',0,0,NULL,1,0,''),
 (1095,231,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1096,232,'Matrix-Multiplication',NULL,0,0,'',0,0,NULL,1,0,''),
 (1097,232,'Minimum Spanning Tree',NULL,0,0,'',0,0,NULL,1,0,''),
 (1098,232,'Finding connectivity between nodes',NULL,0,0,'',0,0,NULL,1,0,''),
 (1099,232,'All of the mentioned',NULL,1,0,'',0,0,NULL,1,0,''),
 (1100,232,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1101,233,'6 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1102,233,'6 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1103,233,'5 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1104,233,'4 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1105,233,'Compiler error',NULL,1,0,'',0,0,NULL,1,0,''),
 (1106,234,'6 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1107,234,'6 3',NULL,1,0,'',0,0,NULL,1,0,''),
 (1108,234,'6 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1109,234,'5 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1110,234,'Compiler error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1111,235,'int ary[2][3] = {6,5,4,3,2,1};',NULL,0,0,'',0,0,NULL,1,0,''),
 (1112,235,'int ary[2][3] = {{6,5,4},{3,2,1}};',NULL,0,0,'',0,0,NULL,1,0,''),
 (1113,235,'int ary[][3] = {{6,5,4},{3,2,1}};',NULL,0,0,'',0,0,NULL,1,0,''),
 (1114,235,'All of these.',NULL,1,0,'',0,0,NULL,1,0,''),
 (1115,235,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1116,236,'1 12',NULL,0,0,'',0,0,NULL,1,0,''),
 (1117,236,'1 11',NULL,1,0,'',0,0,NULL,1,0,''),
 (1118,236,'7 12',NULL,0,0,'',0,0,NULL,1,0,''),
 (1119,236,'1 6',NULL,0,0,'',0,0,NULL,1,0,''),
 (1120,236,'7 9',NULL,0,0,'',0,0,NULL,1,0,''),
 (1121,237,'First Dimension size is optional when initializing the array at the same time.',NULL,1,0,'',0,0,NULL,1,0,''),
 (1122,237,'Last Dimension size is optional when initializing the array at the same time.',NULL,0,0,'',0,0,NULL,1,0,''),
 (1123,237,'It is a must to specify all dimensions of a multidimensional array.',NULL,0,0,'',0,0,NULL,1,0,''),
 (1124,237,'Memory locations of elements of a multidimensional array is not sequential.',NULL,0,0,'',0,0,NULL,1,0,''),
 (1125,237,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1126,238,'ary[2][1]',NULL,0,0,'',0,0,NULL,1,0,''),
 (1127,238,'*(*(ary+2)+1)',NULL,0,0,'',0,0,NULL,1,0,''),
 (1128,238,'*ary[2]+1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1129,238,'All of these',NULL,1,0,'',0,0,NULL,1,0,''),
 (1130,238,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1131,239,'Single Dimensional Arrays',NULL,0,0,'',0,0,NULL,1,0,''),
 (1132,239,'N dimensional arrays',NULL,0,0,'',0,0,NULL,1,0,''),
 (1133,239,'N-1 dimension arrays',NULL,1,0,'',0,0,NULL,1,0,''),
 (1134,239,'N-2 dimension arrays',NULL,0,0,'',0,0,NULL,1,0,''),
 (1135,239,'All the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (1136,240,'func(a);',NULL,1,0,'',0,0,NULL,1,0,''),
 (1137,240,'func(&a);',NULL,0,0,'',0,0,NULL,1,0,''),
 (1138,240,'func(*a);',NULL,0,0,'',0,0,NULL,1,0,''),
 (1139,240,'func(**a);',NULL,0,0,'',0,0,NULL,1,0,''),
 (1140,240,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1141,241,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (1142,241,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (1143,241,'2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1144,241,'3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1145,241,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1146,242,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1147,242,'1 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1148,242,'2 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1149,242,'13',NULL,1,0,'',0,0,NULL,1,0,''),
 (1150,242,'1 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1151,243,'1time',NULL,1,0,'',0,0,NULL,1,0,''),
 (1152,243,'Infinite times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1153,243,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1154,243,'Prints nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (1155,243,'Execution error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1156,244,'1 1 1 1 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1157,244,'1 0 0 0 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (1158,244,'1 followed by 4 Garbage values',NULL,1,0,'',0,0,NULL,1,0,''),
 (1159,244,'All are Garbage values',NULL,0,0,'',0,0,NULL,1,0,''),
 (1160,244,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1161,245,'Compile erro',NULL,0,0,'',0,0,NULL,1,0,''),
 (1162,245,'0 1 2 ... infinite times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1163,245,'0',NULL,0,0,'',0,0,NULL,1,0,''),
 (1164,245,'1',NULL,1,0,'',0,0,NULL,1,0,''),
 (1165,245,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1166,246,'Hi is printed 10 times, hello 7 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1167,246,'Hi is printed 8 times, hello 7 times and then hi 2 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1168,246,'Hi is printed once, hello 7 times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1169,246,'Hi is printed once, hello 7 times and then hi 2 times',NULL,1,0,'',0,0,NULL,1,0,''),
 (1170,246,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1171,247,'1 2 3 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1172,247,'1 1 2 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1173,247,'1 3 1 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1174,247,'Compile error',NULL,1,0,'',0,0,NULL,1,0,''),
 (1175,247,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1176,248,'1 2 3 4 5 15',NULL,0,0,'',0,0,NULL,1,0,''),
 (1177,248,'2 3 4 5 6 16',NULL,0,0,'',0,0,NULL,1,0,''),
 (1178,248,'1 2 3 4 5 16',NULL,0,0,'',0,0,NULL,1,0,''),
 (1179,248,'2 3 4 5 6 17',NULL,1,0,'',0,0,NULL,1,0,''),
 (1180,248,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1181,249,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1182,249,'Syntax error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1183,249,'Hello',NULL,1,0,'',0,0,NULL,1,0,''),
 (1184,249,'10 times hello will be printed',NULL,0,0,'',0,0,NULL,1,0,''),
 (1185,249,'None',NULL,0,0,'',0,0,NULL,1,0,''),
 (1186,250,'Compile error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1187,250,'Runtime error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1188,250,'Infinite times hello will be printed',NULL,0,0,'',0,0,NULL,1,0,''),
 (1189,250,'prints nothing',NULL,1,0,'',0,0,NULL,1,0,''),
 (1190,250,'Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (1191,251,'1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1192,251,'prints nothing',NULL,1,0,'',0,0,NULL,1,0,''),
 (1193,251,'Infinite',NULL,0,0,'',0,0,NULL,1,0,'');
INSERT INTO `answers` (`id`,`group_id`,`answer_text`,`answer_image`,`correct_answer`,`priority`,`correct_answer_text`,`answer_pos`,`parent_id`,`answer_text_eng`,`control_type`,`answer_parent_id`,`text_unit`) VALUES 
 (1194,251,'Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1195,251,'None',NULL,0,0,'',0,0,NULL,1,0,''),
 (1196,252,'Hello will be printed one time',NULL,0,0,'',0,0,NULL,1,0,''),
 (1197,252,'Hello will be printed infinite times',NULL,0,0,'',0,0,NULL,1,0,''),
 (1198,252,'Compile Error',NULL,1,0,'',0,0,NULL,1,0,''),
 (1199,252,'Prints nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (1200,252,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1201,253,'2 4',NULL,0,0,'',0,0,NULL,1,0,''),
 (1202,253,'No output',NULL,0,0,'',0,0,NULL,1,0,''),
 (1203,253,'2 4 6',NULL,1,0,'',0,0,NULL,1,0,''),
 (1204,253,'Program never ends',NULL,0,0,'',0,0,NULL,1,0,''),
 (1205,253,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1206,254,'8 5 2',NULL,1,0,'',0,0,NULL,1,0,''),
 (1207,254,'7 4 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1208,254,'6 3 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (1209,254,'3 1',NULL,0,0,'',0,0,NULL,1,0,''),
 (1210,254,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (1211,255,'0 1 2 3 4 5 6 7 8 9',NULL,0,0,'',0,0,NULL,1,0,''),
 (1212,255,'C for loop0 1 2 3 4 5 6 7 8 9 a',NULL,1,0,'',0,0,NULL,1,0,''),
 (1213,255,'0 1 2 3 4 5 6 7 8 9 a',NULL,0,0,'',0,0,NULL,1,0,''),
 (1214,255,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1215,255,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (1216,256,'1 3 5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1217,256,'1 2 3 4 5',NULL,0,0,'',0,0,NULL,1,0,''),
 (1218,256,'1 3',NULL,1,0,'',0,0,NULL,1,0,''),
 (1219,256,'All of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1220,256,'None of the above',NULL,0,0,'',0,0,NULL,1,0,''),
 (1221,257,'Infinite Loop',NULL,1,0,'',0,0,NULL,1,0,''),
 (1222,257,'inside loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (1223,257,'inside loop inside loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (1224,257,'Compilation Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1225,257,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1226,258,'Prints Nothing',NULL,0,0,'',0,0,NULL,1,0,''),
 (1227,258,'Loop',NULL,0,0,'',0,0,NULL,1,0,''),
 (1228,258,'Loop Loop Loop Loop Loop',NULL,1,0,'',0,0,NULL,1,0,''),
 (1229,258,'Compilation Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1230,258,'None of these',NULL,0,0,'',0,0,NULL,1,0,''),
 (1231,259,'Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (1232,259,'Hello Hello Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (1233,259,'Compiler Error',NULL,0,0,'',0,0,NULL,1,0,''),
 (1234,259,'Infinite Loop',NULL,1,0,'',0,0,NULL,1,0,''),
 (1235,259,'Hello Hello Hello Hello Hello',NULL,0,0,'',0,0,NULL,1,0,''),
 (1236,260,'1 2 3 0',NULL,0,0,'',0,0,NULL,1,0,''),
 (1237,260,'1 1 2 2',NULL,0,0,'',0,0,NULL,1,0,''),
 (1238,260,'2 1 3 0',NULL,1,0,'',0,0,NULL,1,0,''),
 (1239,260,'0 1 2 3',NULL,0,0,'',0,0,NULL,1,0,''),
 (1240,260,'None of these',NULL,0,0,'',0,0,NULL,1,0,'');
/*!40000 ALTER TABLE `answers` ENABLE KEYS */;


--
-- Definition of table `apt_tp_rule`
--

DROP TABLE IF EXISTS `apt_tp_rule`;
CREATE TABLE `apt_tp_rule` (
  `tp_id` bigint(20) unsigned NOT NULL,
  `rule` varchar(4000) NOT NULL DEFAULT '',
  PRIMARY KEY (`tp_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `apt_tp_rule`
--

/*!40000 ALTER TABLE `apt_tp_rule` DISABLE KEYS */;
INSERT INTO `apt_tp_rule` (`tp_id`,`rule`) VALUES 
 (1,''),
 (2,''),
 (3,''),
 (4,''),
 (5,''),
 (6,''),
 (7,''),
 (8,''),
 (9,''),
 (10,''),
 (11,''),
 (12,''),
 (13,''),
 (14,''),
 (15,''),
 (16,''),
 (17,''),
 (18,''),
 (19,''),
 (20,'');
/*!40000 ALTER TABLE `apt_tp_rule` ENABLE KEYS */;


--
-- Definition of table `assignment_users`
--

DROP TABLE IF EXISTS `assignment_users`;
CREATE TABLE `assignment_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) NOT NULL DEFAULT '0',
  `user_type` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `shuffled_qn_ids` varchar(8000) NOT NULL DEFAULT '',
  `answered_ids` varchar(8000) NOT NULL DEFAULT '',
  `qns_time_spent` varchar(8000) NOT NULL DEFAULT ' ',
  `qns_visited` varchar(8000) NOT NULL DEFAULT ' ',
  `time_test_init` datetime DEFAULT NULL,
  `time_test_start` datetime DEFAULT NULL,
  `time_test_lastqn_answered` datetime DEFAULT NULL,
  `time_test_end` datetime DEFAULT NULL,
  `count_qns_answered` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_correct` int(10) unsigned NOT NULL DEFAULT '0',
  `count_qns_visited` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_page_away` int(10) unsigned NOT NULL DEFAULT '0',
  `count_test_app_away` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1729 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignment_users`
--

/*!40000 ALTER TABLE `assignment_users` DISABLE KEYS */;
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1,1,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (2,1,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (3,1,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (4,1,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (5,1,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (6,1,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (7,1,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (8,1,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (9,1,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (10,1,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (11,1,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (12,1,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (13,1,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (14,1,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (15,1,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (16,1,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (17,1,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (18,1,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (19,1,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (20,1,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (21,1,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (22,1,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (23,1,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (24,1,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (25,1,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (26,1,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (27,1,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (28,1,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (29,1,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (30,1,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (31,1,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (32,1,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (33,1,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (34,1,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (35,1,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (36,1,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (37,1,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (38,1,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (39,1,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (40,1,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (41,1,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (42,1,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (43,1,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (44,1,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (45,1,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (46,1,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (47,1,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (48,1,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (49,1,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (50,1,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (51,1,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (52,1,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (53,1,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (54,1,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (55,1,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (56,1,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (57,1,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (58,1,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (59,1,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (60,1,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (61,1,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (62,1,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (63,1,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (64,1,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (65,1,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (66,1,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (67,1,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (68,1,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (69,1,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (70,1,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (71,1,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (72,1,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (73,1,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (74,1,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (75,1,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (76,2,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (77,2,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (78,2,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (79,2,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (80,2,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (81,2,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (82,2,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (83,2,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (84,2,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (85,2,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (86,2,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (87,2,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (88,2,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (89,2,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (90,2,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (91,2,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (92,2,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (93,2,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (94,2,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (95,2,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (96,2,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (97,2,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (98,2,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (99,2,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (100,2,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (101,2,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (102,2,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (103,2,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (104,2,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (105,2,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (106,2,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (107,2,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (108,2,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (109,2,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (110,2,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (111,2,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (112,2,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (113,2,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (114,2,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (115,2,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (116,2,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (117,2,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (118,2,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (119,2,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (120,2,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (121,2,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (122,2,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (123,2,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (124,2,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (125,2,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (126,2,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (127,2,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (128,2,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (129,2,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (130,2,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (131,2,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (132,2,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (133,2,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (134,2,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (135,2,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (136,2,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (137,2,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (138,2,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (139,2,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (140,2,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (141,2,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (142,2,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (143,2,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (144,2,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (145,2,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (146,2,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (147,2,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (148,2,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (149,2,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (150,2,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (151,3,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (152,3,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (153,3,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (154,3,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (155,3,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (156,3,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (157,3,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (158,3,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (159,3,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (160,3,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (161,3,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (162,3,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (163,3,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (164,3,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (165,3,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (166,3,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (167,3,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (168,3,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (169,3,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (170,3,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (171,3,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (172,3,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (173,3,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (174,3,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (175,3,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (176,3,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (177,3,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (178,3,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (179,3,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (180,3,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (181,3,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (182,3,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (183,3,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (184,3,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (185,3,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (186,3,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (187,3,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (188,3,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (189,3,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (190,3,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (191,3,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (192,3,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (193,3,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (194,3,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (195,3,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (196,3,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (197,3,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (198,3,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (199,3,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (200,3,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (201,3,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (202,3,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (203,3,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (204,3,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (205,3,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (206,3,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (207,3,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (208,3,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (209,3,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (210,3,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (211,3,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (212,3,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (213,3,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (214,3,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (215,3,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (216,3,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (217,3,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (218,3,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (219,3,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (220,3,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (221,3,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (222,3,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (223,3,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (224,3,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (225,3,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (226,4,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (227,4,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (228,4,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (229,4,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (230,4,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (231,4,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (232,4,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (233,4,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (234,4,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (235,4,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (236,4,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (237,4,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (238,4,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (239,4,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (240,4,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (241,4,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (242,4,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (243,4,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (244,4,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (245,4,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (246,4,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (247,4,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (248,4,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (249,4,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (250,4,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (251,4,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (252,4,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (253,4,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (254,4,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (255,4,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (256,4,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (257,4,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (258,4,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (259,4,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (260,4,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (261,4,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (262,4,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (263,4,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (264,4,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (265,4,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (266,4,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (267,4,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (268,4,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (269,4,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (270,4,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (271,4,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (272,4,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (273,4,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (274,4,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (275,4,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (276,4,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (277,4,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (278,4,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (279,4,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (280,4,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (281,4,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (282,4,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (283,4,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (284,4,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (285,4,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (286,4,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (287,4,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (288,4,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (289,4,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (290,4,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (291,4,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (292,4,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (293,4,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (294,4,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (295,4,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (296,4,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (297,4,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (298,4,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (299,4,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (300,4,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (301,5,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (302,5,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (303,5,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (304,5,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (305,5,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (306,5,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (307,5,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (308,5,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (309,5,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (310,5,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (311,5,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (312,5,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (313,5,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (314,5,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (315,5,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (316,5,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (317,5,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (318,5,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (319,5,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (320,5,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (321,5,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (322,5,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (323,5,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (324,5,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (325,5,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (326,5,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (327,5,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (328,5,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (329,5,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (330,5,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (331,5,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (332,5,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (333,5,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (334,5,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (335,5,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (336,5,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (337,5,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (338,5,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (339,5,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (340,5,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (341,5,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (342,5,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (343,5,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (344,5,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (345,5,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (346,5,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (347,5,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (348,5,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (349,5,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (350,5,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (351,5,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (352,5,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (353,5,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (354,5,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (355,5,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (356,5,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (357,5,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (358,5,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (359,5,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (360,5,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (361,5,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (362,5,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (363,5,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (364,5,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (365,5,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (366,5,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (367,5,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (368,5,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (369,5,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (370,5,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (371,5,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (372,5,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (373,5,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (374,5,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (375,5,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (376,6,1,2,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (377,6,1,3,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (378,6,1,4,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (379,6,1,5,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (380,6,1,6,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (381,6,1,7,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (382,6,1,8,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (383,6,1,9,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (384,6,1,10,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (385,6,1,11,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (386,6,1,12,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (387,6,1,13,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (388,6,1,14,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (389,6,1,15,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (390,6,1,16,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (391,6,1,17,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (392,6,1,18,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (393,6,1,19,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (394,6,1,20,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (395,6,1,21,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (396,6,1,22,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (397,6,1,23,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (398,6,1,24,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (399,6,1,25,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (400,6,1,26,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (401,6,1,27,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (402,6,1,28,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (403,6,1,29,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (404,6,1,30,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (405,6,1,31,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (406,6,1,32,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (407,6,1,33,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (408,6,1,34,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (409,6,1,35,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (410,6,1,36,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (411,6,1,37,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (412,6,1,38,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (413,6,1,39,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (414,6,1,40,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (415,6,1,41,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (416,6,1,42,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (417,6,1,43,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (418,6,1,44,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (419,6,1,45,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (420,6,1,46,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (421,6,1,47,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (422,6,1,48,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (423,6,1,49,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (424,6,1,50,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (425,6,1,51,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (426,6,1,52,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (427,6,1,53,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (428,6,1,54,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (429,6,1,55,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (430,6,1,56,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (431,6,1,57,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (432,6,1,58,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (433,6,1,59,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (434,6,1,60,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (435,6,1,61,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (436,6,1,62,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (437,6,1,63,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (438,6,1,64,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (439,6,1,65,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (440,6,1,66,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (441,6,1,67,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (442,6,1,68,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (443,6,1,69,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (444,6,1,70,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (445,6,1,71,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (446,6,1,72,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (447,6,1,73,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (448,6,1,74,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (449,6,1,75,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (450,6,1,76,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (451,7,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (452,7,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (453,7,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (454,7,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (455,7,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (456,7,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (457,7,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (458,7,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (459,7,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (460,7,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (461,7,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (462,7,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (463,7,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (464,7,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (465,7,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (466,7,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (467,7,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (468,7,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (469,7,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (470,7,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (471,7,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (472,7,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (473,7,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (474,7,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (475,7,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (476,7,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (477,7,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (478,7,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (479,7,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (480,7,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (481,7,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (482,7,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (483,7,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (484,7,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (485,7,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (486,7,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (487,7,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (488,7,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (489,7,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (490,7,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (491,7,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (492,7,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (493,7,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (494,7,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (495,7,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (496,7,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (497,7,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (498,7,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (499,7,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (500,7,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (501,7,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (502,7,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (503,7,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (504,7,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (505,7,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (506,7,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (507,7,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (508,7,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (509,7,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (510,7,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (511,7,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (512,7,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (513,7,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (514,7,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (515,7,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (516,7,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (517,7,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (518,7,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (519,7,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (520,7,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (521,7,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (522,7,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (523,7,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (524,7,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (525,7,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (526,7,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (527,7,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (528,7,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (529,7,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (530,7,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (531,7,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (532,7,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (533,7,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (534,7,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (535,7,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (536,7,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (537,7,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (538,7,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (539,7,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (540,7,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (541,7,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (542,7,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (543,7,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (544,7,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (545,7,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (546,7,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (547,7,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (548,7,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (549,7,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (550,7,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (551,7,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (552,7,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (553,7,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (554,7,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (555,7,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (556,7,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (557,7,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (558,7,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (559,7,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (560,7,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (561,7,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (562,7,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (563,7,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (564,7,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (565,7,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (566,7,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (567,7,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (568,7,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (569,7,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (570,7,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (571,7,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (572,7,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (573,7,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (574,7,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (575,7,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (576,7,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (577,7,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (578,7,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (579,7,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (580,7,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (581,7,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (582,7,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (583,7,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (584,7,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (585,7,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (586,7,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (587,7,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (588,7,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (589,7,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (590,7,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (591,7,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (592,7,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (593,7,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (594,7,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (595,7,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (596,7,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (597,7,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (598,7,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (599,7,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (600,7,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (601,7,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (602,7,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (603,7,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (604,7,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (605,7,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (606,7,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (607,7,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (608,7,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (609,7,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (610,7,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (611,7,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (612,7,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (613,7,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (614,7,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (615,7,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (616,7,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (617,7,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (618,7,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (619,7,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (620,7,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (621,7,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (622,7,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (623,7,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (624,7,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (625,7,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (626,7,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (627,7,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (628,7,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (629,7,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (630,7,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (631,7,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (632,7,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (633,7,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (634,7,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (635,7,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (636,7,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (637,7,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (638,7,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (639,7,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (640,7,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (641,7,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (642,7,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (643,7,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (644,7,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (645,7,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (646,7,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (647,7,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (648,7,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (649,7,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (650,7,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (651,7,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (652,7,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (653,7,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (654,7,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (655,7,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (656,7,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (657,7,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (658,7,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (659,7,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (660,7,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (661,7,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (662,7,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (663,7,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (664,8,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (665,8,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (666,8,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (667,8,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (668,8,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (669,8,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (670,8,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (671,8,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (672,8,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (673,8,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (674,8,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (675,8,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (676,8,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (677,8,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (678,8,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (679,8,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (680,8,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (681,8,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (682,8,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (683,8,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (684,8,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (685,8,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (686,8,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (687,8,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (688,8,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (689,8,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (690,8,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (691,8,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (692,8,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (693,8,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (694,8,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (695,8,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (696,8,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (697,8,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (698,8,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (699,8,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (700,8,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (701,8,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (702,8,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (703,8,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (704,8,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (705,8,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (706,8,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (707,8,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (708,8,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (709,8,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (710,8,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (711,8,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (712,8,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (713,8,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (714,8,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (715,8,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (716,8,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (717,8,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (718,8,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (719,8,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (720,8,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (721,8,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (722,8,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (723,8,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (724,8,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (725,8,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (726,8,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (727,8,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (728,8,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (729,8,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (730,8,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (731,8,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (732,8,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (733,8,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (734,8,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (735,8,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (736,8,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (737,8,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (738,8,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (739,8,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (740,8,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (741,8,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (742,8,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (743,8,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (744,8,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (745,8,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (746,8,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (747,8,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (748,8,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (749,8,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (750,8,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (751,8,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (752,8,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (753,8,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (754,8,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (755,8,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (756,8,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (757,8,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (758,8,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (759,8,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (760,8,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (761,8,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (762,8,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (763,8,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (764,8,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (765,8,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (766,8,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (767,8,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (768,8,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (769,8,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (770,8,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (771,8,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (772,8,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (773,8,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (774,8,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (775,8,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (776,8,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (777,8,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (778,8,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (779,8,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (780,8,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (781,8,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (782,8,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (783,8,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (784,8,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (785,8,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (786,8,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (787,8,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (788,8,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (789,8,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (790,8,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (791,8,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (792,8,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (793,8,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (794,8,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (795,8,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (796,8,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (797,8,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (798,8,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (799,8,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (800,8,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (801,8,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (802,8,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (803,8,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (804,8,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (805,8,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (806,8,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (807,8,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (808,8,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (809,8,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (810,8,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (811,8,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (812,8,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (813,8,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (814,8,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (815,8,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (816,8,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (817,8,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (818,8,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (819,8,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (820,8,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (821,8,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (822,8,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (823,8,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (824,8,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (825,8,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (826,8,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (827,8,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (828,8,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (829,8,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (830,8,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (831,8,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (832,8,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (833,8,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (834,8,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (835,8,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (836,8,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (837,8,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (838,8,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (839,8,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (840,8,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (841,8,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (842,8,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (843,8,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (844,8,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (845,8,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (846,8,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (847,8,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (848,8,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (849,8,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (850,8,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (851,8,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (852,8,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (853,8,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (854,8,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (855,8,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (856,8,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (857,8,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (858,8,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (859,8,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (860,8,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (861,8,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (862,8,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (863,8,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (864,8,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (865,8,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (866,8,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (867,8,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (868,8,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (869,8,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (870,8,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (871,8,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (872,8,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (873,8,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (874,8,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (875,8,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (876,8,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (877,9,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (878,9,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (879,9,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (880,9,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (881,9,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (882,9,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (883,9,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (884,9,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (885,9,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (886,9,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (887,9,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (888,9,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (889,9,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (890,9,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (891,9,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (892,9,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (893,9,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (894,9,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (895,9,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (896,9,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (897,9,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (898,9,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (899,9,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (900,9,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (901,9,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (902,9,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (903,9,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (904,9,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (905,9,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (906,9,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (907,9,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (908,9,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (909,9,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (910,9,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (911,9,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (912,9,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (913,9,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (914,9,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (915,9,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (916,9,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (917,9,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (918,9,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (919,9,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (920,9,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (921,9,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (922,9,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (923,9,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (924,9,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (925,9,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (926,9,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (927,9,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (928,9,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (929,9,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (930,9,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (931,9,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (932,9,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (933,9,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (934,9,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (935,9,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (936,9,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (937,9,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (938,9,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (939,9,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (940,9,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (941,9,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (942,9,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (943,9,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (944,9,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (945,9,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (946,9,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (947,9,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (948,9,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (949,9,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (950,9,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (951,9,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (952,9,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (953,9,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (954,9,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (955,9,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (956,9,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (957,9,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (958,9,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (959,9,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (960,9,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (961,9,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (962,9,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (963,9,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (964,9,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (965,9,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (966,9,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (967,9,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (968,9,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (969,9,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (970,9,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (971,9,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (972,9,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (973,9,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (974,9,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (975,9,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (976,9,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (977,9,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (978,9,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (979,9,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (980,9,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (981,9,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (982,9,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (983,9,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (984,9,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (985,9,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (986,9,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (987,9,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (988,9,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (989,9,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (990,9,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (991,9,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (992,9,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (993,9,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (994,9,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (995,9,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (996,9,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (997,9,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (998,9,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (999,9,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1000,9,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1001,9,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1002,9,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1003,9,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1004,9,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1005,9,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1006,9,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1007,9,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1008,9,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1009,9,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1010,9,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1011,9,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1012,9,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1013,9,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1014,9,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1015,9,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1016,9,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1017,9,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1018,9,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1019,9,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1020,9,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1021,9,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1022,9,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1023,9,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1024,9,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1025,9,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1026,9,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1027,9,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1028,9,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1029,9,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1030,9,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1031,9,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1032,9,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1033,9,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1034,9,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1035,9,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1036,9,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1037,9,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1038,9,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1039,9,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1040,9,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1041,9,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1042,9,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1043,9,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1044,9,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1045,9,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1046,9,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1047,9,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1048,9,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1049,9,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1050,9,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1051,9,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1052,9,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1053,9,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1054,9,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1055,9,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1056,9,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1057,9,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1058,9,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1059,9,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1060,9,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1061,9,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1062,9,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1063,9,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1064,9,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1065,9,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1066,9,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1067,9,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1068,9,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1069,9,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1070,9,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1071,9,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1072,9,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1073,9,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
INSERT INTO `assignment_users` (`id`,`assignment_id`,`user_type`,`user_id`,`shuffled_qn_ids`,`answered_ids`,`qns_time_spent`,`qns_visited`,`time_test_init`,`time_test_start`,`time_test_lastqn_answered`,`time_test_end`,`count_qns_answered`,`count_qns_correct`,`count_qns_visited`,`count_test_page_away`,`count_test_app_away`) VALUES 
 (1074,9,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1075,9,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1076,9,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1077,9,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1078,9,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1079,9,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1080,9,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1081,9,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1082,9,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1083,9,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1084,9,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1085,9,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1086,9,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1087,9,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1088,9,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1089,9,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1090,10,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1091,10,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1092,10,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1093,10,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1094,10,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1095,10,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1096,10,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1097,10,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1098,10,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1099,10,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1100,10,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1101,10,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1102,10,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1103,10,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1104,10,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1105,10,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1106,10,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1107,10,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1108,10,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1109,10,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1110,10,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1111,10,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1112,10,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1113,10,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1114,10,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1115,10,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1116,10,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1117,10,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1118,10,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1119,10,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1120,10,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1121,10,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1122,10,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1123,10,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1124,10,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1125,10,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1126,10,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1127,10,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1128,10,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1129,10,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1130,10,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1131,10,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1132,10,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1133,10,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1134,10,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1135,10,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1136,10,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1137,10,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1138,10,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1139,10,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1140,10,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1141,10,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1142,10,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1143,10,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1144,10,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1145,10,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1146,10,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1147,10,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1148,10,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1149,10,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1150,10,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1151,10,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1152,10,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1153,10,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1154,10,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1155,10,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1156,10,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1157,10,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1158,10,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1159,10,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1160,10,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1161,10,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1162,10,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1163,10,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1164,10,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1165,10,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1166,10,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1167,10,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1168,10,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1169,10,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1170,10,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1171,10,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1172,10,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1173,10,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1174,10,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1175,10,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1176,10,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1177,10,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1178,10,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1179,10,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1180,10,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1181,10,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1182,10,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1183,10,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1184,10,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1185,10,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1186,10,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1187,10,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1188,10,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1189,10,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1190,10,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1191,10,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1192,10,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1193,10,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1194,10,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1195,10,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1196,10,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1197,10,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1198,10,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1199,10,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1200,10,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1201,10,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1202,10,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1203,10,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1204,10,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1205,10,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1206,10,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1207,10,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1208,10,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1209,10,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1210,10,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1211,10,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1212,10,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1213,10,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1214,10,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1215,10,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1216,10,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1217,10,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1218,10,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1219,10,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1220,10,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1221,10,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1222,10,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1223,10,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1224,10,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1225,10,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1226,10,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1227,10,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1228,10,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1229,10,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1230,10,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1231,10,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1232,10,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1233,10,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1234,10,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1235,10,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1236,10,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1237,10,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1238,10,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1239,10,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1240,10,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1241,10,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1242,10,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1243,10,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1244,10,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1245,10,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1246,10,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1247,10,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1248,10,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1249,10,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1250,10,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1251,10,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1252,10,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1253,10,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1254,10,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1255,10,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1256,10,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1257,10,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1258,10,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1259,10,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1260,10,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1261,10,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1262,10,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1263,10,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1264,10,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1265,10,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1266,10,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1267,10,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1268,10,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1269,10,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1270,10,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1271,10,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1272,10,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1273,10,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1274,10,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1275,10,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1276,10,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1277,10,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1278,10,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1279,10,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1280,10,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1281,10,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1282,10,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1283,10,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1284,10,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1285,10,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1286,10,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1287,10,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1288,10,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1289,10,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1290,10,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1291,10,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1292,10,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1293,10,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1294,10,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1295,10,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1296,10,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1297,10,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1298,10,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1299,10,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1300,10,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1301,10,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1302,10,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1303,11,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1304,11,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1305,11,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1306,11,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1307,11,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1308,11,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1309,11,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1310,11,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1311,11,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1312,11,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1313,11,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1314,11,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1315,11,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1316,11,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1317,11,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1318,11,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1319,11,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1320,11,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1321,11,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1322,11,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1323,11,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1324,11,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1325,11,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1326,11,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1327,11,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1328,11,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1329,11,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1330,11,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1331,11,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1332,11,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1333,11,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1334,11,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1335,11,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1336,11,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1337,11,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1338,11,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1339,11,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1340,11,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1341,11,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1342,11,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1343,11,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1344,11,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1345,11,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1346,11,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1347,11,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1348,11,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1349,11,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1350,11,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1351,11,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1352,11,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1353,11,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1354,11,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1355,11,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1356,11,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1357,11,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1358,11,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1359,11,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1360,11,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1361,11,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1362,11,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1363,11,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1364,11,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1365,11,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1366,11,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1367,11,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1368,11,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1369,11,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1370,11,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1371,11,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1372,11,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1373,11,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1374,11,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1375,11,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1376,11,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1377,11,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1378,11,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1379,11,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1380,11,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1381,11,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1382,11,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1383,11,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1384,11,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1385,11,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1386,11,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1387,11,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1388,11,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1389,11,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1390,11,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1391,11,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1392,11,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1393,11,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1394,11,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1395,11,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1396,11,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1397,11,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1398,11,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1399,11,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1400,11,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1401,11,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1402,11,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1403,11,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1404,11,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1405,11,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1406,11,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1407,11,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1408,11,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1409,11,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1410,11,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1411,11,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1412,11,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1413,11,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1414,11,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1415,11,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1416,11,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1417,11,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1418,11,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1419,11,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1420,11,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1421,11,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1422,11,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1423,11,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1424,11,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1425,11,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1426,11,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1427,11,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1428,11,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1429,11,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1430,11,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1431,11,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1432,11,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1433,11,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1434,11,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1435,11,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1436,11,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1437,11,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1438,11,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1439,11,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1440,11,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1441,11,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1442,11,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1443,11,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1444,11,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1445,11,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1446,11,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1447,11,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1448,11,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1449,11,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1450,11,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1451,11,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1452,11,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1453,11,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1454,11,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1455,11,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1456,11,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1457,11,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1458,11,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1459,11,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1460,11,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1461,11,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1462,11,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1463,11,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1464,11,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1465,11,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1466,11,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1467,11,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1468,11,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1469,11,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1470,11,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1471,11,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1472,11,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1473,11,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1474,11,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1475,11,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1476,11,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1477,11,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1478,11,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1479,11,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1480,11,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1481,11,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1482,11,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1483,11,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1484,11,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1485,11,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1486,11,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1487,11,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1488,11,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1489,11,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1490,11,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1491,11,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1492,11,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1493,11,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1494,11,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1495,11,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1496,11,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1497,11,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1498,11,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1499,11,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1500,11,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1501,11,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1502,11,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1503,11,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1504,11,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1505,11,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1506,11,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1507,11,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1508,11,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1509,11,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1510,11,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1511,11,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1512,11,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1513,11,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1514,11,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1515,11,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1516,12,1,77,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1517,12,1,78,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1518,12,1,79,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1519,12,1,80,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1520,12,1,81,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1521,12,1,82,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1522,12,1,83,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1523,12,1,84,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1524,12,1,85,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1525,12,1,86,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1526,12,1,87,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1527,12,1,88,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1528,12,1,89,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1529,12,1,90,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1530,12,1,91,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1531,12,1,92,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1532,12,1,93,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1533,12,1,94,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1534,12,1,95,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1535,12,1,96,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1536,12,1,97,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1537,12,1,98,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1538,12,1,99,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1539,12,1,100,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1540,12,1,101,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1541,12,1,102,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1542,12,1,103,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1543,12,1,104,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1544,12,1,105,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1545,12,1,106,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1546,12,1,107,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1547,12,1,108,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1548,12,1,109,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1549,12,1,110,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1550,12,1,111,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1551,12,1,112,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1552,12,1,113,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1553,12,1,114,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1554,12,1,115,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1555,12,1,116,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1556,12,1,117,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1557,12,1,118,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1558,12,1,119,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1559,12,1,120,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1560,12,1,121,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1561,12,1,122,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1562,12,1,123,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1563,12,1,124,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1564,12,1,125,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1565,12,1,126,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1566,12,1,127,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1567,12,1,128,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1568,12,1,129,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1569,12,1,130,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1570,12,1,131,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1571,12,1,132,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1572,12,1,133,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1573,12,1,134,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1574,12,1,135,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1575,12,1,136,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1576,12,1,137,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1577,12,1,138,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1578,12,1,139,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1579,12,1,140,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1580,12,1,141,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1581,12,1,142,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1582,12,1,143,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1583,12,1,144,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1584,12,1,145,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1585,12,1,146,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1586,12,1,147,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1587,12,1,148,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1588,12,1,149,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1589,12,1,150,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1590,12,1,151,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1591,12,1,152,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1592,12,1,153,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1593,12,1,154,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1594,12,1,155,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1595,12,1,156,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1596,12,1,157,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1597,12,1,158,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1598,12,1,159,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1599,12,1,160,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1600,12,1,161,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1601,12,1,162,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1602,12,1,163,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1603,12,1,164,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1604,12,1,165,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1605,12,1,166,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1606,12,1,167,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1607,12,1,168,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1608,12,1,169,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1609,12,1,170,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1610,12,1,171,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1611,12,1,172,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1612,12,1,173,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1613,12,1,174,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1614,12,1,175,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1615,12,1,176,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1616,12,1,177,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1617,12,1,178,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1618,12,1,179,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1619,12,1,180,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1620,12,1,181,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1621,12,1,182,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1622,12,1,183,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1623,12,1,184,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1624,12,1,185,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1625,12,1,186,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1626,12,1,187,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1627,12,1,188,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1628,12,1,189,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1629,12,1,190,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1630,12,1,191,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1631,12,1,192,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1632,12,1,193,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1633,12,1,194,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1634,12,1,195,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1635,12,1,196,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1636,12,1,197,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1637,12,1,198,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1638,12,1,199,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1639,12,1,200,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1640,12,1,201,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1641,12,1,202,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1642,12,1,203,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1643,12,1,204,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1644,12,1,205,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1645,12,1,206,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1646,12,1,207,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1647,12,1,208,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1648,12,1,209,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1649,12,1,210,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1650,12,1,211,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1651,12,1,212,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1652,12,1,213,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1653,12,1,214,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1654,12,1,215,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1655,12,1,216,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1656,12,1,217,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1657,12,1,218,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1658,12,1,219,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1659,12,1,220,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1660,12,1,221,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1661,12,1,222,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1662,12,1,223,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1663,12,1,224,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1664,12,1,225,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1665,12,1,226,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1666,12,1,227,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1667,12,1,228,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1668,12,1,229,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1669,12,1,230,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1670,12,1,231,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1671,12,1,232,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1672,12,1,233,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1673,12,1,234,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1674,12,1,235,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1675,12,1,236,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1676,12,1,237,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1677,12,1,238,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1678,12,1,239,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1679,12,1,240,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1680,12,1,241,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1681,12,1,242,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1682,12,1,243,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1683,12,1,244,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1684,12,1,245,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1685,12,1,246,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1686,12,1,247,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1687,12,1,248,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1688,12,1,249,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1689,12,1,250,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1690,12,1,251,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1691,12,1,252,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1692,12,1,253,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1693,12,1,254,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1694,12,1,255,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1695,12,1,256,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1696,12,1,257,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1697,12,1,258,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1698,12,1,259,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1699,12,1,260,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1700,12,1,261,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1701,12,1,262,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1702,12,1,263,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1703,12,1,264,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1704,12,1,265,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1705,12,1,266,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1706,12,1,267,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1707,12,1,268,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1708,12,1,269,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1709,12,1,270,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1710,12,1,271,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1711,12,1,272,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1712,12,1,273,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1713,12,1,274,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1714,12,1,275,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1715,12,1,276,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1716,12,1,277,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1717,12,1,278,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1718,12,1,279,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1719,12,1,280,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1720,12,1,281,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1721,12,1,282,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1722,12,1,283,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1723,12,1,284,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1724,12,1,285,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1725,12,1,286,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1726,12,1,287,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1727,12,1,288,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0),
 (1728,12,1,289,'','',' ',' ',NULL,NULL,NULL,NULL,0,0,0,0,0);
/*!40000 ALTER TABLE `assignment_users` ENABLE KEYS */;


--
-- Definition of table `assignments`
--

DROP TABLE IF EXISTS `assignments`;
CREATE TABLE `assignments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` int(11) NOT NULL DEFAULT '0',
  `org_quiz_id` int(11) NOT NULL DEFAULT '0',
  `results_mode` int(11) NOT NULL DEFAULT '0',
  `added_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `quiz_time` int(11) NOT NULL DEFAULT '0',
  `show_results` int(11) NOT NULL DEFAULT '0',
  `pass_score` decimal(10,2) NOT NULL DEFAULT '0.00',
  `quiz_type` int(11) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `assignments`
--

/*!40000 ALTER TABLE `assignments` DISABLE KEYS */;
INSERT INTO `assignments` (`id`,`quiz_id`,`org_quiz_id`,`results_mode`,`added_date`,`quiz_time`,`show_results`,`pass_score`,`quiz_type`,`status`) VALUES 
 (1,1,1,1,'2024-01-28 19:39:09',75,1,'60.00',1,0),
 (2,2,2,1,'2024-01-28 19:39:09',75,1,'40.00',1,0),
 (3,3,3,1,'2024-01-28 19:39:09',75,1,'40.00',1,0),
 (4,4,4,1,'2024-01-28 19:39:09',75,1,'40.00',1,0),
 (5,5,5,1,'2024-01-28 19:39:09',75,1,'40.00',1,0),
 (6,6,6,1,'2024-01-28 19:39:09',75,1,'40.00',1,0),
 (7,1,1,1,'2024-01-28 19:39:10',75,1,'60.00',1,0),
 (8,2,2,1,'2024-01-28 19:39:10',75,1,'40.00',1,0),
 (9,3,3,1,'2024-01-28 19:39:10',75,1,'40.00',1,0),
 (10,4,4,1,'2024-01-28 19:39:10',75,1,'40.00',1,0),
 (11,5,5,1,'2024-01-28 19:39:11',75,1,'40.00',1,0),
 (12,6,6,1,'2024-01-28 19:39:11',75,1,'40.00',1,0);
/*!40000 ALTER TABLE `assignments` ENABLE KEYS */;


--
-- Definition of table `cats`
--

DROP TABLE IF EXISTS `cats`;
CREATE TABLE `cats` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `cats`
--

/*!40000 ALTER TABLE `cats` DISABLE KEYS */;
INSERT INTO `cats` (`id`,`cat_name`) VALUES 
 (1,'Assessment Test #001'),
 (2,'Assessment Test #002'),
 (3,'Assessment Test #003'),
 (4,'Assessment Test #004'),
 (5,'Assessment Test #005'),
 (6,'Assessment Test #006');
/*!40000 ALTER TABLE `cats` ENABLE KEYS */;


--
-- Definition of table `imported_users`
--

DROP TABLE IF EXISTS `imported_users`;
CREATE TABLE `imported_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(250) NOT NULL DEFAULT '',
  `surname` varchar(255) NOT NULL DEFAULT '',
  `user_name` varchar(150) NOT NULL DEFAULT '',
  `password` varchar(150) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `imported_users`
--

/*!40000 ALTER TABLE `imported_users` DISABLE KEYS */;
INSERT INTO `imported_users` (`id`,`name`,`surname`,`user_name`,`password`) VALUES 
 (1,'test1','test2','user1','ee11cbb19052e40b07aac0ca060c23ee'),
 (2,'test2','test2','user2','ee11cbb19052e40b07aac0ca060c23ee');
/*!40000 ALTER TABLE `imported_users` ENABLE KEYS */;


--
-- Definition of table `maxedu_cp_loadmax`
--

DROP TABLE IF EXISTS `maxedu_cp_loadmax`;
CREATE TABLE `maxedu_cp_loadmax` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `loadtext` varchar(50) NOT NULL,
  `loadval` double NOT NULL DEFAULT '0',
  `loadtime` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=817 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maxedu_cp_loadmax`
--

/*!40000 ALTER TABLE `maxedu_cp_loadmax` DISABLE KEYS */;
INSERT INTO `maxedu_cp_loadmax` (`id`,`loadtext`,`loadval`,`loadtime`) VALUES 
 (1,'[0,0.01,0.05]',0.05,'2020-07-21 03:03:56'),
 (2,'[0.08,0.03,0.05]',0.08,'2020-07-21 03:05:36'),
 (3,'[0.08,0.1,0.08]',0.1,'2020-07-21 05:05:46'),
 (4,'[0.12,0.11,0.08]',0.12,'2020-07-21 05:06:24'),
 (5,'[0.21,0.12,0.09]',0.21,'2020-07-21 05:07:20'),
 (6,'[0.27,0.14,0.09]',0.27,'2020-07-21 05:07:25'),
 (7,'[0.47,0.18,0.11]',0.47,'2020-07-21 05:12:10'),
 (8,'[0,0.01,0.05]',0.05,'2020-07-21 06:54:37'),
 (9,'[0.07,0.03,0.05]',0.07,'2020-07-21 08:19:46'),
 (10,'[0.14,0.16,0.1]',0.16,'2020-07-21 09:19:03'),
 (11,'[0.04,0.1,0.09]',0.1,'2020-07-21 10:29:42'),
 (12,'[0.15,0.11,0.1]',0.15,'2020-07-21 10:30:45'),
 (13,'[0.29,0.14,0.11]',0.29,'2020-07-21 10:30:53'),
 (14,'[0.35,0.11,0.09]',0.35,'2020-07-21 10:56:10'),
 (15,'[0.01,0.06,0.07]',0.07,'2020-07-21 11:00:01'),
 (16,'[0.08,0.06,0.07]',0.08,'2020-07-21 11:02:06'),
 (17,'[0.13,0.07,0.07]',0.13,'2020-07-21 11:02:31'),
 (18,'[0.17,0.07,0.06]',0.17,'2020-07-21 11:08:04'),
 (19,'[0.18,0.1,0.06]',0.18,'2020-07-21 11:12:18'),
 (20,'[0.22,0.11,0.08]',0.22,'2020-07-21 11:25:37'),
 (21,'[0.27,0.12,0.09]',0.27,'2020-07-21 11:25:45'),
 (22,'[0.29,0.13,0.09]',0.29,'2020-07-21 11:26:01'),
 (23,'[0.09,0.08,0.07]',0.09,'2020-07-22 02:21:04'),
 (24,'[0.33,0.1,0.07]',0.33,'2020-07-22 02:28:04'),
 (25,'[0.39,0.12,0.07]',0.39,'2020-07-22 02:28:12'),
 (26,'[0.68,0.18,0.09]',0.68,'2020-07-22 02:28:16'),
 (27,'[0.02,0.05,0.05]',0.05,'2020-07-22 09:40:09'),
 (28,'[0.11,0.06,0.05]',0.11,'2020-07-22 11:25:48'),
 (29,'[0.15,0.08,0.05]',0.15,'2020-07-22 11:27:26'),
 (30,'[0.25,0.11,0.06]',0.25,'2020-07-22 11:30:00'),
 (31,'[0.29,0.13,0.07]',0.29,'2020-07-22 11:31:37'),
 (32,'[0.09,0.07,0.05]',0.09,'2020-07-22 12:48:04'),
 (33,'[0.15,0.08,0.06]',0.15,'2020-07-22 12:48:11'),
 (34,'[0,0.01,0.05]',0.05,'2020-07-23 02:10:30'),
 (35,'[0.08,0.03,0.05]',0.08,'2020-07-23 02:11:17'),
 (36,'[0.16,0.05,0.06]',0.16,'2020-07-23 02:21:49'),
 (37,'[0.33,0.09,0.07]',0.33,'2020-07-23 02:25:01'),
 (38,'[0.38,0.13,0.07]',0.38,'2020-07-23 02:28:23'),
 (39,'[0.43,0.14,0.08]',0.43,'2020-07-23 02:28:27'),
 (40,'[0.44,0.16,0.08]',0.44,'2020-07-23 02:28:39'),
 (41,'[0.49,0.17,0.09]',0.49,'2020-07-23 02:28:43'),
 (42,'[0.61,0.2,0.1]',0.61,'2020-07-23 02:28:47'),
 (43,'[0.64,0.21,0.1]',0.64,'2020-07-23 02:28:51'),
 (44,'[0.02,0.02,0.05]',0.05,'2020-07-23 04:13:58'),
 (45,'[0.08,0.03,0.05]',0.08,'2020-07-23 04:20:00'),
 (46,'[0.1,0.04,0.05]',0.1,'2020-07-23 04:21:32'),
 (47,'[0.08,0.08,0.06]',0.08,'2020-07-23 09:20:15'),
 (48,'[0.06,0.07,0.06]',0.07,'2020-07-23 13:58:02'),
 (49,'[0.01,0.05,0.05]',0.05,'2020-07-23 14:00:01'),
 (50,'[0.08,0.05,0.05]',0.08,'2020-07-23 14:01:50'),
 (51,'[0.13,0.06,0.05]',0.13,'2020-07-23 14:02:16'),
 (52,'[0.2,0.08,0.06]',0.2,'2020-07-23 14:02:21'),
 (53,'[0.02,0.02,0.05]',0.05,'2020-07-23 18:16:38'),
 (54,'[0.08,0.03,0.05]',0.08,'2020-07-23 18:25:04'),
 (55,'[0.14,0.05,0.05]',0.14,'2020-07-23 18:45:18'),
 (56,'[0.17,0.06,0.06]',0.17,'2020-07-23 18:45:49'),
 (57,'[0.23,0.08,0.06]',0.23,'2020-07-23 18:46:37'),
 (58,'[0,0.01,0.05]',0.05,'2020-07-23 21:07:14'),
 (59,'[0.01,0.06,0.06]',0.06,'2020-07-24 02:32:36'),
 (60,'[0.08,0.04,0.05]',0.08,'2020-07-24 02:37:02'),
 (61,'[0.12,0.06,0.05]',0.12,'2020-07-24 02:37:52'),
 (62,'[0.14,0.07,0.05]',0.14,'2020-07-24 02:38:28'),
 (63,'[0.04,0.03,0.05]',0.05,'2020-07-24 06:47:09'),
 (64,'[0.1,0.04,0.05]',0.1,'2020-07-24 06:47:35'),
 (65,'[0,0.01,0.05]',0.05,'2020-07-24 08:24:03'),
 (66,'[0.09,0.04,0.05]',0.09,'2020-07-24 08:31:27'),
 (67,'[0,0.01,0.05]',0.05,'2020-07-24 09:01:24'),
 (68,'[0.14,0.05,0.06]',0.14,'2020-07-24 09:03:19'),
 (69,'[0,0.01,0.05]',0.05,'2020-07-24 10:33:13'),
 (70,'[0.16,0.05,0.06]',0.16,'2020-07-24 10:36:54'),
 (71,'[0.22,0.06,0.06]',0.22,'2020-07-24 10:37:04'),
 (72,'[0.03,0.22,0.16]',0.22,'2020-07-25 02:33:25'),
 (73,'[0.29,0.14,0.14]',0.29,'2020-07-25 02:38:42'),
 (74,'[0.34,0.16,0.15]',0.34,'2020-07-25 02:38:46'),
 (75,'[0,0.01,0.05]',0.05,'2020-07-25 03:09:15'),
 (76,'[0.06,0.06,0.05]',0.06,'2020-07-25 04:29:16'),
 (77,'[0.1,0.06,0.05]',0.1,'2020-07-25 07:58:04'),
 (78,'[0,0.01,0.05]',0.05,'2020-07-25 10:46:33'),
 (79,'[0,0.01,0.05]',0.05,'2020-07-25 12:08:55'),
 (80,'[0,0.01,0.05]',0.05,'2020-07-25 14:09:35'),
 (81,'[0.08,0.09,0.07]',0.09,'2020-07-26 04:24:18'),
 (82,'[0.06,0.06,0.05]',0.06,'2020-07-26 05:27:44'),
 (83,'[0.1,0.07,0.05]',0.1,'2020-07-26 05:29:02'),
 (84,'[0.11,0.09,0.06]',0.11,'2020-07-26 09:01:25'),
 (85,'[0.15,0.08,0.05]',0.15,'2020-07-26 09:04:30'),
 (86,'[0.16,0.07,0.06]',0.16,'2020-07-26 09:08:47'),
 (87,'[0.19,0.09,0.06]',0.19,'2020-07-26 09:10:02'),
 (88,'[0.25,0.11,0.06]',0.25,'2020-07-26 09:30:43'),
 (89,'[0.02,0.04,0.05]',0.05,'2020-07-26 10:16:37'),
 (90,'[0.08,0.03,0.05]',0.08,'2020-07-26 10:20:17'),
 (91,'[0.13,0.05,0.05]',0.13,'2020-07-26 10:20:46'),
 (92,'[0,0.01,0.05]',0.05,'2020-07-26 12:05:48'),
 (93,'[0.12,0.04,0.05]',0.12,'2020-07-26 12:17:57'),
 (94,'[0,0.01,0.05]',0.05,'2020-08-07 02:55:10'),
 (95,'[0.03,0.04,0.05]',0.05,'2020-08-07 03:16:08'),
 (96,'[0,0.02,0.05]',0.05,'2020-08-07 04:35:01'),
 (97,'[0,0.02,0.05]',0.05,'2020-08-07 07:41:20'),
 (98,'[0,0.01,0.05]',0.05,'2020-08-07 11:25:40'),
 (99,'[0,0.01,0.05]',0.05,'2020-08-08 02:59:50'),
 (100,'[0,0.01,0.05]',0.05,'2020-08-08 03:00:00'),
 (101,'[0.08,0.03,0.05]',0.08,'2020-08-08 03:01:59'),
 (102,'[0.12,0.04,0.05]',0.12,'2020-08-08 03:02:39'),
 (103,'[0,0.01,0.05]',0.05,'2020-08-08 11:07:23'),
 (104,'[0,0.01,0.05]',0.05,'2020-08-08 13:31:53'),
 (105,'[0.08,0.03,0.05]',0.08,'2020-08-08 13:35:08'),
 (106,'[0.02,0.02,0.05]',0.05,'2020-08-09 10:22:48'),
 (107,'[0,0.01,0.05]',0.05,'2020-08-09 14:26:36'),
 (108,'[0,0.13,0.14]',0.14,'2020-08-10 02:36:03'),
 (109,'[0,0.01,0.05]',0.05,'2020-08-10 03:08:15'),
 (110,'[0.08,0.03,0.05]',0.08,'2020-08-10 03:08:18'),
 (111,'[0.38,0.14,0.09]',0.38,'2020-08-10 03:35:15'),
 (112,'[0.1,0.07,0.05]',0.1,'2020-08-10 05:03:33'),
 (113,'[0.14,0.08,0.06]',0.14,'2020-08-10 05:04:04'),
 (114,'[0.25,0.1,0.06]',0.25,'2020-08-10 05:06:20'),
 (115,'[0.28,0.12,0.07]',0.28,'2020-08-10 05:07:03'),
 (116,'[0.03,0.05,0.05]',0.05,'2020-08-10 06:57:58'),
 (117,'[0.09,0.06,0.05]',0.09,'2020-08-10 06:58:56'),
 (118,'[0.13,0.07,0.05]',0.13,'2020-08-10 06:59:24'),
 (119,'[0.08,0.06,0.05]',0.08,'2020-08-10 07:00:02'),
 (120,'[0.1,0.06,0.05]',0.1,'2020-08-10 07:01:30'),
 (121,'[0.13,0.07,0.05]',0.13,'2020-08-10 07:02:10'),
 (122,'[0.03,0.04,0.05]',0.05,'2020-08-10 09:10:20'),
 (123,'[0,0.01,0.05]',0.05,'2020-08-10 11:05:12'),
 (124,'[0.08,0.03,0.05]',0.08,'2020-08-10 11:15:09'),
 (125,'[0.13,0.04,0.05]',0.13,'2020-08-11 03:10:15'),
 (126,'[0.16,0.06,0.06]',0.16,'2020-08-11 03:53:55'),
 (127,'[0.18,0.09,0.06]',0.18,'2020-08-11 03:56:40'),
 (128,'[0.05,0.06,0.05]',0.06,'2020-08-11 04:00:00'),
 (129,'[0.24,0.06,0.06]',0.24,'2020-08-11 04:39:58'),
 (130,'[0.16,0.07,0.06]',0.16,'2020-08-11 07:24:07'),
 (131,'[0.18,0.11,0.07]',0.18,'2020-08-11 09:54:41'),
 (132,'[0.2,0.12,0.07]',0.2,'2020-08-11 09:55:05'),
 (133,'[0,0.03,0.05]',0.05,'2020-08-11 10:19:49'),
 (134,'[0,0.01,0.05]',0.05,'2020-08-11 11:10:23'),
 (135,'[0,0.03,0.05]',0.05,'2020-08-12 13:52:32'),
 (136,'[0.08,0.04,0.05]',0.08,'2020-08-12 13:53:58'),
 (137,'[0.1,0.05,0.05]',0.1,'2020-08-12 13:55:17'),
 (138,'[0.11,0.06,0.05]',0.11,'2020-08-12 13:56:22'),
 (139,'[0.12,0.06,0.05]',0.12,'2020-08-12 13:57:23'),
 (140,'[0.01,0.04,0.05]',0.05,'2020-08-12 14:00:00'),
 (141,'[0.08,0.04,0.05]',0.08,'2020-08-12 14:02:32'),
 (142,'[0.09,0.03,0.05]',0.09,'2020-08-12 14:24:23'),
 (143,'[0.17,0.05,0.06]',0.17,'2020-08-12 14:29:36'),
 (144,'[0.24,0.09,0.06]',0.24,'2020-08-12 14:46:34'),
 (145,'[0.27,0.1,0.06]',0.27,'2020-08-12 14:46:46'),
 (146,'[0.03,0.04,0.05]',0.05,'2020-08-12 15:00:02'),
 (147,'[0.08,0.04,0.05]',0.08,'2020-08-12 15:03:42'),
 (148,'[0.13,0.05,0.05]',0.13,'2020-08-12 15:04:07'),
 (149,'[0.19,0.08,0.06]',0.19,'2020-08-12 15:09:02'),
 (150,'[0.25,0.07,0.06]',0.25,'2020-08-12 15:25:14'),
 (151,'[0.35,0.11,0.07]',0.35,'2020-08-12 15:26:04'),
 (152,'[0.57,0.17,0.09]',0.57,'2020-08-12 15:46:00'),
 (153,'[0.67,0.24,0.12]',0.67,'2020-08-12 15:55:35'),
 (154,'[0.7,0.25,0.13]',0.7,'2020-08-12 15:55:39'),
 (155,'[0.05,0.12,0.11]',0.12,'2020-08-12 16:00:02'),
 (156,'[0.13,0.14,0.11]',0.14,'2020-08-12 16:00:06'),
 (157,'[0.18,0.14,0.12]',0.18,'2020-08-12 16:00:19'),
 (158,'[0.25,0.11,0.1]',0.25,'2020-08-12 16:09:08'),
 (159,'[0.29,0.12,0.11]',0.29,'2020-08-12 16:09:20'),
 (160,'[0,0.01,0.05]',0.05,'2020-08-12 21:31:08'),
 (161,'[0.01,0.07,0.07]',0.07,'2020-08-13 14:07:34'),
 (162,'[0.08,0.08,0.07]',0.08,'2020-08-13 14:08:44'),
 (163,'[0.11,0.08,0.07]',0.11,'2020-08-13 14:09:44'),
 (164,'[0,0.01,0.05]',0.05,'2020-08-13 21:34:02'),
 (165,'[0.08,0.03,0.05]',0.08,'2020-08-13 21:34:05'),
 (166,'[0.14,0.05,0.05]',0.14,'2020-08-13 21:34:25'),
 (167,'[0.02,0.02,0.05]',0.05,'2020-08-14 13:37:48'),
 (168,'[0.08,0.03,0.05]',0.08,'2020-08-14 13:39:02'),
 (169,'[0.14,0.05,0.05]',0.14,'2020-08-14 13:39:22'),
 (170,'[0.2,0.06,0.06]',0.2,'2020-08-14 13:39:30'),
 (171,'[0.3,0.09,0.07]',0.3,'2020-08-14 13:39:50'),
 (172,'[0,0.02,0.05]',0.05,'2020-08-14 14:00:00'),
 (173,'[0.08,0.03,0.05]',0.08,'2020-08-14 14:01:51'),
 (174,'[0.13,0.04,0.05]',0.13,'2020-08-14 14:02:20'),
 (175,'[0.06,0.08,0.12]',0.12,'2020-08-14 19:12:15'),
 (176,'[0.2,0.13,0.14]',0.2,'2020-08-14 19:18:52'),
 (177,'[0.26,0.14,0.14]',0.26,'2020-08-14 19:18:55'),
 (178,'[0,0.01,0.05]',0.05,'2020-08-14 20:24:01'),
 (179,'[0.08,0.03,0.05]',0.08,'2020-08-14 20:25:09'),
 (180,'[0.09,0.04,0.05]',0.09,'2020-08-14 20:50:08'),
 (181,'[0.01,0.02,0.05]',0.05,'2020-08-14 21:00:00'),
 (182,'[0.08,0.03,0.05]',0.08,'2020-08-14 21:02:45'),
 (183,'[0.13,0.04,0.05]',0.13,'2020-08-14 21:03:21'),
 (184,'[0.16,0.05,0.06]',0.16,'2020-08-14 21:38:32'),
 (185,'[0,0.01,0.05]',0.05,'2020-08-14 22:00:02'),
 (186,'[4.89,-1,3.79]',4.89,'2020-10-10 16:40:54'),
 (187,'[3.09,-1,5.33]',5.33,'2020-10-10 16:40:56'),
 (188,'[3.37,-1,6.91]',6.91,'2020-10-15 12:44:38'),
 (189,'[1.57,1.72,1.81]',1.81,'2020-11-12 18:43:32'),
 (190,'[1.06,1.36,1.42]',1.42,'2020-11-13 07:01:01'),
 (191,'[1.44,1.45,1.48]',1.48,'2020-11-13 08:59:28'),
 (192,'[1.48,1.46,1.49]',1.49,'2020-11-13 08:59:32'),
 (193,'[1.52,1.47,1.49]',1.52,'2020-11-13 08:59:37'),
 (194,'[1.8,1.52,1.51]',1.8,'2020-11-13 08:59:43'),
 (195,'[1.82,1.53,1.51]',1.82,'2020-11-13 08:59:46'),
 (196,'[1.91,1.56,1.52]',1.91,'2020-11-13 08:59:52'),
 (197,'[2.16,1.61,1.54]',2.16,'2020-11-13 08:59:57'),
 (198,'[1.99,1.59,1.53]',1.99,'2020-11-13 09:00:02'),
 (199,'[2.09,1.63,1.54]',2.09,'2020-11-13 09:00:32'),
 (200,'[2.25,1.67,1.56]',2.25,'2020-11-13 09:00:37'),
 (201,'[43.12,41.23,40.42]',43.12,'2020-11-13 22:50:26'),
 (202,'[43.91,41.42,40.49]',43.91,'2020-11-13 22:50:31'),
 (203,'[44.16,41.52,40.52]',44.16,'2020-11-13 22:50:36'),
 (204,'[48.43,43.09,41.11]',48.43,'2020-11-13 22:51:24'),
 (205,'[49.72,43.55,41.28]',49.72,'2020-11-13 22:51:36'),
 (206,'[50.23,43.76,41.36]',50.23,'2020-11-13 22:51:43'),
 (207,'[50.72,44.88,41.9]',50.72,'2020-11-13 22:52:47'),
 (208,'[51.47,45.13,41.99]',51.47,'2020-11-13 22:52:51'),
 (209,'[10.05,11.02,11.72]',11.72,'2020-11-14 07:00:55'),
 (210,'[10.47,11.08,11.73]',11.73,'2020-11-14 07:01:05'),
 (211,'[12.2,12.65,12.36]',12.65,'2020-11-14 12:36:09'),
 (212,'[12.27,12.66,12.36]',12.66,'2020-11-14 12:36:14'),
 (213,'[12.33,12.67,12.37]',12.67,'2020-11-14 12:36:19'),
 (214,'[15.27,17.6,17.95]',17.95,'2020-11-16 14:02:03'),
 (215,'[14.36,13.62,13.56]',14.36,'2020-11-16 23:37:16'),
 (216,'[14.4,13.65,13.57]',14.4,'2020-11-16 23:37:24'),
 (217,'[14.97,14.41,14.23]',14.97,'2020-11-17 09:39:23'),
 (218,'[32.88,23.83,18.11]',32.88,'2020-11-17 17:11:52'),
 (219,'[13.15,13.46,13.63]',13.63,'2020-11-18 08:39:39'),
 (220,'[13.43,13.51,13.64]',13.64,'2020-11-18 08:39:45'),
 (221,'[13.56,13.54,13.65]',13.65,'2020-11-18 08:39:51'),
 (222,'[13.67,13.55,13.65]',13.67,'2020-11-18 08:40:06'),
 (223,'[13.91,13.54,13.64]',13.91,'2020-11-18 08:41:01'),
 (224,'[14.8,13.73,13.7]',14.8,'2020-11-18 08:41:09'),
 (225,'[6.47,5.39,5.44]',6.47,'2020-12-13 20:00:08'),
 (226,'[6.54,5.46,5.47]',6.54,'2020-12-13 20:00:30'),
 (227,'[6.58,5.49,5.47]',6.58,'2020-12-13 20:00:35'),
 (228,'[6.72,5.56,5.5]',6.72,'2020-12-13 20:00:50'),
 (229,'[7.5,5.74,5.34]',7.5,'2020-12-13 20:38:03'),
 (230,'[4.24,4.83,5.05]',5.05,'2020-12-13 21:00:01'),
 (231,'[5.9,5.17,5.16]',5.9,'2020-12-13 21:00:04'),
 (232,'[6.47,5.3,5.2]',6.47,'2020-12-13 21:00:09'),
 (233,'[6.23,5.86,5.24]',6.23,'2020-12-14 11:12:57'),
 (234,'[6.29,5.88,5.26]',6.29,'2020-12-14 11:13:05'),
 (235,'[7.4,6.73,6.62]',7.4,'2020-12-14 17:50:24'),
 (236,'[7.67,6.84,6.66]',7.67,'2020-12-14 17:50:52'),
 (237,'[6.26,7.2,7.32]',7.32,'2020-12-19 20:03:47'),
 (238,'[8.19,7.14,7.2]',8.19,'2020-12-19 20:09:14'),
 (239,'[8.26,7.18,7.21]',8.26,'2020-12-19 20:09:17'),
 (240,'[8.38,7.24,7.23]',8.38,'2020-12-19 20:09:29'),
 (241,'[8.51,7.28,7.25]',8.51,'2020-12-19 20:09:33'),
 (242,'[8.95,7.39,7.29]',8.95,'2020-12-19 20:09:41'),
 (243,'[9.12,7.45,7.31]',9.12,'2020-12-19 20:09:45'),
 (244,'[9.13,7.91,7.5]',9.13,'2020-12-19 20:13:20'),
 (245,'[9.5,8.24,7.66]',9.5,'2020-12-19 20:15:28'),
 (246,'[7.52,7.39,7.19]',7.52,'2020-12-19 21:12:05'),
 (247,'[7.68,7.42,7.21]',7.68,'2020-12-19 21:12:11'),
 (248,'[6.78,7.37,7.18]',7.37,'2020-12-20 12:49:08'),
 (249,'[5.36,5.78,6.29]',6.29,'2020-12-21 23:43:53'),
 (250,'[5.93,6,6.27]',6.27,'2020-12-22 16:14:43'),
 (251,'[6.46,6.09,6.29]',6.46,'2020-12-22 16:15:10'),
 (252,'[5.67,5.2,5.03]',5.67,'2020-12-26 12:35:39'),
 (253,'[6.81,6.23,5.75]',6.81,'2020-12-26 19:12:00'),
 (254,'[6.83,6.24,5.75]',6.83,'2020-12-26 19:12:02'),
 (255,'[6.86,6.27,5.77]',6.86,'2020-12-26 19:12:11'),
 (256,'[6.97,6.32,5.79]',6.97,'2020-12-26 19:12:33'),
 (257,'[5.76,5.33,5.48]',5.76,'2020-12-26 20:30:38'),
 (258,'[5.92,5.38,5.48]',5.92,'2020-12-26 20:31:16'),
 (259,'[6.32,5.47,5.51]',6.32,'2020-12-26 20:31:24'),
 (260,'[5.32,5.67,5.77]',5.77,'2020-12-27 09:19:15'),
 (261,'[6.55,6.15,6.33]',6.55,'2020-12-27 16:56:51'),
 (262,'[7.22,6.3,6.38]',7.22,'2020-12-27 16:56:56'),
 (263,'[7.41,6.38,6.41]',7.41,'2020-12-27 16:57:11'),
 (264,'[5.17,5.91,6.23]',6.23,'2020-12-27 17:00:00'),
 (265,'[5.64,6,6.26]',6.26,'2020-12-27 17:00:05'),
 (266,'[6.31,5.81,5.98]',6.31,'2020-12-27 17:14:21'),
 (267,'[6.33,5.84,5.99]',6.33,'2020-12-27 17:14:37'),
 (268,'[6.63,5.91,6.01]',6.63,'2020-12-27 17:14:41'),
 (269,'[6.65,5.95,6.02]',6.65,'2020-12-27 17:14:57'),
 (270,'[6.92,6.01,6.04]',6.92,'2020-12-27 17:15:01'),
 (271,'[7.01,6.05,6.05]',7.01,'2020-12-27 17:15:05'),
 (272,'[7.09,6.11,6.07]',7.09,'2020-12-27 17:15:21'),
 (273,'[7.57,6.23,6.11]',7.57,'2020-12-27 17:15:29'),
 (274,'[7.76,6.29,6.13]',7.76,'2020-12-27 17:15:33'),
 (275,'[7.81,6.45,6.19]',7.81,'2020-12-27 17:16:13'),
 (276,'[7.89,7.52,7.71]',7.89,'2020-12-27 19:46:14'),
 (277,'[7.93,8.49,8.33]',8.49,'2020-12-27 20:31:52'),
 (278,'[8.53,8.54,8.36]',8.54,'2020-12-27 20:32:31'),
 (279,'[8.65,8.57,8.37]',8.65,'2020-12-27 20:32:36'),
 (280,'[8.79,8.6,8.38]',8.79,'2020-12-27 20:32:46'),
 (281,'[8.89,8.62,8.39]',8.89,'2020-12-27 20:32:51'),
 (282,'[8.99,8.65,8.4]',8.99,'2020-12-27 20:33:16'),
 (283,'[8.56,7.68,7.76]',8.56,'2020-12-27 21:50:45'),
 (284,'[4.98,4.67,4.75]',4.98,'2020-12-28 16:56:20'),
 (285,'[5.19,4.74,4.77]',5.19,'2020-12-28 16:56:45'),
 (286,'[5.49,4.81,4.79]',5.49,'2020-12-28 16:56:55'),
 (287,'[5.4,5.33,5.04]',5.4,'2020-12-28 17:07:02'),
 (288,'[5.45,5.3,5.05]',5.45,'2020-12-28 17:08:10'),
 (289,'[5.97,5.41,5.08]',5.97,'2020-12-28 17:08:17'),
 (290,'[4.45,4.54,4.75]',4.75,'2020-12-29 06:50:40'),
 (291,'[4.9,4.63,4.78]',4.9,'2020-12-29 06:50:42'),
 (292,'[8.42,7.74,7.34]',8.42,'2021-01-03 23:26:29'),
 (293,'[8.55,7.77,7.35]',8.55,'2021-01-03 23:26:34'),
 (294,'[8.58,7.79,7.36]',8.58,'2021-01-03 23:26:38'),
 (295,'[4.06,4.98,5.39]',5.39,'2021-01-04 09:52:58'),
 (296,'[5.03,5.1,5.41]',5.41,'2021-01-04 09:53:26'),
 (297,'[5.77,5.32,5.22]',5.77,'2021-01-04 10:14:50'),
 (298,'[6.07,6.1,6.08]',6.1,'2021-01-04 12:36:07'),
 (299,'[6.23,6.13,6.09]',6.23,'2021-01-04 12:36:10'),
 (300,'[6.69,6.23,6.13]',6.69,'2021-01-04 12:36:15'),
 (301,'[5.65,5.87,5.97]',5.97,'2021-01-04 13:00:00'),
 (302,'[5.87,5.91,5.98]',5.98,'2021-01-04 13:00:12'),
 (303,'[5.99,5.93,5.99]',5.99,'2021-01-04 13:00:28'),
 (304,'[6.23,5.98,6]',6.23,'2021-01-04 13:00:32'),
 (305,'[6.46,6.04,6.02]',6.46,'2021-01-04 13:00:48'),
 (306,'[6.58,6.07,6.03]',6.58,'2021-01-04 13:00:52'),
 (307,'[5.45,5.89,6.22]',6.22,'2021-01-04 16:58:32'),
 (308,'[7.27,6.53,6.15]',7.27,'2021-01-04 17:40:48'),
 (309,'[7.57,6.6,6.18]',7.57,'2021-01-04 17:40:53'),
 (310,'[7.76,6.66,6.2]',7.76,'2021-01-04 17:40:59'),
 (311,'[8.26,6.78,6.24]',8.26,'2021-01-04 17:41:04'),
 (312,'[8.3,7.39,7.48]',8.3,'2021-01-04 21:31:31'),
 (313,'[8.8,7.66,7.55]',8.8,'2021-01-04 21:33:12'),
 (314,'[9.06,7.77,7.59]',9.06,'2021-01-04 21:33:28'),
 (315,'[7.82,6.95,6.27]',7.82,'2021-01-05 09:28:38'),
 (316,'[6.41,7.29,7.54]',7.54,'2021-01-05 17:09:16'),
 (317,'[7.58,7.35,7.53]',7.58,'2021-01-05 17:11:07'),
 (318,'[8.58,7.51,7.57]',8.58,'2021-01-05 17:12:03'),
 (319,'[6.49,6.4,6.34]',6.49,'2021-01-05 18:00:00'),
 (320,'[6.53,6.41,6.34]',6.53,'2021-01-05 18:00:07'),
 (321,'[6.57,6.42,6.35]',6.57,'2021-01-05 18:00:11'),
 (322,'[6.7,6.44,6.36]',6.7,'2021-01-05 18:00:31'),
 (323,'[6.97,6.09,6.19]',6.97,'2021-01-05 18:04:05'),
 (324,'[7.13,6.14,6.21]',7.13,'2021-01-05 18:04:10'),
 (325,'[8.14,8.44,8.34]',8.44,'2021-01-05 19:47:51'),
 (326,'[8.45,8.5,8.36]',8.5,'2021-01-05 19:47:53'),
 (327,'[8.72,8.55,8.37]',8.72,'2021-01-05 19:48:04'),
 (328,'[6.76,5.97,6.25]',6.76,'2021-01-06 00:25:03'),
 (329,'[10.4,10.92,10.23]',10.92,'2021-01-07 18:33:14'),
 (330,'[12.21,11.29,10.35]',12.21,'2021-01-07 18:33:22'),
 (331,'[10.52,10.72,10.8]',10.8,'2021-01-07 20:33:26'),
 (332,'[7.59,8.24,9.26]',9.26,'2021-01-07 21:00:01'),
 (333,'[7.78,8.27,9.27]',9.27,'2021-01-07 21:00:06'),
 (334,'[8.36,8.39,9.3]',9.3,'2021-01-07 21:00:11'),
 (335,'[8.73,8.46,9.32]',9.32,'2021-01-07 21:00:16'),
 (336,'[9,8.52,9.33]',9.33,'2021-01-07 21:00:23'),
 (337,'[9.86,8.74,9.37]',9.86,'2021-01-07 21:01:04'),
 (338,'[9.01,7.31,6.83]',9.01,'2021-01-09 13:55:00'),
 (339,'[7.32,7.45,7.05]',7.45,'2021-01-09 14:01:52'),
 (340,'[7.66,7.3,7.04]',7.66,'2021-01-09 14:04:08'),
 (341,'[7.12,7.25,7.23]',7.25,'2021-01-17 00:24:52'),
 (342,'[5.65,5.76,5.69]',5.76,'2021-01-17 07:07:34'),
 (343,'[5.84,5.8,5.7]',5.84,'2021-01-17 07:07:37'),
 (344,'[6.01,5.84,5.71]',6.01,'2021-01-17 07:07:42'),
 (345,'[6.27,5.89,5.73]',6.27,'2021-01-17 07:08:07'),
 (346,'[5.26,5.81,6]',6,'2021-01-17 10:02:12'),
 (347,'[7.17,6.11,6.08]',7.17,'2021-01-17 10:03:03'),
 (348,'[7.3,6.17,6.1]',7.3,'2021-01-17 10:03:13'),
 (349,'[7.36,6.2,6.11]',7.36,'2021-01-17 10:03:18'),
 (350,'[8.45,6.47,6.2]',8.45,'2021-01-17 10:03:33'),
 (351,'[7.16,7.24,7.12]',7.24,'2021-01-17 13:03:48'),
 (352,'[7.31,7.26,7.13]',7.31,'2021-01-17 13:03:56'),
 (353,'[7.36,7.27,7.14]',7.36,'2021-01-17 13:04:01'),
 (354,'[7.57,7.32,7.15]',7.57,'2021-01-17 13:04:06'),
 (355,'[8.59,8.57,8]',8.59,'2021-01-17 13:13:47'),
 (356,'[7.9,7.46,7.27]',7.9,'2021-01-17 14:38:30'),
 (357,'[9.45,8.91,8.85]',9.45,'2021-01-17 20:26:39'),
 (358,'[9.46,8.94,8.86]',9.46,'2021-01-17 20:27:04'),
 (359,'[9.7,8.74,8.74]',9.7,'2021-01-17 20:31:29'),
 (360,'[9.81,8.78,8.75]',9.81,'2021-01-17 20:31:34'),
 (361,'[9.98,8.83,8.77]',9.98,'2021-01-17 20:31:40'),
 (362,'[10.6,9.12,8.86]',10.6,'2021-01-17 20:33:03'),
 (363,'[11.2,8.91,8.77]',11.2,'2021-01-17 20:51:03'),
 (364,'[11.91,9.1,8.83]',11.91,'2021-01-17 20:51:08'),
 (365,'[9.38,9.07,8.9]',9.38,'2021-01-17 21:27:09'),
 (366,'[9.43,9.09,8.91]',9.43,'2021-01-17 21:27:13'),
 (367,'[9.56,9.12,8.92]',9.56,'2021-01-17 21:27:18'),
 (368,'[10,9.22,8.95]',10,'2021-01-17 21:27:23'),
 (369,'[10.29,9.34,9]',10.29,'2021-01-17 21:28:10'),
 (370,'[10.58,9.44,9.04]',10.58,'2021-01-17 21:28:26'),
 (371,'[10.66,9.53,9.08]',10.66,'2021-01-17 21:28:45'),
 (372,'[5.57,5.67,5.75]',5.75,'2021-01-18 09:00:42'),
 (373,'[5.64,5.68,5.76]',5.76,'2021-01-18 09:00:51'),
 (374,'[5.81,5.72,5.77]',5.81,'2021-01-18 09:01:07'),
 (375,'[5.91,5.74,5.77]',5.91,'2021-01-18 09:01:11'),
 (376,'[5.95,5.75,5.77]',5.95,'2021-01-18 09:01:39'),
 (377,'[6.27,5.82,5.8]',6.27,'2021-01-18 09:01:43'),
 (378,'[6.33,5.84,5.8]',6.33,'2021-01-18 09:01:47'),
 (379,'[6.76,5.94,5.84]',6.76,'2021-01-18 09:01:59'),
 (380,'[6.78,5.96,5.84]',6.78,'2021-01-18 09:02:03'),
 (381,'[6.94,6.03,5.87]',6.94,'2021-01-18 09:02:19'),
 (382,'[10.1,9.58,9.32]',10.1,'2021-01-18 17:43:26'),
 (383,'[10.13,9.6,9.33]',10.13,'2021-01-18 17:44:02'),
 (384,'[10.43,9.7,9.37]',10.43,'2021-01-18 17:44:29'),
 (385,'[11.91,10.06,9.5]',11.91,'2021-01-18 17:45:06'),
 (386,'[11.99,10.11,9.52]',11.99,'2021-01-18 17:45:10'),
 (387,'[12.41,10.49,9.73]',12.41,'2021-01-18 17:47:57'),
 (388,'[8.19,8.82,9.25]',9.25,'2021-01-18 18:04:56'),
 (389,'[6.39,6.66,6.26]',6.66,'2021-01-19 06:50:16'),
 (390,'[6.67,6.68,6.28]',6.68,'2021-01-19 06:50:59'),
 (391,'[6.7,6.69,6.29]',6.7,'2021-01-19 06:51:03'),
 (392,'[6.74,6.66,6.29]',6.74,'2021-01-19 06:51:43'),
 (393,'[6.8,6.66,6.3]',6.8,'2021-01-19 06:52:03'),
 (394,'[6.04,6.29,6.32]',6.32,'2021-01-19 07:17:38'),
 (395,'[6.28,6.33,6.33]',6.33,'2021-01-19 07:17:43'),
 (396,'[6.35,6.29,6.31]',6.35,'2021-01-19 07:19:02'),
 (397,'[6.36,6.29,6.31]',6.36,'2021-01-19 07:19:22'),
 (398,'[6.53,6.21,6.27]',6.53,'2021-01-19 07:20:49'),
 (399,'[6.64,6.24,6.28]',6.64,'2021-01-19 07:20:53'),
 (400,'[6.67,6.25,6.28]',6.67,'2021-01-19 07:21:01'),
 (401,'[7.1,6.35,6.31]',7.1,'2021-01-19 07:21:05'),
 (402,'[5.95,6.52,6.09]',6.52,'2021-01-19 09:04:09'),
 (403,'[6.6,6.19,6.03]',6.6,'2021-01-19 09:10:07'),
 (404,'[6.63,6.2,6.03]',6.63,'2021-01-19 09:10:11'),
 (405,'[6.66,6.22,6.04]',6.66,'2021-01-19 09:10:19'),
 (406,'[7.01,6.3,6.07]',7.01,'2021-01-19 09:10:23'),
 (407,'[7.08,6.32,6.11]',7.08,'2021-01-19 09:15:59'),
 (408,'[7.43,6.8,6.82]',7.43,'2021-01-19 14:17:57'),
 (409,'[7.6,6.86,6.84]',7.6,'2021-01-19 14:18:13'),
 (410,'[7.64,6.88,6.84]',7.64,'2021-01-19 14:18:17'),
 (411,'[7.77,8.07,8.01]',8.07,'2021-01-19 17:19:23'),
 (412,'[7.95,8.11,8.02]',8.11,'2021-01-19 17:19:26'),
 (413,'[8.28,8.17,8.04]',8.28,'2021-01-19 17:19:33'),
 (414,'[8.74,8.26,8.07]',8.74,'2021-01-19 17:20:14'),
 (415,'[8.76,8.27,8.08]',8.76,'2021-01-19 17:20:19'),
 (416,'[8.78,8.28,8.08]',8.78,'2021-01-19 17:20:23'),
 (417,'[8.8,8.08,8.02]',8.8,'2021-01-19 17:23:48'),
 (418,'[9.49,8.24,8.07]',9.49,'2021-01-19 17:24:00'),
 (419,'[10.25,8.42,8.13]',10.25,'2021-01-19 17:24:04'),
 (420,'[8.83,8.41,8.06]',8.83,'2021-01-19 20:00:45'),
 (421,'[9.19,8.5,8.09]',9.19,'2021-01-19 20:00:53'),
 (422,'[8.64,7.72,7.09]',8.64,'2021-01-20 08:55:14'),
 (423,'[8.75,7.81,7.13]',8.75,'2021-01-20 08:55:41'),
 (424,'[8.81,7.87,7.17]',8.81,'2021-01-20 08:55:59'),
 (425,'[9.55,8.04,7.23]',9.55,'2021-01-20 08:56:04'),
 (426,'[6.41,7.35,7.13]',7.35,'2021-01-20 09:00:00'),
 (427,'[7.18,7.49,7.18]',7.49,'2021-01-20 09:00:06'),
 (428,'[7.41,7.53,7.2]',7.53,'2021-01-20 09:00:11'),
 (429,'[8.1,7.67,7.24]',8.1,'2021-01-20 09:00:16'),
 (430,'[8.2,7.71,7.27]',8.2,'2021-01-20 09:01:08'),
 (431,'[8.33,7.75,7.29]',8.33,'2021-01-20 09:01:18'),
 (432,'[8.38,7.77,7.3]',8.38,'2021-01-20 09:01:23'),
 (433,'[8.51,7.81,7.32]',8.51,'2021-01-20 09:01:28'),
 (434,'[8.64,7.87,7.34]',8.64,'2021-01-20 09:01:42'),
 (435,'[8.82,7.94,7.38]',8.82,'2021-01-20 09:02:02'),
 (436,'[9.07,8.01,7.41]',9.07,'2021-01-20 09:02:09'),
 (437,'[9.24,8.11,7.45]',9.24,'2021-01-20 09:02:29'),
 (438,'[9.53,8.21,7.49]',9.53,'2021-01-20 09:02:39'),
 (439,'[9.65,8.25,7.51]',9.65,'2021-01-20 09:02:44'),
 (440,'[5.68,5.24,5.65]',5.68,'2021-01-20 10:17:06'),
 (441,'[5.71,5.25,5.66]',5.71,'2021-01-20 10:17:09'),
 (442,'[5.73,5.26,5.66]',5.73,'2021-01-20 10:17:13'),
 (443,'[5.75,5.3,5.66]',5.75,'2021-01-20 10:17:49'),
 (444,'[5.93,5.35,5.67]',5.93,'2021-01-20 10:17:57'),
 (445,'[6.02,5.37,5.68]',6.02,'2021-01-20 10:18:01'),
 (446,'[6.03,5.4,5.68]',6.03,'2021-01-20 10:18:17'),
 (447,'[6.05,5.46,5.69]',6.05,'2021-01-20 10:18:51'),
 (448,'[6.78,5.66,5.73]',6.78,'2021-01-20 10:19:59'),
 (449,'[8.08,5.94,5.82]',8.08,'2021-01-20 10:20:03'),
 (450,'[11.19,9.03,8.67]',11.19,'2021-01-20 17:30:52'),
 (451,'[11.39,9.26,8.75]',11.39,'2021-01-20 17:31:25'),
 (452,'[3.2,3.89,4.33]',4.33,'2021-01-21 09:10:45'),
 (453,'[3.42,3.92,4.34]',4.34,'2021-01-21 09:10:50'),
 (454,'[5.11,4.24,4.44]',5.11,'2021-01-21 09:11:02'),
 (455,'[5.26,4.29,4.45]',5.26,'2021-01-21 09:11:08'),
 (456,'[5.62,3.93,4.03]',5.62,'2021-01-21 09:24:21'),
 (457,'[7.16,4.38,4.17]',7.16,'2021-01-21 09:25:04'),
 (458,'[6.57,6.98,7.55]',7.55,'2021-01-21 17:26:01'),
 (459,'[4.41,4.56,4.53]',4.56,'2021-01-22 08:59:53'),
 (460,'[4.54,4.58,4.54]',4.58,'2021-01-22 08:59:56'),
 (461,'[5.7,4.82,4.62]',5.7,'2021-01-22 09:00:02'),
 (462,'[7.73,8.72,9.5]',9.5,'2021-03-09 11:59:47'),
 (463,'[9.71,9.08,9.6]',9.71,'2021-03-09 12:00:02'),
 (464,'[9.89,9.13,9.62]',9.89,'2021-03-09 12:00:06'),
 (465,'[12.56,12.5,12.16]',12.56,'2021-03-09 16:58:32'),
 (466,'[12.68,12.52,12.17]',12.68,'2021-03-09 16:58:37'),
 (467,'[12.86,12.57,12.19]',12.86,'2021-03-09 16:58:44'),
 (468,'[13.47,12.68,12.23]',13.47,'2021-03-09 16:59:04'),
 (469,'[13.81,12.8,12.28]',13.81,'2021-03-09 16:59:28'),
 (470,'[14.07,12.87,12.31]',14.07,'2021-03-09 16:59:33'),
 (471,'[14.78,13.87,12.82]',14.78,'2021-03-09 17:02:59'),
 (472,'[15.33,14.53,13.57]',15.33,'2021-03-09 17:42:43'),
 (473,'[9.83,9.75,9.86]',9.86,'2021-03-09 22:14:00'),
 (474,'[10,9.79,9.87]',10,'2021-03-09 22:14:06'),
 (475,'[7.64,7.7,7.61]',7.7,'2021-03-10 08:53:42'),
 (476,'[7.75,7.72,7.62]',7.75,'2021-03-10 08:53:44'),
 (477,'[7.77,7.72,7.62]',7.77,'2021-03-10 08:53:49'),
 (478,'[9.43,8.77,8.09]',9.43,'2021-03-10 09:17:56'),
 (479,'[9.46,8.8,8.1]',9.46,'2021-03-10 09:18:04'),
 (480,'[9.58,8.83,8.12]',9.58,'2021-03-10 09:18:08'),
 (481,'[7.65,7.89,8.49]',8.49,'2021-03-10 17:30:24'),
 (482,'[8.21,8,8.51]',8.51,'2021-03-10 17:30:41'),
 (483,'[8.78,8.12,8.52]',8.78,'2021-03-10 17:31:33'),
 (484,'[9.09,8.22,8.54]',9.09,'2021-03-10 17:31:54'),
 (485,'[6.28,6.14,6.53]',6.53,'2021-03-11 08:31:16'),
 (486,'[6.55,6.2,6.55]',6.55,'2021-03-11 08:31:34'),
 (487,'[6.68,6.25,6.55]',6.68,'2021-03-11 08:32:00'),
 (488,'[6.79,6.28,6.56]',6.79,'2021-03-11 08:32:05'),
 (489,'[8.87,8.93,9.35]',9.35,'2021-03-11 17:29:47'),
 (490,'[9.36,8.97,9.32]',9.36,'2021-03-11 17:31:16'),
 (491,'[6.54,7.46,7.43]',7.46,'2021-03-12 10:03:30'),
 (492,'[6.74,7.48,7.44]',7.48,'2021-03-12 10:03:33'),
 (493,'[7.03,7.52,7.45]',7.52,'2021-03-12 10:03:42'),
 (494,'[7.64,7.34,7.38]',7.64,'2021-03-12 10:05:50'),
 (495,'[1.16,-1,6.32]',6.32,'2021-03-19 21:13:09'),
 (496,'[13.69,13.4,13.05]',13.69,'2021-03-19 21:40:04'),
 (497,'[14.12,13.5,13.08]',14.12,'2021-03-19 21:40:09'),
 (498,'[11.38,14.85,13.42]',14.85,'2021-03-20 07:36:14'),
 (499,'[23.89,19.43,15.9]',23.89,'2021-03-20 09:05:38'),
 (500,'[23.9,19.75,16.12]',23.9,'2021-03-20 09:06:10'),
 (501,'[25.4,20.21,16.3]',25.4,'2021-03-20 09:06:18'),
 (502,'[26.92,20.8,16.56]',26.92,'2021-03-20 09:06:38'),
 (503,'[28.77,21.93,17.17]',28.77,'2021-03-20 09:07:31'),
 (504,'[29.11,22.11,17.25]',29.11,'2021-03-20 09:07:36'),
 (505,'[29.5,24.37,20.55]',29.5,'2021-03-20 09:19:27'),
 (506,'[10.76,10.26,11.34]',11.34,'2021-03-20 11:17:51'),
 (507,'[11.99,10.74,11.4]',11.99,'2021-03-20 11:19:28'),
 (508,'[12.03,10.89,11.38]',12.03,'2021-03-20 11:21:00'),
 (509,'[12.16,11.1,11.4]',12.16,'2021-03-20 11:22:35'),
 (510,'[12.4,11.09,11.19]',12.4,'2021-03-20 11:30:11'),
 (511,'[12.5,11.15,11.2]',12.5,'2021-03-20 11:30:21'),
 (512,'[13.18,11.36,11.27]',13.18,'2021-03-20 11:30:37'),
 (513,'[14.69,13.08,11.89]',14.69,'2021-03-20 12:32:20'),
 (514,'[14.71,13.12,11.91]',14.71,'2021-03-20 12:32:23'),
 (515,'[14.74,13.15,11.93]',14.74,'2021-03-20 12:32:28'),
 (516,'[13.45,11.97,12.33]',13.45,'2021-03-20 17:09:06'),
 (517,'[13.48,12.02,12.34]',13.48,'2021-03-20 17:09:14'),
 (518,'[13.52,12.05,12.35]',13.52,'2021-03-20 17:09:19'),
 (519,'[14.64,13.6,12.9]',14.64,'2021-03-20 17:12:31'),
 (520,'[14.79,13.67,12.93]',14.79,'2021-03-20 17:12:45'),
 (521,'[18.65,14.25,13.17]',18.65,'2021-03-20 17:15:16'),
 (522,'[14.48,15.08,14.83]',15.08,'2021-03-21 20:00:40'),
 (523,'[15.37,15.21,14.88]',15.37,'2021-03-21 20:00:59'),
 (524,'[15.38,15.14,14.87]',15.38,'2021-03-21 20:02:02'),
 (525,'[15.5,13.6,13.51]',15.5,'2021-03-21 20:24:59'),
 (526,'[16.02,13.74,13.56]',16.02,'2021-03-21 20:25:04'),
 (527,'[16.66,13.91,13.62]',16.66,'2021-03-21 20:25:10'),
 (528,'[11.47,12.83,14.22]',14.22,'2021-03-21 21:15:51'),
 (529,'[12.58,12.97,14.23]',14.23,'2021-03-21 21:16:16'),
 (530,'[3.67,-1,2.15]',3.67,'2021-03-30 17:18:43'),
 (531,'[5.45,-1,2.26]',5.45,'2021-03-30 17:18:45'),
 (532,'[2.72,-1,6.7]',6.7,'2021-03-30 17:19:05'),
 (533,'[6.75,-1,4.75]',6.75,'2021-03-30 17:19:57'),
 (534,'[1.86,-1,6.95]',6.95,'2021-03-30 17:20:20'),
 (535,'[6.61,-1,7]',7,'2021-03-30 17:24:57'),
 (536,'[2.71,-1,4.94]',4.94,'2021-04-05 18:14:22'),
 (537,'[2.22,-1,1.05]',2.22,'2021-04-12 16:04:50'),
 (538,'[2.92,-1,3.77]',3.77,'2021-04-12 16:04:52'),
 (539,'[3.26,-1,5.84]',5.84,'2021-04-12 16:04:58'),
 (540,'[5.3,-1,6.71]',6.71,'2021-04-12 16:05:03'),
 (541,'[6.38,-1,6.78]',6.78,'2021-04-12 16:06:06'),
 (542,'[3.39,-1,6.81]',6.81,'2021-04-12 16:06:21'),
 (543,'[2.63,-1,3.65]',3.65,'2021-04-13 11:41:21'),
 (544,'[3.73,-1,5.69]',5.69,'2021-04-13 11:41:23'),
 (545,'[1.03,-1,1.92]',1.92,'2021-04-16 17:27:43'),
 (546,'[2.37,-1,0.47]',2.37,'2021-04-16 17:27:45'),
 (547,'[3.42,-1,6.23]',6.23,'2021-04-16 17:27:47'),
 (548,'[6.36,-1,2.99]',6.36,'2021-04-16 17:28:18'),
 (549,'[6.1,-1,6.22]',6.22,'2021-04-20 17:47:31'),
 (550,'[5.02,-1,6.9]',6.9,'2021-04-20 17:47:47'),
 (551,'[2.42,-1,4.95]',4.95,'2021-04-21 08:08:56'),
 (552,'[1.96,-1,6.64]',6.64,'2021-04-21 08:09:02'),
 (553,'[6.9,-1,4.72]',6.9,'2021-04-21 08:09:05'),
 (554,'[3.84,-1,0.47]',3.84,'2021-04-21 18:49:10'),
 (555,'[1.29,-1,3.94]',3.94,'2021-04-21 18:49:17'),
 (556,'[5.91,-1,5.06]',5.91,'2021-04-21 18:49:20'),
 (557,'[1.27,-1,6.09]',6.09,'2021-04-21 18:49:30'),
 (558,'[5.6,-1,6.12]',6.12,'2021-04-21 18:49:55'),
 (559,'[6.67,-1,1.97]',6.67,'2021-04-21 18:50:07'),
 (560,'[5.14,-1,6.99]',6.99,'2021-04-21 18:50:15'),
 (561,'[2.03,-1,1.28]',2.03,'2021-04-22 17:33:26'),
 (562,'[5.4,-1,3.83]',5.4,'2021-04-22 17:33:28'),
 (563,'[2.94,-1,6.88]',6.88,'2021-04-28 15:13:46'),
 (564,'[5.31,-1,0.33]',5.31,'2021-04-29 15:34:07'),
 (565,'[6.74,-1,4.9]',6.74,'2021-04-29 15:34:09'),
 (566,'[3.77,-1,2.38]',3.77,'2021-05-06 18:03:21'),
 (567,'[6.68,-1,1.94]',6.68,'2021-05-06 18:03:25'),
 (568,'[6.61,-1,5.03]',6.61,'2021-05-11 17:31:42'),
 (569,'[12.66,11.67,10.96]',12.66,'2021-05-17 16:42:11'),
 (570,'[13.09,11.77,11]',13.09,'2021-05-17 16:42:14'),
 (571,'[12.08,11.81,11.95]',12.08,'2021-05-17 19:13:19'),
 (572,'[12.13,11.82,11.95]',12.13,'2021-05-17 19:13:32'),
 (573,'[12.43,11.88,11.96]',12.43,'2021-05-17 19:14:03'),
 (574,'[11.89,11.72,12.32]',12.32,'2021-05-17 20:19:48'),
 (575,'[11.84,11.7,11.64]',11.84,'2021-05-17 22:51:17'),
 (576,'[11.85,11.71,11.64]',11.85,'2021-05-17 22:51:19'),
 (577,'[11.87,11.71,11.64]',11.87,'2021-05-17 22:51:24'),
 (578,'[12.36,11.82,11.68]',12.36,'2021-05-17 22:51:29'),
 (579,'[12.41,11.84,11.69]',12.41,'2021-05-17 22:51:34'),
 (580,'[12.47,12.35,11.94]',12.47,'2021-05-17 23:10:37'),
 (581,'[12.76,12.41,11.96]',12.76,'2021-05-17 23:10:39'),
 (582,'[12.89,12.45,11.98]',12.89,'2021-05-17 23:10:50'),
 (583,'[10.91,10.93,10.87]',10.93,'2021-05-18 03:13:03'),
 (584,'[11.08,10.97,10.88]',11.08,'2021-05-18 03:13:06'),
 (585,'[11.15,10.98,10.89]',11.15,'2021-05-18 03:13:10'),
 (586,'[11.37,11.04,10.9]',11.37,'2021-05-18 03:13:23'),
 (587,'[11.5,11.07,10.92]',11.5,'2021-05-18 03:13:27'),
 (588,'[11.71,11.13,10.94]',11.71,'2021-05-18 03:13:46'),
 (589,'[11.73,11.16,10.95]',11.73,'2021-05-18 03:14:02'),
 (590,'[11.9,11.26,11]',11.9,'2021-05-18 03:15:06'),
 (591,'[11.92,11.29,11.01]',11.92,'2021-05-18 03:15:14'),
 (592,'[12.17,11.35,11.03]',12.17,'2021-05-18 03:15:18'),
 (593,'[12.47,11.43,11.06]',12.47,'2021-05-18 03:15:26'),
 (594,'[8.56,8.35,8.44]',8.56,'2021-05-18 07:37:59'),
 (595,'[12.55,11.9,11.61]',12.55,'2021-05-18 15:57:03'),
 (596,'[13.06,12.02,11.65]',13.06,'2021-05-18 15:57:05'),
 (597,'[13.94,12.22,11.71]',13.94,'2021-05-18 15:57:12'),
 (598,'[10.35,11.02,11.44]',11.44,'2021-05-18 16:47:25'),
 (599,'[10.57,11.06,11.45]',11.45,'2021-05-18 16:47:27'),
 (600,'[15.22,14.89,14.7]',15.22,'2021-05-18 18:50:55'),
 (601,'[15.95,15.04,14.75]',15.95,'2021-05-18 18:51:05'),
 (602,'[12.74,12.8,13.32]',13.32,'2021-05-18 23:29:55'),
 (603,'[14.79,13.23,13.45]',14.79,'2021-05-18 23:30:02'),
 (604,'[15.45,13.39,13.51]',15.45,'2021-05-18 23:30:10'),
 (605,'[15.81,13.5,13.54]',15.81,'2021-05-18 23:30:14'),
 (606,'[10.94,11.54,11.35]',11.54,'2021-05-19 15:56:53'),
 (607,'[11.26,11.6,11.37]',11.6,'2021-05-19 15:56:57'),
 (608,'[11.69,11.6,11.38]',11.69,'2021-05-19 15:57:55'),
 (609,'[12.47,11.77,11.43]',12.47,'2021-05-19 15:58:03'),
 (610,'[12.57,11.82,11.47]',12.57,'2021-05-19 15:59:04'),
 (611,'[12.69,11.93,11.52]',12.69,'2021-05-19 16:00:00'),
 (612,'[12.96,12,11.55]',12.96,'2021-05-19 16:00:08'),
 (613,'[13.12,12.05,11.56]',13.12,'2021-05-19 16:00:12'),
 (614,'[15.97,15.14,14.12]',15.97,'2021-05-19 18:18:52'),
 (615,'[9.9,10.5,10.45]',10.5,'2021-05-20 00:03:17'),
 (616,'[10.19,10.3,10.18]',10.3,'2021-05-20 10:03:12'),
 (617,'[11.06,10.87,10.81]',11.06,'2021-05-20 13:07:00'),
 (618,'[11.78,11.08,10.74]',11.78,'2021-05-20 15:58:33'),
 (619,'[11.8,11.14,10.78]',11.8,'2021-05-20 15:59:16'),
 (620,'[13.62,11.55,10.91]',13.62,'2021-05-20 15:59:40'),
 (621,'[13.01,11.56,10.93]',13.01,'2021-05-20 16:00:05'),
 (622,'[11.55,11.05,11.2]',11.55,'2021-05-20 18:05:30'),
 (623,'[11.64,11.08,11.21]',11.64,'2021-05-20 18:05:38'),
 (624,'[12.17,11.13,10.72]',12.17,'2021-05-20 19:46:37'),
 (625,'[12.22,11.3,10.81]',12.22,'2021-05-20 19:48:07'),
 (626,'[12.29,11.32,10.83]',12.29,'2021-05-20 19:48:13'),
 (627,'[10.55,10.77,10.96]',10.96,'2021-05-20 20:28:18'),
 (628,'[11.12,10.85,10.97]',11.12,'2021-05-20 20:29:00'),
 (629,'[11.19,10.87,10.98]',11.19,'2021-05-20 20:29:05'),
 (630,'[11.38,10.74,10.88]',11.38,'2021-05-20 20:32:15'),
 (631,'[11.96,10.89,10.93]',11.96,'2021-05-20 20:32:25'),
 (632,'[12.04,10.92,10.94]',12.04,'2021-05-20 20:32:30'),
 (633,'[10.08,9.87,9.9]',10.08,'2021-05-21 14:27:23'),
 (634,'[10.31,9.92,9.92]',10.31,'2021-05-21 14:28:01'),
 (635,'[10.37,9.94,9.92]',10.37,'2021-05-21 14:28:06'),
 (636,'[8.32,9.59,9.4]',9.59,'2021-05-21 15:07:23'),
 (637,'[8.53,9.61,9.41]',9.61,'2021-05-21 15:07:25'),
 (638,'[10.92,9.79,9.31]',10.92,'2021-05-21 15:41:51'),
 (639,'[11.61,9.99,9.38]',11.61,'2021-05-21 15:42:05'),
 (640,'[10.59,10.94,11.1]',11.1,'2021-05-21 18:57:43'),
 (641,'[10.78,10.98,11.11]',11.11,'2021-05-21 18:57:50'),
 (642,'[10.88,10.99,11.12]',11.12,'2021-05-21 18:57:55'),
 (643,'[10.38,10.58,10.74]',10.74,'2021-05-21 19:50:25'),
 (644,'[10.51,10.61,10.75]',10.75,'2021-05-21 19:50:28'),
 (645,'[10.95,10.7,10.77]',10.95,'2021-05-21 19:50:33'),
 (646,'[11.19,10.75,10.79]',11.19,'2021-05-21 19:50:39'),
 (647,'[11.26,10.77,10.8]',11.26,'2021-05-21 19:50:44'),
 (648,'[11.56,10.84,10.82]',11.56,'2021-05-21 19:50:47'),
 (649,'[11.82,10.94,10.85]',11.82,'2021-05-21 19:51:11'),
 (650,'[11.92,10.97,10.86]',11.92,'2021-05-21 19:51:14'),
 (651,'[12.1,11.05,10.89]',12.1,'2021-05-21 19:55:14'),
 (652,'[12.17,11.1,10.91]',12.17,'2021-05-21 19:55:26'),
 (653,'[12.48,11.18,10.93]',12.48,'2021-05-21 19:55:31'),
 (654,'[12.64,11.27,10.97]',12.64,'2021-05-21 19:55:46'),
 (655,'[12.21,11.26,11]',12.21,'2021-05-21 20:00:03'),
 (656,'[12.25,11.31,11.02]',12.25,'2021-05-21 20:00:18'),
 (657,'[12.59,11.31,11.06]',12.59,'2021-05-21 20:05:04'),
 (658,'[12.75,11.38,11.08]',12.75,'2021-05-21 20:05:15'),
 (659,'[12.87,11.15,10.93]',12.87,'2021-05-21 20:19:03'),
 (660,'[10.53,10.27,10.32]',10.53,'2021-05-21 23:55:01'),
 (661,'[10.56,10.29,10.33]',10.56,'2021-05-21 23:55:07'),
 (662,'[10.68,10.32,10.34]',10.68,'2021-05-21 23:55:12'),
 (663,'[10.76,10.34,10.34]',10.76,'2021-05-21 23:56:05'),
 (664,'[12.11,11.14,10.65]',12.11,'2021-05-22 00:02:16'),
 (665,'[12.22,10.84,10.6]',12.22,'2021-05-22 00:06:04'),
 (666,'[12.53,10.93,10.63]',12.53,'2021-05-22 00:06:08'),
 (667,'[12.57,10.97,10.64]',12.57,'2021-05-22 00:06:12'),
 (668,'[12.6,11,10.65]',12.6,'2021-05-22 00:06:20'),
 (669,'[10.57,10.49,10.8]',10.8,'2021-05-22 16:14:51'),
 (670,'[10.84,10.55,10.81]',10.84,'2021-05-22 16:14:54'),
 (671,'[12.11,11.63,11.27]',12.11,'2021-05-22 16:28:54'),
 (672,'[12.25,11.68,11.29]',12.25,'2021-05-22 16:29:04'),
 (673,'[13.05,12.34,11.79]',13.05,'2021-05-22 16:37:44'),
 (674,'[13.2,12.39,11.8]',13.2,'2021-05-22 16:37:47'),
 (675,'[9.47,10.54,11.01]',11.01,'2021-05-22 19:04:23'),
 (676,'[10.84,10.08,9.76]',10.84,'2021-05-23 01:33:20'),
 (677,'[10.89,11.76,11.8]',11.8,'2021-05-23 16:02:34'),
 (678,'[11.14,11.8,11.81]',11.81,'2021-05-23 16:02:37'),
 (679,'[10.53,10.37,10.23]',10.53,'2021-05-24 00:01:34'),
 (680,'[10.56,10.38,10.24]',10.56,'2021-05-24 00:01:36'),
 (681,'[10.76,10.42,10.25]',10.76,'2021-05-24 00:01:42'),
 (682,'[10.86,10.45,10.26]',10.86,'2021-05-24 00:01:46'),
 (683,'[11.15,10.5,10.29]',11.15,'2021-05-24 00:03:03'),
 (684,'[11.22,10.52,10.29]',11.22,'2021-05-24 00:03:08'),
 (685,'[11.28,10.56,10.31]',11.28,'2021-05-24 00:03:18'),
 (686,'[11.98,10.71,10.36]',11.98,'2021-05-24 00:03:23'),
 (687,'[12.14,10.77,10.38]',12.14,'2021-05-24 00:03:28'),
 (688,'[13.13,13.82,13.81]',13.82,'2021-05-26 17:00:41'),
 (689,'[10.77,11.77,12.09]',12.09,'2021-05-27 01:10:27'),
 (690,'[12.39,11.83,12.07]',12.39,'2021-05-27 01:12:10'),
 (691,'[12.58,11.89,12.08]',12.58,'2021-05-27 01:12:20'),
 (692,'[11.76,11.57,11]',11.76,'2021-05-27 18:08:26'),
 (693,'[12.04,11.3,10.81]',12.04,'2021-05-29 16:53:59'),
 (694,'[10.65,10.51,10.66]',10.66,'2021-05-29 17:36:49'),
 (695,'[10.59,11.19,11.16]',11.19,'2021-05-30 00:13:52'),
 (696,'[11.22,11.3,11.2]',11.3,'2021-05-30 00:14:03'),
 (697,'[11.52,11.36,11.22]',11.52,'2021-05-30 00:14:08'),
 (698,'[11.78,11.37,11.23]',11.78,'2021-05-30 00:15:34'),
 (699,'[14.03,13.31,12.73]',14.03,'2021-05-31 11:25:07'),
 (700,'[14.13,13.35,12.75]',14.13,'2021-05-31 11:25:14'),
 (701,'[14.36,13.41,12.77]',14.36,'2021-05-31 11:25:19'),
 (702,'[14.86,13.54,12.82]',14.86,'2021-05-31 11:25:28'),
 (703,'[11.41,12,12.34]',12.34,'2021-05-31 12:49:31'),
 (704,'[13.04,11.94,11.72]',13.04,'2021-06-03 16:24:13'),
 (705,'[13.11,11.98,11.73]',13.11,'2021-06-03 16:24:17'),
 (706,'[14.08,14.98,14.55]',14.98,'2021-06-03 21:36:01'),
 (707,'[14.56,15.07,14.58]',15.07,'2021-06-03 21:36:03'),
 (708,'[15.09,15.15,14.62]',15.15,'2021-06-03 21:36:18'),
 (709,'[13.18,13.18,13.19]',13.19,'2021-06-03 22:41:36'),
 (710,'[13.52,13.22,13.2]',13.52,'2021-06-03 22:42:07'),
 (711,'[14.23,13.39,13.25]',14.23,'2021-06-03 22:42:31'),
 (712,'[15.01,13.57,13.31]',15.01,'2021-06-03 22:42:36'),
 (713,'[15.17,13.62,13.33]',15.17,'2021-06-03 22:42:41'),
 (714,'[15.24,13.7,13.36]',15.24,'2021-06-03 22:43:01'),
 (715,'[12.47,12.51,12.74]',12.74,'2021-06-03 23:19:24'),
 (716,'[12.68,12.55,12.75]',12.75,'2021-06-03 23:19:29'),
 (717,'[13.5,12.73,12.81]',13.5,'2021-06-03 23:19:34'),
 (718,'[9.63,9.93,9.31]',9.93,'2021-06-04 05:24:04'),
 (719,'[9.79,9.94,9.33]',9.94,'2021-06-04 05:24:26'),
 (720,'[9.89,9.96,9.34]',9.96,'2021-06-04 05:24:34'),
 (721,'[10.34,10.03,9.38]',10.34,'2021-06-04 05:25:01'),
 (722,'[10.63,10.1,9.41]',10.63,'2021-06-04 05:25:08'),
 (723,'[11.06,10.19,9.44]',11.06,'2021-06-04 05:25:14'),
 (724,'[11.54,10.31,9.48]',11.54,'2021-06-04 05:25:19'),
 (725,'[12.01,10.98,10.84]',12.01,'2021-06-04 09:27:12'),
 (726,'[12.33,10.56,10.65]',12.33,'2021-06-04 09:30:02'),
 (727,'[13.07,10.73,10.41]',13.07,'2021-06-04 09:59:04'),
 (728,'[13.14,10.79,10.43]',13.14,'2021-06-04 09:59:08'),
 (729,'[13.29,10.86,10.45]',13.29,'2021-06-04 09:59:12'),
 (730,'[11.42,10.7,10.42]',11.42,'2021-06-04 10:00:00'),
 (731,'[11.71,10.77,10.45]',11.71,'2021-06-04 10:00:04'),
 (732,'[11.81,10.81,10.46]',11.81,'2021-06-04 10:00:08'),
 (733,'[12.07,10.88,10.49]',12.07,'2021-06-04 10:00:16'),
 (734,'[12.13,10.93,10.55]',12.13,'2021-06-04 10:04:53'),
 (735,'[12.2,10.96,10.56]',12.2,'2021-06-04 10:04:56'),
 (736,'[12.65,11.16,10.64]',12.65,'2021-06-04 10:05:28'),
 (737,'[12.76,11.37,10.96]',12.76,'2021-06-04 10:35:57'),
 (738,'[13.21,11.89,11.3]',13.21,'2021-06-04 10:43:07'),
 (739,'[13.27,11.87,11.49]',13.27,'2021-06-04 10:53:15'),
 (740,'[13.85,13.08,12.68]',13.85,'2021-06-04 17:00:18'),
 (741,'[14.02,13.13,12.7]',14.02,'2021-06-04 17:00:27'),
 (742,'[14.26,13.2,12.72]',14.26,'2021-06-04 17:00:31'),
 (743,'[12.88,13.69,13.44]',13.69,'2021-06-04 18:09:22'),
 (744,'[12.54,11.68,11.2]',12.54,'2021-06-06 08:50:03'),
 (745,'[12.73,11.73,11.22]',12.73,'2021-06-06 08:50:06'),
 (746,'[12.84,11.77,11.24]',12.84,'2021-06-06 08:50:11'),
 (747,'[12.85,11.79,11.25]',12.85,'2021-06-06 08:50:15'),
 (748,'[13.1,11.86,11.27]',13.1,'2021-06-06 08:50:23'),
 (749,'[13.17,11.9,11.29]',13.17,'2021-06-06 08:50:27'),
 (750,'[9.48,9.18,9.34]',9.48,'2021-06-06 12:43:31'),
 (751,'[10.08,9.31,9.39]',10.08,'2021-06-06 12:43:33'),
 (752,'[11.56,11.22,11.03]',11.56,'2021-06-06 16:36:28'),
 (753,'[12.08,11.32,11.08]',12.08,'2021-06-06 16:38:07'),
 (754,'[12.15,11.22,11.05]',12.15,'2021-06-06 16:41:48'),
 (755,'[13.49,11.54,11.16]',13.49,'2021-06-06 16:42:04'),
 (756,'[10.24,10.43,10.76]',10.76,'2021-06-06 19:46:16'),
 (757,'[11.1,10.6,10.82]',11.1,'2021-06-06 19:46:18'),
 (758,'[11.25,10.64,10.83]',11.25,'2021-06-06 19:46:21'),
 (759,'[11.3,10.69,10.84]',11.3,'2021-06-06 19:46:57'),
 (760,'[11.75,10.8,10.87]',11.75,'2021-06-06 19:47:05'),
 (761,'[11.77,10.84,10.89]',11.77,'2021-06-06 19:47:17'),
 (762,'[11.98,10.91,10.91]',11.98,'2021-06-06 19:47:29'),
 (763,'[12.29,11.04,10.95]',12.29,'2021-06-06 19:47:49'),
 (764,'[12.42,11.08,10.96]',12.42,'2021-06-06 19:47:53'),
 (765,'[12.85,11.21,11.01]',12.85,'2021-06-06 19:48:05'),
 (766,'[13.35,12.25,11.73]',13.35,'2021-06-06 20:26:39'),
 (767,'[13.63,12.38,11.78]',13.63,'2021-06-06 20:27:05'),
 (768,'[13.98,12.47,11.82]',13.98,'2021-06-06 20:27:09'),
 (769,'[14.22,12.55,11.85]',14.22,'2021-06-06 20:27:17'),
 (770,'[14.35,12.63,11.88]',14.35,'2021-06-06 20:27:26'),
 (771,'[14.39,13.11,12.18]',14.39,'2021-06-06 20:30:18'),
 (772,'[14.52,13.16,12.2]',14.52,'2021-06-06 20:30:25'),
 (773,'[14.72,13.23,12.22]',14.72,'2021-06-06 20:30:29'),
 (774,'[14.74,13.38,12.31]',14.74,'2021-06-06 20:31:05'),
 (775,'[14.82,13.47,12.36]',14.82,'2021-06-06 20:31:25'),
 (776,'[14.91,13.52,12.38]',14.91,'2021-06-06 20:31:33'),
 (777,'[14.95,13.64,12.46]',14.95,'2021-06-06 20:32:01'),
 (778,'[15.04,13.68,12.48]',15.04,'2021-06-06 20:32:09'),
 (779,'[15.2,13.74,12.51]',15.2,'2021-06-06 20:32:13'),
 (780,'[15.26,13.78,12.53]',15.26,'2021-06-06 20:32:17'),
 (781,'[10.97,11.33,11.5]',11.5,'2021-06-06 23:54:21'),
 (782,'[11.14,11.35,11.51]',11.51,'2021-06-06 23:54:36'),
 (783,'[11.6,11.43,11.53]',11.6,'2021-06-06 23:54:46'),
 (784,'[12.07,11.54,11.57]',12.07,'2021-06-06 23:54:57'),
 (785,'[12.22,11.58,11.58]',12.22,'2021-06-06 23:55:01'),
 (786,'[12.8,11.75,11.63]',12.8,'2021-06-06 23:55:27'),
 (787,'[12.9,11.78,11.65]',12.9,'2021-06-06 23:55:33'),
 (788,'[13.15,11.85,11.67]',13.15,'2021-06-06 23:55:39'),
 (789,'[13.3,12,11.72]',13.3,'2021-06-06 23:56:09'),
 (790,'[13.38,11.84,11.65]',13.38,'2021-06-06 23:59:08'),
 (791,'[13.51,11.89,11.67]',13.51,'2021-06-06 23:59:12'),
 (792,'[12.33,11.8,11.65]',12.33,'2021-06-07 00:00:00'),
 (793,'[13.27,12,11.72]',13.27,'2021-06-07 00:00:05'),
 (794,'[13.47,13.2,13.02]',13.47,'2021-06-10 17:33:07'),
 (795,'[12.46,12.26,12.36]',12.46,'2021-06-11 07:17:11'),
 (796,'[10.67,10.89,11.59]',11.59,'2021-06-18 05:17:10'),
 (797,'[11.9,11.4,11.53]',11.9,'2021-06-20 17:45:29'),
 (798,'[12.07,11.44,11.54]',12.07,'2021-06-20 17:45:33'),
 (799,'[12.18,11.67,11.67]',12.18,'2021-06-27 17:09:26'),
 (800,'[9.98,9.98,9.87]',9.98,'2021-07-07 17:25:08'),
 (801,'[10.38,10.07,9.9]',10.38,'2021-07-07 17:25:11'),
 (802,'[10.51,10.1,9.91]',10.51,'2021-07-07 17:25:13'),
 (803,'[11.81,11.11,10.64]',11.81,'2021-07-07 17:41:35'),
 (804,'[11.97,11.17,10.67]',11.97,'2021-07-07 17:41:47'),
 (805,'[12.63,11.33,10.73]',12.63,'2021-07-07 17:42:02'),
 (806,'[9.38,10.28,10.35]',10.35,'2021-07-08 09:38:23'),
 (807,'[14.21,13.45,12.5]',14.21,'2021-07-08 14:04:20'),
 (808,'[12.45,12.57,12.49]',12.57,'2021-07-22 19:31:08'),
 (809,'[12.5,12.58,12.49]',12.58,'2021-07-22 19:31:11'),
 (810,'[12.78,12.63,12.51]',12.78,'2021-07-22 19:31:16'),
 (811,'[12.96,12.67,12.52]',12.96,'2021-07-22 19:31:24'),
 (812,'[13.36,12.76,12.55]',13.36,'2021-07-22 19:31:27'),
 (813,'[14.06,15.55,15.68]',15.68,'2021-07-22 20:47:55'),
 (814,'[14.7,15.66,15.71]',15.71,'2021-07-22 20:48:00'),
 (815,'[14.88,15.68,15.72]',15.72,'2021-07-22 20:48:05'),
 (816,'[13.85,13.41,13.72]',13.85,'2021-07-23 17:03:24');
/*!40000 ALTER TABLE `maxedu_cp_loadmax` ENABLE KEYS */;


--
-- Definition of table `modules`
--

DROP TABLE IF EXISTS `modules`;
CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(255) DEFAULT NULL,
  `file_name` varchar(255) DEFAULT NULL,
  `parent_id` int(11) DEFAULT '0',
  `priority` varchar(255) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `modules`
--

/*!40000 ALTER TABLE `modules` DISABLE KEYS */;
INSERT INTO `modules` (`id`,`module_name`,`file_name`,`parent_id`,`priority`) VALUES 
 (1,'Test Managment',NULL,0,'1'),
 (2,'Categories','cats',1,'1'),
 (3,'Quizzes','quizzes',1,'2'),
 (4,'Local users','local_users',1,'4'),
 (5,'Test Assignments',NULL,0,'2'),
 (6,'Assignments','assignments',5,'6'),
 (7,'New Assignment','add_assignment',5,'7'),
 (8,'Assignments',NULL,0,'3'),
 (9,'Active Assignments','active_assignments',8,'2'),
 (11,'New user','add_edit_user',1,'5'),
 (12,'New Quiz','add_edit_quiz',1,'3');
/*!40000 ALTER TABLE `modules` ENABLE KEYS */;


--
-- Definition of table `question_groups`
--

DROP TABLE IF EXISTS `question_groups`;
CREATE TABLE `question_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_name` varchar(450) NOT NULL,
  `show_header` int(11) NOT NULL,
  `group_total` decimal(18,0) NOT NULL DEFAULT '0',
  `show_footer` int(11) DEFAULT NULL,
  `check_total` decimal(18,0) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `parent_id` int(11) NOT NULL,
  `group_name_eng` varchar(450) DEFAULT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `question_id` (`question_id`)
) ENGINE=InnoDB AUTO_INCREMENT=261 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_groups`
--

/*!40000 ALTER TABLE `question_groups` DISABLE KEYS */;
INSERT INTO `question_groups` (`id`,`group_name`,`show_header`,`group_total`,`show_footer`,`check_total`,`question_id`,`parent_id`,`group_name_eng`,`added_date`) VALUES 
 (1,'',0,'0',NULL,NULL,1,0,NULL,'2024-01-28 19:38:56'),
 (2,'',0,'0',NULL,NULL,2,0,NULL,'2024-01-28 19:38:56'),
 (3,'',0,'0',NULL,NULL,3,0,NULL,'2024-01-28 19:38:56'),
 (4,'',0,'0',NULL,NULL,4,0,NULL,'2024-01-28 19:38:56'),
 (5,'',0,'0',NULL,NULL,5,0,NULL,'2024-01-28 19:38:56'),
 (6,'',0,'0',NULL,NULL,6,0,NULL,'2024-01-28 19:38:56'),
 (7,'',0,'0',NULL,NULL,7,0,NULL,'2024-01-28 19:38:56'),
 (8,'',0,'0',NULL,NULL,8,0,NULL,'2024-01-28 19:38:56'),
 (9,'',0,'0',NULL,NULL,9,0,NULL,'2024-01-28 19:38:56'),
 (10,'',0,'0',NULL,NULL,10,0,NULL,'2024-01-28 19:38:56'),
 (11,'',0,'0',NULL,NULL,11,0,NULL,'2024-01-28 19:38:56'),
 (12,'',0,'0',NULL,NULL,12,0,NULL,'2024-01-28 19:38:56'),
 (13,'',0,'0',NULL,NULL,13,0,NULL,'2024-01-28 19:38:56'),
 (14,'',0,'0',NULL,NULL,14,0,NULL,'2024-01-28 19:38:56'),
 (15,'',0,'0',NULL,NULL,15,0,NULL,'2024-01-28 19:38:56'),
 (16,'',0,'0',NULL,NULL,16,0,NULL,'2024-01-28 19:38:56'),
 (17,'',0,'0',NULL,NULL,17,0,NULL,'2024-01-28 19:38:56'),
 (18,'',0,'0',NULL,NULL,18,0,NULL,'2024-01-28 19:38:56'),
 (19,'',0,'0',NULL,NULL,19,0,NULL,'2024-01-28 19:38:56'),
 (20,'',0,'0',NULL,NULL,20,0,NULL,'2024-01-28 19:38:56'),
 (21,'',0,'0',NULL,NULL,21,0,NULL,'2024-01-28 19:38:56'),
 (22,'',0,'0',NULL,NULL,22,0,NULL,'2024-01-28 19:38:56'),
 (23,'',0,'0',NULL,NULL,23,0,NULL,'2024-01-28 19:38:56'),
 (24,'',0,'0',NULL,NULL,24,0,NULL,'2024-01-28 19:38:56'),
 (25,'',0,'0',NULL,NULL,25,0,NULL,'2024-01-28 19:38:56'),
 (26,'',0,'0',NULL,NULL,26,0,NULL,'2024-01-28 19:38:56'),
 (27,'',0,'0',NULL,NULL,27,0,NULL,'2024-01-28 19:38:56'),
 (28,'',0,'0',NULL,NULL,28,0,NULL,'2024-01-28 19:38:56'),
 (29,'',0,'0',NULL,NULL,29,0,NULL,'2024-01-28 19:38:56'),
 (30,'',0,'0',NULL,NULL,30,0,NULL,'2024-01-28 19:38:56'),
 (31,'',0,'0',NULL,NULL,31,0,NULL,'2024-01-28 19:38:56'),
 (32,'',0,'0',NULL,NULL,32,0,NULL,'2024-01-28 19:38:56'),
 (33,'',0,'0',NULL,NULL,33,0,NULL,'2024-01-28 19:38:56'),
 (34,'',0,'0',NULL,NULL,34,0,NULL,'2024-01-28 19:38:56'),
 (35,'',0,'0',NULL,NULL,35,0,NULL,'2024-01-28 19:38:56'),
 (36,'',0,'0',NULL,NULL,36,0,NULL,'2024-01-28 19:38:56'),
 (37,'',0,'0',NULL,NULL,37,0,NULL,'2024-01-28 19:38:56'),
 (38,'',0,'0',NULL,NULL,38,0,NULL,'2024-01-28 19:38:56'),
 (39,'',0,'0',NULL,NULL,39,0,NULL,'2024-01-28 19:38:56'),
 (40,'',0,'0',NULL,NULL,40,0,NULL,'2024-01-28 19:38:56'),
 (41,'',0,'0',NULL,NULL,41,0,NULL,'2024-01-28 19:38:56'),
 (42,'',0,'0',NULL,NULL,42,0,NULL,'2024-01-28 19:38:56'),
 (43,'',0,'0',NULL,NULL,43,0,NULL,'2024-01-28 19:38:56'),
 (44,'',0,'0',NULL,NULL,44,0,NULL,'2024-01-28 19:38:56'),
 (45,'',0,'0',NULL,NULL,45,0,NULL,'2024-01-28 19:38:56'),
 (46,'',0,'0',NULL,NULL,46,0,NULL,'2024-01-28 19:38:56'),
 (47,'',0,'0',NULL,NULL,47,0,NULL,'2024-01-28 19:38:56'),
 (48,'',0,'0',NULL,NULL,48,0,NULL,'2024-01-28 19:38:56'),
 (49,'',0,'0',NULL,NULL,49,0,NULL,'2024-01-28 19:38:56'),
 (50,'',0,'0',NULL,NULL,50,0,NULL,'2024-01-28 19:38:56'),
 (51,'',0,'0',NULL,NULL,51,0,NULL,'2024-01-28 19:38:56'),
 (52,'',0,'0',NULL,NULL,52,0,NULL,'2024-01-28 19:38:56'),
 (53,'',0,'0',NULL,NULL,53,0,NULL,'2024-01-28 19:38:56'),
 (54,'',0,'0',NULL,NULL,54,0,NULL,'2024-01-28 19:38:56'),
 (55,'',0,'0',NULL,NULL,55,0,NULL,'2024-01-28 19:38:56'),
 (56,'',0,'0',NULL,NULL,56,0,NULL,'2024-01-28 19:38:56'),
 (57,'',0,'0',NULL,NULL,57,0,NULL,'2024-01-28 19:38:56'),
 (58,'',0,'0',NULL,NULL,58,0,NULL,'2024-01-28 19:38:56'),
 (59,'',0,'0',NULL,NULL,59,0,NULL,'2024-01-28 19:38:56'),
 (60,'',0,'0',NULL,NULL,60,0,NULL,'2024-01-28 19:38:56'),
 (61,'',0,'0',NULL,NULL,61,0,NULL,'2024-01-28 19:38:57'),
 (62,'',0,'0',NULL,NULL,62,0,NULL,'2024-01-28 19:38:57'),
 (63,'',0,'0',NULL,NULL,63,0,NULL,'2024-01-28 19:38:57'),
 (64,'',0,'0',NULL,NULL,64,0,NULL,'2024-01-28 19:38:57'),
 (65,'',0,'0',NULL,NULL,65,0,NULL,'2024-01-28 19:38:57'),
 (66,'',0,'0',NULL,NULL,66,0,NULL,'2024-01-28 19:38:57'),
 (67,'',0,'0',NULL,NULL,67,0,NULL,'2024-01-28 19:38:57'),
 (68,'',0,'0',NULL,NULL,68,0,NULL,'2024-01-28 19:38:57'),
 (69,'',0,'0',NULL,NULL,69,0,NULL,'2024-01-28 19:38:57'),
 (70,'',0,'0',NULL,NULL,70,0,NULL,'2024-01-28 19:38:57'),
 (71,'',0,'0',NULL,NULL,71,0,NULL,'2024-01-28 19:38:57'),
 (72,'',0,'0',NULL,NULL,72,0,NULL,'2024-01-28 19:38:57'),
 (73,'',0,'0',NULL,NULL,73,0,NULL,'2024-01-28 19:38:57'),
 (74,'',0,'0',NULL,NULL,74,0,NULL,'2024-01-28 19:38:57'),
 (75,'',0,'0',NULL,NULL,75,0,NULL,'2024-01-28 19:38:57'),
 (76,'',0,'0',NULL,NULL,76,0,NULL,'2024-01-28 19:38:57'),
 (77,'',0,'0',NULL,NULL,77,0,NULL,'2024-01-28 19:38:57'),
 (78,'',0,'0',NULL,NULL,78,0,NULL,'2024-01-28 19:38:57'),
 (79,'',0,'0',NULL,NULL,79,0,NULL,'2024-01-28 19:38:57'),
 (80,'',0,'0',NULL,NULL,80,0,NULL,'2024-01-28 19:38:57'),
 (81,'',0,'0',NULL,NULL,81,0,NULL,'2024-01-28 19:38:58'),
 (82,'',0,'0',NULL,NULL,82,0,NULL,'2024-01-28 19:38:58'),
 (83,'',0,'0',NULL,NULL,83,0,NULL,'2024-01-28 19:38:58'),
 (84,'',0,'0',NULL,NULL,84,0,NULL,'2024-01-28 19:38:58'),
 (85,'',0,'0',NULL,NULL,85,0,NULL,'2024-01-28 19:38:58'),
 (86,'',0,'0',NULL,NULL,86,0,NULL,'2024-01-28 19:38:58'),
 (87,'',0,'0',NULL,NULL,87,0,NULL,'2024-01-28 19:38:58'),
 (88,'',0,'0',NULL,NULL,88,0,NULL,'2024-01-28 19:38:58'),
 (89,'',0,'0',NULL,NULL,89,0,NULL,'2024-01-28 19:38:58'),
 (90,'',0,'0',NULL,NULL,90,0,NULL,'2024-01-28 19:38:58'),
 (91,'',0,'0',NULL,NULL,91,0,NULL,'2024-01-28 19:38:58'),
 (92,'',0,'0',NULL,NULL,92,0,NULL,'2024-01-28 19:38:58'),
 (93,'',0,'0',NULL,NULL,93,0,NULL,'2024-01-28 19:38:58'),
 (94,'',0,'0',NULL,NULL,94,0,NULL,'2024-01-28 19:38:58'),
 (95,'',0,'0',NULL,NULL,95,0,NULL,'2024-01-28 19:38:58'),
 (96,'',0,'0',NULL,NULL,96,0,NULL,'2024-01-28 19:38:58'),
 (97,'',0,'0',NULL,NULL,97,0,NULL,'2024-01-28 19:38:58'),
 (98,'',0,'0',NULL,NULL,98,0,NULL,'2024-01-28 19:38:58'),
 (99,'',0,'0',NULL,NULL,99,0,NULL,'2024-01-28 19:38:58'),
 (100,'',0,'0',NULL,NULL,100,0,NULL,'2024-01-28 19:38:58'),
 (101,'',0,'0',NULL,NULL,101,0,NULL,'2024-01-28 19:38:59'),
 (102,'',0,'0',NULL,NULL,102,0,NULL,'2024-01-28 19:39:00'),
 (103,'',0,'0',NULL,NULL,103,0,NULL,'2024-01-28 19:39:00'),
 (104,'',0,'0',NULL,NULL,104,0,NULL,'2024-01-28 19:39:00'),
 (105,'',0,'0',NULL,NULL,105,0,NULL,'2024-01-28 19:39:00'),
 (106,'',0,'0',NULL,NULL,106,0,NULL,'2024-01-28 19:39:00'),
 (107,'',0,'0',NULL,NULL,107,0,NULL,'2024-01-28 19:39:00'),
 (108,'',0,'0',NULL,NULL,108,0,NULL,'2024-01-28 19:39:00'),
 (109,'',0,'0',NULL,NULL,109,0,NULL,'2024-01-28 19:39:00'),
 (110,'',0,'0',NULL,NULL,110,0,NULL,'2024-01-28 19:39:00'),
 (111,'',0,'0',NULL,NULL,111,0,NULL,'2024-01-28 19:39:00'),
 (112,'',0,'0',NULL,NULL,112,0,NULL,'2024-01-28 19:39:00'),
 (113,'',0,'0',NULL,NULL,113,0,NULL,'2024-01-28 19:39:00'),
 (114,'',0,'0',NULL,NULL,114,0,NULL,'2024-01-28 19:39:00'),
 (115,'',0,'0',NULL,NULL,115,0,NULL,'2024-01-28 19:39:00'),
 (116,'',0,'0',NULL,NULL,116,0,NULL,'2024-01-28 19:39:00'),
 (117,'',0,'0',NULL,NULL,117,0,NULL,'2024-01-28 19:39:00'),
 (118,'',0,'0',NULL,NULL,118,0,NULL,'2024-01-28 19:39:00'),
 (119,'',0,'0',NULL,NULL,119,0,NULL,'2024-01-28 19:39:00'),
 (120,'',0,'0',NULL,NULL,120,0,NULL,'2024-01-28 19:39:00'),
 (121,'',0,'0',NULL,NULL,121,0,NULL,'2024-01-28 19:39:00'),
 (122,'',0,'0',NULL,NULL,122,0,NULL,'2024-01-28 19:39:00'),
 (123,'',0,'0',NULL,NULL,123,0,NULL,'2024-01-28 19:39:00'),
 (124,'',0,'0',NULL,NULL,124,0,NULL,'2024-01-28 19:39:00'),
 (125,'',0,'0',NULL,NULL,125,0,NULL,'2024-01-28 19:39:00'),
 (126,'',0,'0',NULL,NULL,126,0,NULL,'2024-01-28 19:39:00'),
 (127,'',0,'0',NULL,NULL,127,0,NULL,'2024-01-28 19:39:00'),
 (128,'',0,'0',NULL,NULL,128,0,NULL,'2024-01-28 19:39:00'),
 (129,'',0,'0',NULL,NULL,129,0,NULL,'2024-01-28 19:39:00'),
 (130,'',0,'0',NULL,NULL,130,0,NULL,'2024-01-28 19:39:00'),
 (131,'',0,'0',NULL,NULL,131,0,NULL,'2024-01-28 19:39:00'),
 (132,'',0,'0',NULL,NULL,132,0,NULL,'2024-01-28 19:39:00'),
 (133,'',0,'0',NULL,NULL,133,0,NULL,'2024-01-28 19:39:00'),
 (134,'',0,'0',NULL,NULL,134,0,NULL,'2024-01-28 19:39:00'),
 (135,'',0,'0',NULL,NULL,135,0,NULL,'2024-01-28 19:39:00'),
 (136,'',0,'0',NULL,NULL,136,0,NULL,'2024-01-28 19:39:00'),
 (137,'',0,'0',NULL,NULL,137,0,NULL,'2024-01-28 19:39:00'),
 (138,'',0,'0',NULL,NULL,138,0,NULL,'2024-01-28 19:39:00'),
 (139,'',0,'0',NULL,NULL,139,0,NULL,'2024-01-28 19:39:00'),
 (140,'',0,'0',NULL,NULL,140,0,NULL,'2024-01-28 19:39:00'),
 (141,'',0,'0',NULL,NULL,141,0,NULL,'2024-01-28 19:39:01'),
 (142,'',0,'0',NULL,NULL,142,0,NULL,'2024-01-28 19:39:01'),
 (143,'',0,'0',NULL,NULL,143,0,NULL,'2024-01-28 19:39:01'),
 (144,'',0,'0',NULL,NULL,144,0,NULL,'2024-01-28 19:39:01'),
 (145,'',0,'0',NULL,NULL,145,0,NULL,'2024-01-28 19:39:01'),
 (146,'',0,'0',NULL,NULL,146,0,NULL,'2024-01-28 19:39:01'),
 (147,'',0,'0',NULL,NULL,147,0,NULL,'2024-01-28 19:39:01'),
 (148,'',0,'0',NULL,NULL,148,0,NULL,'2024-01-28 19:39:01'),
 (149,'',0,'0',NULL,NULL,149,0,NULL,'2024-01-28 19:39:01'),
 (150,'',0,'0',NULL,NULL,150,0,NULL,'2024-01-28 19:39:01'),
 (151,'',0,'0',NULL,NULL,151,0,NULL,'2024-01-28 19:39:01'),
 (152,'',0,'0',NULL,NULL,152,0,NULL,'2024-01-28 19:39:01'),
 (153,'',0,'0',NULL,NULL,153,0,NULL,'2024-01-28 19:39:01'),
 (154,'',0,'0',NULL,NULL,154,0,NULL,'2024-01-28 19:39:01'),
 (155,'',0,'0',NULL,NULL,155,0,NULL,'2024-01-28 19:39:01'),
 (156,'',0,'0',NULL,NULL,156,0,NULL,'2024-01-28 19:39:01'),
 (157,'',0,'0',NULL,NULL,157,0,NULL,'2024-01-28 19:39:01'),
 (158,'',0,'0',NULL,NULL,158,0,NULL,'2024-01-28 19:39:01'),
 (159,'',0,'0',NULL,NULL,159,0,NULL,'2024-01-28 19:39:01'),
 (160,'',0,'0',NULL,NULL,160,0,NULL,'2024-01-28 19:39:01'),
 (161,'',0,'0',NULL,NULL,161,0,NULL,'2024-01-28 19:39:01'),
 (162,'',0,'0',NULL,NULL,162,0,NULL,'2024-01-28 19:39:01'),
 (163,'',0,'0',NULL,NULL,163,0,NULL,'2024-01-28 19:39:01'),
 (164,'',0,'0',NULL,NULL,164,0,NULL,'2024-01-28 19:39:02'),
 (165,'',0,'0',NULL,NULL,165,0,NULL,'2024-01-28 19:39:02'),
 (166,'',0,'0',NULL,NULL,166,0,NULL,'2024-01-28 19:39:02'),
 (167,'',0,'0',NULL,NULL,167,0,NULL,'2024-01-28 19:39:02'),
 (168,'',0,'0',NULL,NULL,168,0,NULL,'2024-01-28 19:39:02'),
 (169,'',0,'0',NULL,NULL,169,0,NULL,'2024-01-28 19:39:02'),
 (170,'',0,'0',NULL,NULL,170,0,NULL,'2024-01-28 19:39:02'),
 (171,'',0,'0',NULL,NULL,171,0,NULL,'2024-01-28 19:39:02'),
 (172,'',0,'0',NULL,NULL,172,0,NULL,'2024-01-28 19:39:02'),
 (173,'',0,'0',NULL,NULL,173,0,NULL,'2024-01-28 19:39:02'),
 (174,'',0,'0',NULL,NULL,174,0,NULL,'2024-01-28 19:39:02'),
 (175,'',0,'0',NULL,NULL,175,0,NULL,'2024-01-28 19:39:02'),
 (176,'',0,'0',NULL,NULL,176,0,NULL,'2024-01-28 19:39:02'),
 (177,'',0,'0',NULL,NULL,177,0,NULL,'2024-01-28 19:39:02'),
 (178,'',0,'0',NULL,NULL,178,0,NULL,'2024-01-28 19:39:02'),
 (179,'',0,'0',NULL,NULL,179,0,NULL,'2024-01-28 19:39:02'),
 (180,'',0,'0',NULL,NULL,180,0,NULL,'2024-01-28 19:39:02'),
 (181,'',0,'0',NULL,NULL,181,0,NULL,'2024-01-28 19:39:02'),
 (182,'',0,'0',NULL,NULL,182,0,NULL,'2024-01-28 19:39:03'),
 (183,'',0,'0',NULL,NULL,183,0,NULL,'2024-01-28 19:39:03'),
 (184,'',0,'0',NULL,NULL,184,0,NULL,'2024-01-28 19:39:03'),
 (185,'',0,'0',NULL,NULL,185,0,NULL,'2024-01-28 19:39:03'),
 (186,'',0,'0',NULL,NULL,186,0,NULL,'2024-01-28 19:39:03'),
 (187,'',0,'0',NULL,NULL,187,0,NULL,'2024-01-28 19:39:03'),
 (188,'',0,'0',NULL,NULL,188,0,NULL,'2024-01-28 19:39:03'),
 (189,'',0,'0',NULL,NULL,189,0,NULL,'2024-01-28 19:39:03'),
 (190,'',0,'0',NULL,NULL,190,0,NULL,'2024-01-28 19:39:03'),
 (191,'',0,'0',NULL,NULL,191,0,NULL,'2024-01-28 19:39:03'),
 (192,'',0,'0',NULL,NULL,192,0,NULL,'2024-01-28 19:39:03'),
 (193,'',0,'0',NULL,NULL,193,0,NULL,'2024-01-28 19:39:03'),
 (194,'',0,'0',NULL,NULL,194,0,NULL,'2024-01-28 19:39:03'),
 (195,'',0,'0',NULL,NULL,195,0,NULL,'2024-01-28 19:39:03'),
 (196,'',0,'0',NULL,NULL,196,0,NULL,'2024-01-28 19:39:03'),
 (197,'',0,'0',NULL,NULL,197,0,NULL,'2024-01-28 19:39:03'),
 (198,'',0,'0',NULL,NULL,198,0,NULL,'2024-01-28 19:39:03'),
 (199,'',0,'0',NULL,NULL,199,0,NULL,'2024-01-28 19:39:03'),
 (200,'',0,'0',NULL,NULL,200,0,NULL,'2024-01-28 19:39:03'),
 (201,'',0,'0',NULL,NULL,201,0,NULL,'2024-01-28 19:39:03'),
 (202,'',0,'0',NULL,NULL,202,0,NULL,'2024-01-28 19:39:03'),
 (203,'',0,'0',NULL,NULL,203,0,NULL,'2024-01-28 19:39:03'),
 (204,'',0,'0',NULL,NULL,204,0,NULL,'2024-01-28 19:39:03'),
 (205,'',0,'0',NULL,NULL,205,0,NULL,'2024-01-28 19:39:03'),
 (206,'',0,'0',NULL,NULL,206,0,NULL,'2024-01-28 19:39:03'),
 (207,'',0,'0',NULL,NULL,207,0,NULL,'2024-01-28 19:39:03'),
 (208,'',0,'0',NULL,NULL,208,0,NULL,'2024-01-28 19:39:03'),
 (209,'',0,'0',NULL,NULL,209,0,NULL,'2024-01-28 19:39:03'),
 (210,'',0,'0',NULL,NULL,210,0,NULL,'2024-01-28 19:39:04'),
 (211,'',0,'0',NULL,NULL,211,0,NULL,'2024-01-28 19:39:04'),
 (212,'',0,'0',NULL,NULL,212,0,NULL,'2024-01-28 19:39:04'),
 (213,'',0,'0',NULL,NULL,213,0,NULL,'2024-01-28 19:39:04'),
 (214,'',0,'0',NULL,NULL,214,0,NULL,'2024-01-28 19:39:04'),
 (215,'',0,'0',NULL,NULL,215,0,NULL,'2024-01-28 19:39:04'),
 (216,'',0,'0',NULL,NULL,216,0,NULL,'2024-01-28 19:39:04'),
 (217,'',0,'0',NULL,NULL,217,0,NULL,'2024-01-28 19:39:04'),
 (218,'',0,'0',NULL,NULL,218,0,NULL,'2024-01-28 19:39:04'),
 (219,'',0,'0',NULL,NULL,219,0,NULL,'2024-01-28 19:39:04'),
 (220,'',0,'0',NULL,NULL,220,0,NULL,'2024-01-28 19:39:04'),
 (221,'',0,'0',NULL,NULL,221,0,NULL,'2024-01-28 19:39:04'),
 (222,'',0,'0',NULL,NULL,222,0,NULL,'2024-01-28 19:39:04'),
 (223,'',0,'0',NULL,NULL,223,0,NULL,'2024-01-28 19:39:04'),
 (224,'',0,'0',NULL,NULL,224,0,NULL,'2024-01-28 19:39:04'),
 (225,'',0,'0',NULL,NULL,225,0,NULL,'2024-01-28 19:39:05'),
 (226,'',0,'0',NULL,NULL,226,0,NULL,'2024-01-28 19:39:05'),
 (227,'',0,'0',NULL,NULL,227,0,NULL,'2024-01-28 19:39:05'),
 (228,'',0,'0',NULL,NULL,228,0,NULL,'2024-01-28 19:39:05'),
 (229,'',0,'0',NULL,NULL,229,0,NULL,'2024-01-28 19:39:05'),
 (230,'',0,'0',NULL,NULL,230,0,NULL,'2024-01-28 19:39:05'),
 (231,'',0,'0',NULL,NULL,231,0,NULL,'2024-01-28 19:39:05'),
 (232,'',0,'0',NULL,NULL,232,0,NULL,'2024-01-28 19:39:05'),
 (233,'',0,'0',NULL,NULL,233,0,NULL,'2024-01-28 19:39:05'),
 (234,'',0,'0',NULL,NULL,234,0,NULL,'2024-01-28 19:39:05'),
 (235,'',0,'0',NULL,NULL,235,0,NULL,'2024-01-28 19:39:05'),
 (236,'',0,'0',NULL,NULL,236,0,NULL,'2024-01-28 19:39:05'),
 (237,'',0,'0',NULL,NULL,237,0,NULL,'2024-01-28 19:39:05'),
 (238,'',0,'0',NULL,NULL,238,0,NULL,'2024-01-28 19:39:05'),
 (239,'',0,'0',NULL,NULL,239,0,NULL,'2024-01-28 19:39:05'),
 (240,'',0,'0',NULL,NULL,240,0,NULL,'2024-01-28 19:39:05'),
 (241,'',0,'0',NULL,NULL,241,0,NULL,'2024-01-28 19:39:05'),
 (242,'',0,'0',NULL,NULL,242,0,NULL,'2024-01-28 19:39:05'),
 (243,'',0,'0',NULL,NULL,243,0,NULL,'2024-01-28 19:39:05'),
 (244,'',0,'0',NULL,NULL,244,0,NULL,'2024-01-28 19:39:05'),
 (245,'',0,'0',NULL,NULL,245,0,NULL,'2024-01-28 19:39:05'),
 (246,'',0,'0',NULL,NULL,246,0,NULL,'2024-01-28 19:39:05'),
 (247,'',0,'0',NULL,NULL,247,0,NULL,'2024-01-28 19:39:05'),
 (248,'',0,'0',NULL,NULL,248,0,NULL,'2024-01-28 19:39:05'),
 (249,'',0,'0',NULL,NULL,249,0,NULL,'2024-01-28 19:39:05'),
 (250,'',0,'0',NULL,NULL,250,0,NULL,'2024-01-28 19:39:05'),
 (251,'',0,'0',NULL,NULL,251,0,NULL,'2024-01-28 19:39:05'),
 (252,'',0,'0',NULL,NULL,252,0,NULL,'2024-01-28 19:39:05'),
 (253,'',0,'0',NULL,NULL,253,0,NULL,'2024-01-28 19:39:06'),
 (254,'',0,'0',NULL,NULL,254,0,NULL,'2024-01-28 19:39:06'),
 (255,'',0,'0',NULL,NULL,255,0,NULL,'2024-01-28 19:39:06'),
 (256,'',0,'0',NULL,NULL,256,0,NULL,'2024-01-28 19:39:06'),
 (257,'',0,'0',NULL,NULL,257,0,NULL,'2024-01-28 19:39:06'),
 (258,'',0,'0',NULL,NULL,258,0,NULL,'2024-01-28 19:39:06'),
 (259,'',0,'0',NULL,NULL,259,0,NULL,'2024-01-28 19:39:06'),
 (260,'',0,'0',NULL,NULL,260,0,NULL,'2024-01-28 19:39:06');
/*!40000 ALTER TABLE `question_groups` ENABLE KEYS */;


--
-- Definition of table `question_types`
--

DROP TABLE IF EXISTS `question_types`;
CREATE TABLE `question_types` (
  `id` int(11) NOT NULL,
  `question_type` varchar(150) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_types`
--

/*!40000 ALTER TABLE `question_types` DISABLE KEYS */;
INSERT INTO `question_types` (`id`,`question_type`) VALUES 
 (0,'Multi answer (checkbox)'),
 (3,'Free text (textarea)'),
 (4,'Multi text (numbers only)'),
 (1,'One answer (radio button)');
/*!40000 ALTER TABLE `question_types` ENABLE KEYS */;


--
-- Definition of table `questions`
--

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_text` varchar(8000) DEFAULT NULL,
  `question_type_id` int(11) NOT NULL,
  `priority` int(11) NOT NULL,
  `quiz_id` int(11) NOT NULL,
  `point` decimal(18,0) NOT NULL,
  `added_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent_id` int(11) NOT NULL,
  `question_total` decimal(18,0) DEFAULT NULL,
  `check_total` int(11) DEFAULT NULL,
  `header_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `footer_text` varchar(1500) CHARACTER SET utf8 DEFAULT NULL,
  `question_text_eng` varchar(1800) CHARACTER SET utf8 DEFAULT NULL,
  `help_image` varchar(550) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `quiz_id` (`quiz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=261 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `questions`
--

/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (1,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">He was in a _______ what to do and what not to do.</div>',1,1,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (2,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">She practiced very hard so that she could ______ the trophy.</div>',1,2,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (3,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">Time once lost cannot be _______			   		  		      </div>',1,3,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (4,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">Laser is a (an) ________ for Light Amplification by Stimulated Emission of Radiation.</div>',1,4,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (5,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">This building comprises _____ sixty rooms</div>',1,5,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (6,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">The boy you met yesterday is in class ______</div>',1,6,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (7,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">Speak loudly as he is slow _____ hearing</div>',1,7,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (8,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">She always runs short ______ memory</div>',1,8,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (9,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">There was some confusion ________ the agreement.</div>',1,9,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (10,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">FILL IN THE BLANKS: </div><div style=\"margin-bottom:7px;font-weight:normal;\">Our flight was _________ from Jaipur to Agra airport.</div>',1,10,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (11,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">The famous Dr.Chandra (a) / is only dentist (b) / in our village (c) / no error (d)</div>',1,11,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (12,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">As soon as the teacher entered, (a) / everyone fell (b) / in a silence (c) / no error (d)</div>',1,12,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (13,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">Being a very (a) /  hot day I (b) / remained indoors. (c) / no error (d)</div>',1,13,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (14,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">No stronger (a) / a figure than his (b) / is prescribed in the history. (c) / no error (d).</div>',1,14,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (15,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">I saw (a) /  few children (b) / playing on sands (c) / no error (d).</div>',1,15,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (16,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">One of the most (a) / widely spread (b) / bad habit (c) / is the use of  tobacco (d) / no error (d).</div>',1,16,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (17,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">The blinds (a) / deserve (b) / our sympathy (c) / no error (d).</div>',1,17,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (18,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">The sound of (a) / a gun-shot (b) / scattered the flock of birds (c) / no error (d).</div>',1,18,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (19,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">I must start (a) / at dawn (b) / to reach the station  in time (c) / No error (d).</div>',1,19,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (20,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">SPOTTING OF ERRORS (Whichever part has an error, mark that part as your answer):</div><div style=\"margin-bottom:7px;font-weight:normal;\">Myself and Gopalan (a) / will take care of (b) / the function on Sunday (c) / No error (d).</div>',1,20,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (21,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Karnataka : Gold  :: __________</div>',1,21,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (22,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Filter : Water :: Censor : __________</div>',1,22,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (23,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Gravity : Pull :: Magnetism: __________</div>',1,23,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (24,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Symphony : Composer :: Fresco : _________</div>',1,24,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (25,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">After : Before ::</div>',1,25,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (26,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Wan : Colour :: Pallid : _________</div>',1,26,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (27,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Distance : Mile ::</div>',1,27,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (28,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Reading : Knowledge ::</div>',1,28,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (29,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Blunt : Sharp :: Sow : ________</div>',1,29,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (30,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">ANALOGIES:</div><div style=\"margin-bottom:7px;font-weight:normal;\">Ten : Decimal :: Two : ___________</div>',1,30,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (31,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____<strong>(1)</strong>_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____(4)_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____(9)______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(1)</strong></div>',1,31,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (32,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______<strong>(2)</strong>_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____(4)_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____(9)______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(2)</strong></div>',1,32,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (33,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___<strong>(3)</strong>_____ my choice. I had either to submit ____(4)_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____(9)______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(3)</strong></div>',1,33,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (34,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____<strong>(4)</strong>_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____(9)______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(4)</strong></div>',1,34,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (35,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____(4)_____ a system which I considered ______<strong>(5)</strong>_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____(9)______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(5)</strong></div>',1,35,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (36,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____(4)_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____<strong>(6)</strong>______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____(9)______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(6)</strong></div>',1,36,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (37,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____(4)_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____<strong>(7)</strong> ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____(9)______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(7)</strong></div>',1,37,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (38,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____(4)_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____<strong>(8)</strong>______ the truth from my lips. I _____(9)______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(8)</strong></div>',1,38,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (39,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____(4)_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____<strong>(9)</strong>______ that my people have sometimes ____(10) _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(9)</strong></div>',1,39,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (40,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	I want to avoid violence. Non-violence is ____(1)_____ the first article of my faith. It is also the ______(2)_____ article of my creed. But i had to ___(3)_____ my choice. I had either to submit ____(4)_____ a system which I considered ______(5)_____ done irreparable harm to my country, _____(6)______ incur the risk of the mad fury ____(7) ______ my people bursting forth, when they _____(8)______ the truth from my lips. I _____(9)______ that my people have sometimes ____<strong>(10)</strong> _____mad. I am deeply sorry for it.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(10)</strong></div>',1,40,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (41,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____<strong>(1)</strong>______ in such a way as to make it _____(2)_____ for them to indulge in these ______(3)______ without changing the _____(4)_____ of the government that rule over ____(5)______ is an impossibility. When _____(6)_______ reaches that point it will ____(7)_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____(9) ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(1)</strong></div>',1,41,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (42,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____<strong>(2)</strong>_____ for them to indulge in these ______(3)______ without changing the _____(4)_____ of the government that rule over ____(5)______ is an impossibility. When _____(6)_______ reaches that point it will ____(7)_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____(9) ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(2)</strong></div>',1,42,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (43,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____(2)_____ for them to indulge in these ______<strong>(3)</strong>______ without changing the _____(4)_____ of the government that rule over ____(5)______ is an impossibility. When _____(6)_______ reaches that point it will ____(7)_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____(9) ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(3)</strong></div>',1,43,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (44,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____(2)_____ for them to indulge in these ______(3)______ without changing the _____<strong>(4)</strong>_____ of the government that rule over ____(5)______ is an impossibility. When _____(6)_______ reaches that point it will ____(7)_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____(9) ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(4)</strong></div>',1,44,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (45,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____(2)_____ for them to indulge in these ______(3)______ without changing the _____(4)_____ of the government that rule over ____<strong>(5)</strong>______ is an impossibility. When _____(6)_______ reaches that point it will ____(7)_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____(9) ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(5)</strong></div>',1,45,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (46,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____(2)_____ for them to indulge in these ______(3)______ without changing the _____(4)_____ of the government that rule over ____(5)______ is an impossibility. When _____<strong>(6)</strong>_______ reaches that point it will ____(7)_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____(9) ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(6)</strong></div>',1,46,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (47,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____(2)_____ for them to indulge in these ______(3)______ without changing the _____(4)_____ of the government that rule over ____(5)______ is an impossibility. When _____(6)_______ reaches that point it will ____<strong>(7)</strong>_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____(9) ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(7)</strong></div>',1,47,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (48,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____(2)_____ for them to indulge in these ______(3)______ without changing the _____(4)_____ of the government that rule over ____(5)______ is an impossibility. When _____(6)_______ reaches that point it will ____(7)_____ to be human; it will become a _____<strong>(8)</strong>______ of superman of gods and it will no ____(9) ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(8)</strong></div>',1,48,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (49,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____(2)_____ for them to indulge in these ______(3)______ without changing the _____(4)_____ of the government that rule over ____(5)______ is an impossibility. When _____(6)_______ reaches that point it will ____(7)_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____<strong>(9)</strong> ______ need the guidance of ____(10)______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(9)</strong></div>',1,49,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (50,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	To change the hearts of the _____(1)______ in such a way as to make it _____(2)_____ for them to indulge in these ______(3)______ without changing the _____(4)_____ of the government that rule over ____(5)______ is an impossibility. When _____(6)_______ reaches that point it will ____(7)_____ to be human; it will become a _____(8)______ of superman of gods and it will no ____(9) ______ need the guidance of ____<strong>(10)</strong>______ of the type of Mahatma Gandhi.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(10)</strong></div>',1,50,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (51,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____<strong>(1)</strong> _____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____(4)____ find there ____(5)_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____(8)_____ in search of warmth and _____(9)______, and then return in spring ____(10)____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(1)</strong></div>',1,51,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (52,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___<strong>(2)</strong>____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____(4)____ find there ____(5)_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____(8)_____ in search of warmth and _____(9)______, and then return in spring ____(10)____ the season is more favourable</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(2)</strong></div>',1,52,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (53,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____<strong>(3)</strong>_____ almost exactly what birds he ____(4)____ find there ____(5)_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____(8)_____ in search of warmth and _____(9)______, and then return in spring ____(10)____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(3)</strong></div>',1,53,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (54,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____<strong>(4)</strong>____ find there ____(5)_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____(8)_____ in search of warmth and _____(9)______, and then return in spring ____(10)____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(4)</strong></div>',1,54,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (55,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____(4)____ find there ____<strong>(5)</strong>_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____(8)_____ in search of warmth and _____(9)______, and then return in spring ____(10)____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(5)</strong></div>',1,55,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (56,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____(4)____ find there ____(5)_____ birds are found all over the world ; others ____<strong>(6)</strong>_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____(8)_____ in search of warmth and _____(9)______, and then return in spring ____(10)____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(6)</strong></div>',1,56,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (57,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____(4)____ find there ____(5)_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___<strong>(7)</strong>___ migrate from one country to another in ____(8)_____ in search of warmth and _____(9)______, and then return in spring ____(10)____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(7)</strong></div>',1,57,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (58,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____(4)____ find there ____(5)_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____<strong>(8)</strong>_____ in search of warmth and _____(9)______, and then return in spring ____(10)____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(8)</strong></div>',1,58,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (59,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____(4)____ find there ____(5)_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____(8)_____ in search of warmth and _____<strong>(9)</strong>______, and then return in spring ____(10)____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(9)</strong></div>',1,59,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (60,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	CLOZE TEST:</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;text-align:justify;text-indent:0.5in;\">\r\n	Each species has its special place or habitat. An ____(1)&nbsp;_____bird watcher can look at ___(2)____ forest, meadow, lake, swamp or field and ____(3)_____ almost exactly what birds he ____(4)____ find there ____(5)_____ birds are found all over the world ; others ____(6)_____ themselves to certain areas . Still ___(7)___ migrate from one country to another in ____(8)_____ in search of warmth and _____(9)______, and then return in spring ____<strong>(10)</strong>____ the season is more favourable.</div>\r\n<div style=\"margin-bottom:7px;font-weight:normal;\">\r\n	<strong>(10)</strong></div>',1,60,1,'1','2024-01-28 19:38:56',0,NULL,NULL,'','',NULL,NULL),
 (61,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">C99 standard guarantees uniqueness of ____ characters for internal names.</div>\n',1,1,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (62,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">C99 standard guarantees uniqueness of _____ characters for external names.</div>\n',1,2,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (63,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is not a valid variable name declaration?</div>\n',1,3,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (64,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Variable names beginning with underscore is not encouraged. Why?</div>\n',1,4,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (65,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">All keywords in C are in________?</div>\n',1,5,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (66,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Variable name resolving (number of significant characters for uniqueness of variable) depends on________?</div>\n',1,6,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (67,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is not a valid C variable name?</div>\n',1,7,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (68,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is true for variable names in C?</div>\n',1,8,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (69,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is a User-defined data type?</div>\n',1,9,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (70,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the size of an int data type?</div>\n',1,10,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (71,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following declaration is not supported by C?</div>\n',1,11,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (72,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The format identifier &lsquo;%i&rsquo; is also used for _____ data type?</div>\n',1,12,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (73,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which is valid C expression?</div>\n',1,13,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (74,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following cannot be a variable name in C?</div>\n',1,14,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (75,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the data types have size that is variable?</div>\n',1,15,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (76,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which is false?</div>\n',1,16,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (77,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">C programs are converted into machine language with the help of_____?</div>\n',1,17,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (78,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">C was primarily developed as_____?</div>\n',1,18,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (79,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Standard ANSI C recognizes ______ number of keywords?</div>\n',1,19,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (80,'<div style=\"font-weight:bold;\">What is the value of X in the sample code given below?</div>\n<div style=\"font-weight:bold;\">double X; X = ( 2 + 3) * 2 + 3;</div>\n',1,20,2,'1','2024-01-28 19:38:57',0,NULL,NULL,'','',NULL,NULL),
 (81,'<div style=\"font-weight:bold;\">Which of the following statement is correct about the code snippet given below?</div>\n<div style=\"font-weight:bold;\">num = 5;</div>\n<div style=\"font-weight:bold;\">printf( &ldquo;%d&rdquo;, ++num++ );</div>\n',1,21,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (82,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which is executed quickly?</div>\n',1,22,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (83,'<div style=\"font-weight:bold;\">What value will be stored in z if the following code is executed?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int x = 5, y = -10, z;</div>\n<div style=\"font-weight:bold;\">int a = 4, b = 2;</div>\n<div style=\"font-weight:bold;\">z = x++ + ++y * b/a;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,23,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (84,'<div style=\"font-weight:bold;\">What is the output of the following program?</div>\n<div style=\"font-weight:bold;\">int max =123, min = 10, *maxptr = &max, *minptr = &min;</div>\n<div style=\"font-weight:bold;\">int **nptr = &minptr, **mptr = &maxptr;</div>\n<div style=\"font-weight:bold;\">*maxptr = ++*mptr % **nptr;</div>\n<div style=\"font-weight:bold;\">max - = ( *minptr -**nptr && *maxptr || *minptr);</div>\n<div style=\"font-weight:bold;\">printf( &ldquo; %d %d&rdquo;, ++**mptr, *minptr);</div>\n',1,24,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (85,'<div style=\"font-weight:bold;\">What will be the output of the following program?</div>\n<div style=\"font-weight:bold;\">int num = 0, z = 3;</div>\n<div style=\"font-weight:bold;\">if ( ! (num <= 0) || ++z )</div>\n<div style=\"font-weight:bold;\">printf( &ldquo;%d %d &rdquo;, ++num + z++, ++z );</div>\n<div style=\"font-weight:bold;\">else</div>\n<div style=\"font-weight:bold;\">printf( &ldquo;%d %d&rdquo;, - -num + z- -, - - z);</div>\n',1,25,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (86,'<div style=\"font-weight:bold;\">Which of the following statement is correct about the code snippet given below?</div>\n<div style=\"font-weight:bold;\">int a = 10, b = 2, c;</div>\n<div style=\"font-weight:bold;\">a = !( c = c == c) && ++b;</div>\n<div style=\"font-weight:bold;\">c += ( a + b- -);</div>\n<div style=\"font-weight:bold;\">printf( &ldquo; %d %d %d&rdquo;, b, c, a);</div>\n',1,26,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (87,'<div style=\"font-weight:bold;\">For the following statement find the values generated for p and q?</div>\n<div style=\"font-weight:bold;\">int p = 0, q = 1;</div>\n<div style=\"font-weight:bold;\">p = q++;</div>\n<div style=\"font-weight:bold;\">p = ++q;</div>\n<div style=\"font-weight:bold;\">p = q--;</div>\n<div style=\"font-weight:bold;\">p = --q;</div>\n<div style=\"font-weight:bold;\">Value of p & q are?</div>\n',1,27,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (88,'<div style=\"font-weight:bold;\">What is the value of the following expression?</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">i = 1;</div>\n<div style=\"font-weight:bold;\">i = ( I<<= 1 % 2)</div>\n',1,28,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (89,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the correct and fully portable way to obtain the most significant byte of an unsigned integer x?</div>\n',1,29,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (90,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Expression x % y is equivalent to____?</div>',1,30,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (91,'<div style=\"font-weight:bold;\">What is the value of x after executing the following statement?</div>\n<div style=\"font-weight:bold;\">int x = 011 | 0x10;</div>\n',1,31,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (92,'<div style=\"font-weight:bold;\">What is the value of the following expression?</div>\n<div style=\"font-weight:bold;\">i = 1;</div>\n<div style=\"font-weight:bold;\">i << 1 % 2;</div>\n',1,32,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (93,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">p++ executes faster than p + 1 since__________?</div>\n',1,33,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (94,'<div style=\"font-weight:bold;\">What is the output of the following snippet?</div>\n<div style=\"font-weight:bold;\">int x=5;</div>\n<div style=\"font-weight:bold;\">printf(\"%d %d %d\",++x,x--,--x);</div>\n',1,34,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (95,'<div style=\"font-weight:bold;\">Which is the correct statement?</div>\n<div style=\"font-weight:bold;\">a) printf(\"%d\",(x>y) ? x : y);</div>\n<div style=\"font-weight:bold;\">b) printf(\"%s\", (mark >=40) ?\"Pass\":\"Fail\" );</div>\n<div style=\"font-weight:bold;\">c) printf(\"%s\",(mark<40)?&rdquo;Fail&rdquo;:Pass&rdquo;);</div>\n<div style=\"font-weight:bold;\">d) None of these</div>\n',1,35,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (96,'<div style=\"font-weight:bold;\">\r\n	What is the output of the C Program.?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int a = 0;</div>\r\n	<div>\r\n		&nbsp; &nbsp; a = 5 &gt; 2 ? printf(&quot;4&quot;) : 3;</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;%d&quot;, a);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,36,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (97,'<div style=\"font-weight:bold;\">\r\n	What will be the output of following program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		void main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int x;</div>\r\n	<div>\r\n		&nbsp; &nbsp; x= (printf(&quot;AA&quot;)||printf(&quot;BB&quot;));</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;%d&quot;,x);</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;\\n&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; x= (printf(&quot;AA&quot;)&amp;&amp;printf(&quot;BB&quot;));</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;%d&quot;,x);</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<div>\r\n	a)</div>\r\n<div>\r\n	AABB1</div>\r\n<div>\r\n	AABB1</div>\r\n<div>\r\n	&nbsp;</div>\r\n<div>\r\n	b)</div>\r\n<div>\r\n	1</div>\r\n<div>\r\n	1</div>\r\n<div>\r\n	&nbsp;</div>\r\n<div>\r\n	c)</div>\r\n<div>\r\n	AABB1</div>\r\n<div>\r\n	AA1</div>\r\n<div>\r\n	&nbsp;</div>\r\n<div>\r\n	d)</div>\r\n<div>\r\n	AA1</div>\r\n<div>\r\n	AABB1</div>\r\n<div>\r\n	&nbsp;</div>\r\n<div>\r\n	e)</div>\r\n<div>\r\n	AA1</div>\r\n<div>\r\n	AA1</div>',1,37,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (98,'<div style=\"font-weight:bold;\">\r\n	What will be the output of following program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = -1, j = -1, k = 0, l = 2, m;</div>\r\n	<div>\r\n		&nbsp; &nbsp; m= i++ &amp;&amp; j++ &amp;&amp; k++ || l++;</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;%d %d %d %d %d&quot;, i, j, k, l, m);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,38,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (99,'<div style=\"font-weight:bold;\">\r\n	Consider the given statement:</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	int x = 10 ^ 2;</div>\r\n<div style=\"font-weight:bold;\">\r\n	What will be the value of x?</div>',1,39,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (100,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	What is the priority of operators *, / and % in C language?</div>',1,40,2,'1','2024-01-28 19:38:58',0,NULL,NULL,'','',NULL,NULL),
 (101,'<div style=\"font-weight:bold;\">What will be the output of above sample code?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">unsigned int x = -10; int y = 10;</div>\n<div style=\"font-weight:bold;\">If ( y <= x) printf( &ldquo;He is good\\n&rdquo;);</div>\n<div style=\"font-weight:bold;\">If ( y == ( x = -10)) printf( &ldquo;She is better\\n&rdquo;);</div>\n<div style=\"font-weight:bold;\">If (( int) x == y) printf(&ldquo;it is the best\\n&rdquo;);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,1,3,'1','2024-01-28 19:38:59',0,NULL,NULL,'','',NULL,NULL),
 (102,'<div style=\"font-weight:bold;\">What will be printed when the below code is executed?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int a = 2, b = 4, c = 8, x = 4;</div>\n<div style=\"font-weight:bold;\">if ( x == b) x = a; else x = b;</div>\n<div style=\"font-weight:bold;\">if( x != b) c = c + b; else c = c + a;</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",c);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,2,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (103,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">if default statement is omitted and there is no match with the case table?</div>\n',1,3,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (104,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">int cap(int);</div>\n<div style=\"font-weight:bold;\">main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int n; n = cap(6);</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d&rdquo;, n);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">int cap(int n)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">if (n <=1) return 1;</div>\n<div style=\"font-weight:bold;\">else return(cap(n -3) + cap(n-1));</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,4,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (105,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = 5, j = 6, k = 7;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(i &gt; j == k)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;%d %d %d&quot;, i++, ++j, --k);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else<span style=\"white-space: pre;\"> </span></div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;%d %d %d&quot;, i, j, k);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,5,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (106,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		<div>\r\n			#include &lt;stdio.h&gt;</div>\r\n		<div>\r\n			int main()</div>\r\n		<div>\r\n			{</div>\r\n		<div>\r\n			&nbsp; &nbsp; int a=10;</div>\r\n		<div>\r\n			&nbsp; &nbsp; if(a==10)</div>\r\n		<div>\r\n			&nbsp; &nbsp; {</div>\r\n		<div>\r\n			&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Hello...&quot;);</div>\r\n		<div>\r\n			&nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n		<div>\r\n			&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Ok&quot;);</div>\r\n		<div>\r\n			&nbsp; &nbsp; }</div>\r\n		<div>\r\n			&nbsp; &nbsp; else</div>\r\n		<div>\r\n			&nbsp; &nbsp; {</div>\r\n		<div>\r\n			&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Hii&quot;);</div>\r\n		<div>\r\n			&nbsp; &nbsp; }</div>\r\n		<div>\r\n			&nbsp; &nbsp; return 0;</div>\r\n		<div>\r\n			}</div>\r\n	</div>\r\n</div>',1,6,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (107,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(-5)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;a&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;b&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;c&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;d&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,7,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (108,'<div style=\"font-weight:bold;\">\r\n	Which statements are correct about an if-else statement in a C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	1. Nested if-else statements are allowed</div>\r\n<div style=\"font-weight:bold;\">\r\n	2. Every if-else statement can be replaced by an equivalent statement using ? : operators</div>\r\n<div style=\"font-weight:bold;\">\r\n	3. Multiple statement in else block are allowed</div>\r\n<div style=\"font-weight:bold;\">\r\n	4. Multiple statement in if block are allowed</div>',1,8,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (109,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; float a = 0.7;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(0.7 &gt; a)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Hi\\n&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Hello\\n&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,9,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (110,'<div style=\"font-weight:bold;\">\r\n	Which of the following statements are correct about the below program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = 10, j = 20;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(i = 5) &amp;&amp; if(j = 10)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Have a nice day&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,10,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (111,'<div style=\"font-weight:bold;\">\r\n	Which of the following statements are correct about the below program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = 10, j = 15;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(i % 2 = j % 3)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Apt Training\\n&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,11,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (112,'<div style=\"font-weight:bold;\">\r\n	Which of the following statements are correct about the program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int x = 30, y = 40;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(x == y)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;x is equal to y\\n&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else if(x &gt; y)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;x is greater than y\\n&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else if(x &lt; y)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;x is less than y\\n&quot;)</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,12,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (113,'<div style=\"font-weight:bold;\">\r\n	What will be output if you will compile and execute the following c code?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main(){</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(printf(&quot;cquestionbank&quot;))</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;I know c&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;I know c++&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,13,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (114,'<div style=\"font-weight:bold;\">\r\n	Find the output of the given C program.</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(sizeof(&#39;a&#39;) == sizeof(&quot;abc&quot;))</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;a&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;b&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,14,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (115,'<div style=\"font-weight:bold;\">\r\n	Which of the following statements are correct about below C-program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;&nbsp;&nbsp;</div>\r\n	<div>\r\n		int main()&nbsp;&nbsp;</div>\r\n	<div>\r\n		{&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; int x = 100, y = 100%80, j;&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; for(j=1; j&lt;10; j++)&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; if(x != y);&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;x = %d y = %d\\n&quot;, x, y);&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;&nbsp;&nbsp;</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<div style=\"font-weight:bold;\">\r\n	1. The program produce the output x=100 y=20</div>\r\n<div style=\"font-weight:bold;\">\r\n	2. The printf() function run for 10 times</div>\r\n<div style=\"font-weight:bold;\">\r\n	3. The semi colon(;) after the if(x!=y) will not produce any error</div>\r\n<div style=\"font-weight:bold;\">\r\n	4. The program will produce no output</div>',1,15,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (116,'<div style=\"font-weight:bold;\">\r\n	What will be output if you will compile and execute the following c code?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = 10;</div>\r\n	<div>\r\n		&nbsp; &nbsp; static int x = i;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(x == i)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Equal&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else if(x &gt; i)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Greater than&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; else</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Less than&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,16,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (117,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following is an invalid if-else statement?</div>\n',1,17,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (118,'<div style=\"font-weight:bold;\">\r\n	Which statement is correct about the below program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;&nbsp;&nbsp;</div>\r\n	<div>\r\n		int main()&nbsp;&nbsp;</div>\r\n	<div>\r\n		{&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = 8, j = 24;&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(i = 8) &amp;&amp; if(j = 24)&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Welcome Programmer&quot;);&nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;&nbsp;&nbsp;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,18,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (119,'<div style=\"font-weight:bold;\">\r\n	Find the output of the given C program.</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int a;</div>\r\n	<div>\r\n		&nbsp; &nbsp; a = 0, 1;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if(a)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;x&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;y&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;z&quot;);</div>\r\n	<div>\r\n		return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,19,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (120,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the following C code?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()&nbsp;</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int a = 10;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if (a == a--)&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;TRUE 1\\t&quot;);&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; a = 10;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; if (a == --a)&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;TRUE 2\\t&quot;);&nbsp;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,20,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (121,'<div style=\"font-weight:bold;\">\r\n	What is the output of the following code?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		void main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = 0;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch ( i )</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 0 : i++;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 1 : i+++2;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case2 : ++i;</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;%d&quot;, i++);</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,21,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (122,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the following C code? (Assuming that we have entered the value 1 in the standard input)</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		void main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; double ch;</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;enter a value between 1 to 2:&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; scanf(&quot;%lf&quot;, &amp;ch);</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch (ch)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 1:</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;1&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 2:</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;2&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,22,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (123,'<div style=\"font-weight:bold;\">\r\n	Consider the following program code snippet.</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		switch(input)</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; case &#39;1&#39;:</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;One&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; case &#39;2&#39;:</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Two&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; case &#39;3&#39;:</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;&quot;Three&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; default:</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Default&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<div style=\"font-weight:bold;\">\r\n	What will be printed when input is 2?</div>',1,23,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (124,'<div style=\"font-weight:bold;\">\r\n	Which of the following sentences are correct about a switch loop in a C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	<div>\r\n		1. switch is useful when we wish to check the value of variable against a particular set of values.</div>\r\n	<div>\r\n		2. switch is useful when we wish to check whether a value falls in different ranges.</div>\r\n	<div>\r\n		3. Compiler implements a jump table for cases used in switch.</div>\r\n	<div>\r\n		4. It is not necessary to use a break in every switch statement.</div>\r\n</div>',1,24,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL);
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (125,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the following C code?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int x = 97;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch (x)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case &#39;a&#39;:</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;yes &quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 97:</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;no\\n&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,25,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (126,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int a=3;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch(a)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 2: printf(&quot;ZERO &quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case default: printf(&quot;RABBIT &quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }&nbsp; &nbsp;&nbsp;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,26,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (127,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; char code=&#39;A&#39;;&nbsp; &nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch(code)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 64+1: printf(&quot;ANT &quot;);break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 8*8+4: printf(&quot;KING &quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; default: printf(&quot;NOKING&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }&nbsp; &nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;PALACE&quot;);</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,27,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (128,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A switch statement is used to:</div>\n',1,28,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (129,'<div style=\"font-weight:bold;\">\r\n	Consider the following program fragment:</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		switch(input)</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; case &#39;1&#39;: printf(&quot;one&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; case &#39;3&#39;: printf(&quot;three&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; case &#39;5&#39;: printf(&quot;five&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; default: printf(&quot;odd&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<div style=\"font-weight:bold;\">\r\n	What will be printed when input is &#39;3&#39;?</div>',1,29,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (130,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; char code = 64;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch(code)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 64 : printf(&quot;SHIP &quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 8*8 : printf(&quot;BOAT &quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; default : printf(&quot;PETROL&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;CHILLY&quot;);</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,30,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (131,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following cannot be checked in a switch-case statement?</div>\n',1,31,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (132,'<div style=\"font-weight:bold;\">\r\n	What is the output of this C code?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int a = 1, b = 1;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch (a)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case a*b:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;printf(&quot;yes &quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case a-b:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;printf(&quot;no\\n&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,32,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (133,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = 3;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch(i)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case&nbsp; 1 : printf (&quot;Hello&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case&nbsp; 2 : printf (&quot;Hai&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case&nbsp; 3 : continue;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; default: printf(&quot;goodbye&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,33,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (134,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		main()&nbsp;</div>\r\n	<div>\r\n		{&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i=1,j=2;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch(i)&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; {&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 1 : printf(&quot;GOOD&quot;);&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case j : printf(&quot;BAD&quot;);&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,34,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (135,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()&nbsp;</div>\r\n	<div>\r\n		{&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; int a = 10;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch(a)&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; {&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; }&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;This is c program.&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;&nbsp;</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,35,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (136,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &quot;stdio.h&quot;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; char a = &#39;a&#39;;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch(a)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case &#39;a&#39; : printf(&quot;a&quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case &#39;b&#39; : printf(&quot;b&quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case &#39;c&#39; : printf(&quot;c&quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; default :&nbsp; printf(&quot;default&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,36,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (137,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int a = 1;</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch (a)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case a :</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Case A &quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; default :</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;Default&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,37,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (138,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program Code Snippet with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		switch (ch)</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; case &#39;a&#39; :</div>\r\n	<div>\r\n		&nbsp; &nbsp; case &#39;A&#39; :</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;true&quot;);</div>\r\n	<div>\r\n		}</div>\r\n	<div>\r\n		&nbsp;</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,38,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (139,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Choose a correct statement about a C Switch Construct.</div>\n',1,39,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (140,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program with switch statement or block?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; switch(24.5)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 24.5 : printf(&quot;SILVER &quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; case 25.0 : printf(&quot;GOLD &quot;); break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; default : printf(&quot;TIN &quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }&nbsp; &nbsp;&nbsp;</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf(&quot;COPPER&quot;);</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,40,3,'1','2024-01-28 19:39:00',0,NULL,NULL,'','',NULL,NULL),
 (141,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">do-while loop terminates when conditional expression returns?</div>\n',1,1,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (142,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int ones, twos, threes, others;</div>\n<div style=\"font-weight:bold;\">char c;</div>\n<div style=\"font-weight:bold;\">Ones = twos = threes = others = 0;</div>\n<div style=\"font-weight:bold;\">while( ( c = getchar() != &lsquo;\\n&rsquo;) )</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">switch( c )</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">case &lsquo;1&rsquo; : ++ones;</div>\n<div style=\"font-weight:bold;\">case &lsquo;2&rsquo; : ++twos;</div>\n<div style=\"font-weight:bold;\">case &lsquo;3&rsquo; : ++threes;</div>\n<div style=\"font-weight:bold;\">break;</div>\n<div style=\"font-weight:bold;\">default: ++others;</div>\n<div style=\"font-weight:bold;\">break;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">printf( &ldquo;%d%d &rdquo;, ones, others);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">If the input is &ldquo;1a1b1c&rdquo; what is the output?</div>\n',1,2,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (143,'<div style=\"font-weight:bold;\">What will be the output of the following code?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">ch = &lsquo;A&rsquo;;</div>\n<div style=\"font-weight:bold;\">while (ch <= &lsquo;F&rsquo;)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">switch(ch)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">case&rsquo;A&rsquo;: case&rsquo;B&rsquo;:case&rsquo;C&rsquo;: case&rsquo;D&rsquo;: ch++;continue;</div>\n<div style=\"font-weight:bold;\">case &lsquo;E&rsquo;: case &lsquo;F&rsquo;: ch++;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">putchar( ch );</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,3,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (144,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">int I = 3;</div>\n<div style=\"font-weight:bold;\">while( I --)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int I = 100;</div>\n<div style=\"font-weight:bold;\">i- -;</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d. .&rdquo;, i);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,4,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (145,'<div style=\"font-weight:bold;\">How many times the loop will be executed?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">unsigned int I = 10;</div>\n<div style=\"font-weight:bold;\">while( i- - >= 0);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,5,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (146,'<div style=\"font-weight:bold;\">What is the output of C Program.? </div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    while(true)    </div>\n<div style=\"font-weight:bold;\">    {</div>\n<div style=\"font-weight:bold;\">printf(\"RABBIT\");</div>\n<div style=\"font-weight:bold;\">        break;</div>\n<div style=\"font-weight:bold;\">    }    </div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,6,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (147,'<div style=\"font-weight:bold;\">What is the output of C Program.? </div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int a=25;</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">    while(a <= 27)</div>\n<div style=\"font-weight:bold;\">    {</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", a);</div>\n<div style=\"font-weight:bold;\">        a++;</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,7,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (148,'<div style=\"font-weight:bold;\">What is the output of C Program.? </div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int a=32;    </div>\n<div style=\"font-weight:bold;\">    do</div>\n<div style=\"font-weight:bold;\">    {</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", a);</div>\n<div style=\"font-weight:bold;\">        a++;</div>\n<div style=\"font-weight:bold;\">    }while(a <= 30);</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,8,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (149,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the way to suddenly come out of or Quit any Loop in C Language.?</div>\n',1,9,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (150,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which loop is guaranteed to execute at least one time?</div>\n',1,10,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (151,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include<stdio.h></stdio.h></div>\r\n<div style=\"font-weight:bold;\">\r\n	int x = -1;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main(){</div>\r\n<div style=\"font-weight:bold;\">\r\n	while(x++ == 1)</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;loop&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,11,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (152,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">In the context of \"break\" and \"continue\" statements in C, pick the best statement.</div>\n',1,12,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (153,'<div style=\"font-weight:bold;\">What will be the output of the program in 16 bit platform ?</div>\n<div style=\"font-weight:bold;\">#include <stdio.h></div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{ </div>\n<div style=\"font-weight:bold;\">int a=2, b=1, c=2;</div>\n<div style=\"font-weight:bold;\">    switch(a)</div>\n<div style=\"font-weight:bold;\">    {</div>\n<div style=\"font-weight:bold;\">        case b:</div>\n<div style=\"font-weight:bold;\">printf(\"You are in b \");</div>\n<div style=\"font-weight:bold;\">        break;</div>\n<div style=\"font-weight:bold;\">        case c:</div>\n<div style=\"font-weight:bold;\">printf(\"You are in c \");</div>\n<div style=\"font-weight:bold;\">        break;</div>\n<div style=\"font-weight:bold;\">default:printf(\"You are in default\");</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,13,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (154,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include<stdio.h></stdio.h></div>\r\n<div style=\"font-weight:bold;\">\r\n	int main(){</div>\r\n<div style=\"font-weight:bold;\">\r\n	while(sizeof(0))</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;Loop &quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(sizeof(0))</div>\r\n<div style=\"font-weight:bold;\">\r\n	break;</div>\r\n<div style=\"font-weight:bold;\">\r\n	else</div>\r\n<div style=\"font-weight:bold;\">\r\n	continue;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,14,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (155,'<div style=\"font-weight:bold;\">How many times letsfindcourse will be printed?</div>\n<div style=\"font-weight:bold;\">#include <stdio.h></div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int i = -5;</div>\n<div style=\"font-weight:bold;\">    while (i <= 5)</div>\n<div style=\"font-weight:bold;\">    {</div>\n<div style=\"font-weight:bold;\">        if (i >= 0)</div>\n<div style=\"font-weight:bold;\">            break;</div>\n<div style=\"font-weight:bold;\">        else</div>\n<div style=\"font-weight:bold;\">        {</div>\n<div style=\"font-weight:bold;\">            i += 1;</div>\n<div style=\"font-weight:bold;\">            continue;</div>\n<div style=\"font-weight:bold;\">        }</div>\n<div style=\"font-weight:bold;\">printf(\"letsfindcourse\");</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,15,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (156,'<div style=\"font-weight:bold;\">\r\n	What is the output of C Program?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include &lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int c = 5, no = 10;</div>\r\n	<div>\r\n		&nbsp; &nbsp; do {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; no /= c;</div>\r\n	<div>\r\n		&nbsp; &nbsp; } while(c--);</div>\r\n	<div>\r\n		&nbsp; &nbsp; printf (&quot;%dn&quot;, no);</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>\r\n<p>\r\n	&nbsp;</p>',1,16,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (157,'<div style=\"font-weight:bold;\">\r\n	How many times <i>AptTrainingResources</i> is printed?</div>\r\n<div style=\"font-weight:bold;border:1px solid silver; background-color:white;\">\r\n	<div>\r\n		#include&lt;stdio.h&gt;</div>\r\n	<div>\r\n		int main()</div>\r\n	<div>\r\n		{</div>\r\n	<div>\r\n		&nbsp; &nbsp; int i = -5;</div>\r\n	<div>\r\n		&nbsp; &nbsp; while (i &lt;= 5)</div>\r\n	<div>\r\n		&nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; if (i &gt;= 0)</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; else</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; {</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i++;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; }</div>\r\n	<div>\r\n		&nbsp; &nbsp; &nbsp; &nbsp; printf(&quot;AptTrainingResources&quot;);</div>\r\n	<div>\r\n		&nbsp; &nbsp; }</div>\r\n	<div>\r\n		&nbsp; &nbsp; return 0;</div>\r\n	<div>\r\n		}</div>\r\n</div>',1,17,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (158,'<div style=\"font-weight:bold;\">What is the output of C Program.? </div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int a=0, b=0;</div>\n<div style=\"font-weight:bold;\">    while(++a < 4)</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", a);</div>\n<div style=\"font-weight:bold;\">    while(b++ < 4)</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", b);</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,18,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (159,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include<stdio.h></stdio.h></div>\r\n<div style=\"font-weight:bold;\">\r\n	int main(){</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i = 4;</div>\r\n<div style=\"font-weight:bold;\">\r\n	while(i == 4--)</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;Loop &quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,19,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (160,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the following C code?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include <stdio.h></stdio.h></div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	do</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;In while loop &quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	while (0);</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;After loop\\n&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,20,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (161,'<div style=\"font-weight:bold;\">In the following loop construct, which one is executed only once always.</div>\n<div style=\"font-weight:bold;\">for ( exp1; exp2; exp3) </div>\n<div style=\"font-weight:bold;\">{. . . }</div>\n',1,21,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (162,'<div style=\"font-weight:bold;\">unsigned char c;</div>\n<div style=\"font-weight:bold;\">for( c = 0; c != 256; c+2 )</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d&rdquo;, c);</div>\n<div style=\"font-weight:bold;\">Who many times the loop executes?</div>\n',1,22,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (163,'<div style=\"font-weight:bold;\">How many times x will be printed?</div>\n<div style=\"font-weight:bold;\">for( I = 0, j = 10; I < j; I ++, j --)</div>\n<div style=\"font-weight:bold;\">printf(\"x\");</div>\n',1,23,4,'1','2024-01-28 19:39:01',0,NULL,NULL,'','',NULL,NULL),
 (164,'<div style=\"font-weight:bold;\">What will be the final values of I and j when the following code terminates?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">static int I , j = 5;</div>\n<div style=\"font-weight:bold;\">for ( I = 0; I < 3; I ++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d%d\\n&rdquo;, I, j);</div>\n<div style=\"font-weight:bold;\">if( j > 1){ j - -; main ();}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,24,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (165,'<div style=\"font-weight:bold;\">What will be printed when the below code is executed?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int x = 0;</div>\n<div style=\"font-weight:bold;\">for (; ;)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">if ( x++ == 4) break;</div>\n<div style=\"font-weight:bold;\">continue;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;x = %d\\n&rdquo;, x);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,25,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (166,'<div style=\"font-weight:bold;\">\r\n	Which of the following sentences are correct about a&nbsp;for&nbsp;loop in a C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	1. for loop works faster than a while loop.</div>\r\n<div style=\"font-weight:bold;\">\r\n	2. All things that can be done using a for loop can also be done using a while loop.</div>\r\n<div style=\"font-weight:bold;\">\r\n	3. for(;;); implements an infinite loop.</div>\r\n<div style=\"font-weight:bold;\">\r\n	4. for loop can be used if we want statements in a loop get executed at least once.</div>',1,26,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (167,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">For loop in a C program, if the condition is missing?</div>\n',1,27,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (168,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following statement about for loop is true?</div>\n',1,28,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (169,'<div style=\"font-weight:bold;\">How long the following loop runs?</div>\n<div style=\"font-weight:bold;\">for(x = 1; x = 3; x++)</div>\n',1,29,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (170,'<div style=\"font-weight:bold;\">What will be the output of the following piece of code?</div>\n<div style=\"font-weight:bold;\">#include <stdio.h></div>\n<div style=\"font-weight:bold;\">int main() {</div>\n<div style=\"font-weight:bold;\">  for(i = 0;i < 10; i++);</div>\n<div style=\"font-weight:bold;\">printf(\"%d\", i);</div>\n<div style=\"font-weight:bold;\">  return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,30,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (171,'<div style=\"font-weight:bold;\">What will be the value of the digit?</div>\n<div style=\"font-weight:bold;\">#include <stdio.h></div>\n<div style=\"font-weight:bold;\">int main() {</div>\n<div style=\"font-weight:bold;\">int digit = 0;</div>\n<div style=\"font-weight:bold;\">  for(; digit <= 9; )</div>\n<div style=\"font-weight:bold;\">digit++;</div>\n<div style=\"font-weight:bold;\"> digit *= 2;</div>\n<div style=\"font-weight:bold;\">--digit;</div>\n<div style=\"font-weight:bold;\">  return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,31,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (172,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following comments about for loop are correct?</div>\n',1,32,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (173,'<div style=\"font-weight:bold;\">How many times the loop will execute?</div>\n<div style=\"font-weight:bold;\">for(int i = 0 ; i < 10 ; i++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    i  =  i*2;</div>\n<div style=\"font-weight:bold;\">    i--;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,33,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (174,'<div style=\"font-weight:bold;\">What is the output of this program?</div>\n<div style=\"font-weight:bold;\">#include <stdio.h></div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{   char a=0;</div>\n<div style=\"font-weight:bold;\">    for(a=0;a<=127;a++)</div>\n<div style=\"font-weight:bold;\">    {</div>\n<div style=\"font-weight:bold;\">printf(\"%d \",a);</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,34,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (175,'<div style=\"font-weight:bold;\">What is the output of this program? </div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int x=0;</div>\n<div style=\"font-weight:bold;\">for(;;)</div>\n<div style=\"font-weight:bold;\">    {</div>\n<div style=\"font-weight:bold;\">        if(x==3)</div>\n<div style=\"font-weight:bold;\">            break;</div>\n<div style=\"font-weight:bold;\">printf(\"%d \",++x);</div>\n<div style=\"font-weight:bold;\">    }</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,35,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (176,'<div style=\"font-weight:bold;\">How many x are printed?</div>\n<div style=\"font-weight:bold;\">    for(i=-2,j=5;i <j;i++,j--) </div>\n<div style=\"font-weight:bold;\">printf(\"x\");</div>\n',1,36,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (177,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">The C code &lsquo;for(;;)&rsquo; represents an infinite loop. It can be terminated by</div>\n',1,37,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (178,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What will be the correct syntax for running two variables for loop simultaneously?</div>\n',1,38,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (179,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Which for loop has range of similar indexes of &lsquo;i&rsquo; used in for (i = 0;i&lt; n; i++)?</div>',1,39,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (180,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following cannot be used as LHS of the expression in for (exp1;exp2; exp3)?</div>\n',1,40,4,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (181,'<div style=\"font-weight:bold;\">What will be the output of the following program?</div>\n<div style=\"font-weight:bold;\">void f(static int*, extern int);</div>\n<div style=\"font-weight:bold;\">static int b = 12;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">static int a[5];</div>\n<div style=\"font-weight:bold;\">register int I;</div>\n<div style=\"font-weight:bold;\">for(I = 0; I < 2; I ++);</div>\n<div style=\"font-weight:bold;\">a[i++] = 2 * i++;</div>\n<div style=\"font-weight:bold;\">f(a, b);</div>\n<div style=\"font-weight:bold;\">for(I = 0; I < 2; I ++)</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d&rdquo;, b++);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">void f (static int *x, extern int y)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">register int I;</div>\n<div style=\"font-weight:bold;\">for(I = 0; I < 2; I ++)</div>\n<div style=\"font-weight:bold;\">*(++x +1) + = 2;</div>\n<div style=\"font-weight:bold;\">y + = 2;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,1,5,'1','2024-01-28 19:39:02',0,NULL,NULL,'','',NULL,NULL),
 (182,'<div style=\"font-weight:bold;\">What will be the output of the following code?</div>\n<div style=\"font-weight:bold;\">int a[][] = {{1,2},{3,4}},i,j;</div>\n<div style=\"font-weight:bold;\">    for (i = 0; i < 2; i++)</div>\n<div style=\"font-weight:bold;\">        for (j = 0; j < 2; j++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", a[i][j]);</div>\n',1,2,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (183,'<div style=\"font-weight:bold;\">Find the output of below program.</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for(int i=1;i<=2;i++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for(int j=i;j<=2;j++)</div>\n<div style=\"font-weight:bold;\">cout<<i<<@;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,3,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (184,'<div style=\"font-weight:bold;\">\r\n	What will be the output of following program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	void main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	inti,j,charVal=&#39;A&#39;;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(i=5;i&gt;=1;i--)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(j=0;j<i;j++)< div=\"\">\r\n	<div style=\"font-weight:bold;\">\r\n		printf(&quot;%c &quot;,(charVal+j));</div>\r\n	<div style=\"font-weight:bold;\">\r\n		printf(&quot;\\n&quot;);</div>\r\n	<div style=\"font-weight:bold;\">\r\n		}</div>\r\n	<div style=\"font-weight:bold;\">\r\n		}</div>\r\n	<div style=\"font-weight:bold;\">\r\n		a)</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D E</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D E</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D E</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D E</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D E</div>\r\n	<div style=\"font-weight:bold;\">\r\n		b)</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D</div>\r\n	<div style=\"font-weight:bold;\">\r\n		c)</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A</div>\r\n	<div style=\"font-weight:bold;\">\r\n		d)</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D E</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C D</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B C</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A B</div>\r\n	<div style=\"font-weight:bold;\">\r\n		A</div>\r\n	<div style=\"font-weight:bold;\">\r\n		e) Compiler error</div>\r\n	</i;j++)<></div>',1,4,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (185,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int rows = 3, columns = 4, i, j, k;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int a[3][4] = {23, 46, 69, 102, 99, 109};</div>\r\n<div style=\"font-weight:bold;\">\r\n	i = j = k = 99;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(i = 0;i&gt;rows;i++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(j = 0;j&gt;columns;j++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(a[k][j]&gt;k)</div>\r\n<div style=\"font-weight:bold;\">\r\n	k = a[i][j];</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d\\n&quot;, k);</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,5,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (186,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program by considering &#39;b&#39; as a User input?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include<stdio.h></stdio.h></div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int c[ ] = {2.8, 3.4, 4, 6.7, 5};</div>\r\n<div style=\"font-weight:bold;\">\r\n	int j, *p = c, *q = c;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(j=0;j&lt;3;j++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot; %d &quot;, *c);</div>\r\n<div style=\"font-weight:bold;\">\r\n	++q;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(j=0;j&lt;3;j++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot; %d &quot;, *p);</div>\r\n<div style=\"font-weight:bold;\">\r\n	++p;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,6,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (187,'<div style=\"font-weight:bold;\">\r\n	How many times the Outer and Inner loop will runs?</div>\r\n<div style=\"font-weight:bold;\">\r\n	using System;</div>\r\n<div style=\"font-weight:bold;\">\r\n	namespace Loop</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	class NestedForLoop</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	public static void Main(string[] args)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	intouterLoop = 0, innerLoop = 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for (int i=1; i&lt;=5; i++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	outerLoop ++;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for (int j=1; j&lt;=5; j++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	innerLoop++;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	Console.WriteLine(&quot;Outer Loop runs {0} times&quot;, outerLoop);</div>\r\n<div style=\"font-weight:bold;\">\r\n	Console.WriteLine(&quot;Inner Loop runs {0} times&quot;, innerLoop);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,7,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (188,'<div style=\"font-weight:bold;\">What will be the output of the C program?</div>\n<div style=\"font-weight:bold;\">using System;</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">namespace Loop</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">class NestedForLoop</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">public static void Main(string[] args)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for (int i=1; i<=5; i++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for (int j=1; j<=i; j++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">Console.Write(j + \" \");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">Console.WriteLine();</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a) </div>\n<div style=\"font-weight:bold;\">1</div>\n<div style=\"font-weight:bold;\">1 2</div>\n<div style=\"font-weight:bold;\">1 2 3</div>\n<div style=\"font-weight:bold;\">1 2 3 4</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5 6</div>\n<div style=\"font-weight:bold;\">b) 1</div>\n<div style=\"font-weight:bold;\">c) </div>\n<div style=\"font-weight:bold;\">1</div>\n<div style=\"font-weight:bold;\">1 2</div>\n<div style=\"font-weight:bold;\">d)</div>\n<div style=\"font-weight:bold;\">1</div>\n<div style=\"font-weight:bold;\">1 2</div>\n<div style=\"font-weight:bold;\">1 2 3</div>\n<div style=\"font-weight:bold;\">1 2 3 4</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n',1,8,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (189,'<div style=\"font-weight:bold;\">What will be the output of the C program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">inti,j;</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">for(i=1;i<=5;i++) //it will execute inner loop 5 times</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for(j=1;j<=5;j++) //it will print 5 stars continously</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(\"*\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">printf(\"\\n\"); //It will give a newline, once 5 stars are printed.</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a)</div>\n<div style=\"font-weight:bold;\">*****</div>\n<div style=\"font-weight:bold;\">***</div>\n<div style=\"font-weight:bold;\">b)</div>\n<div style=\"font-weight:bold;\">*****</div>\n<div style=\"font-weight:bold;\">*****</div>\n<div style=\"font-weight:bold;\">c) </div>\n<div style=\"font-weight:bold;\">*****</div>\n<div style=\"font-weight:bold;\">*****</div>\n<div style=\"font-weight:bold;\">*****</div>\n<div style=\"font-weight:bold;\">*****</div>\n<div style=\"font-weight:bold;\">*****</div>\n<div style=\"font-weight:bold;\">d)</div>\n<div style=\"font-weight:bold;\">***</div>\n<div style=\"font-weight:bold;\">***</div>\n<div style=\"font-weight:bold;\">e)</div>\n<div style=\"font-weight:bold;\">**</div>\n<div style=\"font-weight:bold;\">**</div>\n<div style=\"font-weight:bold;\">**</div>\n',1,9,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (190,'<div style=\"font-weight:bold;\">\r\n	The following program uses a nested for loop to find the prime numbers from 2 to 100 ?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main ()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i, j;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(i = 2; i&lt;100; i++) {</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(j = 2; j &lt;= (i/j); j++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(!(i%j)) break;</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(j &gt; (i/j)) printf(&quot;%d is prime\\n&quot;, i);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	a) Syntax error</div>\r\n<div style=\"font-weight:bold;\">\r\n	b) 2 is prime number</div>\r\n<div style=\"font-weight:bold;\">\r\n	4 is prime number</div>\r\n<div style=\"font-weight:bold;\">\r\n	6 is prime number</div>\r\n<div style=\"font-weight:bold;\">\r\n	..........94 is prime number</div>\r\n<div style=\"font-weight:bold;\">\r\n	c) Runtime Error</div>\r\n<div style=\"font-weight:bold;\">\r\n	d)2 is prime number</div>\r\n<div style=\"font-weight:bold;\">\r\n	3 is prime number</div>\r\n<div style=\"font-weight:bold;\">\r\n	5 is prime number..........&nbsp;97 is prime number</div>\r\n<div style=\"font-weight:bold;\">\r\n	e) Compiler error</div>',1,10,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (191,'<div style=\"font-weight:bold;\">Write a C program to print all the composite numbers from 2 upto 10?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">#include&lt;math.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">inti,j,n=10;</div>\n<div style=\"font-weight:bold;\">for(i=2;i<=n;i++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for(j=2;j<=(int)pow(i,0.5);j++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">if(i%j==0)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(\"%d is compositen\",i);</div>\n<div style=\"font-weight:bold;\">break;</div>\n<div style=\"font-weight:bold;\">}    </div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a) 2 is compositen</div>\n<div style=\"font-weight:bold;\">5 is compositen</div>\n<div style=\"font-weight:bold;\">7 is compositen</div>\n<div style=\"font-weight:bold;\">b)</div>\n<div style=\"font-weight:bold;\">4 is compositen</div>\n<div style=\"font-weight:bold;\">6 is compositen</div>\n<div style=\"font-weight:bold;\">8 is compositen 9 is compositen</div>\n<div style=\"font-weight:bold;\">10 is compositen</div>\n<div style=\"font-weight:bold;\">c) 3 is compositen</div>\n<div style=\"font-weight:bold;\">7 is compositen</div>\n<div style=\"font-weight:bold;\">d) 5 is compositen</div>\n<div style=\"font-weight:bold;\">e) None of these</div>\n',1,11,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (192,'<div style=\"font-weight:bold;\">\r\n	Write a Program to to print a 2D matrix of 3x3.</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdlib.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i, j;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int matrix[ROW][COL] = { { 1, 2, 3 },{ 4, 5, 6 }, { 7, 8, 9 }};</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;Given matrix is \\n&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	for (i = 0; i &lt; ROW; i++) {</div>\r\n<div style=\"font-weight:bold;\">\r\n	for (j = 0; j &lt; COL; j++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d &quot;, matrix[i][j]);</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;\\n&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	a)</div>\r\n<div style=\"font-weight:bold;\">\r\n	5 2 6</div>\r\n<div style=\"font-weight:bold;\">\r\n	4 1 7</div>\r\n<div style=\"font-weight:bold;\">\r\n	3 8 9</div>\r\n<div style=\"font-weight:bold;\">\r\n	b)</div>\r\n<div style=\"font-weight:bold;\">\r\n	9 1 8</div>\r\n<div style=\"font-weight:bold;\">\r\n	4 7 6</div>\r\n<div style=\"font-weight:bold;\">\r\n	5 3 2</div>\r\n<div style=\"font-weight:bold;\">\r\n	c)</div>\r\n<div style=\"font-weight:bold;\">\r\n	4 2 3</div>\r\n<div style=\"font-weight:bold;\">\r\n	1 5 9</div>\r\n<div style=\"font-weight:bold;\">\r\n	7 8 6</div>\r\n<div style=\"font-weight:bold;\">\r\n	d)</div>\r\n<div style=\"font-weight:bold;\">\r\n	1 2 3</div>\r\n<div style=\"font-weight:bold;\">\r\n	4 5 6</div>\r\n<div style=\"font-weight:bold;\">\r\n	7 8 9</div>\r\n<div style=\"font-weight:bold;\">\r\n	e)</div>\r\n<div style=\"font-weight:bold;\">\r\n	9 8 3</div>\r\n<div style=\"font-weight:bold;\">\r\n	6 7 1</div>\r\n<div style=\"font-weight:bold;\">\r\n	5 2 4</div>',1,12,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (193,'<div style=\"font-weight:bold;\">\r\n	What will be the output for this Program when n is 2?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int n =2;// variable declaration</div>\r\n<div style=\"font-weight:bold;\">\r\n	// Displaying the n tables.</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(int i=1;i&lt;=n;i++) // outer loop</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(int j=1;j&lt;=10;j++) // inner loop</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d\\t&quot;,(i*j)); // printing the value.</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;\\n&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	a) 2 4 6....20</div>\r\n<div style=\"font-weight:bold;\">\r\n	2 4 6....20</div>\r\n<div style=\"font-weight:bold;\">\r\n	b) 1 2 3....10</div>\r\n<div style=\"font-weight:bold;\">\r\n	2 4 6....20</div>\r\n<div style=\"font-weight:bold;\">\r\n	c) 1 2 3....10</div>\r\n<div style=\"font-weight:bold;\">\r\n	2 3 4....11</div>\r\n<div style=\"font-weight:bold;\">\r\n	d) 2 3 4....11</div>\r\n<div style=\"font-weight:bold;\">\r\n	1 2 3....10</div>\r\n<div style=\"font-weight:bold;\">\r\n	e) None of these</div>',1,13,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (194,'<div style=\"font-weight:bold;\">What will be the output of the Program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int a, b;</div>\n<div style=\"font-weight:bold;\">for(a = 1; a <= 5; a++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for(b = 1; b <= 5; b++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", b);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">printf(\"\\n\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a) </div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 5</div>\n<div style=\"font-weight:bold;\">1 2  4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">b)</div>\n<div style=\"font-weight:bold;\"> 1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">c) 1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">d) </div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">1 2 3 4 5</div>\n<div style=\"font-weight:bold;\">e) None of these</div>\n',1,14,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (195,'<div style=\"font-weight:bold;\">What will be the output of the Program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int i; </div>\n<div style=\"font-weight:bold;\">int j; 	</div>\n<div style=\"font-weight:bold;\">for( i=1; i<=2; i++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for( j=1; j<=4; j++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">	printf(\"%d \",j);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">printf(\"\\n\");</div>\n<div style=\"font-weight:bold;\">}	</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a) 1 2 3 4 </div>\n<div style=\"font-weight:bold;\">  1 2 3 4</div>\n<div style=\"font-weight:bold;\">b) 0 2 4 6 </div>\n<div style=\"font-weight:bold;\">    0 2 4 6</div>\n<div style=\"font-weight:bold;\">c) 1 2 3 4 </div>\n<div style=\"font-weight:bold;\">    2 3 4 5</div>\n<div style=\"font-weight:bold;\">d) 2 4 6 8</div>\n<div style=\"font-weight:bold;\">    0 1 2 3</div>\n<div style=\"font-weight:bold;\">e) None of these</div>\n',1,15,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (196,'<div style=\"font-weight:bold;\">What will be the output of the Program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">inti,j,term=4;</div>\n<div style=\"font-weight:bold;\">clrscr();</div>\n<div style=\"font-weight:bold;\">for (i = term ; i >= 1 ; i--)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for(j = 1 ; j <= i ; j++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",i);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">printf(\"\\n\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">getch();</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a) 1</div>\n<div style=\"font-weight:bold;\">b) 333</div>\n<div style=\"font-weight:bold;\">    22</div>\n<div style=\"font-weight:bold;\">    1</div>\n<div style=\"font-weight:bold;\">c) 0</div>\n<div style=\"font-weight:bold;\">d) 22</div>\n<div style=\"font-weight:bold;\">    1</div>\n<div style=\"font-weight:bold;\">e) Runtime error</div>\n',1,16,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (197,'<div style=\"font-weight:bold;\">What will be the Output of the Program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int n=5, c, k;</div>\n<div style=\"font-weight:bold;\">for (c = 1; c <= n; c++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for (k = 1; k <= n-c; k++)</div>\n<div style=\"font-weight:bold;\">printf(\" \");</div>\n<div style=\"font-weight:bold;\">for (k = 1; k < c; k++)</div>\n<div style=\"font-weight:bold;\">printf(\"*A\");</div>\n<div style=\"font-weight:bold;\">printf(\"*\\n\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a) *</div>\n<div style=\"font-weight:bold;\">   *A</div>\n<div style=\"font-weight:bold;\">b) *</div>\n<div style=\"font-weight:bold;\">   *A*</div>\n<div style=\"font-weight:bold;\">  *A*A*</div>\n<div style=\"font-weight:bold;\"> *A*   *A*</div>\n<div style=\"font-weight:bold;\">*A*     *A*</div>\n<div style=\"font-weight:bold;\">c)  *</div>\n<div style=\"font-weight:bold;\">   *A*</div>\n<div style=\"font-weight:bold;\">  *A*A*</div>\n<div style=\"font-weight:bold;\"> *A*A*A*</div>\n<div style=\"font-weight:bold;\">*A*A*A*A*</div>\n<div style=\"font-weight:bold;\">d) *</div>\n<div style=\"font-weight:bold;\">   *A*</div>\n<div style=\"font-weight:bold;\">     *</div>\n<div style=\"font-weight:bold;\"> *A*A*A*</div>\n<div style=\"font-weight:bold;\">*A*A*A*A*</div>\n<div style=\"font-weight:bold;\">e) *</div>\n<div style=\"font-weight:bold;\">   *A*</div>\n<div style=\"font-weight:bold;\">  *  A**</div>\n<div style=\"font-weight:bold;\"> *A*A*A*</div>\n<div style=\"font-weight:bold;\">*A*A*A*A*</div>\n',1,17,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (198,'<div style=\"font-weight:bold;\">What will be the output of the program?</div>\n<div style=\"font-weight:bold;\">#include &lt;math.h&gt;</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">void primeFactors(int n)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">while (n % 2 == 0) {</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", 2);</div>\n<div style=\"font-weight:bold;\">n = n / 2;</div>\n<div style=\"font-weight:bold;\">}  </div>\n<div style=\"font-weight:bold;\">for (int i = 3; i <= sqrt(n); i = i + 2) {</div>\n<div style=\"font-weight:bold;\">while (n % i == 0) {</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", i);</div>\n<div style=\"font-weight:bold;\">n = n / i;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">if (n > 2)</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", n);</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int n = 315;</div>\n<div style=\"font-weight:bold;\">primeFactors(n);</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,18,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (199,'<div style=\"font-weight:bold;\">What will be the Output?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int n=5, x,  y, k;</div>\n<div style=\"font-weight:bold;\">for(x =1; x <= n; x++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for(y =1; y <= n; y++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">if(y <= x)</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",y);</div>\n<div style=\"font-weight:bold;\">else</div>\n<div style=\"font-weight:bold;\">printf(\" \");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">for(y = n; y >= 1;y--)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">if(y <= x)</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",y);</div>\n<div style=\"font-weight:bold;\">else</div>\n<div style=\"font-weight:bold;\">printf(\" \");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">printf(\"\\n\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a) 123    321</div>\n<div style=\"font-weight:bold;\">   123     432</div>\n<div style=\"font-weight:bold;\">  1234554321</div>\n<div style=\"font-weight:bold;\">b) 123    321</div>\n<div style=\"font-weight:bold;\"> 1234554321</div>\n<div style=\"font-weight:bold;\">c) 123    321</div>\n<div style=\"font-weight:bold;\">   1234 4321</div>\n<div style=\"font-weight:bold;\">  1234554321</div>\n<div style=\"font-weight:bold;\">d) 1234  4321</div>\n<div style=\"font-weight:bold;\">   1234554321</div>\n<div style=\"font-weight:bold;\">e) None of these</div>\n',1,19,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (200,'<div style=\"font-weight:bold;\">What will be the output?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int row, c, n=7, temp;</div>\n<div style=\"font-weight:bold;\">temp = n;</div>\n<div style=\"font-weight:bold;\">for ( row = 1 ; row <= n ; row++ )</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">for ( c = 1 ; c < temp ; c++ )</div>\n<div style=\"font-weight:bold;\">printf(\" \");</div>\n<div style=\"font-weight:bold;\">temp--;</div>\n<div style=\"font-weight:bold;\">for ( c = 1 ; c <= 2*row - 1 ; c++ )</div>\n<div style=\"font-weight:bold;\">printf(\"*\");</div>\n<div style=\"font-weight:bold;\">printf(\"\\n\");</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">getch();</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">a)   *</div>\n<div style=\"font-weight:bold;\">     ***</div>\n<div style=\"font-weight:bold;\">    *****</div>\n<div style=\"font-weight:bold;\">   *******</div>\n<div style=\"font-weight:bold;\">  *********</div>\n<div style=\"font-weight:bold;\"> ***********</div>\n<div style=\"font-weight:bold;\">*************</div>\n<div style=\"font-weight:bold;\">b)   *</div>\n<div style=\"font-weight:bold;\">    *****</div>\n<div style=\"font-weight:bold;\">   *******</div>\n<div style=\"font-weight:bold;\"> ***********</div>\n<div style=\"font-weight:bold;\">c)   *</div>\n<div style=\"font-weight:bold;\">     ***</div>\n<div style=\"font-weight:bold;\">    *****</div>\n<div style=\"font-weight:bold;\">   *** ***</div>\n<div style=\"font-weight:bold;\">  *********</div>\n<div style=\"font-weight:bold;\"> ***      ****</div>\n<div style=\"font-weight:bold;\">*************</div>\n<div style=\"font-weight:bold;\">d)   *</div>\n<div style=\"font-weight:bold;\">     ***</div>\n<div style=\"font-weight:bold;\">    *****</div>\n<div style=\"font-weight:bold;\">   **    **</div>\n<div style=\"font-weight:bold;\">  *********</div>\n<div style=\"font-weight:bold;\"> ***     ****</div>\n<div style=\"font-weight:bold;\">***         ***</div>\n<div style=\"font-weight:bold;\">e)   *</div>\n<div style=\"font-weight:bold;\">     * *</div>\n<div style=\"font-weight:bold;\">    *    *</div>\n<div style=\"font-weight:bold;\">   *       *</div>\n<div style=\"font-weight:bold;\">  *         *</div>\n<div style=\"font-weight:bold;\"> *           *</div>\n<div style=\"font-weight:bold;\">*              *</div>\n',1,20,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (201,'<div style=\"font-weight:bold;\">What is the output of the program?</div>\n<div style=\"font-weight:bold;\">main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int a[] = {0, 0X4, 4, 9};</div>\n<div style=\"font-weight:bold;\">int i = 2;</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d %d&rdquo;, a[i], i[a]);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,21,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL);
INSERT INTO `questions` (`id`,`question_text`,`question_type_id`,`priority`,`quiz_id`,`point`,`added_date`,`parent_id`,`question_total`,`check_total`,`header_text`,`footer_text`,`question_text_eng`,`help_image`) VALUES 
 (202,'<div style=\"font-weight:bold;\">6. Which of the following is the correct output for the snippet given below?</div>\n<div style=\"font-weight:bold;\">int a[] = {10, 20, 30, 40, 50};</div>\n<div style=\"font-weight:bold;\">char *p;</div>\n<div style=\"font-weight:bold;\">p = ( char *)a;</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d&rdquo;, *((int *)p + 3));</div>\n',1,22,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (203,'<div style=\"font-weight:bold;\">Which of the following statement are correct about an array?</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">a) The array int num[25]; can store 25 elements</div>\n<div style=\"font-weight:bold;\">b) The expression num[1] designated the very first element in the array</div>\n<div style=\"font-weight:bold;\">c) It is necessary to initialized the array at the time of deceleration</div>\n<div style=\"font-weight:bold;\">d) The expression num[15] designated the 16th element in the array</div>\n',1,23,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (204,'<div style=\"font-weight:bold;\">What is the output of the following snippet?</div>\n<div style=\"font-weight:bold;\">char a[] = &ldquo;Visual C++&rdquo;;</div>\n<div style=\"font-weight:bold;\">char *b =&rdquo;Visual C++&rdquo;;</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d %d&rdquo;, sizeof(a), sizeof(b));</div>\n',1,24,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (205,'<div style=\"font-weight:bold;\">What will happen when the following program is executed?</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int a[] ={21, 12, 34, 45, 56};</div>\n<div style=\"font-weight:bold;\">int j;</div>\n<div style=\"font-weight:bold;\">for(j = 0; j <5; j++)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d&rdquo;, *a);</div>\n<div style=\"font-weight:bold;\">a++;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,25,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (206,'<div style=\"font-weight:bold;\">What is the output of the following snippet?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">char s1[] = &ldquo;Ramko&rdquo;;</div>\n<div style=\"font-weight:bold;\">char s2[] = &ldquo;System&rdquo;;</div>\n<div style=\"font-weight:bold;\">s1 = s2;</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%s&rdquo;, s1);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,26,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (207,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Which of the following can also be used in place of num[i]?</div>\n',1,27,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (208,'<div style=\"font-weight:bold;\">What will be the output of the following?</div>\n<div style=\"font-weight:bold;\">main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int a[10];</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d&rdquo;, ((a+9) + (a+1)));</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,28,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (209,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int x[]={1,2,3,4};</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",-3[x]);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,29,5,'1','2024-01-28 19:39:03',0,NULL,NULL,'','',NULL,NULL),
 (210,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A one dimensional array A has indices 1....75. Each element is a string and takes up three memory words. The array is stored at location 1120 decimal. The starting address of A[49] is</div>\n',1,30,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (211,'<div style=\"font-weight:bold;\">What is the output of this program?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    int a[8] = {1,2,3,4,5};</div>\n<div style=\"font-weight:bold;\">    printf(\"%d\", a[5]);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,31,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (212,'<div style=\"font-weight:bold;\">What is the output of this program?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    intarr[10];</div>\n<div style=\"font-weight:bold;\">    printf(\"%d %d\", arr[-2], arr[11]);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,32,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (213,'<div style=\"font-weight:bold;\">What is the output of this program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    intarr[5] = {1,2,3,4,5};</div>\n<div style=\"font-weight:bold;\">    int p, q, r;</div>\n<div style=\"font-weight:bold;\">    p = ++arr[1];</div>\n<div style=\"font-weight:bold;\">    q = arr[1]++;</div>\n<div style=\"font-weight:bold;\">    r = arr[p++];</div>\n<div style=\"font-weight:bold;\">    printf(\"%d, %d, %d\", p, q, r);</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,33,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (214,'<div style=\"font-weight:bold;\">What is the output of this program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    int a[1]={100};</div>\n<div style=\"font-weight:bold;\">    printf(\"%d\", 0[a]);</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,34,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (215,'<div style=\"font-weight:bold;\">What is the output of this program? (Assume that base address of a is 1000 and size of integer is 32 bit)</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    int a[10];</div>\n<div style=\"font-weight:bold;\">    a++;</div>\n<div style=\"font-weight:bold;\">    printf(\"%u\", a);</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,35,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (216,'<div style=\"font-weight:bold;\">Which is true about the given statement?</div>\n<div style=\"font-weight:bold;\">int arr[10] = {0,1,2,[7]=7,8,9};</div>\n',1,36,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (217,'<div style=\"font-weight:bold;\">What is the output of this program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">void main(){</div>\n<div style=\"font-weight:bold;\">    char c[] = \"GATE2011\"; </div>\n<div style=\"font-weight:bold;\">    char *p =c; </div>\n<div style=\"font-weight:bold;\">    printf(\"%s\", p + p[3] - p[1]);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,37,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (218,'<div style=\"font-weight:bold;\">How many times the loop will execute?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    char str[10] = \"98765\", *p;</div>\n<div style=\"font-weight:bold;\">    p = str + 1;</div>\n<div style=\"font-weight:bold;\">    *p = \'0\' ;</div>\n<div style=\"font-weight:bold;\">    printf (\"%s\", str);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,38,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (219,'<div style=\"font-weight:bold;\">What will be the output of the program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main(void)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    char p;</div>\n<div style=\"font-weight:bold;\">    char buf[10]={1,2,3,4,5,6,9,8};</div>\n<div style=\"font-weight:bold;\">    p=(buf+1)[5];</div>\n<div style=\"font-weight:bold;\">    printf(\"%d\",p);</div>\n<div style=\"font-weight:bold;\"></div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,39,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (220,'<div style=\"font-weight:bold;\">What will be the output of the program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">    int a[5]={5,1,15,20,25};</div>\n<div style=\"font-weight:bold;\">    inti,j,m;</div>\n<div style=\"font-weight:bold;\">    i = ++a[1];</div>\n<div style=\"font-weight:bold;\">    j = a[1]++; </div>\n<div style=\"font-weight:bold;\">    m = a[i++];</div>\n<div style=\"font-weight:bold;\">    printf(\"%d, %d, %d\", i, j, m);</div>\n<div style=\"font-weight:bold;\">    return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,40,5,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (221,'<div style=\"font-weight:bold;\">Which of the following is the correct way to access the last element of the array arr, if arr is declared as int arr[3][3][4]?</div>\n<div style=\"font-weight:bold;\">b) *(*( *(arr + 3 ) + 3) + 4)</div>\n<div style=\"font-weight:bold;\">c) *(*( *(arr + 2 ) + 3) + 4)</div>\n<div style=\"font-weight:bold;\">d) *(*( *(arr + 2 ) + 2) + 3)</div>\n',1,1,6,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (222,'<div style=\"font-weight:bold;\">What will be the output of the following code?</div>\n<div style=\"font-weight:bold;\">    int a[][] = {{1,2},{3,4}},i,j;</div>\n<div style=\"font-weight:bold;\">    for (i = 0; i < 2; i++)</div>\n<div style=\"font-weight:bold;\">        for (j = 0; j < 2; j++)</div>\n<div style=\"font-weight:bold;\">            printf(\"%d \", a[i][j]);</div>\n',1,2,6,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (223,'<div style=\"font-weight:bold;\">Which of the following is the correct output for the program given below?</div>\n<div style=\"font-weight:bold;\">int a[3][3][2] = {</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">6, 5</div>\n<div style=\"font-weight:bold;\">4, 3</div>\n<div style=\"font-weight:bold;\">2, 1</div>\n<div style=\"font-weight:bold;\">},</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">1, 2</div>\n<div style=\"font-weight:bold;\">3, 4</div>\n<div style=\"font-weight:bold;\">5, 6</div>\n<div style=\"font-weight:bold;\">},</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">5, 6</div>\n<div style=\"font-weight:bold;\">1, 2</div>\n<div style=\"font-weight:bold;\">3, 4</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">};</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%d %d %d&rdquo;, *(*(*(a + 0)+2)+1), *(*(*(a +2)+1)+1), *(a[1][1]+1));</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,3,6,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (224,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What will be the address of the arr[2][3] if arr is a 2-D long array of 4 rows and 5 columns and starting address of the array is 2000?</div>\n',1,4,6,'1','2024-01-28 19:39:04',0,NULL,NULL,'','',NULL,NULL),
 (225,'<div style=\"font-weight:bold;\">What is p in the following declaration?</div>\n<div style=\"font-weight:bold;\">int (*p)[3][4];</div>\n',1,5,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (226,'<div style=\"font-weight:bold;\">What is the output of the following program?</div>\n<div style=\"font-weight:bold;\">main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">char numbers[5][6] = {&ldquo;zero&rdquo;, &ldquo;one&rdquo;, &ldquo;two&rdquo;, &ldquo;three&rdquo;, &ldquo;four&rdquo;};</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;%s is %c&rdquo;, &numbers[4][0], numbers[0][0]);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,6,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (227,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What will be the address of the arr[2][3] if arr is a 2-D long array of 4 rows and 5 columns and starting address of the array is 2000?</div>\n',1,7,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (228,'<div style=\"font-weight:bold;\">What will be the output of the program if the array begins at 1000 and each integer occupies 2 bytes?</div>\n<div style=\"font-weight:bold;\">void main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int arr[2][2] = { 1, 2, 3, 4 };</div>\n<div style=\"font-weight:bold;\">printf(\"%u, %u\", arr+1, &arr+1);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,8,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (229,'<div style=\"font-weight:bold;\">Which of the following will print the value 2 for the above code?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;</div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int arr[10][20][30] = {0};</div>\n<div style=\"font-weight:bold;\">arr[3][2][1] = 2;</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,9,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (230,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Difference between C Arrays, ary[10] and cry[10][10] is.?</div>\n',1,10,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (231,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Array of Arrays is also called.?</div>\n',1,11,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (232,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What are the applications of a multidimensional array?</div>\n',1,12,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (233,'<div style=\"font-weight:bold;\">What is the output of C program with multidimensional arrays.? </div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int ary[3][] = {6,5,4,3,2,1};</div>\n<div style=\"font-weight:bold;\">printf(\"%d %d\", ary[0][0], ary[2][1]);</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,13,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (234,'<div style=\"font-weight:bold;\">What is the output of C program with multidimensional arrays? </div>\n<div style=\"font-weight:bold;\">int main() {</div>\n<div style=\"font-weight:bold;\">int ary[][3] = {</div>\n<div style=\"font-weight:bold;\">6,5,4,</div>\n<div style=\"font-weight:bold;\">3,2,1</div>\n<div style=\"font-weight:bold;\">};</div>\n<div style=\"font-weight:bold;\">printf(\"%d %d\", ary[0][0], ary[1][0]);</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,14,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (235,'<div style=\"font-weight:bold;\">Choose an alternative definition of C Multidimensional array? </div>\n<div style=\"font-weight:bold;\">int ary[][3] = {6,5,4,3,2,1};</div>\n',1,15,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (236,'<div style=\"font-weight:bold;\">What is the output of C Program with arrays? </div>\n<div style=\"font-weight:bold;\">int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int ary[][2][3] = {</div>\n<div style=\"font-weight:bold;\">{{1,2,3},{4,5,6}},</div>\n<div style=\"font-weight:bold;\">{{7,8,9},{10,11,12}}</div>\n<div style=\"font-weight:bold;\">};</div>\n<div style=\"font-weight:bold;\">printf(\"%d %d\", ary[0][0][0], ary[1][1][1]);</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,16,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (237,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">Choose a correct statement about a C Multidimensional array.</div>\n',1,17,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (238,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">\r\n	Choose a correct C Statement to choose number 66 in the array, int ary[3][2] = {{11,22},{33,44},{55,66}};</div>',1,18,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (239,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">A multidimensional array of dimension N is a collection of?</div>\n',1,19,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (240,'<div style=\"margin-bottom:7px;font-weight:bold;text-align:justify;\">What is the correct syntax to send a 3-dimensional array as aparameter? (Assuming declaration int a[5][4][3];)</div>\n',1,20,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (241,'<div style=\"font-weight:bold;\">How many times the following loop will get executed?</div>\n<div style=\"font-weight:bold;\">int i=2,j=2;</div>\n<div style=\"font-weight:bold;\">while(i+1?--i:j++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",i);</div>\n',1,21,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (242,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">intx,y;</div>\n<div style=\"font-weight:bold;\">x=y=2,3;;</div>\n<div style=\"font-weight:bold;\">while(--x && y++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d %d\",x,y);</div>\n',1,22,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (243,'<div style=\"font-weight:bold;\">How many times Hello is printed on console?</div>\n<div style=\"font-weight:bold;\">int a=0;</div>\n<div style=\"font-weight:bold;\">while(!(a++))</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;Hello&rdquo;);</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,23,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (244,'<div style=\"font-weight:bold;\">What will be the output of the following snippet?</div>\n<div style=\"font-weight:bold;\">    int i;</div>\n<div style=\"font-weight:bold;\">intarr[5] = {1};</div>\n<div style=\"font-weight:bold;\">    for (i = 0; i < 5; i++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", arr[i]);</div>\n',1,24,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (245,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">    int i=0;</div>\n<div style=\"font-weight:bold;\">    for(;i++;printf(\"%d\",i));       ; </div>\n<div style=\"font-weight:bold;\">printf(\"%d\",i);</div>\n',1,25,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (246,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">int i = 0;</div>\n<div style=\"font-weight:bold;\">while (i < 10)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">i++;</div>\n<div style=\"font-weight:bold;\">printf(\"hi?\\n?\");</div>\n<div style=\"font-weight:bold;\">while (i < 8)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">i++;</div>\n<div style=\"font-weight:bold;\">printf(\"hello?\\n?\");</div>\n<div style=\"font-weight:bold;\">} }</div>\n',1,26,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (247,'<div style=\"font-weight:bold;\">What will be the output of the following code?</div>\n<div style=\"font-weight:bold;\">int a[][] = {{1,2},{3,4}},i,j;</div>\n<div style=\"font-weight:bold;\">    for (i = 0; i < 2; i++)</div>\n<div style=\"font-weight:bold;\">        for (j = 0; j < 2; j++)</div>\n<div style=\"font-weight:bold;\">printf(\"%d \", a[i][j]);</div>\n',1,27,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (248,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">int x=1</div>\n<div style=\"font-weight:bold;\">while(a++<=5)</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",a);</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",a+10);</div>\n',1,28,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (249,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">for(i=1;i<=10;i++);</div>\n<div style=\"font-weight:bold;\">printf(&ldquo;Hello&rdquo;)</div>\n',1,29,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (250,'<div style=\"font-weight:bold;\">What is the output of the following code?</div>\n<div style=\"font-weight:bold;\">for(; ;);</div>\n<div style=\"font-weight:bold;\">for(; ;);</div>\n<div style=\"font-weight:bold;\">printf(\"Hello\");</div>\n',1,30,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (251,'<div style=\"font-weight:bold;\">How many times value of x will be printed?</div>\n<div style=\"font-weight:bold;\">int x=1;</div>\n<div style=\"font-weight:bold;\">   for( ;  ; );</div>\n<div style=\"font-weight:bold;\">printf(\"%d\",x++);</div>\n',1,31,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (252,'<div style=\"font-weight:bold;\">What will be the output of the following code?</div>\n<div style=\"font-weight:bold;\">int k =0;</div>\n<div style=\"font-weight:bold;\">for(k)</div>\n<div style=\"font-weight:bold;\">printf(\"Hello\");</div>\n',1,32,6,'1','2024-01-28 19:39:05',0,NULL,NULL,'','',NULL,NULL),
 (253,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	static int i;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(i++;++i;i++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d &quot;, i);</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(i == 6)</div>\r\n<div style=\"font-weight:bold;\">\r\n	break;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,33,6,'1','2024-01-28 19:39:06',0,NULL,NULL,'','',NULL,NULL),
 (254,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program, if input is 6?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int fun();</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main(){</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(fun();fun();fun())</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d &quot;, fun());</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	int fun()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int static num = 10;</div>\r\n<div style=\"font-weight:bold;\">\r\n	return num--;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,34,6,'1','2024-01-28 19:39:06',0,NULL,NULL,'','',NULL,NULL),
 (255,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int fun = {</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;C for loop &quot;)</div>\r\n<div style=\"font-weight:bold;\">\r\n	};</div>\r\n<div style=\"font-weight:bold;\">\r\n	int x = 5;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(x=0;x&lt;=fun;x++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%x &quot;, x);</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,35,6,'1','2024-01-28 19:39:06',0,NULL,NULL,'','',NULL,NULL),
 (256,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program by considering &#39;b&#39; as a User input?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(i = 0;i&lt;(i++, 5);i++)</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;%d &quot;,i);</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,36,6,'1','2024-01-28 19:39:06',0,NULL,NULL,'','',NULL,NULL),
 (257,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i;</div>\r\n<div style=\"font-weight:bold;\">\r\n	while(sizeof(NULL))</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;inside loop&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	continue;</div>\r\n<div style=\"font-weight:bold;\">\r\n	break;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,37,6,'1','2024-01-28 19:39:06',0,NULL,NULL,'','',NULL,NULL),
 (258,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program ?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main(){</div>\r\n<div style=\"font-weight:bold;\">\r\n	float ft = 7.5;</div>\r\n<div style=\"font-weight:bold;\">\r\n	while(ft)</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	printf(&quot;Loop&quot;);</div>\r\n<div style=\"font-weight:bold;\">\r\n	ft = ft - .5;</div>\r\n<div style=\"font-weight:bold;\">\r\n	if(ft == 5.0f)</div>\r\n<div style=\"font-weight:bold;\">\r\n	break;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,38,6,'1','2024-01-28 19:39:06',0,NULL,NULL,'','',NULL,NULL),
 (259,'<div style=\"font-weight:bold;\">What will be the output of the C program?</div>\n<div style=\"font-weight:bold;\">#include &lt;stdio.h&gt;int main()</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">int i = 0;</div>\n<div style=\"font-weight:bold;\">while(i+1)</div>\n<div style=\"font-weight:bold;\">while(i<<2)</div>\n<div style=\"font-weight:bold;\">while(i4)</div>\n<div style=\"font-weight:bold;\">{</div>\n<div style=\"font-weight:bold;\">printf(\"Hello \");</div>\n<div style=\"font-weight:bold;\">if(i == 3)</div>\n<div style=\"font-weight:bold;\">break;</div>\n<div style=\"font-weight:bold;\">}</div>\n<div style=\"font-weight:bold;\">return 0;</div>\n<div style=\"font-weight:bold;\">}</div>\n',1,39,6,'1','2024-01-28 19:39:06',0,NULL,NULL,'','',NULL,NULL),
 (260,'<div style=\"font-weight:bold;\">\r\n	What will be the output of the C program?</div>\r\n<div style=\"font-weight:bold;\">\r\n	#include &lt;stdio.h&gt;</div>\r\n<div style=\"font-weight:bold;\">\r\n	int main()</div>\r\n<div style=\"font-weight:bold;\">\r\n	{</div>\r\n<div style=\"font-weight:bold;\">\r\n	int i = 1, j = 1;</div>\r\n<div style=\"font-weight:bold;\">\r\n	for(;j;printf(&quot;%d %d &quot;,i, j))</div>\r\n<div style=\"font-weight:bold;\">\r\n	j = i++ &lt;= 1;</div>\r\n<div style=\"font-weight:bold;\">\r\n	return 0;</div>\r\n<div style=\"font-weight:bold;\">\r\n	}</div>',1,40,6,'1','2024-01-28 19:39:06',0,NULL,NULL,'','',NULL,NULL);
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;


--
-- Definition of table `quizzes`
--

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cat_id` int(11) NOT NULL,
  `quiz_name` varchar(500) NOT NULL,
  `quiz_desc` varchar(500) NOT NULL,
  `added_date` datetime NOT NULL,
  `parent_id` int(11) NOT NULL,
  `show_intro` int(11) NOT NULL,
  `intro_text` varchar(3850) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `quizzes`
--

/*!40000 ALTER TABLE `quizzes` DISABLE KEYS */;
INSERT INTO `quizzes` (`id`,`cat_id`,`quiz_name`,`quiz_desc`,`added_date`,`parent_id`,`show_intro`,`intro_text`) VALUES 
 (1,1,'Assessment Test #001','Assessment Test #001','2024-01-28 19:38:56',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 60 Questions</b></h2>\n<h2><b>Maximum Time Limit: 75 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (2,2,'Assessment Test #002','Assessment Test #002','2024-01-28 19:38:57',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 40 Questions</b></h2>\n<h2><b>Maximum Time Limit: 75 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (3,3,'Assessment Test #003','Assessment Test #003','2024-01-28 19:38:59',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 40 Questions</b></h2>\n<h2><b>Maximum Time Limit: 75 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (4,4,'Assessment Test #004','Assessment Test #004','2024-01-28 19:39:01',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 40 Questions</b></h2>\n<h2><b>Maximum Time Limit: 75 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (5,5,'Assessment Test #005','Assessment Test #005','2024-01-28 19:39:02',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 40 Questions</b></h2>\n<h2><b>Maximum Time Limit: 75 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>'),
 (6,6,'Assessment Test #006','Assessment Test #006','2024-01-28 19:39:04',0,1,'<h2><b>Test Organized by</b></h2>\n<h2 style=\"border-bottom: 1px solid #F4F5F7;margin-bottom:5px;padding-bottom:5px;\"><span style=\"color:red\">Apt Training Resources</span></h2><h2><b>Total number of questions: 40 Questions</b></h2>\n<h2><b>Maximum Time Limit: 75 minutes</b></h2>\n<p style=\"border-top: 1px solid #F4F5F7;margin-top:5px;padding-top:5px;\">\nPlease click on the <b>Continue</b> button only after reading the instructions thoroughly.</p>\n<p><b><u>Instructions:</u></b></p>\n<p>1.For every question, click the answer option &amp; then click the <b>Save</b> button to save the answer for that particular question. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>2.Do not keep on pressing the <b>Save </b>button for the same question again &amp; again. Clicking once is enough.</p>\n<p>3.Clicking on the particular question number (available on the right side or bottom side) will take you directly to the particular question, but click it only after you have pressed the <b>Save </b>button for that question, that you are currently attending in the test.</p>\n<p>4.If after choosing the correct option, you click on the <b>Previous</b> button, instead of the <b>Save </b>button, even then answers will be saved. Don\'t worry.</p>\n<p>5.If you click the correct option and then click the <b>Question number link</b> in the right or in the bottom or if u click the <b>Instruction page link</b>, without pressing the <b>Save </b>button, answer won\'t be saved. Clicking on the <b>Save </b>button is essential for the answer to be saved.</p>\n<p>6.If you exceed the time limit for the test, the answers for which u have clicked the <b>Save </b>button alone, will automatically be saved &amp; it will take you to the home page.</p>\n<p>7.If incase u want to check the remaining time available for u any time during the test, u can scroll up, to see the timer on the right top corner.</p>\n<p>8.Once you have finished the test, click the <b>Finish</b> button available in the top right corner.</p>');
/*!40000 ALTER TABLE `quizzes` ENABLE KEYS */;


--
-- Definition of table `roles_rights`
--

DROP TABLE IF EXISTS `roles_rights`;
CREATE TABLE `roles_rights` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`Id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `roles_rights`
--

/*!40000 ALTER TABLE `roles_rights` DISABLE KEYS */;
INSERT INTO `roles_rights` (`Id`,`role_id`,`module_id`) VALUES 
 (1,1,2),
 (2,1,3),
 (3,1,4),
 (4,1,6),
 (5,1,7),
 (12,1,12),
 (11,1,11),
 (9,2,9);
/*!40000 ALTER TABLE `roles_rights` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_base`
--

DROP TABLE IF EXISTS `tcode_assess_base`;
CREATE TABLE `tcode_assess_base` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assignment_name` varchar(250) NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `total_q` int(10) unsigned NOT NULL DEFAULT '1',
  `total_score` int(10) unsigned NOT NULL DEFAULT '3',
  `total_duration` int(10) unsigned NOT NULL DEFAULT '30',
  `duration_per` int(10) unsigned NOT NULL DEFAULT '1',
  `max_submissions` int(10) unsigned NOT NULL DEFAULT '1',
  `is_to_suffle_q` tinyint(1) NOT NULL DEFAULT '1',
  `assignment_status` int(10) unsigned NOT NULL DEFAULT '0',
  `instructions` varchar(8000) NOT NULL DEFAULT ' ',
  `max_runs` int(10) unsigned NOT NULL DEFAULT '3',
  PRIMARY KEY (`assess_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_base`
--

/*!40000 ALTER TABLE `tcode_assess_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_base` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_q`
--

DROP TABLE IF EXISTS `tcode_assess_submit_q`;
CREATE TABLE `tcode_assess_submit_q` (
  `submit_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `user_program` longtext NOT NULL,
  `q_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `q_status` int(10) unsigned NOT NULL DEFAULT '0',
  `submit_no` int(10) unsigned NOT NULL DEFAULT '1',
  `test_cases_haverun` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_runs` int(10) unsigned NOT NULL DEFAULT '0',
  `number_of_submits` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_q`
--

/*!40000 ALTER TABLE `tcode_assess_submit_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_q` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_submit_testcase`
--

DROP TABLE IF EXISTS `tcode_assess_submit_testcase`;
CREATE TABLE `tcode_assess_submit_testcase` (
  `submit_id` bigint(20) unsigned NOT NULL,
  `assess_id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL,
  `group_id` bigint(20) unsigned NOT NULL,
  `question_id` bigint(20) unsigned NOT NULL,
  `testcase_id` bigint(20) unsigned NOT NULL,
  `user_output` varchar(2000) NOT NULL DEFAULT ' ',
  `case_status` int(10) unsigned NOT NULL DEFAULT '0',
  `testcase_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`submit_id`,`testcase_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_submit_testcase`
--

/*!40000 ALTER TABLE `tcode_assess_submit_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_submit_testcase` ENABLE KEYS */;


--
-- Definition of table `tcode_assess_user`
--

DROP TABLE IF EXISTS `tcode_assess_user`;
CREATE TABLE `tcode_assess_user` (
  `assess_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL,
  `user_ass_status` int(10) unsigned NOT NULL DEFAULT '0',
  `user_secure_score` int(10) unsigned NOT NULL DEFAULT '0',
  `ass_start_date` datetime DEFAULT NULL,
  `ass_finish_date` datetime DEFAULT NULL,
  PRIMARY KEY (`assess_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_assess_user`
--

/*!40000 ALTER TABLE `tcode_assess_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_assess_user` ENABLE KEYS */;


--
-- Definition of table `tcode_language`
--

DROP TABLE IF EXISTS `tcode_language`;
CREATE TABLE `tcode_language` (
  `lang_code` varchar(10) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `api_lang_name` varchar(100) NOT NULL,
  `api_version_no` varchar(100) NOT NULL,
  `default_program` varchar(1000) NOT NULL DEFAULT '#include<stdio.h>\r\nint main(){\r\n\r\n  return 0;\r\n}',
  PRIMARY KEY (`lang_code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_language`
--

/*!40000 ALTER TABLE `tcode_language` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_language` ENABLE KEYS */;


--
-- Definition of table `tcode_level`
--

DROP TABLE IF EXISTS `tcode_level`;
CREATE TABLE `tcode_level` (
  `level_no` int(10) unsigned NOT NULL,
  `level_name` varchar(100) NOT NULL,
  PRIMARY KEY (`level_no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_level`
--

/*!40000 ALTER TABLE `tcode_level` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_level` ENABLE KEYS */;


--
-- Definition of table `tcode_q_base`
--

DROP TABLE IF EXISTS `tcode_q_base`;
CREATE TABLE `tcode_q_base` (
  `question_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `code_title` varchar(200) NOT NULL DEFAULT ' ',
  `code_question` varchar(8000) NOT NULL DEFAULT ' ',
  `lang_code` varchar(10) NOT NULL DEFAULT 'c',
  `level_no` int(10) unsigned NOT NULL DEFAULT '2',
  `tested_program` longtext,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_base`
--

/*!40000 ALTER TABLE `tcode_q_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_base`
--

DROP TABLE IF EXISTS `tcode_q_group_base`;
CREATE TABLE `tcode_q_group_base` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(250) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_base`
--

/*!40000 ALTER TABLE `tcode_q_group_base` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_base` ENABLE KEYS */;


--
-- Definition of table `tcode_q_group_q`
--

DROP TABLE IF EXISTS `tcode_q_group_q`;
CREATE TABLE `tcode_q_group_q` (
  `group_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`group_id`,`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_group_q`
--

/*!40000 ALTER TABLE `tcode_q_group_q` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_group_q` ENABLE KEYS */;


--
-- Definition of table `tcode_q_testcase`
--

DROP TABLE IF EXISTS `tcode_q_testcase`;
CREATE TABLE `tcode_q_testcase` (
  `testcase_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question_id` bigint(20) unsigned NOT NULL,
  `input` varchar(2000) NOT NULL DEFAULT ' ',
  `output` varchar(2000) NOT NULL DEFAULT ' ',
  `point` int(10) unsigned NOT NULL DEFAULT '1',
  `sno` int(10) unsigned NOT NULL,
  `is_active` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`testcase_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tcode_q_testcase`
--

/*!40000 ALTER TABLE `tcode_q_testcase` DISABLE KEYS */;
/*!40000 ALTER TABLE `tcode_q_testcase` ENABLE KEYS */;


--
-- Definition of table `user_answers`
--

DROP TABLE IF EXISTS `user_answers`;
CREATE TABLE `user_answers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_quiz_id` int(11) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `answer_id` int(11) DEFAULT NULL,
  `user_answer_id` int(11) DEFAULT NULL,
  `user_answer_text` varchar(3800) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_answers`
--

/*!40000 ALTER TABLE `user_answers` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_answers` ENABLE KEYS */;


--
-- Definition of table `user_quizzes`
--

DROP TABLE IF EXISTS `user_quizzes`;
CREATE TABLE `user_quizzes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `assignment_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `added_date` datetime DEFAULT NULL,
  `success` int(11) DEFAULT NULL,
  `finish_date` datetime DEFAULT NULL,
  `pass_score_point` decimal(10,2) DEFAULT NULL,
  `pass_score_perc` decimal(10,2) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `assignment_id` (`assignment_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_quizzes`
--

/*!40000 ALTER TABLE `user_quizzes` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_quizzes` ENABLE KEYS */;


--
-- Definition of table `user_types`
--

DROP TABLE IF EXISTS `user_types`;
CREATE TABLE `user_types` (
  `id` int(11) NOT NULL,
  `type_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_types`
--

/*!40000 ALTER TABLE `user_types` DISABLE KEYS */;
INSERT INTO `user_types` (`id`,`type_name`) VALUES 
 (1,'Admin'),
 (2,'User');
/*!40000 ALTER TABLE `user_types` ENABLE KEYS */;


--
-- Definition of table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `UserID` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(50) NOT NULL,
  `Password` varchar(50) NOT NULL,
  `Name` varchar(150) NOT NULL,
  `Surname` varchar(150) NOT NULL,
  `added_date` datetime NOT NULL,
  `user_type` int(11) DEFAULT NULL,
  `email` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`UserID`)
) ENGINE=InnoDB AUTO_INCREMENT=290 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `users`
--

/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`UserID`,`UserName`,`Password`,`Name`,`Surname`,`added_date`,`user_type`,`email`) VALUES 
 (1,'admin','baf71c021073a99609d073b6c7d2162a','admin','admin','2011-10-27 12:02:06',1,'admin'),
 (2,'APT01','486ec94022de2ba84a97e76c60e6dd89','APT01','','0000-00-00 00:00:00',NULL,NULL),
 (3,'APT02','486ec94022de2ba84a97e76c60e6dd89','APT02','','0000-00-00 00:00:00',NULL,NULL),
 (4,'APT03','486ec94022de2ba84a97e76c60e6dd89','APT03','','0000-00-00 00:00:00',NULL,NULL),
 (5,'APT04','486ec94022de2ba84a97e76c60e6dd89','APT04','','0000-00-00 00:00:00',NULL,NULL),
 (6,'APT05','486ec94022de2ba84a97e76c60e6dd89','APT05','','0000-00-00 00:00:00',NULL,NULL),
 (7,'APT06','486ec94022de2ba84a97e76c60e6dd89','APT06','','0000-00-00 00:00:00',NULL,NULL),
 (8,'APT07','486ec94022de2ba84a97e76c60e6dd89','APT07','','0000-00-00 00:00:00',NULL,NULL),
 (9,'APT08','486ec94022de2ba84a97e76c60e6dd89','APT08','','0000-00-00 00:00:00',NULL,NULL),
 (10,'APT09','486ec94022de2ba84a97e76c60e6dd89','APT09','','0000-00-00 00:00:00',NULL,NULL),
 (11,'APT10','486ec94022de2ba84a97e76c60e6dd89','APT10','','0000-00-00 00:00:00',NULL,NULL),
 (12,'APT11','486ec94022de2ba84a97e76c60e6dd89','APT11','','0000-00-00 00:00:00',NULL,NULL),
 (13,'APT12','486ec94022de2ba84a97e76c60e6dd89','APT12','','0000-00-00 00:00:00',NULL,NULL),
 (14,'APT13','486ec94022de2ba84a97e76c60e6dd89','APT13','','0000-00-00 00:00:00',NULL,NULL),
 (15,'APT14','486ec94022de2ba84a97e76c60e6dd89','APT14','','0000-00-00 00:00:00',NULL,NULL),
 (16,'APT15','486ec94022de2ba84a97e76c60e6dd89','APT15','','0000-00-00 00:00:00',NULL,NULL),
 (17,'APT16','486ec94022de2ba84a97e76c60e6dd89','APT16','','0000-00-00 00:00:00',NULL,NULL),
 (18,'APT17','486ec94022de2ba84a97e76c60e6dd89','APT17','','0000-00-00 00:00:00',NULL,NULL),
 (19,'APT18','486ec94022de2ba84a97e76c60e6dd89','APT18','','0000-00-00 00:00:00',NULL,NULL),
 (20,'APT19','486ec94022de2ba84a97e76c60e6dd89','APT19','','0000-00-00 00:00:00',NULL,NULL),
 (21,'APT20','486ec94022de2ba84a97e76c60e6dd89','APT20','','0000-00-00 00:00:00',NULL,NULL),
 (22,'APT21','486ec94022de2ba84a97e76c60e6dd89','APT21','','0000-00-00 00:00:00',NULL,NULL),
 (23,'APT22','486ec94022de2ba84a97e76c60e6dd89','APT22','','0000-00-00 00:00:00',NULL,NULL),
 (24,'APT23','486ec94022de2ba84a97e76c60e6dd89','APT23','','0000-00-00 00:00:00',NULL,NULL),
 (25,'APT24','486ec94022de2ba84a97e76c60e6dd89','APT24','','0000-00-00 00:00:00',NULL,NULL),
 (26,'APT25','486ec94022de2ba84a97e76c60e6dd89','APT25','','0000-00-00 00:00:00',NULL,NULL),
 (27,'DEVELOPER01','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER01','','0000-00-00 00:00:00',NULL,NULL),
 (28,'DEVELOPER02','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER02','','0000-00-00 00:00:00',NULL,NULL),
 (29,'DEVELOPER03','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER03','','0000-00-00 00:00:00',NULL,NULL),
 (30,'DEVELOPER04','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER04','','0000-00-00 00:00:00',NULL,NULL),
 (31,'DEVELOPER05','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER05','','0000-00-00 00:00:00',NULL,NULL),
 (32,'DEVELOPER06','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER06','','0000-00-00 00:00:00',NULL,NULL),
 (33,'DEVELOPER07','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER07','','0000-00-00 00:00:00',NULL,NULL),
 (34,'DEVELOPER08','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER08','','0000-00-00 00:00:00',NULL,NULL),
 (35,'DEVELOPER09','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER09','','0000-00-00 00:00:00',NULL,NULL),
 (36,'DEVELOPER10','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER10','','0000-00-00 00:00:00',NULL,NULL),
 (37,'DEVELOPER11','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER11','','0000-00-00 00:00:00',NULL,NULL),
 (38,'DEVELOPER12','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER12','','0000-00-00 00:00:00',NULL,NULL),
 (39,'DEVELOPER13','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER13','','0000-00-00 00:00:00',NULL,NULL),
 (40,'DEVELOPER14','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER14','','0000-00-00 00:00:00',NULL,NULL),
 (41,'DEVELOPER15','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER15','','0000-00-00 00:00:00',NULL,NULL),
 (42,'DEVELOPER16','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER16','','0000-00-00 00:00:00',NULL,NULL),
 (43,'DEVELOPER17','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER17','','0000-00-00 00:00:00',NULL,NULL),
 (44,'DEVELOPER18','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER18','','0000-00-00 00:00:00',NULL,NULL),
 (45,'DEVELOPER19','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER19','','0000-00-00 00:00:00',NULL,NULL),
 (46,'DEVELOPER20','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER20','','0000-00-00 00:00:00',NULL,NULL),
 (47,'DEVELOPER21','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER21','','0000-00-00 00:00:00',NULL,NULL),
 (48,'DEVELOPER22','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER22','','0000-00-00 00:00:00',NULL,NULL),
 (49,'DEVELOPER23','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER23','','0000-00-00 00:00:00',NULL,NULL),
 (50,'DEVELOPER24','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER24','','0000-00-00 00:00:00',NULL,NULL),
 (51,'DEVELOPER25','7b7a53e239400a13bd6be6c91c4f6c4e','DEVELOPER25','','0000-00-00 00:00:00',NULL,NULL),
 (52,'SERVER01','da941ba5e4989ca468e0af6e0645a715','SERVER01','','0000-00-00 00:00:00',NULL,NULL),
 (53,'SERVER02','da941ba5e4989ca468e0af6e0645a715','SERVER02','','0000-00-00 00:00:00',NULL,NULL),
 (54,'SERVER03','da941ba5e4989ca468e0af6e0645a715','SERVER03','','0000-00-00 00:00:00',NULL,NULL),
 (55,'SERVER04','da941ba5e4989ca468e0af6e0645a715','SERVER04','','0000-00-00 00:00:00',NULL,NULL),
 (56,'SERVER05','da941ba5e4989ca468e0af6e0645a715','SERVER05','','0000-00-00 00:00:00',NULL,NULL),
 (57,'SERVER06','da941ba5e4989ca468e0af6e0645a715','SERVER06','','0000-00-00 00:00:00',NULL,NULL),
 (58,'SERVER07','da941ba5e4989ca468e0af6e0645a715','SERVER07','','0000-00-00 00:00:00',NULL,NULL),
 (59,'SERVER08','da941ba5e4989ca468e0af6e0645a715','SERVER08','','0000-00-00 00:00:00',NULL,NULL),
 (60,'SERVER09','da941ba5e4989ca468e0af6e0645a715','SERVER09','','0000-00-00 00:00:00',NULL,NULL),
 (61,'SERVER10','da941ba5e4989ca468e0af6e0645a715','SERVER10','','0000-00-00 00:00:00',NULL,NULL),
 (62,'SERVER11','da941ba5e4989ca468e0af6e0645a715','SERVER11','','0000-00-00 00:00:00',NULL,NULL),
 (63,'SERVER12','da941ba5e4989ca468e0af6e0645a715','SERVER12','','0000-00-00 00:00:00',NULL,NULL),
 (64,'SERVER13','da941ba5e4989ca468e0af6e0645a715','SERVER13','','0000-00-00 00:00:00',NULL,NULL),
 (65,'SERVER14','da941ba5e4989ca468e0af6e0645a715','SERVER14','','0000-00-00 00:00:00',NULL,NULL),
 (66,'SERVER15','da941ba5e4989ca468e0af6e0645a715','SERVER15','','0000-00-00 00:00:00',NULL,NULL),
 (67,'SERVER16','da941ba5e4989ca468e0af6e0645a715','SERVER16','','0000-00-00 00:00:00',NULL,NULL),
 (68,'SERVER17','da941ba5e4989ca468e0af6e0645a715','SERVER17','','0000-00-00 00:00:00',NULL,NULL),
 (69,'SERVER18','da941ba5e4989ca468e0af6e0645a715','SERVER18','','0000-00-00 00:00:00',NULL,NULL),
 (70,'SERVER19','da941ba5e4989ca468e0af6e0645a715','SERVER19','','0000-00-00 00:00:00',NULL,NULL),
 (71,'SERVER20','da941ba5e4989ca468e0af6e0645a715','SERVER20','','0000-00-00 00:00:00',NULL,NULL),
 (72,'SERVER21','da941ba5e4989ca468e0af6e0645a715','SERVER21','','0000-00-00 00:00:00',NULL,NULL),
 (73,'SERVER22','da941ba5e4989ca468e0af6e0645a715','SERVER22','','0000-00-00 00:00:00',NULL,NULL),
 (74,'SERVER23','da941ba5e4989ca468e0af6e0645a715','SERVER23','','0000-00-00 00:00:00',NULL,NULL),
 (75,'SERVER24','da941ba5e4989ca468e0af6e0645a715','SERVER24','','0000-00-00 00:00:00',NULL,NULL),
 (76,'SERVER25','da941ba5e4989ca468e0af6e0645a715','SERVER25','','0000-00-00 00:00:00',NULL,NULL),
 (77,'TN301','69deb9a83f33c9199b78cd4d38e5f60b','TN301','','0000-00-00 00:00:00',NULL,NULL),
 (78,'TN302','0409d7ab1290543e189a0e208fafe3e8','TN302','','0000-00-00 00:00:00',NULL,NULL),
 (79,'TN303','1a517d8dbf115693d84fd4890afcfc39','TN303','','0000-00-00 00:00:00',NULL,NULL),
 (80,'TN304','17909e57c21d4210130e3bc350aa0532','TN304','','0000-00-00 00:00:00',NULL,NULL),
 (81,'TN305','5a5e8bf589f3364bed3fe58c392e8f3f','TN305','','0000-00-00 00:00:00',NULL,NULL),
 (82,'TN306','21cca3eb34a417ae2eb05fc239d52047','TN306','','0000-00-00 00:00:00',NULL,NULL),
 (83,'TN307','f6e3e37e98984715363032a3b98597a4','TN307','','0000-00-00 00:00:00',NULL,NULL),
 (84,'TN308','d4e4a3a1aa59b1be022c2ca8c8555d9c','TN308','','0000-00-00 00:00:00',NULL,NULL),
 (85,'TN309','c4faf149ed943bc5ea249f78d4f26146','TN309','','0000-00-00 00:00:00',NULL,NULL),
 (86,'TN310','ffe933363845b8d9f38b24cc3c7daa7c','TN310','','0000-00-00 00:00:00',NULL,NULL),
 (87,'TN311','8627abf339cf906f3e3b8545f70dbd47','TN311','','0000-00-00 00:00:00',NULL,NULL),
 (88,'TN312','3bf2c96452478f9f2436b3f273470650','TN312','','0000-00-00 00:00:00',NULL,NULL),
 (89,'TN313','0da57a3e1cab4ebd910df9a22f80a6c4','TN313','','0000-00-00 00:00:00',NULL,NULL),
 (90,'TN314','334d462425a4cc79995a3a1284f52da5','TN314','','0000-00-00 00:00:00',NULL,NULL),
 (91,'TN315','95a64d3fadc110135ff7c77b531be586','TN315','','0000-00-00 00:00:00',NULL,NULL),
 (92,'TN316','c1dc82931d50bbe8ead4eafe16366816','TN316','','0000-00-00 00:00:00',NULL,NULL),
 (93,'TN317','e37846dfdbd22d9d372835a938b942d4','TN317','','0000-00-00 00:00:00',NULL,NULL),
 (94,'TN318','3102dad692054f336b014a8eef962e0e','TN318','','0000-00-00 00:00:00',NULL,NULL),
 (95,'TN319','9e1557506a6a22db42bdbaa5bd1445dd','TN319','','0000-00-00 00:00:00',NULL,NULL),
 (96,'TN320','b9563c3042cd67d6d4f533f2ce21b523','TN320','','0000-00-00 00:00:00',NULL,NULL),
 (97,'TN321','0cfa30300927205ab547f55052cea8bd','TN321','','0000-00-00 00:00:00',NULL,NULL),
 (98,'TN322','581f13ff5df717c99eeb503d3d417bf5','TN322','','0000-00-00 00:00:00',NULL,NULL),
 (99,'TN323','9a86c0656cacabb0392628454cad3cb9','TN323','','0000-00-00 00:00:00',NULL,NULL),
 (100,'TN324','ca86413c9bc419069ec56df88b83d500','TN324','','0000-00-00 00:00:00',NULL,NULL),
 (101,'TN325','1b69507c10799a413e2a241a78ef51c2','TN325','','0000-00-00 00:00:00',NULL,NULL),
 (102,'TN326','31afad3f5ab7c21cba2b8ba4119e25f7','TN326','','0000-00-00 00:00:00',NULL,NULL),
 (103,'TN327','004ae3af613ede471829d6b0f2111e3d','TN327','','0000-00-00 00:00:00',NULL,NULL),
 (104,'TN328','5f2d21714c7eac867a59a6f36c64a62f','TN328','','0000-00-00 00:00:00',NULL,NULL),
 (105,'TN329','b17154967957362f12b6a676e6527eb0','TN329','','0000-00-00 00:00:00',NULL,NULL),
 (106,'TN330','586fde2fefd0d0eb6dfdb91787a68d80','TN330','','0000-00-00 00:00:00',NULL,NULL),
 (107,'TN331','3986dd0914958ae2115e0ae7f10beef3','TN331','','0000-00-00 00:00:00',NULL,NULL),
 (108,'TN332','0aff991ae226cc22882efde22c1daa79','TN332','','0000-00-00 00:00:00',NULL,NULL),
 (109,'TN333','830bc2be277071ca8a68902828873578','TN333','','0000-00-00 00:00:00',NULL,NULL),
 (110,'TN334','f95582dab0b12a19609acc9fbf8d3b2a','TN334','','0000-00-00 00:00:00',NULL,NULL),
 (111,'TN335','634b246f1e690534823fd4f4561c56a7','TN335','','0000-00-00 00:00:00',NULL,NULL),
 (112,'TN336','ca1cc482af3b4b75e08878a98f2e1d77','TN336','','0000-00-00 00:00:00',NULL,NULL),
 (113,'TN337','f6a0c43cb9850917e3f0bd1b48eb6899','TN337','','0000-00-00 00:00:00',NULL,NULL),
 (114,'TN338','6768a3ba0eb1a50a2b589275a599a949','TN338','','0000-00-00 00:00:00',NULL,NULL),
 (115,'TN339','4df06c746d77326992b8fc48d0308b08','TN339','','0000-00-00 00:00:00',NULL,NULL),
 (116,'TN340','b2006b4668a295add53a7bab6c3ece77','TN340','','0000-00-00 00:00:00',NULL,NULL),
 (117,'TN341','a58306714b5600d65a2a1933a427dac1','TN341','','0000-00-00 00:00:00',NULL,NULL),
 (118,'TN342','c32d17d395968666a49f905897af418f','TN342','','0000-00-00 00:00:00',NULL,NULL),
 (119,'TN343','161af756c82f4c64c07e1e8e22e840d6','TN343','','0000-00-00 00:00:00',NULL,NULL),
 (120,'TN344','ae5c47295f2f83d3f49b4f6a63129354','TN344','','0000-00-00 00:00:00',NULL,NULL),
 (121,'TN345','df132335d3df85ddb7a631c5404e1f75','TN345','','0000-00-00 00:00:00',NULL,NULL),
 (122,'TN346','a541d3e423a7b01feca52bd16989249f','TN346','','0000-00-00 00:00:00',NULL,NULL),
 (123,'TN347','c862159979609f1a22e873d62a7e8889','TN347','','0000-00-00 00:00:00',NULL,NULL),
 (124,'TN348','8b40f81f9d577273b8fb574838c93c99','TN348','','0000-00-00 00:00:00',NULL,NULL),
 (125,'TN349','30c70ff3e34ca5607586c1ef4fbafd37','TN349','','0000-00-00 00:00:00',NULL,NULL),
 (126,'TN350','b14d7278ae16c5a8a9d6a72625d0cdac','TN350','','0000-00-00 00:00:00',NULL,NULL),
 (127,'TN351','1fa775a0e0608c199f577b72df564589','TN351','','0000-00-00 00:00:00',NULL,NULL),
 (128,'TN352','67fb89296ef66b4359c33d3866412350','TN352','','0000-00-00 00:00:00',NULL,NULL),
 (129,'TN353','bc15e893a48c3b9a6e12f284351e8e80','TN353','','0000-00-00 00:00:00',NULL,NULL),
 (130,'TN354','bc545d42636dbeaf51a178e5ca81f104','TN354','','0000-00-00 00:00:00',NULL,NULL),
 (131,'TN355','f7ae9d91f50e82ae7a98878f97115e81','TN355','','0000-00-00 00:00:00',NULL,NULL),
 (132,'TN356','8513b87616018a6a6d1f8f8e1bbaee9b','TN356','','0000-00-00 00:00:00',NULL,NULL),
 (133,'TN357','5d69e90a71f773548fd8483b879fa62c','TN357','','0000-00-00 00:00:00',NULL,NULL),
 (134,'TN358','3215a70622508a28cb3ec7f512c2c701','TN358','','0000-00-00 00:00:00',NULL,NULL),
 (135,'TN359','f9569b2395ca9030c09ce1e50cb96c99','TN359','','0000-00-00 00:00:00',NULL,NULL),
 (136,'TN360','7eabac524efd621edb47468108d955c9','TN360','','0000-00-00 00:00:00',NULL,NULL),
 (137,'TN361','25b01c1213834be19b08e9d789492eab','TN361','','0000-00-00 00:00:00',NULL,NULL),
 (138,'TN362','76c7ec29e04494759da70dd5d2c4c793','TN362','','0000-00-00 00:00:00',NULL,NULL),
 (139,'TN363','4bba3e7d011bb88ca239843ac7646242','TN363','','0000-00-00 00:00:00',NULL,NULL),
 (140,'TN364','1a5c969027b163e2a87c2e3b004ed267','TN364','','0000-00-00 00:00:00',NULL,NULL),
 (141,'TN365','55869aa3fe9498b57f29e717d10acc6c','TN365','','0000-00-00 00:00:00',NULL,NULL),
 (142,'TN366','fc8ea30fa6cc5f7f0baae9172e13c1de','TN366','','0000-00-00 00:00:00',NULL,NULL),
 (143,'TN367','a12ca07510019045e0626f301663be1f','TN367','','0000-00-00 00:00:00',NULL,NULL),
 (144,'TN368','6e051ca0c0250385577c401f2270ecca','TN368','','0000-00-00 00:00:00',NULL,NULL),
 (145,'TN369','2cfc8b7a70659adac16fd3ab3b70c017','TN369','','0000-00-00 00:00:00',NULL,NULL),
 (146,'TN370','59012f2532004da9b7acb3439cf6dee4','TN370','','0000-00-00 00:00:00',NULL,NULL),
 (147,'TN371','b51528b95b51c16d1365dc03365b23b3','TN371','','0000-00-00 00:00:00',NULL,NULL),
 (148,'TN372','fe7f89fe7db6560ee8fd5c2cd7c7a954','TN372','','0000-00-00 00:00:00',NULL,NULL),
 (149,'TN373','a5c471ebc0335a1e97ab4b66fe9b1dfd','TN373','','0000-00-00 00:00:00',NULL,NULL),
 (150,'TN374','2c2e42c6cc1e09dface2f188738254e8','TN374','','0000-00-00 00:00:00',NULL,NULL),
 (151,'TN375','58e669c7b2f44ea3bd161cdaee78115a','TN375','','0000-00-00 00:00:00',NULL,NULL),
 (152,'TN376','29b48574abc0bdd520bf90484dd2448f','TN376','','0000-00-00 00:00:00',NULL,NULL),
 (153,'TN377','042f2eecf2d854b99756946dd7833bc7','TN377','','0000-00-00 00:00:00',NULL,NULL),
 (154,'TN378','efde99c900f82b01afe250d36e4a328b','TN378','','0000-00-00 00:00:00',NULL,NULL),
 (155,'TN379','1d65d6f16ae454d2dd727844bcfed5e5','TN379','','0000-00-00 00:00:00',NULL,NULL),
 (156,'TN380','8ca8170f835089f489055112eb41f245','TN380','','0000-00-00 00:00:00',NULL,NULL),
 (157,'TN381','41a6ddced6a095ad103214b07973655b','TN381','','0000-00-00 00:00:00',NULL,NULL),
 (158,'TN382','82e21a3a7f5634f0651dae44496d72e2','TN382','','0000-00-00 00:00:00',NULL,NULL),
 (159,'TN383','cef91b7c68f2541ee442a8b409416b64','TN383','','0000-00-00 00:00:00',NULL,NULL),
 (160,'TN384','83818c00c36e7524f396937ab3f15ca2','TN384','','0000-00-00 00:00:00',NULL,NULL),
 (161,'TN385','bde5c51b1d3a9af593a35a8715d7bcd8','TN385','','0000-00-00 00:00:00',NULL,NULL),
 (162,'TN386','20040b350a2864ec076643ea4912bf0a','TN386','','0000-00-00 00:00:00',NULL,NULL),
 (163,'TN387','30379e0c8a0db3fc0b33a38a9de30318','TN387','','0000-00-00 00:00:00',NULL,NULL),
 (164,'TN388','7695bf6c3fbf74479b637d05a7a85c93','TN388','','0000-00-00 00:00:00',NULL,NULL),
 (165,'TN389','0401b5e519df5d4f84d92b00cc4da654','TN389','','0000-00-00 00:00:00',NULL,NULL),
 (166,'TN390','a4585ac13c43bee8899d7ff3aa597b4e','TN390','','0000-00-00 00:00:00',NULL,NULL),
 (167,'TN391','db54edacaa736a7fb6d7bdb580e711b7','TN391','','0000-00-00 00:00:00',NULL,NULL),
 (168,'TN392','5da13a013d9ad3128151f275d28dbcbd','TN392','','0000-00-00 00:00:00',NULL,NULL),
 (169,'TN393','91259e4cb77af1afb967fdd4dcb25a0c','TN393','','0000-00-00 00:00:00',NULL,NULL),
 (170,'TN394','268c6c191634ceecb651e1b30ba2dd0c','TN394','','0000-00-00 00:00:00',NULL,NULL),
 (171,'TN395','203089338375a6962d21a908e1eb4cd3','TN395','','0000-00-00 00:00:00',NULL,NULL),
 (172,'TN396','602c767274f52396cee5faa71281bcad','TN396','','0000-00-00 00:00:00',NULL,NULL),
 (173,'TN397','0b757fb65b7abdacec68b6fe05f201cb','TN397','','0000-00-00 00:00:00',NULL,NULL),
 (174,'TN398','1c6f9d091bff6875ec7bff77fc666397','TN398','','0000-00-00 00:00:00',NULL,NULL),
 (175,'TN399','75a70c9ace358f908cc7956c74b1fa7d','TN399','','0000-00-00 00:00:00',NULL,NULL),
 (176,'TN400','51230c59c320b4c9d8e9c74cebb31bde','TN400','','0000-00-00 00:00:00',NULL,NULL),
 (177,'A1','31047d7b346f41919282819811069b22','ABINAYA K','','0000-00-00 00:00:00',NULL,NULL),
 (178,'A2','0a68331bb02dcc5e4c92df5f95dd537e','ALAGUTHIYAGARAJAN A','','0000-00-00 00:00:00',NULL,NULL),
 (179,'A3','a8d813cb974946067f914ae3e00eba15','ARAVINDKUMAR A','','0000-00-00 00:00:00',NULL,NULL),
 (180,'A4','6caa5bf441922f04f0d4c409d6a8a490','ARCHANA A','','0000-00-00 00:00:00',NULL,NULL),
 (181,'A5','c328361800abe221dcd48e539b26dae9','BHAGAVATHI PRADEEPA G','','0000-00-00 00:00:00',NULL,NULL),
 (182,'A6','55f118c15920418e7e7088ee3bab9968','BOOMIKA S','','0000-00-00 00:00:00',NULL,NULL),
 (183,'A7','5fd6224060b5d6337a36c22f75f1d7fa','DEEPAK M','','0000-00-00 00:00:00',NULL,NULL),
 (184,'A8','53027fda330e969e779a4db3ac57e616','GEETHA K','','0000-00-00 00:00:00',NULL,NULL),
 (185,'A9','a696faf028c4d53337ee7b18ebc92bec','GOBIKA M','','0000-00-00 00:00:00',NULL,NULL),
 (186,'A10','c3182fb080326f1d4cee17202a383df1','HARINI A','','0000-00-00 00:00:00',NULL,NULL),
 (187,'A11','be05aed598ad9c10657fcd33a227f94f','HARITHA M','','0000-00-00 00:00:00',NULL,NULL),
 (188,'A12','ba507c85d25adce21a8e0f894d537103','ISHWARYA S','','0000-00-00 00:00:00',NULL,NULL),
 (189,'A13','7901b387de5b300582b41077e0fc1e0e','KAVIYA N','','0000-00-00 00:00:00',NULL,NULL),
 (190,'A14','dd12e228a42b3360678632dee0be21f4','KAVYA C','','0000-00-00 00:00:00',NULL,NULL),
 (191,'A15','2f7d74d8adcf1b0d4e041a8339dfad9a','LAKSHMIDEVI E','','0000-00-00 00:00:00',NULL,NULL),
 (192,'A16','0bf518e9d96be6431cb9a6e01d85ca21','MANIBHARATHI R','','0000-00-00 00:00:00',NULL,NULL),
 (193,'A17','e978d4fb47039bf739a2e484167e91e7','MANOJ KUMAR B','','0000-00-00 00:00:00',NULL,NULL),
 (194,'A18','a2304f517cafba4a258250a532c1de77','NITHISH KUMAR T','','0000-00-00 00:00:00',NULL,NULL),
 (195,'A19','283ba194f65c8093c1be6e324d81be24','PRAISE E J','','0000-00-00 00:00:00',NULL,NULL),
 (196,'A20','f82a70460808e1f0c17ae384c6f50cb2','RANJITH M','','0000-00-00 00:00:00',NULL,NULL),
 (197,'A21','849a117fc8452fb4d9e1bd97dace780c','REENA P','','0000-00-00 00:00:00',NULL,NULL),
 (198,'A22','975ca43e4b5c2fdafae2ea0abe3834b7','RISHIKESS P','','0000-00-00 00:00:00',NULL,NULL),
 (199,'A23','dba52714963304a86e39e70a67053aa0','SADHANA S','','0000-00-00 00:00:00',NULL,NULL),
 (200,'A24','0d95523c3f41b3a41ab93cd33a5e66f1','SANTHOSH M','','0000-00-00 00:00:00',NULL,NULL),
 (201,'A25','797780c1891dd0a44352c4fe9ff98031','SIVANATHAN V','','0000-00-00 00:00:00',NULL,NULL),
 (202,'A26','e389e0f67fb6c856fb3763c3ade2284a','SIVARANJANI R','','0000-00-00 00:00:00',NULL,NULL),
 (203,'A27','8cf1907daefedcb986ee5de3dd784366','SULOHITHA R','','0000-00-00 00:00:00',NULL,NULL),
 (204,'A28','1856a35d2cb5dcefddc223964fd2ab09','SWATHI M','','0000-00-00 00:00:00',NULL,NULL),
 (205,'A29','ddf30beaa87436a595fde794a750b085','THAMARAI SELVAN M','','0000-00-00 00:00:00',NULL,NULL),
 (206,'A30','d681d69423a582cf26868bed081d5ee2','VETRIVEL S','','0000-00-00 00:00:00',NULL,NULL),
 (207,'A31','5e458cc97d49e3141ff40a80f8a2a3dc','VISHNU K','','0000-00-00 00:00:00',NULL,NULL),
 (208,'A32','9ac92db770cef2abc04baf0d227c42df','YASHODHA G','','0000-00-00 00:00:00',NULL,NULL),
 (209,'A33','6f9c906245d1bc688241623d2f8a1b8d','YASMEEN I','','0000-00-00 00:00:00',NULL,NULL),
 (210,'A34','f672dad295de55e966268fdc0d77251c','MESAKH P','','0000-00-00 00:00:00',NULL,NULL),
 (211,'A35','92d57f53beec83c2401dbafea4fa5fcd','PALANIVIGRAM B','','0000-00-00 00:00:00',NULL,NULL),
 (212,'A36','bc7c3a78c32f4b300a162d581a3d0788','ABINAYA M','','0000-00-00 00:00:00',NULL,NULL),
 (213,'A37','fc59743a318c1da6ee576fc43379c81a','ANISH ANSARI H','','0000-00-00 00:00:00',NULL,NULL),
 (214,'A38','e6f5cddf8d463d11f420aa6f75b33e1e','BHARATHIRAJA C','','0000-00-00 00:00:00',NULL,NULL),
 (215,'A39','48f57896dbd529213678291853f863e1','DHANUSHIYA M','','0000-00-00 00:00:00',NULL,NULL),
 (216,'A40','d86bfe8b92e6a55da717fe4ce4fc22e9','DHARMA P','','0000-00-00 00:00:00',NULL,NULL),
 (217,'A41','df70419e411142496ca1a0695cfd85cd','DIVYA D','','0000-00-00 00:00:00',NULL,NULL),
 (218,'A42','7dd597a52958f42f0a7041772b45c387','GOWTHAM R','','0000-00-00 00:00:00',NULL,NULL),
 (219,'A43','4ec4d73e772e69f17b0fa7581e6aa15c','GUNAVATHI K','','0000-00-00 00:00:00',NULL,NULL),
 (220,'A44','ba17e8977d0b9597d8d55bf4e364b75c','GURUPRASATH G','','0000-00-00 00:00:00',NULL,NULL),
 (221,'A45','d72b0b4e18ad25908f1c44eea5bbd09c','GURUSAMY P','','0000-00-00 00:00:00',NULL,NULL),
 (222,'A46','73decf258c48afb7329d6c3375b57a6e','HARINI G','','0000-00-00 00:00:00',NULL,NULL),
 (223,'A47','6fdb5a1dd533f2ceb03a06ae7916f62c','HARISHKUMAR A','','0000-00-00 00:00:00',NULL,NULL),
 (224,'A48','7a51483786d2153901b6d1efc9ee10c1','HEMACHANDRAN S.P','','0000-00-00 00:00:00',NULL,NULL),
 (225,'A49','70ff46a796b465184ced1d114487c033','KARTHICK R','','0000-00-00 00:00:00',NULL,NULL),
 (226,'A50','970f53da5d1fb9e58bfc7a1411e4ae81','KARTHICKPRASAD P','','0000-00-00 00:00:00',NULL,NULL),
 (227,'A51','9fb565c7874f2b73e426e2b5bd82a896','KARTHIKEYAN K','','0000-00-00 00:00:00',NULL,NULL),
 (228,'A52','afb7d4df083e780d5cc06911d3a66b6b','KEERTHANA B','','0000-00-00 00:00:00',NULL,NULL),
 (229,'A53','b809cb94ded5855fa0eb268fd1f91fca','KEERTHANA S','','0000-00-00 00:00:00',NULL,NULL),
 (230,'A54','c5b1213bb7084066e3051906d56ac352','KETHEESWARAN K','','0000-00-00 00:00:00',NULL,NULL),
 (231,'A55','9edd5bd1bc3fa2b29823f831533545cf','KOUSHICK S','','0000-00-00 00:00:00',NULL,NULL),
 (232,'A56','71735ace98ae46ba605d2d6687454a3f','MADHAVAN S','','0000-00-00 00:00:00',NULL,NULL),
 (233,'A57','e470bdb0eefce829809ecdf0e058038a','MOHAMMED SUHAIL S','','0000-00-00 00:00:00',NULL,NULL),
 (234,'A58','a466e1b0e560c726d1946658598b2151','MOHAN P','','0000-00-00 00:00:00',NULL,NULL),
 (235,'A59','350a6f898603a87ee74d1bd9f551a13a','MOHANASWETHA M','','0000-00-00 00:00:00',NULL,NULL),
 (236,'A60','8398f8644f15657458bbf5d2f42104e6','NITHYA S','','0000-00-00 00:00:00',NULL,NULL),
 (237,'A61','04e31179b5b15c44fb74084662d7b5e7','PRAVEEN S','','0000-00-00 00:00:00',NULL,NULL),
 (238,'A62','7a427560f4e2912f9e669397e625c9d6','PRAVEENKUMAR M','','0000-00-00 00:00:00',NULL,NULL),
 (239,'A63','4d95cb3b2e87add05db7ca7f6eeee8e8','PRIYADHARSHINI M','','0000-00-00 00:00:00',NULL,NULL),
 (240,'A64','7f0d4d8123176a388c628ed34be61c21','RAMYA N','','0000-00-00 00:00:00',NULL,NULL),
 (241,'A65','80b753ee1c5fa361196dd375e22ec2cd','SANJEEV S','','0000-00-00 00:00:00',NULL,NULL),
 (242,'A66','d0209d61be07350a7b4572a4bcf32bc7','SARANYA E','','0000-00-00 00:00:00',NULL,NULL),
 (243,'A67','ce51ebc64a0363bdfeb37905a52e0b2d','SARANYA R','','0000-00-00 00:00:00',NULL,NULL),
 (244,'A68','0ee392331f44ebdd95c6249e9ee69848','SARAVANAKUMAR S','','0000-00-00 00:00:00',NULL,NULL),
 (245,'A69','bf7e73184b929aa39fb889b5d3ffc183','SELVAKUMAR N','','0000-00-00 00:00:00',NULL,NULL),
 (246,'A70','e44e03583016c1e8730052e9f655d2d6','SUGAN K.S','','0000-00-00 00:00:00',NULL,NULL),
 (247,'A71','265c641d9de3b48ec10ff64eeae28443','SURYA P','','0000-00-00 00:00:00',NULL,NULL),
 (248,'A72','66993e30b9d95938ee26938f350e2ed7','SUSMITHA A.S','','0000-00-00 00:00:00',NULL,NULL),
 (249,'A73','2adfe1e0c47686c9c8e43f858a7adacf','SWETHA R','','0000-00-00 00:00:00',NULL,NULL),
 (250,'A74','9341203ce1b4624e244a56345c422b96','VAISHNAVI R','','0000-00-00 00:00:00',NULL,NULL),
 (251,'A75','a577efa02be3e8f056265351d8e58016','LOGANATHAN P.T','','0000-00-00 00:00:00',NULL,NULL),
 (252,'A76','4e2036463b9c0d92db0a9664397042a9','VISWASARATHI S','','0000-00-00 00:00:00',NULL,NULL),
 (253,'A77','a2cd34ba44745a0dbdeec87cd95a91d3','S.AJAY','','0000-00-00 00:00:00',NULL,NULL),
 (254,'A78','c30e3d8ee41dabaac8b6ba728b9ed450','S.ARAVINDKUMAR','','0000-00-00 00:00:00',NULL,NULL),
 (255,'A79','5c90e3becbeb19fd2dc03c623b02381e','KOWSALYA. M','','0000-00-00 00:00:00',NULL,NULL),
 (256,'A80','a4a1e7c47a64033d98890b06eeb8d094','PRIYADHARSHINI.J','','0000-00-00 00:00:00',NULL,NULL),
 (257,'A81','3d6f46e5930dd4061fdda02c58e37c74','JAIPRAKASH S','','0000-00-00 00:00:00',NULL,NULL),
 (258,'A82','4f4ee0592b7a0201f67c07984ea56829','KRISHNAN S','','0000-00-00 00:00:00',NULL,NULL),
 (259,'A83','bbe29e8fc57d70e69fe374666a09a016','A.VIGNESHKUMAR','','0000-00-00 00:00:00',NULL,NULL),
 (260,'A84','95b394aa62680229a74d238486d58446','AKHILALEX A','','0000-00-00 00:00:00',NULL,NULL),
 (261,'A85','4f27b064c50209d0a8a234a78b6900c2','ANNAMATHIMUGAN A','','0000-00-00 00:00:00',NULL,NULL),
 (262,'A86','555e3934858ae3d72ac41166b53bb8be','ARAVINDH N','','0000-00-00 00:00:00',NULL,NULL),
 (263,'A87','7d4245d8441f22ee6fa3b4c480640ea1','KALKIRAJA P','','0000-00-00 00:00:00',NULL,NULL),
 (264,'A88','478caef331504f5934928d5f2622214e','KAVICHANDRAN A','','0000-00-00 00:00:00',NULL,NULL),
 (265,'A89','f651cef8a26142bcd6b887407ba2fe4e','MUKILAN R','','0000-00-00 00:00:00',NULL,NULL),
 (266,'A90','7797a8422d917cfa6cec3767079cd425','NAGARAJ T','','0000-00-00 00:00:00',NULL,NULL),
 (267,'A91','b36ae33d67be333b8e902cd7680ae4a4','RAMESH S','','0000-00-00 00:00:00',NULL,NULL),
 (268,'A92','4ca6c4efc4a2968ba99953799ba5440c','SANDHANA KRISHNAN V','','0000-00-00 00:00:00',NULL,NULL),
 (269,'A93','953e873b61ef92d0a61a9ffd3cf5520a','SUBRAMANI M','','0000-00-00 00:00:00',NULL,NULL),
 (270,'A94','ba9a62b7073650ec859ac8a037c310a8','SUNDAR V','','0000-00-00 00:00:00',NULL,NULL),
 (271,'A95','2e43aa0332f2f9cd414c87be690f3f93','VIGNESWARAN M','','0000-00-00 00:00:00',NULL,NULL),
 (272,'A96','36cfeb6d326902904de5ff02abcd7fbc','VISHNU K','','0000-00-00 00:00:00',NULL,NULL),
 (273,'A97','7b3de8bf788c9e515face8b734ebf78c','ABDUL KAREEM M','','0000-00-00 00:00:00',NULL,NULL),
 (274,'A98','8d2f919cb2ab053505bd98cf68e08998','DIVAKAR R','','0000-00-00 00:00:00',NULL,NULL),
 (275,'A99','dd46073fd4c1864390d153695e683bab','DINAKARAN P','','0000-00-00 00:00:00',NULL,NULL),
 (276,'A100','f78cb6c10db6ba2183edbd40c454d008','RAMANATHAN G','','0000-00-00 00:00:00',NULL,NULL),
 (277,'A101','0335f75f645f29171c7bf25d13251a23','ANUSHIYA.N','','0000-00-00 00:00:00',NULL,NULL),
 (278,'A102','d0961fa223489b3026dfc2e7904047ed','DEVAPRIYA.R','','0000-00-00 00:00:00',NULL,NULL),
 (279,'A103','f2e268fc246a56e77601c0bb0de15d7a','KEERTHANA.M','','0000-00-00 00:00:00',NULL,NULL),
 (280,'A104','b11e8244ff08f19e89289d5354d50458','KISHORE ARAVIND.B','','0000-00-00 00:00:00',NULL,NULL),
 (281,'A105','9a5115cffe71866b149e63a176de65cc','LAVANYA.V','','0000-00-00 00:00:00',NULL,NULL),
 (282,'A106','4c8eab18be2ac6307563de1dbc00e118','MEGAVARSHINI.S','','0000-00-00 00:00:00',NULL,NULL),
 (283,'A107','8b074e749e6f50e9c226fc7d989ebcad','MOUNIKA.R','','0000-00-00 00:00:00',NULL,NULL),
 (284,'A108','2dfc1a7eb7513f7e7da2b0cc1e77175d','PRIYA.S','','0000-00-00 00:00:00',NULL,NULL),
 (285,'A109','c3fa7c0d7401920263306a2c36d3e8d6','RANJITHA.S','','0000-00-00 00:00:00',NULL,NULL),
 (286,'A110','1a8fa90e00ad4d277628261961429579','VANMATHI.S','','0000-00-00 00:00:00',NULL,NULL),
 (287,'A111','6ddb9f3d6f5f0f0d034f92cb5710266d','BHARATHI.D','','0000-00-00 00:00:00',NULL,NULL),
 (288,'A112','748fd7c5f687357507fa005594598406','RAKESH.M.P','','0000-00-00 00:00:00',NULL,NULL),
 (289,'A113','229f2adf16f0b03feed4cd7fa717af54','SHRUTHI.A','','0000-00-00 00:00:00',NULL,NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;


--
-- Definition of table `v_imported_users`
--

DROP TABLE IF EXISTS `v_imported_users`;
CREATE TABLE `v_imported_users` (
  `UserID` int(11) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Surname` varchar(255) DEFAULT NULL,
  `UserName` varchar(150) DEFAULT NULL,
  `Password` varchar(150) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `v_imported_users`
--

/*!40000 ALTER TABLE `v_imported_users` DISABLE KEYS */;
/*!40000 ALTER TABLE `v_imported_users` ENABLE KEYS */;




/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
